### YamlMime:ManagedReference
items:
- uid: Global.ModularEnemy.MEBehaviorManager
  commentId: T:Global.ModularEnemy.MEBehaviorManager
  id: ModularEnemy.MEBehaviorManager
  parent: Global
  children:
  - Global.ModularEnemy.MEBehaviorManager.DrawGizmos(ModularEnemy)
  - Global.ModularEnemy.MEBehaviorManager.RegisterBehaviors(ModularEnemy)
  - Global.ModularEnemy.MEBehaviorManager.SetInitialBehavior(ModularEnemy)
  langs:
  - csharp
  - vb
  name: ModularEnemy.MEBehaviorManager
  nameWithType: ModularEnemy.MEBehaviorManager
  fullName: ModularEnemy.MEBehaviorManager
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MEBehaviorManager
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
    startLine: 450
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'protected class ModularEnemy.MEBehaviorManager : ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>'
    content.vb: Protected Class ModularEnemy.MEBehaviorManager Inherits ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState)
  inheritance:
  - System.Object
  - Global.ModularEnemy.EnemyBehaviorInterface
  - Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}
  inheritedMembers:
  - Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.CurrentBehavior
  - Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.RegisteredBehaviors
  - Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.RegisteredAlwaysRun
  - Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.RegisterBehavior(ModularEnemy.ModularEnemyState,ModularEnemy.EnemyBehaviorInterface)
  - Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.RegisterBehaviorAlwaysRun(ModularEnemy.EnemyBehaviorInterface)
  - Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.Start(ModularEnemy)
  - Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.Update
  - Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.OnRestart
  - Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.HasStarted(ModularEnemy.ModularEnemyState)
  - Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.OnKill(ModularEnemy,System.Boolean)
  - Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.OnResetObject(ModularEnemy)
  - Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  - Global.ModularEnemy.EnemyBehaviorInterface.self
  - Global.ModularEnemy.EnemyBehaviorInterface.Started
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.ModularEnemy.MEBehaviorManager.RegisterBehaviors(ModularEnemy)
  commentId: M:Global.ModularEnemy.MEBehaviorManager.RegisterBehaviors(ModularEnemy)
  id: RegisterBehaviors(ModularEnemy)
  parent: Global.ModularEnemy.MEBehaviorManager
  langs:
  - csharp
  - vb
  name: RegisterBehaviors(ModularEnemy)
  nameWithType: ModularEnemy.MEBehaviorManager.RegisterBehaviors(ModularEnemy)
  fullName: ModularEnemy.MEBehaviorManager.RegisterBehaviors(ModularEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RegisterBehaviors
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
    startLine: 452
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void RegisterBehaviors(ModularEnemy enemy)
    parameters:
    - id: enemy
      type: Global.ModularEnemy
    content.vb: Public Overrides Sub RegisterBehaviors(enemy As ModularEnemy)
  overridden: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.RegisterBehaviors(ModularEnemy)
  overload: Global.ModularEnemy.MEBehaviorManager.RegisterBehaviors*
- uid: Global.ModularEnemy.MEBehaviorManager.DrawGizmos(ModularEnemy)
  commentId: M:Global.ModularEnemy.MEBehaviorManager.DrawGizmos(ModularEnemy)
  id: DrawGizmos(ModularEnemy)
  parent: Global.ModularEnemy.MEBehaviorManager
  langs:
  - csharp
  - vb
  name: DrawGizmos(ModularEnemy)
  nameWithType: ModularEnemy.MEBehaviorManager.DrawGizmos(ModularEnemy)
  fullName: ModularEnemy.MEBehaviorManager.DrawGizmos(ModularEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DrawGizmos
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
    startLine: 471
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void DrawGizmos(ModularEnemy enemy)
    parameters:
    - id: enemy
      type: Global.ModularEnemy
    content.vb: Public Overrides Sub DrawGizmos(enemy As ModularEnemy)
  overridden: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.DrawGizmos(ModularEnemy)
  overload: Global.ModularEnemy.MEBehaviorManager.DrawGizmos*
- uid: Global.ModularEnemy.MEBehaviorManager.SetInitialBehavior(ModularEnemy)
  commentId: M:Global.ModularEnemy.MEBehaviorManager.SetInitialBehavior(ModularEnemy)
  id: SetInitialBehavior(ModularEnemy)
  parent: Global.ModularEnemy.MEBehaviorManager
  langs:
  - csharp
  - vb
  name: SetInitialBehavior(ModularEnemy)
  nameWithType: ModularEnemy.MEBehaviorManager.SetInitialBehavior(ModularEnemy)
  fullName: ModularEnemy.MEBehaviorManager.SetInitialBehavior(ModularEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetInitialBehavior
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
    startLine: 487
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void SetInitialBehavior(ModularEnemy enemy)
    parameters:
    - id: enemy
      type: Global.ModularEnemy
    content.vb: Public Overrides Sub SetInitialBehavior(enemy As ModularEnemy)
  overridden: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.SetInitialBehavior(ModularEnemy)
  overload: Global.ModularEnemy.MEBehaviorManager.SetInitialBehavior*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.ModularEnemy.EnemyBehaviorInterface
  commentId: T:Global.ModularEnemy.EnemyBehaviorInterface
  name: ModularEnemy.EnemyBehaviorInterface
  nameWithType: ModularEnemy.EnemyBehaviorInterface
  fullName: ModularEnemy.EnemyBehaviorInterface
  spec.csharp:
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: .
  - uid: Global.ModularEnemy.EnemyBehaviorInterface
    name: EnemyBehaviorInterface
  spec.vb:
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: .
  - uid: Global.ModularEnemy.EnemyBehaviorInterface
    name: EnemyBehaviorInterface
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}
  commentId: T:Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}
  definition: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1
  name: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState)
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState)
  name.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState)
  spec.csharp:
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: .
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1
    name: EnemyBehaviorInterfaceManager
  - name: <
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: .
  - uid: Global.ModularEnemy.ModularEnemyState
    name: ModularEnemyState
  - name: '>'
  spec.vb:
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: .
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1
    name: EnemyBehaviorInterfaceManager
  - name: (
  - name: Of
  - name: " "
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: .
  - uid: Global.ModularEnemy.ModularEnemyState
    name: ModularEnemyState
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.CurrentBehavior
  commentId: F:Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.CurrentBehavior
  parent: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}
  definition: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.CurrentBehavior
  name: CurrentBehavior
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.CurrentBehavior
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.CurrentBehavior
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).CurrentBehavior
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).CurrentBehavior
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.RegisteredBehaviors
  commentId: F:Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.RegisteredBehaviors
  parent: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}
  definition: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.RegisteredBehaviors
  name: RegisteredBehaviors
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.RegisteredBehaviors
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.RegisteredBehaviors
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).RegisteredBehaviors
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).RegisteredBehaviors
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.RegisteredAlwaysRun
  commentId: F:Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.RegisteredAlwaysRun
  parent: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}
  definition: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.RegisteredAlwaysRun
  name: RegisteredAlwaysRun
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.RegisteredAlwaysRun
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.RegisteredAlwaysRun
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).RegisteredAlwaysRun
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).RegisteredAlwaysRun
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.RegisterBehavior(ModularEnemy.ModularEnemyState,ModularEnemy.EnemyBehaviorInterface)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.RegisterBehavior(ModularEnemy.ModularEnemyState,ModularEnemy.EnemyBehaviorInterface)
  parent: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}
  definition: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.RegisterBehavior(`0,ModularEnemy.EnemyBehaviorInterface)
  name: RegisterBehavior(ModularEnemyState, EnemyBehaviorInterface)
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.RegisterBehavior(ModularEnemy.ModularEnemyState, ModularEnemy.EnemyBehaviorInterface)
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.RegisterBehavior(ModularEnemy.ModularEnemyState, ModularEnemy.EnemyBehaviorInterface)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).RegisterBehavior(ModularEnemy.ModularEnemyState, ModularEnemy.EnemyBehaviorInterface)
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).RegisterBehavior(ModularEnemy.ModularEnemyState, ModularEnemy.EnemyBehaviorInterface)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.RegisterBehavior(ModularEnemy.ModularEnemyState,ModularEnemy.EnemyBehaviorInterface)
    name: RegisterBehavior
  - name: (
  - uid: Global.ModularEnemy.ModularEnemyState
    name: ModularEnemyState
  - name: ','
  - name: " "
  - uid: Global.ModularEnemy.EnemyBehaviorInterface
    name: EnemyBehaviorInterface
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.RegisterBehavior(ModularEnemy.ModularEnemyState,ModularEnemy.EnemyBehaviorInterface)
    name: RegisterBehavior
  - name: (
  - uid: Global.ModularEnemy.ModularEnemyState
    name: ModularEnemyState
  - name: ','
  - name: " "
  - uid: Global.ModularEnemy.EnemyBehaviorInterface
    name: EnemyBehaviorInterface
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.RegisterBehaviorAlwaysRun(ModularEnemy.EnemyBehaviorInterface)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.RegisterBehaviorAlwaysRun(ModularEnemy.EnemyBehaviorInterface)
  parent: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}
  definition: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.RegisterBehaviorAlwaysRun(ModularEnemy.EnemyBehaviorInterface)
  name: RegisterBehaviorAlwaysRun(EnemyBehaviorInterface)
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.RegisterBehaviorAlwaysRun(ModularEnemy.EnemyBehaviorInterface)
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.RegisterBehaviorAlwaysRun(ModularEnemy.EnemyBehaviorInterface)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).RegisterBehaviorAlwaysRun(ModularEnemy.EnemyBehaviorInterface)
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).RegisterBehaviorAlwaysRun(ModularEnemy.EnemyBehaviorInterface)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.RegisterBehaviorAlwaysRun(ModularEnemy.EnemyBehaviorInterface)
    name: RegisterBehaviorAlwaysRun
  - name: (
  - uid: Global.ModularEnemy.EnemyBehaviorInterface
    name: EnemyBehaviorInterface
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.RegisterBehaviorAlwaysRun(ModularEnemy.EnemyBehaviorInterface)
    name: RegisterBehaviorAlwaysRun
  - name: (
  - uid: Global.ModularEnemy.EnemyBehaviorInterface
    name: EnemyBehaviorInterface
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.Start(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.Start(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}
  definition: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.Start(ModularEnemy)
  name: Start(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.Start(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.Start(ModularEnemy)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).Start(ModularEnemy)
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).Start(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.Start(ModularEnemy)
    name: Start
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.Start(ModularEnemy)
    name: Start
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.Update
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.Update
  parent: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}
  definition: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.Update
  name: Update()
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.Update()
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.Update()
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).Update()
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).Update()
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.Update
    name: Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.Update
    name: Update
  - name: (
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.OnRestart
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.OnRestart
  parent: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}
  definition: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.OnRestart
  name: OnRestart()
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.OnRestart()
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.OnRestart()
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).OnRestart()
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).OnRestart()
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.OnRestart
    name: OnRestart
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.OnRestart
    name: OnRestart
  - name: (
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.HasStarted(ModularEnemy.ModularEnemyState)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.HasStarted(ModularEnemy.ModularEnemyState)
  parent: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}
  definition: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.HasStarted(`0)
  name: HasStarted(ModularEnemyState)
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.HasStarted(ModularEnemy.ModularEnemyState)
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.HasStarted(ModularEnemy.ModularEnemyState)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).HasStarted(ModularEnemy.ModularEnemyState)
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).HasStarted(ModularEnemy.ModularEnemyState)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.HasStarted(ModularEnemy.ModularEnemyState)
    name: HasStarted
  - name: (
  - uid: Global.ModularEnemy.ModularEnemyState
    name: ModularEnemyState
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.HasStarted(ModularEnemy.ModularEnemyState)
    name: HasStarted
  - name: (
  - uid: Global.ModularEnemy.ModularEnemyState
    name: ModularEnemyState
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.OnKill(ModularEnemy,System.Boolean)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.OnKill(ModularEnemy,System.Boolean)
  parent: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}
  definition: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.OnKill(ModularEnemy,System.Boolean)
  name: OnKill(ModularEnemy, bool)
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.OnKill(ModularEnemy, bool)
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.OnKill(ModularEnemy, bool)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).OnKill(ModularEnemy, Boolean)
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).OnKill(ModularEnemy, Boolean)
  name.vb: OnKill(ModularEnemy, Boolean)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.OnKill(ModularEnemy,System.Boolean)
    name: OnKill
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.OnKill(ModularEnemy,System.Boolean)
    name: OnKill
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.OnResetObject(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.OnResetObject(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}
  definition: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.OnResetObject(ModularEnemy)
  name: OnResetObject(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.OnResetObject(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.OnResetObject(ModularEnemy)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).OnResetObject(ModularEnemy)
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).OnResetObject(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.OnResetObject(ModularEnemy)
    name: OnResetObject
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.OnResetObject(ModularEnemy)
    name: OnResetObject
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  commentId: F:Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: ShowGizmos
  nameWithType: ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  fullName: ModularEnemy.EnemyBehaviorInterface.ShowGizmos
- uid: Global.ModularEnemy.EnemyBehaviorInterface.self
  commentId: F:Global.ModularEnemy.EnemyBehaviorInterface.self
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: self
  nameWithType: ModularEnemy.EnemyBehaviorInterface.self
  fullName: ModularEnemy.EnemyBehaviorInterface.self
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Started
  commentId: P:Global.ModularEnemy.EnemyBehaviorInterface.Started
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: Started
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Started
  fullName: ModularEnemy.EnemyBehaviorInterface.Started
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1
  commentId: T:Global.ModularEnemy.EnemyBehaviorInterfaceManager`1
  name: ModularEnemy.EnemyBehaviorInterfaceManager<T>
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<T>
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<T>
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T)
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T)
  name.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T)
  spec.csharp:
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: .
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1
    name: EnemyBehaviorInterfaceManager
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: .
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1
    name: EnemyBehaviorInterfaceManager
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.CurrentBehavior
  commentId: F:Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.CurrentBehavior
  name: CurrentBehavior
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<T>.CurrentBehavior
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<T>.CurrentBehavior
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).CurrentBehavior
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).CurrentBehavior
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.RegisteredBehaviors
  commentId: F:Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.RegisteredBehaviors
  name: RegisteredBehaviors
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<T>.RegisteredBehaviors
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<T>.RegisteredBehaviors
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).RegisteredBehaviors
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).RegisteredBehaviors
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.RegisteredAlwaysRun
  commentId: F:Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.RegisteredAlwaysRun
  name: RegisteredAlwaysRun
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<T>.RegisteredAlwaysRun
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<T>.RegisteredAlwaysRun
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).RegisteredAlwaysRun
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).RegisteredAlwaysRun
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.RegisterBehavior(`0,ModularEnemy.EnemyBehaviorInterface)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.RegisterBehavior(`0,ModularEnemy.EnemyBehaviorInterface)
  name: RegisterBehavior(T, EnemyBehaviorInterface)
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<T>.RegisterBehavior(T, ModularEnemy.EnemyBehaviorInterface)
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<T>.RegisterBehavior(T, ModularEnemy.EnemyBehaviorInterface)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).RegisterBehavior(T, ModularEnemy.EnemyBehaviorInterface)
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).RegisterBehavior(T, ModularEnemy.EnemyBehaviorInterface)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.RegisterBehavior(`0,ModularEnemy.EnemyBehaviorInterface)
    name: RegisterBehavior
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: Global.ModularEnemy.EnemyBehaviorInterface
    name: EnemyBehaviorInterface
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.RegisterBehavior(`0,ModularEnemy.EnemyBehaviorInterface)
    name: RegisterBehavior
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: Global.ModularEnemy.EnemyBehaviorInterface
    name: EnemyBehaviorInterface
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.RegisterBehaviorAlwaysRun(ModularEnemy.EnemyBehaviorInterface)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.RegisterBehaviorAlwaysRun(ModularEnemy.EnemyBehaviorInterface)
  name: RegisterBehaviorAlwaysRun(EnemyBehaviorInterface)
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<T>.RegisterBehaviorAlwaysRun(ModularEnemy.EnemyBehaviorInterface)
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<T>.RegisterBehaviorAlwaysRun(ModularEnemy.EnemyBehaviorInterface)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).RegisterBehaviorAlwaysRun(ModularEnemy.EnemyBehaviorInterface)
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).RegisterBehaviorAlwaysRun(ModularEnemy.EnemyBehaviorInterface)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.RegisterBehaviorAlwaysRun(ModularEnemy.EnemyBehaviorInterface)
    name: RegisterBehaviorAlwaysRun
  - name: (
  - uid: Global.ModularEnemy.EnemyBehaviorInterface
    name: EnemyBehaviorInterface
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.RegisterBehaviorAlwaysRun(ModularEnemy.EnemyBehaviorInterface)
    name: RegisterBehaviorAlwaysRun
  - name: (
  - uid: Global.ModularEnemy.EnemyBehaviorInterface
    name: EnemyBehaviorInterface
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.Start(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.Start(ModularEnemy)
  name: Start(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<T>.Start(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<T>.Start(ModularEnemy)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).Start(ModularEnemy)
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).Start(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.Start(ModularEnemy)
    name: Start
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.Start(ModularEnemy)
    name: Start
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.Update
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.Update
  name: Update()
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<T>.Update()
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<T>.Update()
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).Update()
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).Update()
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.Update
    name: Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.Update
    name: Update
  - name: (
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.OnRestart
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.OnRestart
  name: OnRestart()
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<T>.OnRestart()
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<T>.OnRestart()
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).OnRestart()
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).OnRestart()
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.OnRestart
    name: OnRestart
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.OnRestart
    name: OnRestart
  - name: (
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.HasStarted(`0)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.HasStarted(`0)
  name: HasStarted(T)
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<T>.HasStarted(T)
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<T>.HasStarted(T)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).HasStarted(T)
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).HasStarted(T)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.HasStarted(`0)
    name: HasStarted
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.HasStarted(`0)
    name: HasStarted
  - name: (
  - name: T
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.OnKill(ModularEnemy,System.Boolean)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.OnKill(ModularEnemy,System.Boolean)
  isExternal: true
  name: OnKill(ModularEnemy, bool)
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<T>.OnKill(ModularEnemy, bool)
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<T>.OnKill(ModularEnemy, bool)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).OnKill(ModularEnemy, Boolean)
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).OnKill(ModularEnemy, Boolean)
  name.vb: OnKill(ModularEnemy, Boolean)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.OnKill(ModularEnemy,System.Boolean)
    name: OnKill
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.OnKill(ModularEnemy,System.Boolean)
    name: OnKill
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.OnResetObject(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.OnResetObject(ModularEnemy)
  name: OnResetObject(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<T>.OnResetObject(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<T>.OnResetObject(ModularEnemy)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).OnResetObject(ModularEnemy)
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).OnResetObject(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.OnResetObject(ModularEnemy)
    name: OnResetObject
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.OnResetObject(ModularEnemy)
    name: OnResetObject
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.RegisterBehaviors(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.RegisterBehaviors(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}
  definition: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.RegisterBehaviors(ModularEnemy)
  name: RegisterBehaviors(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.RegisterBehaviors(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.RegisterBehaviors(ModularEnemy)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).RegisterBehaviors(ModularEnemy)
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).RegisterBehaviors(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.RegisterBehaviors(ModularEnemy)
    name: RegisterBehaviors
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.RegisterBehaviors(ModularEnemy)
    name: RegisterBehaviors
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.ModularEnemy.MEBehaviorManager.RegisterBehaviors*
  commentId: Overload:Global.ModularEnemy.MEBehaviorManager.RegisterBehaviors
  name: RegisterBehaviors
  nameWithType: ModularEnemy.MEBehaviorManager.RegisterBehaviors
  fullName: ModularEnemy.MEBehaviorManager.RegisterBehaviors
- uid: Global.ModularEnemy
  commentId: T:Global.ModularEnemy
  name: ModularEnemy
  nameWithType: ModularEnemy
  fullName: ModularEnemy
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.RegisterBehaviors(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.RegisterBehaviors(ModularEnemy)
  name: RegisterBehaviors(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<T>.RegisterBehaviors(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<T>.RegisterBehaviors(ModularEnemy)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).RegisterBehaviors(ModularEnemy)
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).RegisterBehaviors(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.RegisterBehaviors(ModularEnemy)
    name: RegisterBehaviors
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.RegisterBehaviors(ModularEnemy)
    name: RegisterBehaviors
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.DrawGizmos(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.DrawGizmos(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}
  definition: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.DrawGizmos(ModularEnemy)
  name: DrawGizmos(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.DrawGizmos(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.DrawGizmos(ModularEnemy)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).DrawGizmos(ModularEnemy)
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).DrawGizmos(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.DrawGizmos(ModularEnemy)
    name: DrawGizmos
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.DrawGizmos(ModularEnemy)
    name: DrawGizmos
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.ModularEnemy.MEBehaviorManager.DrawGizmos*
  commentId: Overload:Global.ModularEnemy.MEBehaviorManager.DrawGizmos
  name: DrawGizmos
  nameWithType: ModularEnemy.MEBehaviorManager.DrawGizmos
  fullName: ModularEnemy.MEBehaviorManager.DrawGizmos
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.DrawGizmos(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.DrawGizmos(ModularEnemy)
  name: DrawGizmos(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<T>.DrawGizmos(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<T>.DrawGizmos(ModularEnemy)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).DrawGizmos(ModularEnemy)
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).DrawGizmos(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.DrawGizmos(ModularEnemy)
    name: DrawGizmos
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.DrawGizmos(ModularEnemy)
    name: DrawGizmos
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.SetInitialBehavior(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.SetInitialBehavior(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}
  definition: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.SetInitialBehavior(ModularEnemy)
  name: SetInitialBehavior(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.SetInitialBehavior(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<ModularEnemy.ModularEnemyState>.SetInitialBehavior(ModularEnemy)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).SetInitialBehavior(ModularEnemy)
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of ModularEnemy.ModularEnemyState).SetInitialBehavior(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.SetInitialBehavior(ModularEnemy)
    name: SetInitialBehavior
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager{ModularEnemy.ModularEnemyState}.SetInitialBehavior(ModularEnemy)
    name: SetInitialBehavior
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.ModularEnemy.MEBehaviorManager.SetInitialBehavior*
  commentId: Overload:Global.ModularEnemy.MEBehaviorManager.SetInitialBehavior
  name: SetInitialBehavior
  nameWithType: ModularEnemy.MEBehaviorManager.SetInitialBehavior
  fullName: ModularEnemy.MEBehaviorManager.SetInitialBehavior
- uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.SetInitialBehavior(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.SetInitialBehavior(ModularEnemy)
  name: SetInitialBehavior(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterfaceManager<T>.SetInitialBehavior(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterfaceManager<T>.SetInitialBehavior(ModularEnemy)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).SetInitialBehavior(ModularEnemy)
  fullName.vb: ModularEnemy.EnemyBehaviorInterfaceManager(Of T).SetInitialBehavior(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.SetInitialBehavior(ModularEnemy)
    name: SetInitialBehavior
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterfaceManager`1.SetInitialBehavior(ModularEnemy)
    name: SetInitialBehavior
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
