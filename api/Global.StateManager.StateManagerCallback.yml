### YamlMime:ManagedReference
items:
- uid: Global.StateManager.StateManagerCallback
  commentId: T:Global.StateManager.StateManagerCallback
  id: StateManager.StateManagerCallback
  parent: Global
  children: []
  langs:
  - csharp
  - vb
  name: StateManager.StateManagerCallback
  nameWithType: StateManager.StateManagerCallback
  fullName: StateManager.StateManagerCallback
  type: Delegate
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: StateManagerCallback
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 92
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public delegate void StateManager.StateManagerCallback(AscendState state)
    parameters:
    - id: state
      type: Global.AscendState
    content.vb: Public Delegate Sub StateManager.StateManagerCallback(state As AscendState)
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
references:
- uid: Global
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.AscendState
  commentId: T:Global.AscendState
  name: AscendState
  nameWithType: AscendState
  fullName: AscendState
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
