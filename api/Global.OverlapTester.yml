### YamlMime:ManagedReference
items:
- uid: Global.OverlapTester
  commentId: T:Global.OverlapTester
  id: OverlapTester
  parent: Global
  children:
  - Global.OverlapTester.ColliderA
  - Global.OverlapTester.ColliderB
  langs:
  - csharp
  - vb
  name: OverlapTester
  nameWithType: OverlapTester
  fullName: OverlapTester
  type: Class
  source:
    remote:
      path: Assets/Framework/Testing/OverlapTester.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OverlapTester
    path: ../Assets/Framework/Testing/OverlapTester.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ExecuteInEditMode]

      public class OverlapTester : MonoBehaviour
    content.vb: >-
      <ExecuteInEditMode>

      Public Class OverlapTester Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: UnityEngine.ExecuteInEditMode
    ctor: UnityEngine.ExecuteInEditMode.#ctor
    arguments: []
- uid: Global.OverlapTester.ColliderA
  commentId: F:Global.OverlapTester.ColliderA
  id: ColliderA
  parent: Global.OverlapTester
  langs:
  - csharp
  - vb
  name: ColliderA
  nameWithType: OverlapTester.ColliderA
  fullName: OverlapTester.ColliderA
  type: Field
  source:
    remote:
      path: Assets/Framework/Testing/OverlapTester.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ColliderA
    path: ../Assets/Framework/Testing/OverlapTester.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public IntCollider ColliderA
    return:
      type: Global.IntCollider
    content.vb: Public ColliderA As IntCollider
- uid: Global.OverlapTester.ColliderB
  commentId: F:Global.OverlapTester.ColliderB
  id: ColliderB
  parent: Global.OverlapTester
  langs:
  - csharp
  - vb
  name: ColliderB
  nameWithType: OverlapTester.ColliderB
  fullName: OverlapTester.ColliderB
  type: Field
  source:
    remote:
      path: Assets/Framework/Testing/OverlapTester.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ColliderB
    path: ../Assets/Framework/Testing/OverlapTester.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public IntCollider ColliderB
    return:
      type: Global.IntCollider
    content.vb: Public ColliderB As IntCollider
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.IntCollider
  commentId: T:Global.IntCollider
  name: IntCollider
  nameWithType: IntCollider
  fullName: IntCollider
