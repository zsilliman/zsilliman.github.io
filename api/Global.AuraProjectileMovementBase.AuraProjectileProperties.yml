### YamlMime:ManagedReference
items:
- uid: Global.AuraProjectileMovementBase.AuraProjectileProperties
  commentId: T:Global.AuraProjectileMovementBase.AuraProjectileProperties
  id: AuraProjectileMovementBase.AuraProjectileProperties
  parent: Global
  children:
  - Global.AuraProjectileMovementBase.AuraProjectileProperties.ApplyGravity
  - Global.AuraProjectileMovementBase.AuraProjectileProperties.AttachToParent
  - Global.AuraProjectileMovementBase.AuraProjectileProperties.AxisClip
  - Global.AuraProjectileMovementBase.AuraProjectileProperties.CanHitSolids
  - Global.AuraProjectileMovementBase.AuraProjectileProperties.DestroySelfOnCollision
  - Global.AuraProjectileMovementBase.AuraProjectileProperties.Direction
  - Global.AuraProjectileMovementBase.AuraProjectileProperties.GravityScale
  - Global.AuraProjectileMovementBase.AuraProjectileProperties.Lifetime
  - Global.AuraProjectileMovementBase.AuraProjectileProperties.Speed
  langs:
  - csharp
  - vb
  name: AuraProjectileMovementBase.AuraProjectileProperties
  nameWithType: AuraProjectileMovementBase.AuraProjectileProperties
  fullName: AuraProjectileMovementBase.AuraProjectileProperties
  type: Struct
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraProjectileMovementBase.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AuraProjectileProperties
    path: ../Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraProjectileMovementBase.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public struct AuraProjectileMovementBase.AuraProjectileProperties
    content.vb: >-
      <Serializable>

      Public Structure AuraProjectileMovementBase.AuraProjectileProperties
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.AuraProjectileMovementBase.AuraProjectileProperties.Direction
  commentId: F:Global.AuraProjectileMovementBase.AuraProjectileProperties.Direction
  id: Direction
  parent: Global.AuraProjectileMovementBase.AuraProjectileProperties
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: AuraProjectileMovementBase.AuraProjectileProperties.Direction
  fullName: AuraProjectileMovementBase.AuraProjectileProperties.Direction
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraProjectileMovementBase.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Direction
    path: ../Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraProjectileMovementBase.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [HideInInspector]

      public Vector2 Direction
    return:
      type: UnityEngine.Vector2
    content.vb: >-
      <HideInInspector>

      Public Direction As Vector2
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.AuraProjectileMovementBase.AuraProjectileProperties.AxisClip
  commentId: F:Global.AuraProjectileMovementBase.AuraProjectileProperties.AxisClip
  id: AxisClip
  parent: Global.AuraProjectileMovementBase.AuraProjectileProperties
  langs:
  - csharp
  - vb
  name: AxisClip
  nameWithType: AuraProjectileMovementBase.AuraProjectileProperties.AxisClip
  fullName: AuraProjectileMovementBase.AuraProjectileProperties.AxisClip
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraProjectileMovementBase.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AxisClip
    path: ../Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraProjectileMovementBase.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Clip the computed direction to the specified axis")]

      public AuraProjectileMovementBase.AxisClipType AxisClip
    return:
      type: Global.AuraProjectileMovementBase.AxisClipType
    content.vb: >-
      <Tooltip("Clip the computed direction to the specified axis")>

      Public AxisClip As AuraProjectileMovementBase.AxisClipType
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Clip the computed direction to the specified axis
- uid: Global.AuraProjectileMovementBase.AuraProjectileProperties.AttachToParent
  commentId: F:Global.AuraProjectileMovementBase.AuraProjectileProperties.AttachToParent
  id: AttachToParent
  parent: Global.AuraProjectileMovementBase.AuraProjectileProperties
  langs:
  - csharp
  - vb
  name: AttachToParent
  nameWithType: AuraProjectileMovementBase.AuraProjectileProperties.AttachToParent
  fullName: AuraProjectileMovementBase.AuraProjectileProperties.AttachToParent
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraProjectileMovementBase.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AttachToParent
    path: ../Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraProjectileMovementBase.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool AttachToParent
    return:
      type: System.Boolean
    content.vb: Public AttachToParent As Boolean
- uid: Global.AuraProjectileMovementBase.AuraProjectileProperties.Speed
  commentId: F:Global.AuraProjectileMovementBase.AuraProjectileProperties.Speed
  id: Speed
  parent: Global.AuraProjectileMovementBase.AuraProjectileProperties
  langs:
  - csharp
  - vb
  name: Speed
  nameWithType: AuraProjectileMovementBase.AuraProjectileProperties.Speed
  fullName: AuraProjectileMovementBase.AuraProjectileProperties.Speed
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraProjectileMovementBase.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Speed
    path: ../Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraProjectileMovementBase.cs
    startLine: 20
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float Speed
    return:
      type: System.Single
    content.vb: Public Speed As Single
- uid: Global.AuraProjectileMovementBase.AuraProjectileProperties.Lifetime
  commentId: F:Global.AuraProjectileMovementBase.AuraProjectileProperties.Lifetime
  id: Lifetime
  parent: Global.AuraProjectileMovementBase.AuraProjectileProperties
  langs:
  - csharp
  - vb
  name: Lifetime
  nameWithType: AuraProjectileMovementBase.AuraProjectileProperties.Lifetime
  fullName: AuraProjectileMovementBase.AuraProjectileProperties.Lifetime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraProjectileMovementBase.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Lifetime
    path: ../Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraProjectileMovementBase.cs
    startLine: 21
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float Lifetime
    return:
      type: System.Single
    content.vb: Public Lifetime As Single
- uid: Global.AuraProjectileMovementBase.AuraProjectileProperties.CanHitSolids
  commentId: F:Global.AuraProjectileMovementBase.AuraProjectileProperties.CanHitSolids
  id: CanHitSolids
  parent: Global.AuraProjectileMovementBase.AuraProjectileProperties
  langs:
  - csharp
  - vb
  name: CanHitSolids
  nameWithType: AuraProjectileMovementBase.AuraProjectileProperties.CanHitSolids
  fullName: AuraProjectileMovementBase.AuraProjectileProperties.CanHitSolids
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraProjectileMovementBase.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CanHitSolids
    path: ../Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraProjectileMovementBase.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool CanHitSolids
    return:
      type: System.Boolean
    content.vb: Public CanHitSolids As Boolean
- uid: Global.AuraProjectileMovementBase.AuraProjectileProperties.DestroySelfOnCollision
  commentId: F:Global.AuraProjectileMovementBase.AuraProjectileProperties.DestroySelfOnCollision
  id: DestroySelfOnCollision
  parent: Global.AuraProjectileMovementBase.AuraProjectileProperties
  langs:
  - csharp
  - vb
  name: DestroySelfOnCollision
  nameWithType: AuraProjectileMovementBase.AuraProjectileProperties.DestroySelfOnCollision
  fullName: AuraProjectileMovementBase.AuraProjectileProperties.DestroySelfOnCollision
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraProjectileMovementBase.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DestroySelfOnCollision
    path: ../Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraProjectileMovementBase.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("CanHitSolids", 1)]

      public bool DestroySelfOnCollision
    return:
      type: System.Boolean
    content.vb: >-
      <ConditionalShow("CanHitSolids", 1)>

      Public DestroySelfOnCollision As Boolean
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: CanHitSolids
    - type: System.Int32
      value: 1
- uid: Global.AuraProjectileMovementBase.AuraProjectileProperties.ApplyGravity
  commentId: F:Global.AuraProjectileMovementBase.AuraProjectileProperties.ApplyGravity
  id: ApplyGravity
  parent: Global.AuraProjectileMovementBase.AuraProjectileProperties
  langs:
  - csharp
  - vb
  name: ApplyGravity
  nameWithType: AuraProjectileMovementBase.AuraProjectileProperties.ApplyGravity
  fullName: AuraProjectileMovementBase.AuraProjectileProperties.ApplyGravity
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraProjectileMovementBase.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ApplyGravity
    path: ../Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraProjectileMovementBase.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool ApplyGravity
    return:
      type: System.Boolean
    content.vb: Public ApplyGravity As Boolean
- uid: Global.AuraProjectileMovementBase.AuraProjectileProperties.GravityScale
  commentId: F:Global.AuraProjectileMovementBase.AuraProjectileProperties.GravityScale
  id: GravityScale
  parent: Global.AuraProjectileMovementBase.AuraProjectileProperties
  langs:
  - csharp
  - vb
  name: GravityScale
  nameWithType: AuraProjectileMovementBase.AuraProjectileProperties.GravityScale
  fullName: AuraProjectileMovementBase.AuraProjectileProperties.GravityScale
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraProjectileMovementBase.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GravityScale
    path: ../Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraProjectileMovementBase.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("ApplyGravity", 1)]

      public float GravityScale
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("ApplyGravity", 1)>

      Public GravityScale As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: ApplyGravity
    - type: System.Int32
      value: 1
references:
- uid: Global
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.AuraProjectileMovementBase.AxisClipType
  commentId: T:Global.AuraProjectileMovementBase.AxisClipType
  name: AuraProjectileMovementBase.AxisClipType
  nameWithType: AuraProjectileMovementBase.AxisClipType
  fullName: AuraProjectileMovementBase.AxisClipType
  spec.csharp:
  - uid: Global.AuraProjectileMovementBase
    name: AuraProjectileMovementBase
  - name: .
  - uid: Global.AuraProjectileMovementBase.AxisClipType
    name: AxisClipType
  spec.vb:
  - uid: Global.AuraProjectileMovementBase
    name: AuraProjectileMovementBase
  - name: .
  - uid: Global.AuraProjectileMovementBase.AxisClipType
    name: AxisClipType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
