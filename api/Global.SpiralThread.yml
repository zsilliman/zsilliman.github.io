### YamlMime:ManagedReference
items:
- uid: Global.SpiralThread
  commentId: T:Global.SpiralThread
  id: SpiralThread
  parent: Global
  children:
  - Global.SpiralThread.Arm0
  - Global.SpiralThread.Arm1
  - Global.SpiralThread.aura
  - Global.SpiralThread.GetSaggyThreadPoints(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Int32)
  - Global.SpiralThread.Kill(System.Boolean)
  - Global.SpiralThread.ResetObject
  - Global.SpiralThread.SagRange
  - Global.SpiralThread.tNet
  - Global.SpiralThread.tOffset
  - Global.SpiralThread.tPosition
  - Global.SpiralThread.WebSubdivisions
  langs:
  - csharp
  - vb
  name: SpiralThread
  nameWithType: SpiralThread
  fullName: SpiralThread
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SpiralThread
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [RequireComponent(typeof(AutoMergeAura))]

      public class SpiralThread : MonoBehaviour
    content.vb: >-
      <RequireComponent(GetType(AutoMergeAura))>

      Public Class SpiralThread Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: UnityEngine.RequireComponent
    ctor: UnityEngine.RequireComponent.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Global.AutoMergeAura
- uid: Global.SpiralThread.Arm0
  commentId: F:Global.SpiralThread.Arm0
  id: Arm0
  parent: Global.SpiralThread
  langs:
  - csharp
  - vb
  name: Arm0
  nameWithType: SpiralThread.Arm0
  fullName: SpiralThread.Arm0
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Arm0
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public ArmThread Arm0
    return:
      type: Global.ArmThread
    content.vb: Public Arm0 As ArmThread
- uid: Global.SpiralThread.Arm1
  commentId: F:Global.SpiralThread.Arm1
  id: Arm1
  parent: Global.SpiralThread
  langs:
  - csharp
  - vb
  name: Arm1
  nameWithType: SpiralThread.Arm1
  fullName: SpiralThread.Arm1
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Arm1
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public ArmThread Arm1
    return:
      type: Global.ArmThread
    content.vb: Public Arm1 As ArmThread
- uid: Global.SpiralThread.tPosition
  commentId: F:Global.SpiralThread.tPosition
  id: tPosition
  parent: Global.SpiralThread
  langs:
  - csharp
  - vb
  name: tPosition
  nameWithType: SpiralThread.tPosition
  fullName: SpiralThread.tPosition
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: tPosition
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Range(0, 1)]

      public float tPosition
    return:
      type: System.Single
    content.vb: >-
      <Range(0, 1)>

      Public tPosition As Single
  attributes:
  - type: UnityEngine.RangeAttribute
    ctor: UnityEngine.RangeAttribute.#ctor(System.Single,System.Single)
    arguments:
    - type: System.Single
      value: 0
    - type: System.Single
      value: 1
- uid: Global.SpiralThread.tOffset
  commentId: F:Global.SpiralThread.tOffset
  id: tOffset
  parent: Global.SpiralThread
  langs:
  - csharp
  - vb
  name: tOffset
  nameWithType: SpiralThread.tOffset
  fullName: SpiralThread.tOffset
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: tOffset
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [HideInInspector]

      public float tOffset
    return:
      type: System.Single
    content.vb: >-
      <HideInInspector>

      Public tOffset As Single
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.SpiralThread.SagRange
  commentId: F:Global.SpiralThread.SagRange
  id: SagRange
  parent: Global.SpiralThread
  langs:
  - csharp
  - vb
  name: SagRange
  nameWithType: SpiralThread.SagRange
  fullName: SpiralThread.SagRange
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SagRange
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2 SagRange
    return:
      type: UnityEngine.Vector2
    content.vb: Public SagRange As Vector2
- uid: Global.SpiralThread.WebSubdivisions
  commentId: F:Global.SpiralThread.WebSubdivisions
  id: WebSubdivisions
  parent: Global.SpiralThread
  langs:
  - csharp
  - vb
  name: WebSubdivisions
  nameWithType: SpiralThread.WebSubdivisions
  fullName: SpiralThread.WebSubdivisions
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WebSubdivisions
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int WebSubdivisions
    return:
      type: System.Int32
    content.vb: Public WebSubdivisions As Integer
- uid: Global.SpiralThread.tNet
  commentId: P:Global.SpiralThread.tNet
  id: tNet
  parent: Global.SpiralThread
  langs:
  - csharp
  - vb
  name: tNet
  nameWithType: SpiralThread.tNet
  fullName: SpiralThread.tNet
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: tNet
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float tNet { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property tNet As Single
  overload: Global.SpiralThread.tNet*
- uid: Global.SpiralThread.aura
  commentId: P:Global.SpiralThread.aura
  id: aura
  parent: Global.SpiralThread
  langs:
  - csharp
  - vb
  name: aura
  nameWithType: SpiralThread.aura
  fullName: SpiralThread.aura
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: aura
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public AutoMergeAura aura { get; }
    parameters: []
    return:
      type: Global.AutoMergeAura
    content.vb: Public Property aura As AutoMergeAura
  overload: Global.SpiralThread.aura*
- uid: Global.SpiralThread.ResetObject
  commentId: M:Global.SpiralThread.ResetObject
  id: ResetObject
  parent: Global.SpiralThread
  langs:
  - csharp
  - vb
  name: ResetObject()
  nameWithType: SpiralThread.ResetObject()
  fullName: SpiralThread.ResetObject()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResetObject
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
    startLine: 73
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void ResetObject()
    content.vb: Public Sub ResetObject()
  overload: Global.SpiralThread.ResetObject*
- uid: Global.SpiralThread.Kill(System.Boolean)
  commentId: M:Global.SpiralThread.Kill(System.Boolean)
  id: Kill(System.Boolean)
  parent: Global.SpiralThread
  langs:
  - csharp
  - vb
  name: Kill(bool)
  nameWithType: SpiralThread.Kill(bool)
  fullName: SpiralThread.Kill(bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Kill
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
    startLine: 78
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Kill(bool isAnimated = true)
    parameters:
    - id: isAnimated
      type: System.Boolean
    content.vb: Public Sub Kill(isAnimated As Boolean = True)
  overload: Global.SpiralThread.Kill*
  nameWithType.vb: SpiralThread.Kill(Boolean)
  fullName.vb: SpiralThread.Kill(Boolean)
  name.vb: Kill(Boolean)
- uid: Global.SpiralThread.GetSaggyThreadPoints(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Int32)
  commentId: M:Global.SpiralThread.GetSaggyThreadPoints(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Int32)
  id: GetSaggyThreadPoints(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Int32)
  parent: Global.SpiralThread
  langs:
  - csharp
  - vb
  name: GetSaggyThreadPoints(Vector2, Vector2, Vector2, float, int)
  nameWithType: SpiralThread.GetSaggyThreadPoints(Vector2, Vector2, Vector2, float, int)
  fullName: SpiralThread.GetSaggyThreadPoints(UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2, float, int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetSaggyThreadPoints
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/SpiralThread.cs
    startLine: 121
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public List<Vector2Int> GetSaggyThreadPoints(Vector2 A, Vector2 B, Vector2 SagRange, float t, int Samples)
    parameters:
    - id: A
      type: UnityEngine.Vector2
    - id: B
      type: UnityEngine.Vector2
    - id: SagRange
      type: UnityEngine.Vector2
    - id: t
      type: System.Single
    - id: Samples
      type: System.Int32
    return:
      type: System.Collections.Generic.List{UnityEngine.Vector2Int}
    content.vb: Public Function GetSaggyThreadPoints(A As Vector2, B As Vector2, SagRange As Vector2, t As Single, Samples As Integer) As List(Of Vector2Int)
  overload: Global.SpiralThread.GetSaggyThreadPoints*
  nameWithType.vb: SpiralThread.GetSaggyThreadPoints(Vector2, Vector2, Vector2, Single, Integer)
  fullName.vb: SpiralThread.GetSaggyThreadPoints(UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2, Single, Integer)
  name.vb: GetSaggyThreadPoints(Vector2, Vector2, Vector2, Single, Integer)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.ArmThread
  commentId: T:Global.ArmThread
  name: ArmThread
  nameWithType: ArmThread
  fullName: ArmThread
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.SpiralThread.tNet*
  commentId: Overload:Global.SpiralThread.tNet
  name: tNet
  nameWithType: SpiralThread.tNet
  fullName: SpiralThread.tNet
- uid: Global.SpiralThread.aura*
  commentId: Overload:Global.SpiralThread.aura
  name: aura
  nameWithType: SpiralThread.aura
  fullName: SpiralThread.aura
- uid: Global.AutoMergeAura
  commentId: T:Global.AutoMergeAura
  name: AutoMergeAura
  nameWithType: AutoMergeAura
  fullName: AutoMergeAura
- uid: Global.SpiralThread.ResetObject*
  commentId: Overload:Global.SpiralThread.ResetObject
  name: ResetObject
  nameWithType: SpiralThread.ResetObject
  fullName: SpiralThread.ResetObject
- uid: Global.SpiralThread.Kill*
  commentId: Overload:Global.SpiralThread.Kill
  name: Kill
  nameWithType: SpiralThread.Kill
  fullName: SpiralThread.Kill
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.SpiralThread.GetSaggyThreadPoints*
  commentId: Overload:Global.SpiralThread.GetSaggyThreadPoints
  name: GetSaggyThreadPoints
  nameWithType: SpiralThread.GetSaggyThreadPoints
  fullName: SpiralThread.GetSaggyThreadPoints
- uid: System.Collections.Generic.List{UnityEngine.Vector2Int}
  commentId: T:System.Collections.Generic.List{UnityEngine.Vector2Int}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Vector2Int>
  nameWithType: List<Vector2Int>
  fullName: System.Collections.Generic.List<UnityEngine.Vector2Int>
  nameWithType.vb: List(Of Vector2Int)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Vector2Int)
  name.vb: List(Of Vector2Int)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
