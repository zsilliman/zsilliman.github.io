### YamlMime:ManagedReference
items:
- uid: Global.LineMesh
  commentId: T:Global.LineMesh
  id: LineMesh
  parent: Global
  children:
  - Global.LineMesh.closed
  - Global.LineMesh.GetWorldPoint(System.Int32)
  - Global.LineMesh.meshFilter
  - Global.LineMesh.Points
  - Global.LineMesh.UpdateLinePoints(System.Collections.Generic.List{UnityEngine.Vector2Int},System.Single)
  - Global.LineMesh.UpdateLinePoints(System.Collections.Generic.List{UnityEngine.Vector3})
  langs:
  - csharp
  - vb
  name: LineMesh
  nameWithType: LineMesh
  fullName: LineMesh
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Experimental(bust)/CustomAura/LineMesh.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LineMesh
    path: ../Assets/Objects & Components/Entities/Auras/Experimental(bust)/CustomAura/LineMesh.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class LineMesh : MonoBehaviour'
    content.vb: Public Class LineMesh Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.LineMesh.Points
  commentId: F:Global.LineMesh.Points
  id: Points
  parent: Global.LineMesh
  langs:
  - csharp
  - vb
  name: Points
  nameWithType: LineMesh.Points
  fullName: LineMesh.Points
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Experimental(bust)/CustomAura/LineMesh.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Points
    path: ../Assets/Objects & Components/Entities/Auras/Experimental(bust)/CustomAura/LineMesh.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public List<Vector3> Points
    return:
      type: System.Collections.Generic.List{UnityEngine.Vector3}
    content.vb: Public Points As List(Of Vector3)
- uid: Global.LineMesh.closed
  commentId: F:Global.LineMesh.closed
  id: closed
  parent: Global.LineMesh
  langs:
  - csharp
  - vb
  name: closed
  nameWithType: LineMesh.closed
  fullName: LineMesh.closed
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Experimental(bust)/CustomAura/LineMesh.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: closed
    path: ../Assets/Objects & Components/Entities/Auras/Experimental(bust)/CustomAura/LineMesh.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool closed
    return:
      type: System.Boolean
    content.vb: Public closed As Boolean
- uid: Global.LineMesh.meshFilter
  commentId: F:Global.LineMesh.meshFilter
  id: meshFilter
  parent: Global.LineMesh
  langs:
  - csharp
  - vb
  name: meshFilter
  nameWithType: LineMesh.meshFilter
  fullName: LineMesh.meshFilter
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Experimental(bust)/CustomAura/LineMesh.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: meshFilter
    path: ../Assets/Objects & Components/Entities/Auras/Experimental(bust)/CustomAura/LineMesh.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected MeshFilter meshFilter
    return:
      type: UnityEngine.MeshFilter
    content.vb: Protected meshFilter As MeshFilter
- uid: Global.LineMesh.GetWorldPoint(System.Int32)
  commentId: M:Global.LineMesh.GetWorldPoint(System.Int32)
  id: GetWorldPoint(System.Int32)
  parent: Global.LineMesh
  langs:
  - csharp
  - vb
  name: GetWorldPoint(int)
  nameWithType: LineMesh.GetWorldPoint(int)
  fullName: LineMesh.GetWorldPoint(int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Experimental(bust)/CustomAura/LineMesh.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetWorldPoint
    path: ../Assets/Objects & Components/Entities/Auras/Experimental(bust)/CustomAura/LineMesh.cs
    startLine: 40
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector3 GetWorldPoint(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: UnityEngine.Vector3
    content.vb: Public Function GetWorldPoint(index As Integer) As Vector3
  overload: Global.LineMesh.GetWorldPoint*
  nameWithType.vb: LineMesh.GetWorldPoint(Integer)
  fullName.vb: LineMesh.GetWorldPoint(Integer)
  name.vb: GetWorldPoint(Integer)
- uid: Global.LineMesh.UpdateLinePoints(System.Collections.Generic.List{UnityEngine.Vector2Int},System.Single)
  commentId: M:Global.LineMesh.UpdateLinePoints(System.Collections.Generic.List{UnityEngine.Vector2Int},System.Single)
  id: UpdateLinePoints(System.Collections.Generic.List{UnityEngine.Vector2Int},System.Single)
  parent: Global.LineMesh
  langs:
  - csharp
  - vb
  name: UpdateLinePoints(List<Vector2Int>, float)
  nameWithType: LineMesh.UpdateLinePoints(List<Vector2Int>, float)
  fullName: LineMesh.UpdateLinePoints(System.Collections.Generic.List<UnityEngine.Vector2Int>, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Experimental(bust)/CustomAura/LineMesh.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UpdateLinePoints
    path: ../Assets/Objects & Components/Entities/Auras/Experimental(bust)/CustomAura/LineMesh.cs
    startLine: 45
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UpdateLinePoints(List<Vector2Int> points, float z)
    parameters:
    - id: points
      type: System.Collections.Generic.List{UnityEngine.Vector2Int}
    - id: z
      type: System.Single
    content.vb: Public Sub UpdateLinePoints(points As List(Of Vector2Int), z As Single)
  overload: Global.LineMesh.UpdateLinePoints*
  nameWithType.vb: LineMesh.UpdateLinePoints(List(Of Vector2Int), Single)
  fullName.vb: LineMesh.UpdateLinePoints(System.Collections.Generic.List(Of UnityEngine.Vector2Int), Single)
  name.vb: UpdateLinePoints(List(Of Vector2Int), Single)
- uid: Global.LineMesh.UpdateLinePoints(System.Collections.Generic.List{UnityEngine.Vector3})
  commentId: M:Global.LineMesh.UpdateLinePoints(System.Collections.Generic.List{UnityEngine.Vector3})
  id: UpdateLinePoints(System.Collections.Generic.List{UnityEngine.Vector3})
  parent: Global.LineMesh
  langs:
  - csharp
  - vb
  name: UpdateLinePoints(List<Vector3>)
  nameWithType: LineMesh.UpdateLinePoints(List<Vector3>)
  fullName: LineMesh.UpdateLinePoints(System.Collections.Generic.List<UnityEngine.Vector3>)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Experimental(bust)/CustomAura/LineMesh.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UpdateLinePoints
    path: ../Assets/Objects & Components/Entities/Auras/Experimental(bust)/CustomAura/LineMesh.cs
    startLine: 64
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UpdateLinePoints(List<Vector3> points)
    parameters:
    - id: points
      type: System.Collections.Generic.List{UnityEngine.Vector3}
    content.vb: Public Sub UpdateLinePoints(points As List(Of Vector3))
  overload: Global.LineMesh.UpdateLinePoints*
  nameWithType.vb: LineMesh.UpdateLinePoints(List(Of Vector3))
  fullName.vb: LineMesh.UpdateLinePoints(System.Collections.Generic.List(Of UnityEngine.Vector3))
  name.vb: UpdateLinePoints(List(Of Vector3))
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.Collections.Generic.List{UnityEngine.Vector3}
  commentId: T:System.Collections.Generic.List{UnityEngine.Vector3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Vector3>
  nameWithType: List<Vector3>
  fullName: System.Collections.Generic.List<UnityEngine.Vector3>
  nameWithType.vb: List(Of Vector3)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Vector3)
  name.vb: List(Of Vector3)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UnityEngine.MeshFilter
  commentId: T:UnityEngine.MeshFilter
  parent: UnityEngine
  isExternal: true
  name: MeshFilter
  nameWithType: MeshFilter
  fullName: UnityEngine.MeshFilter
- uid: Global.LineMesh.GetWorldPoint*
  commentId: Overload:Global.LineMesh.GetWorldPoint
  name: GetWorldPoint
  nameWithType: LineMesh.GetWorldPoint
  fullName: LineMesh.GetWorldPoint
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: Global.LineMesh.UpdateLinePoints*
  commentId: Overload:Global.LineMesh.UpdateLinePoints
  name: UpdateLinePoints
  nameWithType: LineMesh.UpdateLinePoints
  fullName: LineMesh.UpdateLinePoints
- uid: System.Collections.Generic.List{UnityEngine.Vector2Int}
  commentId: T:System.Collections.Generic.List{UnityEngine.Vector2Int}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Vector2Int>
  nameWithType: List<Vector2Int>
  fullName: System.Collections.Generic.List<UnityEngine.Vector2Int>
  nameWithType.vb: List(Of Vector2Int)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Vector2Int)
  name.vb: List(Of Vector2Int)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
