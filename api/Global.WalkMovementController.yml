### YamlMime:ManagedReference
items:
- uid: Global.WalkMovementController
  commentId: T:Global.WalkMovementController
  id: WalkMovementController
  parent: Global
  children:
  - Global.WalkMovementController.Charge(UnityEngine.Vector2)
  - Global.WalkMovementController.GetEdgeXCallback
  - Global.WalkMovementController.GetJumpCallback
  - Global.WalkMovementController.GoTo(System.Single,System.Boolean)
  - Global.WalkMovementController.Idle
  - Global.WalkMovementController.Initialize(IntEnemy)
  - Global.WalkMovementController.Move(System.Single)
  - Global.WalkMovementController.PATROL_EPSILON
  - Global.WalkMovementController.PATROL_FLIP_COOLDOWN
  - Global.WalkMovementController.Patrol(System.Single,System.Single)
  - Global.WalkMovementController.RegisterEdgeXCallback(IntObject.Action)
  - Global.WalkMovementController.RegisterJumpCallback(IntObject.Action)
  - Global.WalkMovementController.RegisterOnLandCallback(IntObject.Action)
  - Global.WalkMovementController.UnegisterOnLandCallback(IntObject.Action)
  - Global.WalkMovementController.UnregisterEdgeXCallback(IntObject.Action)
  - Global.WalkMovementController.UnregisterJumpCallback(IntObject.Action)
  - Global.WalkMovementController.Update
  langs:
  - csharp
  - vb
  name: WalkMovementController
  nameWithType: WalkMovementController
  fullName: WalkMovementController
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WalkMovementController
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class WalkMovementController : EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>
    content.vb: >-
      <Serializable>

      Public Class WalkMovementController Inherits EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState)
  inheritance:
  - System.Object
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  inheritedMembers:
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.MovementProperties
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.Enemy
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.osm
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.CollideX
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.CollideY
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OverlapActor
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OverlapTrigger
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.StartCharge
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.EndCharge
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.CurrentState
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.Initialize(IntEnemy)
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetTimeInState
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.Update
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.Reset
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterForStateEnter(WalkMovementController.WalkingMovementState,OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction)
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterForStateEnter(WalkMovementController.WalkingMovementState,OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction)
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterForStateExit(WalkMovementController.WalkingMovementState,OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction)
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterForStateExit(WalkMovementController.WalkingMovementState,OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction)
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterCollideXCallback(IntObject.SolidAction)
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterCollideXCallback(IntObject.SolidAction)
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterCollideYCallback(IntObject.SolidAction)
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterCollideYCallback(IntObject.SolidAction)
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterOverlapActorCallback(IntObject.ActorAction)
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterOverlapActorCallback(IntObject.ActorAction)
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterOverlapTriggerCallback(IntObject.TriggerAction)
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetCollideXCallback
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetCollideYCallback
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetOverlapActorCallback
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetOverlapTriggerCallback
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OnCollideX(IntSolid)
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OnCollideY(IntSolid)
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OnOverlapActor(IntActor)
  - Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OnOverlapTrigger(IntTrigger)
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.WalkMovementController.PATROL_EPSILON
  commentId: F:Global.WalkMovementController.PATROL_EPSILON
  id: PATROL_EPSILON
  parent: Global.WalkMovementController
  langs:
  - csharp
  - vb
  name: PATROL_EPSILON
  nameWithType: WalkMovementController.PATROL_EPSILON
  fullName: WalkMovementController.PATROL_EPSILON
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PATROL_EPSILON
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const float PATROL_EPSILON = 25
    return:
      type: System.Single
    content.vb: Public Const PATROL_EPSILON As Single = 25
- uid: Global.WalkMovementController.PATROL_FLIP_COOLDOWN
  commentId: F:Global.WalkMovementController.PATROL_FLIP_COOLDOWN
  id: PATROL_FLIP_COOLDOWN
  parent: Global.WalkMovementController
  langs:
  - csharp
  - vb
  name: PATROL_FLIP_COOLDOWN
  nameWithType: WalkMovementController.PATROL_FLIP_COOLDOWN
  fullName: WalkMovementController.PATROL_FLIP_COOLDOWN
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PATROL_FLIP_COOLDOWN
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const float PATROL_FLIP_COOLDOWN = 0.5
    return:
      type: System.Single
    content.vb: Public Const PATROL_FLIP_COOLDOWN As Single = 0.5
- uid: Global.WalkMovementController.Initialize(IntEnemy)
  commentId: M:Global.WalkMovementController.Initialize(IntEnemy)
  id: Initialize(IntEnemy)
  parent: Global.WalkMovementController
  langs:
  - csharp
  - vb
  name: Initialize(IntEnemy)
  nameWithType: WalkMovementController.Initialize(IntEnemy)
  fullName: WalkMovementController.Initialize(IntEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Initialize
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
    startLine: 40
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void Initialize(IntEnemy enemy)
    parameters:
    - id: enemy
      type: Global.IntEnemy
    content.vb: Public Overrides Sub Initialize(enemy As IntEnemy)
  overridden: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.Initialize(IntEnemy)
  overload: Global.WalkMovementController.Initialize*
- uid: Global.WalkMovementController.Update
  commentId: M:Global.WalkMovementController.Update
  id: Update
  parent: Global.WalkMovementController
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: WalkMovementController.Update()
  fullName: WalkMovementController.Update()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Update
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
    startLine: 77
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.Update
  overload: Global.WalkMovementController.Update*
- uid: Global.WalkMovementController.Idle
  commentId: M:Global.WalkMovementController.Idle
  id: Idle
  parent: Global.WalkMovementController
  langs:
  - csharp
  - vb
  name: Idle()
  nameWithType: WalkMovementController.Idle()
  fullName: WalkMovementController.Idle()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Idle
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
    startLine: 99
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Idle()
    content.vb: Public Sub Idle()
  overload: Global.WalkMovementController.Idle*
- uid: Global.WalkMovementController.Patrol(System.Single,System.Single)
  commentId: M:Global.WalkMovementController.Patrol(System.Single,System.Single)
  id: Patrol(System.Single,System.Single)
  parent: Global.WalkMovementController
  langs:
  - csharp
  - vb
  name: Patrol(float, float)
  nameWithType: WalkMovementController.Patrol(float, float)
  fullName: WalkMovementController.Patrol(float, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Patrol
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
    startLine: 104
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Patrol(float LeftWorldBoundsX, float RightWorldBoundsX)
    parameters:
    - id: LeftWorldBoundsX
      type: System.Single
    - id: RightWorldBoundsX
      type: System.Single
    content.vb: Public Sub Patrol(LeftWorldBoundsX As Single, RightWorldBoundsX As Single)
  overload: Global.WalkMovementController.Patrol*
  nameWithType.vb: WalkMovementController.Patrol(Single, Single)
  fullName.vb: WalkMovementController.Patrol(Single, Single)
  name.vb: Patrol(Single, Single)
- uid: Global.WalkMovementController.Move(System.Single)
  commentId: M:Global.WalkMovementController.Move(System.Single)
  id: Move(System.Single)
  parent: Global.WalkMovementController
  langs:
  - csharp
  - vb
  name: Move(float)
  nameWithType: WalkMovementController.Move(float)
  fullName: WalkMovementController.Move(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Move
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
    startLine: 111
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Move(float desired_velocity)
    parameters:
    - id: desired_velocity
      type: System.Single
    content.vb: Public Sub Move(desired_velocity As Single)
  overload: Global.WalkMovementController.Move*
  nameWithType.vb: WalkMovementController.Move(Single)
  fullName.vb: WalkMovementController.Move(Single)
  name.vb: Move(Single)
- uid: Global.WalkMovementController.GoTo(System.Single,System.Boolean)
  commentId: M:Global.WalkMovementController.GoTo(System.Single,System.Boolean)
  id: GoTo(System.Single,System.Boolean)
  parent: Global.WalkMovementController
  langs:
  - csharp
  - vb
  name: GoTo(float, bool)
  nameWithType: WalkMovementController.GoTo(float, bool)
  fullName: WalkMovementController.GoTo(float, bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GoTo
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
    startLine: 117
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void GoTo(float locationX, bool AllowJump = true)
    parameters:
    - id: locationX
      type: System.Single
    - id: AllowJump
      type: System.Boolean
    content.vb: Public Sub [GoTo](locationX As Single, AllowJump As Boolean = True)
  overload: Global.WalkMovementController.GoTo*
  nameWithType.vb: WalkMovementController.GoTo(Single, Boolean)
  fullName.vb: WalkMovementController.GoTo(Single, Boolean)
  name.vb: GoTo(Single, Boolean)
- uid: Global.WalkMovementController.Charge(UnityEngine.Vector2)
  commentId: M:Global.WalkMovementController.Charge(UnityEngine.Vector2)
  id: Charge(UnityEngine.Vector2)
  parent: Global.WalkMovementController
  langs:
  - csharp
  - vb
  name: Charge(Vector2)
  nameWithType: WalkMovementController.Charge(Vector2)
  fullName: WalkMovementController.Charge(UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Charge
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
    startLine: 123
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Charge(Vector2 direction)
    parameters:
    - id: direction
      type: UnityEngine.Vector2
    content.vb: Public Sub Charge(direction As Vector2)
  overload: Global.WalkMovementController.Charge*
- uid: Global.WalkMovementController.RegisterEdgeXCallback(IntObject.Action)
  commentId: M:Global.WalkMovementController.RegisterEdgeXCallback(IntObject.Action)
  id: RegisterEdgeXCallback(IntObject.Action)
  parent: Global.WalkMovementController
  langs:
  - csharp
  - vb
  name: RegisterEdgeXCallback(Action)
  nameWithType: WalkMovementController.RegisterEdgeXCallback(IntObject.Action)
  fullName: WalkMovementController.RegisterEdgeXCallback(IntObject.Action)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RegisterEdgeXCallback
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
    startLine: 206
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void RegisterEdgeXCallback(IntObject.Action callback)
    parameters:
    - id: callback
      type: Global.IntObject.Action
    content.vb: Public Sub RegisterEdgeXCallback(callback As IntObject.Action)
  overload: Global.WalkMovementController.RegisterEdgeXCallback*
- uid: Global.WalkMovementController.UnregisterEdgeXCallback(IntObject.Action)
  commentId: M:Global.WalkMovementController.UnregisterEdgeXCallback(IntObject.Action)
  id: UnregisterEdgeXCallback(IntObject.Action)
  parent: Global.WalkMovementController
  langs:
  - csharp
  - vb
  name: UnregisterEdgeXCallback(Action)
  nameWithType: WalkMovementController.UnregisterEdgeXCallback(IntObject.Action)
  fullName: WalkMovementController.UnregisterEdgeXCallback(IntObject.Action)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UnregisterEdgeXCallback
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
    startLine: 211
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UnregisterEdgeXCallback(IntObject.Action callback)
    parameters:
    - id: callback
      type: Global.IntObject.Action
    content.vb: Public Sub UnregisterEdgeXCallback(callback As IntObject.Action)
  overload: Global.WalkMovementController.UnregisterEdgeXCallback*
- uid: Global.WalkMovementController.GetEdgeXCallback
  commentId: M:Global.WalkMovementController.GetEdgeXCallback
  id: GetEdgeXCallback
  parent: Global.WalkMovementController
  langs:
  - csharp
  - vb
  name: GetEdgeXCallback()
  nameWithType: WalkMovementController.GetEdgeXCallback()
  fullName: WalkMovementController.GetEdgeXCallback()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetEdgeXCallback
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
    startLine: 216
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntObject.Action GetEdgeXCallback()
    return:
      type: Global.IntObject.Action
    content.vb: Protected Function GetEdgeXCallback() As IntObject.Action
  overload: Global.WalkMovementController.GetEdgeXCallback*
- uid: Global.WalkMovementController.RegisterJumpCallback(IntObject.Action)
  commentId: M:Global.WalkMovementController.RegisterJumpCallback(IntObject.Action)
  id: RegisterJumpCallback(IntObject.Action)
  parent: Global.WalkMovementController
  langs:
  - csharp
  - vb
  name: RegisterJumpCallback(Action)
  nameWithType: WalkMovementController.RegisterJumpCallback(IntObject.Action)
  fullName: WalkMovementController.RegisterJumpCallback(IntObject.Action)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RegisterJumpCallback
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
    startLine: 221
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void RegisterJumpCallback(IntObject.Action callback)
    parameters:
    - id: callback
      type: Global.IntObject.Action
    content.vb: Public Sub RegisterJumpCallback(callback As IntObject.Action)
  overload: Global.WalkMovementController.RegisterJumpCallback*
- uid: Global.WalkMovementController.UnregisterJumpCallback(IntObject.Action)
  commentId: M:Global.WalkMovementController.UnregisterJumpCallback(IntObject.Action)
  id: UnregisterJumpCallback(IntObject.Action)
  parent: Global.WalkMovementController
  langs:
  - csharp
  - vb
  name: UnregisterJumpCallback(Action)
  nameWithType: WalkMovementController.UnregisterJumpCallback(IntObject.Action)
  fullName: WalkMovementController.UnregisterJumpCallback(IntObject.Action)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UnregisterJumpCallback
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
    startLine: 226
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UnregisterJumpCallback(IntObject.Action callback)
    parameters:
    - id: callback
      type: Global.IntObject.Action
    content.vb: Public Sub UnregisterJumpCallback(callback As IntObject.Action)
  overload: Global.WalkMovementController.UnregisterJumpCallback*
- uid: Global.WalkMovementController.GetJumpCallback
  commentId: M:Global.WalkMovementController.GetJumpCallback
  id: GetJumpCallback
  parent: Global.WalkMovementController
  langs:
  - csharp
  - vb
  name: GetJumpCallback()
  nameWithType: WalkMovementController.GetJumpCallback()
  fullName: WalkMovementController.GetJumpCallback()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetJumpCallback
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
    startLine: 231
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntObject.Action GetJumpCallback()
    return:
      type: Global.IntObject.Action
    content.vb: Protected Function GetJumpCallback() As IntObject.Action
  overload: Global.WalkMovementController.GetJumpCallback*
- uid: Global.WalkMovementController.RegisterOnLandCallback(IntObject.Action)
  commentId: M:Global.WalkMovementController.RegisterOnLandCallback(IntObject.Action)
  id: RegisterOnLandCallback(IntObject.Action)
  parent: Global.WalkMovementController
  langs:
  - csharp
  - vb
  name: RegisterOnLandCallback(Action)
  nameWithType: WalkMovementController.RegisterOnLandCallback(IntObject.Action)
  fullName: WalkMovementController.RegisterOnLandCallback(IntObject.Action)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RegisterOnLandCallback
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
    startLine: 239
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void RegisterOnLandCallback(IntObject.Action callback)
    parameters:
    - id: callback
      type: Global.IntObject.Action
    content.vb: Public Sub RegisterOnLandCallback(callback As IntObject.Action)
  overload: Global.WalkMovementController.RegisterOnLandCallback*
- uid: Global.WalkMovementController.UnegisterOnLandCallback(IntObject.Action)
  commentId: M:Global.WalkMovementController.UnegisterOnLandCallback(IntObject.Action)
  id: UnegisterOnLandCallback(IntObject.Action)
  parent: Global.WalkMovementController
  langs:
  - csharp
  - vb
  name: UnegisterOnLandCallback(Action)
  nameWithType: WalkMovementController.UnegisterOnLandCallback(IntObject.Action)
  fullName: WalkMovementController.UnegisterOnLandCallback(IntObject.Action)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UnegisterOnLandCallback
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/WalkMovementController.cs
    startLine: 244
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UnegisterOnLandCallback(IntObject.Action callback)
    parameters:
    - id: callback
      type: Global.IntObject.Action
    content.vb: Public Sub UnegisterOnLandCallback(callback As IntObject.Action)
  overload: Global.WalkMovementController.UnegisterOnLandCallback*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  commentId: T:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2
  name: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState)
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState)
  name.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState)
  spec.csharp:
  - uid: Global.EnemyMovementController`2
    name: EnemyMovementController
  - name: <
  - uid: Global.WalkMovementProperties
    name: WalkMovementProperties
  - name: ','
  - name: " "
  - uid: Global.WalkMovementController
    name: WalkMovementController
  - name: .
  - uid: Global.WalkMovementController.WalkingMovementState
    name: WalkingMovementState
  - name: '>'
  spec.vb:
  - uid: Global.EnemyMovementController`2
    name: EnemyMovementController
  - name: (
  - name: Of
  - name: " "
  - uid: Global.WalkMovementProperties
    name: WalkMovementProperties
  - name: ','
  - name: " "
  - uid: Global.WalkMovementController
    name: WalkMovementController
  - name: .
  - uid: Global.WalkMovementController.WalkingMovementState
    name: WalkingMovementState
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.MovementProperties
  commentId: F:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.MovementProperties
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.MovementProperties
  name: MovementProperties
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.MovementProperties
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.MovementProperties
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).MovementProperties
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).MovementProperties
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.Enemy
  commentId: F:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.Enemy
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.Enemy
  name: Enemy
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.Enemy
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.Enemy
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).Enemy
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).Enemy
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.osm
  commentId: F:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.osm
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.osm
  name: osm
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.osm
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.osm
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).osm
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).osm
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.CollideX
  commentId: F:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.CollideX
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.CollideX
  name: CollideX
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.CollideX
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.CollideX
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).CollideX
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).CollideX
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.CollideY
  commentId: F:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.CollideY
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.CollideY
  name: CollideY
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.CollideY
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.CollideY
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).CollideY
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).CollideY
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OverlapActor
  commentId: F:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OverlapActor
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.OverlapActor
  name: OverlapActor
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.OverlapActor
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.OverlapActor
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).OverlapActor
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).OverlapActor
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OverlapTrigger
  commentId: F:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OverlapTrigger
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.OverlapTrigger
  name: OverlapTrigger
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.OverlapTrigger
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.OverlapTrigger
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).OverlapTrigger
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).OverlapTrigger
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.StartCharge
  commentId: F:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.StartCharge
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.StartCharge
  name: StartCharge
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.StartCharge
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.StartCharge
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).StartCharge
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).StartCharge
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.EndCharge
  commentId: F:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.EndCharge
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.EndCharge
  name: EndCharge
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.EndCharge
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.EndCharge
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).EndCharge
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).EndCharge
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.CurrentState
  commentId: P:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.CurrentState
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.CurrentState
  name: CurrentState
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.CurrentState
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.CurrentState
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).CurrentState
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).CurrentState
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.Initialize(IntEnemy)
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.Initialize(IntEnemy)
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.Initialize(IntEnemy)
  name: Initialize(IntEnemy)
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.Initialize(IntEnemy)
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.Initialize(IntEnemy)
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).Initialize(IntEnemy)
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).Initialize(IntEnemy)
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.Initialize(IntEnemy)
    name: Initialize
  - name: (
  - uid: Global.IntEnemy
    name: IntEnemy
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.Initialize(IntEnemy)
    name: Initialize
  - name: (
  - uid: Global.IntEnemy
    name: IntEnemy
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetTimeInState
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetTimeInState
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.GetTimeInState
  name: GetTimeInState()
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.GetTimeInState()
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.GetTimeInState()
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).GetTimeInState()
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).GetTimeInState()
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetTimeInState
    name: GetTimeInState
  - name: (
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetTimeInState
    name: GetTimeInState
  - name: (
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.Update
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.Update
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.Update
  name: Update()
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.Update()
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.Update()
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).Update()
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).Update()
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.Update
    name: Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.Update
    name: Update
  - name: (
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.Reset
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.Reset
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.Reset
  name: Reset()
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.Reset()
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.Reset()
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).Reset()
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).Reset()
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.Reset
    name: Reset
  - name: (
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.Reset
    name: Reset
  - name: (
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterForStateEnter(WalkMovementController.WalkingMovementState,OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction)
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterForStateEnter(WalkMovementController.WalkingMovementState,OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction)
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.RegisterForStateEnter(`1,OptionStateMachine{`1}.TransitionAction)
  name: RegisterForStateEnter(WalkingMovementState, TransitionAction)
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.RegisterForStateEnter(WalkMovementController.WalkingMovementState, OptionStateMachine<WalkMovementController.WalkingMovementState>.TransitionAction)
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.RegisterForStateEnter(WalkMovementController.WalkingMovementState, OptionStateMachine<WalkMovementController.WalkingMovementState>.TransitionAction)
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).RegisterForStateEnter(WalkMovementController.WalkingMovementState, OptionStateMachine(Of WalkMovementController.WalkingMovementState).TransitionAction)
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).RegisterForStateEnter(WalkMovementController.WalkingMovementState, OptionStateMachine(Of WalkMovementController.WalkingMovementState).TransitionAction)
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterForStateEnter(WalkMovementController.WalkingMovementState,OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction)
    name: RegisterForStateEnter
  - name: (
  - uid: Global.WalkMovementController.WalkingMovementState
    name: WalkingMovementState
  - name: ','
  - name: " "
  - uid: Global.OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction
    name: TransitionAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterForStateEnter(WalkMovementController.WalkingMovementState,OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction)
    name: RegisterForStateEnter
  - name: (
  - uid: Global.WalkMovementController.WalkingMovementState
    name: WalkingMovementState
  - name: ','
  - name: " "
  - uid: Global.OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction
    name: TransitionAction
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterForStateEnter(WalkMovementController.WalkingMovementState,OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction)
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterForStateEnter(WalkMovementController.WalkingMovementState,OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction)
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.UnregisterForStateEnter(`1,OptionStateMachine{`1}.TransitionAction)
  name: UnregisterForStateEnter(WalkingMovementState, TransitionAction)
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.UnregisterForStateEnter(WalkMovementController.WalkingMovementState, OptionStateMachine<WalkMovementController.WalkingMovementState>.TransitionAction)
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.UnregisterForStateEnter(WalkMovementController.WalkingMovementState, OptionStateMachine<WalkMovementController.WalkingMovementState>.TransitionAction)
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).UnregisterForStateEnter(WalkMovementController.WalkingMovementState, OptionStateMachine(Of WalkMovementController.WalkingMovementState).TransitionAction)
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).UnregisterForStateEnter(WalkMovementController.WalkingMovementState, OptionStateMachine(Of WalkMovementController.WalkingMovementState).TransitionAction)
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterForStateEnter(WalkMovementController.WalkingMovementState,OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction)
    name: UnregisterForStateEnter
  - name: (
  - uid: Global.WalkMovementController.WalkingMovementState
    name: WalkingMovementState
  - name: ','
  - name: " "
  - uid: Global.OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction
    name: TransitionAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterForStateEnter(WalkMovementController.WalkingMovementState,OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction)
    name: UnregisterForStateEnter
  - name: (
  - uid: Global.WalkMovementController.WalkingMovementState
    name: WalkingMovementState
  - name: ','
  - name: " "
  - uid: Global.OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction
    name: TransitionAction
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterForStateExit(WalkMovementController.WalkingMovementState,OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction)
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterForStateExit(WalkMovementController.WalkingMovementState,OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction)
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.RegisterForStateExit(`1,OptionStateMachine{`1}.TransitionAction)
  name: RegisterForStateExit(WalkingMovementState, TransitionAction)
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.RegisterForStateExit(WalkMovementController.WalkingMovementState, OptionStateMachine<WalkMovementController.WalkingMovementState>.TransitionAction)
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.RegisterForStateExit(WalkMovementController.WalkingMovementState, OptionStateMachine<WalkMovementController.WalkingMovementState>.TransitionAction)
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).RegisterForStateExit(WalkMovementController.WalkingMovementState, OptionStateMachine(Of WalkMovementController.WalkingMovementState).TransitionAction)
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).RegisterForStateExit(WalkMovementController.WalkingMovementState, OptionStateMachine(Of WalkMovementController.WalkingMovementState).TransitionAction)
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterForStateExit(WalkMovementController.WalkingMovementState,OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction)
    name: RegisterForStateExit
  - name: (
  - uid: Global.WalkMovementController.WalkingMovementState
    name: WalkingMovementState
  - name: ','
  - name: " "
  - uid: Global.OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction
    name: TransitionAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterForStateExit(WalkMovementController.WalkingMovementState,OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction)
    name: RegisterForStateExit
  - name: (
  - uid: Global.WalkMovementController.WalkingMovementState
    name: WalkingMovementState
  - name: ','
  - name: " "
  - uid: Global.OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction
    name: TransitionAction
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterForStateExit(WalkMovementController.WalkingMovementState,OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction)
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterForStateExit(WalkMovementController.WalkingMovementState,OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction)
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.UnregisterForStateExit(`1,OptionStateMachine{`1}.TransitionAction)
  name: UnregisterForStateExit(WalkingMovementState, TransitionAction)
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.UnregisterForStateExit(WalkMovementController.WalkingMovementState, OptionStateMachine<WalkMovementController.WalkingMovementState>.TransitionAction)
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.UnregisterForStateExit(WalkMovementController.WalkingMovementState, OptionStateMachine<WalkMovementController.WalkingMovementState>.TransitionAction)
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).UnregisterForStateExit(WalkMovementController.WalkingMovementState, OptionStateMachine(Of WalkMovementController.WalkingMovementState).TransitionAction)
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).UnregisterForStateExit(WalkMovementController.WalkingMovementState, OptionStateMachine(Of WalkMovementController.WalkingMovementState).TransitionAction)
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterForStateExit(WalkMovementController.WalkingMovementState,OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction)
    name: UnregisterForStateExit
  - name: (
  - uid: Global.WalkMovementController.WalkingMovementState
    name: WalkingMovementState
  - name: ','
  - name: " "
  - uid: Global.OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction
    name: TransitionAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterForStateExit(WalkMovementController.WalkingMovementState,OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction)
    name: UnregisterForStateExit
  - name: (
  - uid: Global.WalkMovementController.WalkingMovementState
    name: WalkingMovementState
  - name: ','
  - name: " "
  - uid: Global.OptionStateMachine{WalkMovementController.WalkingMovementState}.TransitionAction
    name: TransitionAction
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterCollideXCallback(IntObject.SolidAction)
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterCollideXCallback(IntObject.SolidAction)
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.RegisterCollideXCallback(IntObject.SolidAction)
  name: RegisterCollideXCallback(SolidAction)
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.RegisterCollideXCallback(IntObject.SolidAction)
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.RegisterCollideXCallback(IntObject.SolidAction)
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).RegisterCollideXCallback(IntObject.SolidAction)
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).RegisterCollideXCallback(IntObject.SolidAction)
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterCollideXCallback(IntObject.SolidAction)
    name: RegisterCollideXCallback
  - name: (
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterCollideXCallback(IntObject.SolidAction)
    name: RegisterCollideXCallback
  - name: (
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterCollideXCallback(IntObject.SolidAction)
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterCollideXCallback(IntObject.SolidAction)
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.UnregisterCollideXCallback(IntObject.SolidAction)
  name: UnregisterCollideXCallback(SolidAction)
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.UnregisterCollideXCallback(IntObject.SolidAction)
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.UnregisterCollideXCallback(IntObject.SolidAction)
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).UnregisterCollideXCallback(IntObject.SolidAction)
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).UnregisterCollideXCallback(IntObject.SolidAction)
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterCollideXCallback(IntObject.SolidAction)
    name: UnregisterCollideXCallback
  - name: (
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterCollideXCallback(IntObject.SolidAction)
    name: UnregisterCollideXCallback
  - name: (
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterCollideYCallback(IntObject.SolidAction)
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterCollideYCallback(IntObject.SolidAction)
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.RegisterCollideYCallback(IntObject.SolidAction)
  name: RegisterCollideYCallback(SolidAction)
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.RegisterCollideYCallback(IntObject.SolidAction)
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.RegisterCollideYCallback(IntObject.SolidAction)
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).RegisterCollideYCallback(IntObject.SolidAction)
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).RegisterCollideYCallback(IntObject.SolidAction)
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterCollideYCallback(IntObject.SolidAction)
    name: RegisterCollideYCallback
  - name: (
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterCollideYCallback(IntObject.SolidAction)
    name: RegisterCollideYCallback
  - name: (
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterCollideYCallback(IntObject.SolidAction)
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterCollideYCallback(IntObject.SolidAction)
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.UnregisterCollideYCallback(IntObject.SolidAction)
  name: UnregisterCollideYCallback(SolidAction)
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.UnregisterCollideYCallback(IntObject.SolidAction)
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.UnregisterCollideYCallback(IntObject.SolidAction)
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).UnregisterCollideYCallback(IntObject.SolidAction)
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).UnregisterCollideYCallback(IntObject.SolidAction)
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterCollideYCallback(IntObject.SolidAction)
    name: UnregisterCollideYCallback
  - name: (
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterCollideYCallback(IntObject.SolidAction)
    name: UnregisterCollideYCallback
  - name: (
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterOverlapActorCallback(IntObject.ActorAction)
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterOverlapActorCallback(IntObject.ActorAction)
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.RegisterOverlapActorCallback(IntObject.ActorAction)
  name: RegisterOverlapActorCallback(ActorAction)
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.RegisterOverlapActorCallback(IntObject.ActorAction)
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.RegisterOverlapActorCallback(IntObject.ActorAction)
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).RegisterOverlapActorCallback(IntObject.ActorAction)
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).RegisterOverlapActorCallback(IntObject.ActorAction)
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterOverlapActorCallback(IntObject.ActorAction)
    name: RegisterOverlapActorCallback
  - name: (
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterOverlapActorCallback(IntObject.ActorAction)
    name: RegisterOverlapActorCallback
  - name: (
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterOverlapActorCallback(IntObject.ActorAction)
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterOverlapActorCallback(IntObject.ActorAction)
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.UnregisterOverlapActorCallback(IntObject.ActorAction)
  name: UnregisterOverlapActorCallback(ActorAction)
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.UnregisterOverlapActorCallback(IntObject.ActorAction)
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.UnregisterOverlapActorCallback(IntObject.ActorAction)
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).UnregisterOverlapActorCallback(IntObject.ActorAction)
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).UnregisterOverlapActorCallback(IntObject.ActorAction)
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterOverlapActorCallback(IntObject.ActorAction)
    name: UnregisterOverlapActorCallback
  - name: (
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterOverlapActorCallback(IntObject.ActorAction)
    name: UnregisterOverlapActorCallback
  - name: (
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterOverlapTriggerCallback(IntObject.TriggerAction)
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterOverlapTriggerCallback(IntObject.TriggerAction)
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.RegisterOverlapTriggerCallback(IntObject.TriggerAction)
  name: RegisterOverlapTriggerCallback(TriggerAction)
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.RegisterOverlapTriggerCallback(IntObject.TriggerAction)
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.RegisterOverlapTriggerCallback(IntObject.TriggerAction)
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).RegisterOverlapTriggerCallback(IntObject.TriggerAction)
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).RegisterOverlapTriggerCallback(IntObject.TriggerAction)
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterOverlapTriggerCallback(IntObject.TriggerAction)
    name: RegisterOverlapTriggerCallback
  - name: (
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.RegisterOverlapTriggerCallback(IntObject.TriggerAction)
    name: RegisterOverlapTriggerCallback
  - name: (
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
  name: UnregisterOverlapTriggerCallback(TriggerAction)
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
    name: UnregisterOverlapTriggerCallback
  - name: (
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
    name: UnregisterOverlapTriggerCallback
  - name: (
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetCollideXCallback
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetCollideXCallback
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.GetCollideXCallback
  name: GetCollideXCallback()
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.GetCollideXCallback()
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.GetCollideXCallback()
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).GetCollideXCallback()
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).GetCollideXCallback()
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetCollideXCallback
    name: GetCollideXCallback
  - name: (
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetCollideXCallback
    name: GetCollideXCallback
  - name: (
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetCollideYCallback
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetCollideYCallback
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.GetCollideYCallback
  name: GetCollideYCallback()
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.GetCollideYCallback()
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.GetCollideYCallback()
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).GetCollideYCallback()
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).GetCollideYCallback()
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetCollideYCallback
    name: GetCollideYCallback
  - name: (
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetCollideYCallback
    name: GetCollideYCallback
  - name: (
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetOverlapActorCallback
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetOverlapActorCallback
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.GetOverlapActorCallback
  name: GetOverlapActorCallback()
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.GetOverlapActorCallback()
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.GetOverlapActorCallback()
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).GetOverlapActorCallback()
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).GetOverlapActorCallback()
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetOverlapActorCallback
    name: GetOverlapActorCallback
  - name: (
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetOverlapActorCallback
    name: GetOverlapActorCallback
  - name: (
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetOverlapTriggerCallback
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetOverlapTriggerCallback
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.GetOverlapTriggerCallback
  name: GetOverlapTriggerCallback()
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.GetOverlapTriggerCallback()
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.GetOverlapTriggerCallback()
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).GetOverlapTriggerCallback()
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).GetOverlapTriggerCallback()
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetOverlapTriggerCallback
    name: GetOverlapTriggerCallback
  - name: (
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.GetOverlapTriggerCallback
    name: GetOverlapTriggerCallback
  - name: (
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OnCollideX(IntSolid)
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OnCollideX(IntSolid)
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.OnCollideX(IntSolid)
  name: OnCollideX(IntSolid)
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.OnCollideX(IntSolid)
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.OnCollideX(IntSolid)
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).OnCollideX(IntSolid)
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).OnCollideX(IntSolid)
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OnCollideX(IntSolid)
    name: OnCollideX
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OnCollideX(IntSolid)
    name: OnCollideX
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OnCollideY(IntSolid)
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OnCollideY(IntSolid)
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.OnCollideY(IntSolid)
  name: OnCollideY(IntSolid)
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.OnCollideY(IntSolid)
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.OnCollideY(IntSolid)
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).OnCollideY(IntSolid)
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).OnCollideY(IntSolid)
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OnCollideY(IntSolid)
    name: OnCollideY
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OnCollideY(IntSolid)
    name: OnCollideY
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OnOverlapActor(IntActor)
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OnOverlapActor(IntActor)
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.OnOverlapActor(IntActor)
  name: OnOverlapActor(IntActor)
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.OnOverlapActor(IntActor)
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.OnOverlapActor(IntActor)
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).OnOverlapActor(IntActor)
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).OnOverlapActor(IntActor)
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OnOverlapActor(IntActor)
    name: OnOverlapActor
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OnOverlapActor(IntActor)
    name: OnOverlapActor
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
- uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OnOverlapTrigger(IntTrigger)
  commentId: M:Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OnOverlapTrigger(IntTrigger)
  parent: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}
  definition: Global.EnemyMovementController`2.OnOverlapTrigger(IntTrigger)
  name: OnOverlapTrigger(IntTrigger)
  nameWithType: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.OnOverlapTrigger(IntTrigger)
  fullName: EnemyMovementController<WalkMovementProperties, WalkMovementController.WalkingMovementState>.OnOverlapTrigger(IntTrigger)
  nameWithType.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).OnOverlapTrigger(IntTrigger)
  fullName.vb: EnemyMovementController(Of WalkMovementProperties, WalkMovementController.WalkingMovementState).OnOverlapTrigger(IntTrigger)
  spec.csharp:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OnOverlapTrigger(IntTrigger)
    name: OnOverlapTrigger
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController{WalkMovementProperties,WalkMovementController.WalkingMovementState}.OnOverlapTrigger(IntTrigger)
    name: OnOverlapTrigger
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.EnemyMovementController`2
  commentId: T:Global.EnemyMovementController`2
  name: EnemyMovementController<T, U>
  nameWithType: EnemyMovementController<T, U>
  fullName: EnemyMovementController<T, U>
  nameWithType.vb: EnemyMovementController(Of T, U)
  fullName.vb: EnemyMovementController(Of T, U)
  name.vb: EnemyMovementController(Of T, U)
  spec.csharp:
  - uid: Global.EnemyMovementController`2
    name: EnemyMovementController
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: '>'
  spec.vb:
  - uid: Global.EnemyMovementController`2
    name: EnemyMovementController
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: U
  - name: )
- uid: Global.EnemyMovementController`2.MovementProperties
  commentId: F:Global.EnemyMovementController`2.MovementProperties
  name: MovementProperties
  nameWithType: EnemyMovementController<T, U>.MovementProperties
  fullName: EnemyMovementController<T, U>.MovementProperties
  nameWithType.vb: EnemyMovementController(Of T, U).MovementProperties
  fullName.vb: EnemyMovementController(Of T, U).MovementProperties
- uid: Global.EnemyMovementController`2.Enemy
  commentId: F:Global.EnemyMovementController`2.Enemy
  name: Enemy
  nameWithType: EnemyMovementController<T, U>.Enemy
  fullName: EnemyMovementController<T, U>.Enemy
  nameWithType.vb: EnemyMovementController(Of T, U).Enemy
  fullName.vb: EnemyMovementController(Of T, U).Enemy
- uid: Global.EnemyMovementController`2.osm
  commentId: F:Global.EnemyMovementController`2.osm
  name: osm
  nameWithType: EnemyMovementController<T, U>.osm
  fullName: EnemyMovementController<T, U>.osm
  nameWithType.vb: EnemyMovementController(Of T, U).osm
  fullName.vb: EnemyMovementController(Of T, U).osm
- uid: Global.EnemyMovementController`2.CollideX
  commentId: F:Global.EnemyMovementController`2.CollideX
  name: CollideX
  nameWithType: EnemyMovementController<T, U>.CollideX
  fullName: EnemyMovementController<T, U>.CollideX
  nameWithType.vb: EnemyMovementController(Of T, U).CollideX
  fullName.vb: EnemyMovementController(Of T, U).CollideX
- uid: Global.EnemyMovementController`2.CollideY
  commentId: F:Global.EnemyMovementController`2.CollideY
  name: CollideY
  nameWithType: EnemyMovementController<T, U>.CollideY
  fullName: EnemyMovementController<T, U>.CollideY
  nameWithType.vb: EnemyMovementController(Of T, U).CollideY
  fullName.vb: EnemyMovementController(Of T, U).CollideY
- uid: Global.EnemyMovementController`2.OverlapActor
  commentId: F:Global.EnemyMovementController`2.OverlapActor
  name: OverlapActor
  nameWithType: EnemyMovementController<T, U>.OverlapActor
  fullName: EnemyMovementController<T, U>.OverlapActor
  nameWithType.vb: EnemyMovementController(Of T, U).OverlapActor
  fullName.vb: EnemyMovementController(Of T, U).OverlapActor
- uid: Global.EnemyMovementController`2.OverlapTrigger
  commentId: F:Global.EnemyMovementController`2.OverlapTrigger
  name: OverlapTrigger
  nameWithType: EnemyMovementController<T, U>.OverlapTrigger
  fullName: EnemyMovementController<T, U>.OverlapTrigger
  nameWithType.vb: EnemyMovementController(Of T, U).OverlapTrigger
  fullName.vb: EnemyMovementController(Of T, U).OverlapTrigger
- uid: Global.EnemyMovementController`2.StartCharge
  commentId: F:Global.EnemyMovementController`2.StartCharge
  name: StartCharge
  nameWithType: EnemyMovementController<T, U>.StartCharge
  fullName: EnemyMovementController<T, U>.StartCharge
  nameWithType.vb: EnemyMovementController(Of T, U).StartCharge
  fullName.vb: EnemyMovementController(Of T, U).StartCharge
- uid: Global.EnemyMovementController`2.EndCharge
  commentId: F:Global.EnemyMovementController`2.EndCharge
  name: EndCharge
  nameWithType: EnemyMovementController<T, U>.EndCharge
  fullName: EnemyMovementController<T, U>.EndCharge
  nameWithType.vb: EnemyMovementController(Of T, U).EndCharge
  fullName.vb: EnemyMovementController(Of T, U).EndCharge
- uid: Global.EnemyMovementController`2.CurrentState
  commentId: P:Global.EnemyMovementController`2.CurrentState
  name: CurrentState
  nameWithType: EnemyMovementController<T, U>.CurrentState
  fullName: EnemyMovementController<T, U>.CurrentState
  nameWithType.vb: EnemyMovementController(Of T, U).CurrentState
  fullName.vb: EnemyMovementController(Of T, U).CurrentState
- uid: Global.EnemyMovementController`2.Initialize(IntEnemy)
  commentId: M:Global.EnemyMovementController`2.Initialize(IntEnemy)
  name: Initialize(IntEnemy)
  nameWithType: EnemyMovementController<T, U>.Initialize(IntEnemy)
  fullName: EnemyMovementController<T, U>.Initialize(IntEnemy)
  nameWithType.vb: EnemyMovementController(Of T, U).Initialize(IntEnemy)
  fullName.vb: EnemyMovementController(Of T, U).Initialize(IntEnemy)
  spec.csharp:
  - uid: Global.EnemyMovementController`2.Initialize(IntEnemy)
    name: Initialize
  - name: (
  - uid: Global.IntEnemy
    name: IntEnemy
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.Initialize(IntEnemy)
    name: Initialize
  - name: (
  - uid: Global.IntEnemy
    name: IntEnemy
  - name: )
- uid: Global.EnemyMovementController`2.GetTimeInState
  commentId: M:Global.EnemyMovementController`2.GetTimeInState
  name: GetTimeInState()
  nameWithType: EnemyMovementController<T, U>.GetTimeInState()
  fullName: EnemyMovementController<T, U>.GetTimeInState()
  nameWithType.vb: EnemyMovementController(Of T, U).GetTimeInState()
  fullName.vb: EnemyMovementController(Of T, U).GetTimeInState()
  spec.csharp:
  - uid: Global.EnemyMovementController`2.GetTimeInState
    name: GetTimeInState
  - name: (
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.GetTimeInState
    name: GetTimeInState
  - name: (
  - name: )
- uid: Global.EnemyMovementController`2.Update
  commentId: M:Global.EnemyMovementController`2.Update
  name: Update()
  nameWithType: EnemyMovementController<T, U>.Update()
  fullName: EnemyMovementController<T, U>.Update()
  nameWithType.vb: EnemyMovementController(Of T, U).Update()
  fullName.vb: EnemyMovementController(Of T, U).Update()
  spec.csharp:
  - uid: Global.EnemyMovementController`2.Update
    name: Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.Update
    name: Update
  - name: (
  - name: )
- uid: Global.EnemyMovementController`2.Reset
  commentId: M:Global.EnemyMovementController`2.Reset
  name: Reset()
  nameWithType: EnemyMovementController<T, U>.Reset()
  fullName: EnemyMovementController<T, U>.Reset()
  nameWithType.vb: EnemyMovementController(Of T, U).Reset()
  fullName.vb: EnemyMovementController(Of T, U).Reset()
  spec.csharp:
  - uid: Global.EnemyMovementController`2.Reset
    name: Reset
  - name: (
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.Reset
    name: Reset
  - name: (
  - name: )
- uid: Global.EnemyMovementController`2.RegisterForStateEnter(`1,OptionStateMachine{`1}.TransitionAction)
  commentId: M:Global.EnemyMovementController`2.RegisterForStateEnter(`1,OptionStateMachine{`1}.TransitionAction)
  name: RegisterForStateEnter(U, TransitionAction)
  nameWithType: EnemyMovementController<T, U>.RegisterForStateEnter(U, OptionStateMachine<U>.TransitionAction)
  fullName: EnemyMovementController<T, U>.RegisterForStateEnter(U, OptionStateMachine<U>.TransitionAction)
  nameWithType.vb: EnemyMovementController(Of T, U).RegisterForStateEnter(U, OptionStateMachine(Of U).TransitionAction)
  fullName.vb: EnemyMovementController(Of T, U).RegisterForStateEnter(U, OptionStateMachine(Of U).TransitionAction)
  spec.csharp:
  - uid: Global.EnemyMovementController`2.RegisterForStateEnter(`1,OptionStateMachine{`1}.TransitionAction)
    name: RegisterForStateEnter
  - name: (
  - name: U
  - name: ','
  - name: " "
  - uid: Global.OptionStateMachine{`1}.TransitionAction
    name: TransitionAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.RegisterForStateEnter(`1,OptionStateMachine{`1}.TransitionAction)
    name: RegisterForStateEnter
  - name: (
  - name: U
  - name: ','
  - name: " "
  - uid: Global.OptionStateMachine{`1}.TransitionAction
    name: TransitionAction
  - name: )
- uid: Global.EnemyMovementController`2.UnregisterForStateEnter(`1,OptionStateMachine{`1}.TransitionAction)
  commentId: M:Global.EnemyMovementController`2.UnregisterForStateEnter(`1,OptionStateMachine{`1}.TransitionAction)
  name: UnregisterForStateEnter(U, TransitionAction)
  nameWithType: EnemyMovementController<T, U>.UnregisterForStateEnter(U, OptionStateMachine<U>.TransitionAction)
  fullName: EnemyMovementController<T, U>.UnregisterForStateEnter(U, OptionStateMachine<U>.TransitionAction)
  nameWithType.vb: EnemyMovementController(Of T, U).UnregisterForStateEnter(U, OptionStateMachine(Of U).TransitionAction)
  fullName.vb: EnemyMovementController(Of T, U).UnregisterForStateEnter(U, OptionStateMachine(Of U).TransitionAction)
  spec.csharp:
  - uid: Global.EnemyMovementController`2.UnregisterForStateEnter(`1,OptionStateMachine{`1}.TransitionAction)
    name: UnregisterForStateEnter
  - name: (
  - name: U
  - name: ','
  - name: " "
  - uid: Global.OptionStateMachine{`1}.TransitionAction
    name: TransitionAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.UnregisterForStateEnter(`1,OptionStateMachine{`1}.TransitionAction)
    name: UnregisterForStateEnter
  - name: (
  - name: U
  - name: ','
  - name: " "
  - uid: Global.OptionStateMachine{`1}.TransitionAction
    name: TransitionAction
  - name: )
- uid: Global.EnemyMovementController`2.RegisterForStateExit(`1,OptionStateMachine{`1}.TransitionAction)
  commentId: M:Global.EnemyMovementController`2.RegisterForStateExit(`1,OptionStateMachine{`1}.TransitionAction)
  name: RegisterForStateExit(U, TransitionAction)
  nameWithType: EnemyMovementController<T, U>.RegisterForStateExit(U, OptionStateMachine<U>.TransitionAction)
  fullName: EnemyMovementController<T, U>.RegisterForStateExit(U, OptionStateMachine<U>.TransitionAction)
  nameWithType.vb: EnemyMovementController(Of T, U).RegisterForStateExit(U, OptionStateMachine(Of U).TransitionAction)
  fullName.vb: EnemyMovementController(Of T, U).RegisterForStateExit(U, OptionStateMachine(Of U).TransitionAction)
  spec.csharp:
  - uid: Global.EnemyMovementController`2.RegisterForStateExit(`1,OptionStateMachine{`1}.TransitionAction)
    name: RegisterForStateExit
  - name: (
  - name: U
  - name: ','
  - name: " "
  - uid: Global.OptionStateMachine{`1}.TransitionAction
    name: TransitionAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.RegisterForStateExit(`1,OptionStateMachine{`1}.TransitionAction)
    name: RegisterForStateExit
  - name: (
  - name: U
  - name: ','
  - name: " "
  - uid: Global.OptionStateMachine{`1}.TransitionAction
    name: TransitionAction
  - name: )
- uid: Global.EnemyMovementController`2.UnregisterForStateExit(`1,OptionStateMachine{`1}.TransitionAction)
  commentId: M:Global.EnemyMovementController`2.UnregisterForStateExit(`1,OptionStateMachine{`1}.TransitionAction)
  name: UnregisterForStateExit(U, TransitionAction)
  nameWithType: EnemyMovementController<T, U>.UnregisterForStateExit(U, OptionStateMachine<U>.TransitionAction)
  fullName: EnemyMovementController<T, U>.UnregisterForStateExit(U, OptionStateMachine<U>.TransitionAction)
  nameWithType.vb: EnemyMovementController(Of T, U).UnregisterForStateExit(U, OptionStateMachine(Of U).TransitionAction)
  fullName.vb: EnemyMovementController(Of T, U).UnregisterForStateExit(U, OptionStateMachine(Of U).TransitionAction)
  spec.csharp:
  - uid: Global.EnemyMovementController`2.UnregisterForStateExit(`1,OptionStateMachine{`1}.TransitionAction)
    name: UnregisterForStateExit
  - name: (
  - name: U
  - name: ','
  - name: " "
  - uid: Global.OptionStateMachine{`1}.TransitionAction
    name: TransitionAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.UnregisterForStateExit(`1,OptionStateMachine{`1}.TransitionAction)
    name: UnregisterForStateExit
  - name: (
  - name: U
  - name: ','
  - name: " "
  - uid: Global.OptionStateMachine{`1}.TransitionAction
    name: TransitionAction
  - name: )
- uid: Global.EnemyMovementController`2.RegisterCollideXCallback(IntObject.SolidAction)
  commentId: M:Global.EnemyMovementController`2.RegisterCollideXCallback(IntObject.SolidAction)
  name: RegisterCollideXCallback(SolidAction)
  nameWithType: EnemyMovementController<T, U>.RegisterCollideXCallback(IntObject.SolidAction)
  fullName: EnemyMovementController<T, U>.RegisterCollideXCallback(IntObject.SolidAction)
  nameWithType.vb: EnemyMovementController(Of T, U).RegisterCollideXCallback(IntObject.SolidAction)
  fullName.vb: EnemyMovementController(Of T, U).RegisterCollideXCallback(IntObject.SolidAction)
  spec.csharp:
  - uid: Global.EnemyMovementController`2.RegisterCollideXCallback(IntObject.SolidAction)
    name: RegisterCollideXCallback
  - name: (
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.RegisterCollideXCallback(IntObject.SolidAction)
    name: RegisterCollideXCallback
  - name: (
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
- uid: Global.EnemyMovementController`2.UnregisterCollideXCallback(IntObject.SolidAction)
  commentId: M:Global.EnemyMovementController`2.UnregisterCollideXCallback(IntObject.SolidAction)
  name: UnregisterCollideXCallback(SolidAction)
  nameWithType: EnemyMovementController<T, U>.UnregisterCollideXCallback(IntObject.SolidAction)
  fullName: EnemyMovementController<T, U>.UnregisterCollideXCallback(IntObject.SolidAction)
  nameWithType.vb: EnemyMovementController(Of T, U).UnregisterCollideXCallback(IntObject.SolidAction)
  fullName.vb: EnemyMovementController(Of T, U).UnregisterCollideXCallback(IntObject.SolidAction)
  spec.csharp:
  - uid: Global.EnemyMovementController`2.UnregisterCollideXCallback(IntObject.SolidAction)
    name: UnregisterCollideXCallback
  - name: (
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.UnregisterCollideXCallback(IntObject.SolidAction)
    name: UnregisterCollideXCallback
  - name: (
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
- uid: Global.EnemyMovementController`2.RegisterCollideYCallback(IntObject.SolidAction)
  commentId: M:Global.EnemyMovementController`2.RegisterCollideYCallback(IntObject.SolidAction)
  name: RegisterCollideYCallback(SolidAction)
  nameWithType: EnemyMovementController<T, U>.RegisterCollideYCallback(IntObject.SolidAction)
  fullName: EnemyMovementController<T, U>.RegisterCollideYCallback(IntObject.SolidAction)
  nameWithType.vb: EnemyMovementController(Of T, U).RegisterCollideYCallback(IntObject.SolidAction)
  fullName.vb: EnemyMovementController(Of T, U).RegisterCollideYCallback(IntObject.SolidAction)
  spec.csharp:
  - uid: Global.EnemyMovementController`2.RegisterCollideYCallback(IntObject.SolidAction)
    name: RegisterCollideYCallback
  - name: (
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.RegisterCollideYCallback(IntObject.SolidAction)
    name: RegisterCollideYCallback
  - name: (
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
- uid: Global.EnemyMovementController`2.UnregisterCollideYCallback(IntObject.SolidAction)
  commentId: M:Global.EnemyMovementController`2.UnregisterCollideYCallback(IntObject.SolidAction)
  name: UnregisterCollideYCallback(SolidAction)
  nameWithType: EnemyMovementController<T, U>.UnregisterCollideYCallback(IntObject.SolidAction)
  fullName: EnemyMovementController<T, U>.UnregisterCollideYCallback(IntObject.SolidAction)
  nameWithType.vb: EnemyMovementController(Of T, U).UnregisterCollideYCallback(IntObject.SolidAction)
  fullName.vb: EnemyMovementController(Of T, U).UnregisterCollideYCallback(IntObject.SolidAction)
  spec.csharp:
  - uid: Global.EnemyMovementController`2.UnregisterCollideYCallback(IntObject.SolidAction)
    name: UnregisterCollideYCallback
  - name: (
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.UnregisterCollideYCallback(IntObject.SolidAction)
    name: UnregisterCollideYCallback
  - name: (
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
- uid: Global.EnemyMovementController`2.RegisterOverlapActorCallback(IntObject.ActorAction)
  commentId: M:Global.EnemyMovementController`2.RegisterOverlapActorCallback(IntObject.ActorAction)
  name: RegisterOverlapActorCallback(ActorAction)
  nameWithType: EnemyMovementController<T, U>.RegisterOverlapActorCallback(IntObject.ActorAction)
  fullName: EnemyMovementController<T, U>.RegisterOverlapActorCallback(IntObject.ActorAction)
  nameWithType.vb: EnemyMovementController(Of T, U).RegisterOverlapActorCallback(IntObject.ActorAction)
  fullName.vb: EnemyMovementController(Of T, U).RegisterOverlapActorCallback(IntObject.ActorAction)
  spec.csharp:
  - uid: Global.EnemyMovementController`2.RegisterOverlapActorCallback(IntObject.ActorAction)
    name: RegisterOverlapActorCallback
  - name: (
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.RegisterOverlapActorCallback(IntObject.ActorAction)
    name: RegisterOverlapActorCallback
  - name: (
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: )
- uid: Global.EnemyMovementController`2.UnregisterOverlapActorCallback(IntObject.ActorAction)
  commentId: M:Global.EnemyMovementController`2.UnregisterOverlapActorCallback(IntObject.ActorAction)
  name: UnregisterOverlapActorCallback(ActorAction)
  nameWithType: EnemyMovementController<T, U>.UnregisterOverlapActorCallback(IntObject.ActorAction)
  fullName: EnemyMovementController<T, U>.UnregisterOverlapActorCallback(IntObject.ActorAction)
  nameWithType.vb: EnemyMovementController(Of T, U).UnregisterOverlapActorCallback(IntObject.ActorAction)
  fullName.vb: EnemyMovementController(Of T, U).UnregisterOverlapActorCallback(IntObject.ActorAction)
  spec.csharp:
  - uid: Global.EnemyMovementController`2.UnregisterOverlapActorCallback(IntObject.ActorAction)
    name: UnregisterOverlapActorCallback
  - name: (
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.UnregisterOverlapActorCallback(IntObject.ActorAction)
    name: UnregisterOverlapActorCallback
  - name: (
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: )
- uid: Global.EnemyMovementController`2.RegisterOverlapTriggerCallback(IntObject.TriggerAction)
  commentId: M:Global.EnemyMovementController`2.RegisterOverlapTriggerCallback(IntObject.TriggerAction)
  name: RegisterOverlapTriggerCallback(TriggerAction)
  nameWithType: EnemyMovementController<T, U>.RegisterOverlapTriggerCallback(IntObject.TriggerAction)
  fullName: EnemyMovementController<T, U>.RegisterOverlapTriggerCallback(IntObject.TriggerAction)
  nameWithType.vb: EnemyMovementController(Of T, U).RegisterOverlapTriggerCallback(IntObject.TriggerAction)
  fullName.vb: EnemyMovementController(Of T, U).RegisterOverlapTriggerCallback(IntObject.TriggerAction)
  spec.csharp:
  - uid: Global.EnemyMovementController`2.RegisterOverlapTriggerCallback(IntObject.TriggerAction)
    name: RegisterOverlapTriggerCallback
  - name: (
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.RegisterOverlapTriggerCallback(IntObject.TriggerAction)
    name: RegisterOverlapTriggerCallback
  - name: (
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.EnemyMovementController`2.UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
  commentId: M:Global.EnemyMovementController`2.UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
  name: UnregisterOverlapTriggerCallback(TriggerAction)
  nameWithType: EnemyMovementController<T, U>.UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
  fullName: EnemyMovementController<T, U>.UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
  nameWithType.vb: EnemyMovementController(Of T, U).UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
  fullName.vb: EnemyMovementController(Of T, U).UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
  spec.csharp:
  - uid: Global.EnemyMovementController`2.UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
    name: UnregisterOverlapTriggerCallback
  - name: (
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
    name: UnregisterOverlapTriggerCallback
  - name: (
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.EnemyMovementController`2.GetCollideXCallback
  commentId: M:Global.EnemyMovementController`2.GetCollideXCallback
  name: GetCollideXCallback()
  nameWithType: EnemyMovementController<T, U>.GetCollideXCallback()
  fullName: EnemyMovementController<T, U>.GetCollideXCallback()
  nameWithType.vb: EnemyMovementController(Of T, U).GetCollideXCallback()
  fullName.vb: EnemyMovementController(Of T, U).GetCollideXCallback()
  spec.csharp:
  - uid: Global.EnemyMovementController`2.GetCollideXCallback
    name: GetCollideXCallback
  - name: (
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.GetCollideXCallback
    name: GetCollideXCallback
  - name: (
  - name: )
- uid: Global.EnemyMovementController`2.GetCollideYCallback
  commentId: M:Global.EnemyMovementController`2.GetCollideYCallback
  name: GetCollideYCallback()
  nameWithType: EnemyMovementController<T, U>.GetCollideYCallback()
  fullName: EnemyMovementController<T, U>.GetCollideYCallback()
  nameWithType.vb: EnemyMovementController(Of T, U).GetCollideYCallback()
  fullName.vb: EnemyMovementController(Of T, U).GetCollideYCallback()
  spec.csharp:
  - uid: Global.EnemyMovementController`2.GetCollideYCallback
    name: GetCollideYCallback
  - name: (
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.GetCollideYCallback
    name: GetCollideYCallback
  - name: (
  - name: )
- uid: Global.EnemyMovementController`2.GetOverlapActorCallback
  commentId: M:Global.EnemyMovementController`2.GetOverlapActorCallback
  name: GetOverlapActorCallback()
  nameWithType: EnemyMovementController<T, U>.GetOverlapActorCallback()
  fullName: EnemyMovementController<T, U>.GetOverlapActorCallback()
  nameWithType.vb: EnemyMovementController(Of T, U).GetOverlapActorCallback()
  fullName.vb: EnemyMovementController(Of T, U).GetOverlapActorCallback()
  spec.csharp:
  - uid: Global.EnemyMovementController`2.GetOverlapActorCallback
    name: GetOverlapActorCallback
  - name: (
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.GetOverlapActorCallback
    name: GetOverlapActorCallback
  - name: (
  - name: )
- uid: Global.EnemyMovementController`2.GetOverlapTriggerCallback
  commentId: M:Global.EnemyMovementController`2.GetOverlapTriggerCallback
  name: GetOverlapTriggerCallback()
  nameWithType: EnemyMovementController<T, U>.GetOverlapTriggerCallback()
  fullName: EnemyMovementController<T, U>.GetOverlapTriggerCallback()
  nameWithType.vb: EnemyMovementController(Of T, U).GetOverlapTriggerCallback()
  fullName.vb: EnemyMovementController(Of T, U).GetOverlapTriggerCallback()
  spec.csharp:
  - uid: Global.EnemyMovementController`2.GetOverlapTriggerCallback
    name: GetOverlapTriggerCallback
  - name: (
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.GetOverlapTriggerCallback
    name: GetOverlapTriggerCallback
  - name: (
  - name: )
- uid: Global.EnemyMovementController`2.OnCollideX(IntSolid)
  commentId: M:Global.EnemyMovementController`2.OnCollideX(IntSolid)
  name: OnCollideX(IntSolid)
  nameWithType: EnemyMovementController<T, U>.OnCollideX(IntSolid)
  fullName: EnemyMovementController<T, U>.OnCollideX(IntSolid)
  nameWithType.vb: EnemyMovementController(Of T, U).OnCollideX(IntSolid)
  fullName.vb: EnemyMovementController(Of T, U).OnCollideX(IntSolid)
  spec.csharp:
  - uid: Global.EnemyMovementController`2.OnCollideX(IntSolid)
    name: OnCollideX
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.OnCollideX(IntSolid)
    name: OnCollideX
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.EnemyMovementController`2.OnCollideY(IntSolid)
  commentId: M:Global.EnemyMovementController`2.OnCollideY(IntSolid)
  name: OnCollideY(IntSolid)
  nameWithType: EnemyMovementController<T, U>.OnCollideY(IntSolid)
  fullName: EnemyMovementController<T, U>.OnCollideY(IntSolid)
  nameWithType.vb: EnemyMovementController(Of T, U).OnCollideY(IntSolid)
  fullName.vb: EnemyMovementController(Of T, U).OnCollideY(IntSolid)
  spec.csharp:
  - uid: Global.EnemyMovementController`2.OnCollideY(IntSolid)
    name: OnCollideY
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.OnCollideY(IntSolid)
    name: OnCollideY
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.EnemyMovementController`2.OnOverlapActor(IntActor)
  commentId: M:Global.EnemyMovementController`2.OnOverlapActor(IntActor)
  name: OnOverlapActor(IntActor)
  nameWithType: EnemyMovementController<T, U>.OnOverlapActor(IntActor)
  fullName: EnemyMovementController<T, U>.OnOverlapActor(IntActor)
  nameWithType.vb: EnemyMovementController(Of T, U).OnOverlapActor(IntActor)
  fullName.vb: EnemyMovementController(Of T, U).OnOverlapActor(IntActor)
  spec.csharp:
  - uid: Global.EnemyMovementController`2.OnOverlapActor(IntActor)
    name: OnOverlapActor
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.OnOverlapActor(IntActor)
    name: OnOverlapActor
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
- uid: Global.EnemyMovementController`2.OnOverlapTrigger(IntTrigger)
  commentId: M:Global.EnemyMovementController`2.OnOverlapTrigger(IntTrigger)
  name: OnOverlapTrigger(IntTrigger)
  nameWithType: EnemyMovementController<T, U>.OnOverlapTrigger(IntTrigger)
  fullName: EnemyMovementController<T, U>.OnOverlapTrigger(IntTrigger)
  nameWithType.vb: EnemyMovementController(Of T, U).OnOverlapTrigger(IntTrigger)
  fullName.vb: EnemyMovementController(Of T, U).OnOverlapTrigger(IntTrigger)
  spec.csharp:
  - uid: Global.EnemyMovementController`2.OnOverlapTrigger(IntTrigger)
    name: OnOverlapTrigger
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
  spec.vb:
  - uid: Global.EnemyMovementController`2.OnOverlapTrigger(IntTrigger)
    name: OnOverlapTrigger
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.WalkMovementController.Initialize*
  commentId: Overload:Global.WalkMovementController.Initialize
  name: Initialize
  nameWithType: WalkMovementController.Initialize
  fullName: WalkMovementController.Initialize
- uid: Global.IntEnemy
  commentId: T:Global.IntEnemy
  name: IntEnemy
  nameWithType: IntEnemy
  fullName: IntEnemy
- uid: Global.WalkMovementController.Update*
  commentId: Overload:Global.WalkMovementController.Update
  name: Update
  nameWithType: WalkMovementController.Update
  fullName: WalkMovementController.Update
- uid: Global.WalkMovementController.Idle*
  commentId: Overload:Global.WalkMovementController.Idle
  name: Idle
  nameWithType: WalkMovementController.Idle
  fullName: WalkMovementController.Idle
- uid: Global.WalkMovementController.Patrol*
  commentId: Overload:Global.WalkMovementController.Patrol
  name: Patrol
  nameWithType: WalkMovementController.Patrol
  fullName: WalkMovementController.Patrol
- uid: Global.WalkMovementController.Move*
  commentId: Overload:Global.WalkMovementController.Move
  name: Move
  nameWithType: WalkMovementController.Move
  fullName: WalkMovementController.Move
- uid: Global.WalkMovementController.GoTo*
  commentId: Overload:Global.WalkMovementController.GoTo
  name: GoTo
  nameWithType: WalkMovementController.GoTo
  fullName: WalkMovementController.GoTo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.WalkMovementController.Charge*
  commentId: Overload:Global.WalkMovementController.Charge
  name: Charge
  nameWithType: WalkMovementController.Charge
  fullName: WalkMovementController.Charge
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.WalkMovementController.RegisterEdgeXCallback*
  commentId: Overload:Global.WalkMovementController.RegisterEdgeXCallback
  name: RegisterEdgeXCallback
  nameWithType: WalkMovementController.RegisterEdgeXCallback
  fullName: WalkMovementController.RegisterEdgeXCallback
- uid: Global.IntObject.Action
  commentId: T:Global.IntObject.Action
  name: IntObject.Action
  nameWithType: IntObject.Action
  fullName: IntObject.Action
  spec.csharp:
  - uid: Global.IntObject
    name: IntObject
  - name: .
  - uid: Global.IntObject.Action
    name: Action
  spec.vb:
  - uid: Global.IntObject
    name: IntObject
  - name: .
  - uid: Global.IntObject.Action
    name: Action
- uid: Global.WalkMovementController.UnregisterEdgeXCallback*
  commentId: Overload:Global.WalkMovementController.UnregisterEdgeXCallback
  name: UnregisterEdgeXCallback
  nameWithType: WalkMovementController.UnregisterEdgeXCallback
  fullName: WalkMovementController.UnregisterEdgeXCallback
- uid: Global.WalkMovementController.GetEdgeXCallback*
  commentId: Overload:Global.WalkMovementController.GetEdgeXCallback
  name: GetEdgeXCallback
  nameWithType: WalkMovementController.GetEdgeXCallback
  fullName: WalkMovementController.GetEdgeXCallback
- uid: Global.WalkMovementController.RegisterJumpCallback*
  commentId: Overload:Global.WalkMovementController.RegisterJumpCallback
  name: RegisterJumpCallback
  nameWithType: WalkMovementController.RegisterJumpCallback
  fullName: WalkMovementController.RegisterJumpCallback
- uid: Global.WalkMovementController.UnregisterJumpCallback*
  commentId: Overload:Global.WalkMovementController.UnregisterJumpCallback
  name: UnregisterJumpCallback
  nameWithType: WalkMovementController.UnregisterJumpCallback
  fullName: WalkMovementController.UnregisterJumpCallback
- uid: Global.WalkMovementController.GetJumpCallback*
  commentId: Overload:Global.WalkMovementController.GetJumpCallback
  name: GetJumpCallback
  nameWithType: WalkMovementController.GetJumpCallback
  fullName: WalkMovementController.GetJumpCallback
- uid: Global.WalkMovementController.RegisterOnLandCallback*
  commentId: Overload:Global.WalkMovementController.RegisterOnLandCallback
  name: RegisterOnLandCallback
  nameWithType: WalkMovementController.RegisterOnLandCallback
  fullName: WalkMovementController.RegisterOnLandCallback
- uid: Global.WalkMovementController.UnegisterOnLandCallback*
  commentId: Overload:Global.WalkMovementController.UnegisterOnLandCallback
  name: UnegisterOnLandCallback
  nameWithType: WalkMovementController.UnegisterOnLandCallback
  fullName: WalkMovementController.UnegisterOnLandCallback
