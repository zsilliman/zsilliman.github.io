### YamlMime:ManagedReference
items:
- uid: Global.BreakablePlatform
  commentId: T:Global.BreakablePlatform
  id: BreakablePlatform
  parent: Global
  children:
  - Global.BreakablePlatform.#ctor(IntColliderState,TilemapIntCollider,UnityEngine.Vector3Int)
  - Global.BreakablePlatform.Active
  - Global.BreakablePlatform.AddPlatformToTilemap
  - Global.BreakablePlatform.artTilemap
  - Global.BreakablePlatform.DebugDraw
  - Global.BreakablePlatform.functionalTilemap
  - Global.BreakablePlatform.GetTilemapIntCollider
  - Global.BreakablePlatform.Overlaps(AABBIntCollider,UnityEngine.Vector2Int)
  - Global.BreakablePlatform.RemovePlatformFromTilemap
  - Global.BreakablePlatform.ResetObject
  - Global.BreakablePlatform.state
  - Global.BreakablePlatform.tileBase
  - Global.BreakablePlatform.TileIndex
  - Global.BreakablePlatform.tilemapIntCollider
  - Global.BreakablePlatform.triggerList
  - Global.BreakablePlatform.Update(System.Single)
  langs:
  - csharp
  - vb
  name: BreakablePlatform
  nameWithType: BreakablePlatform
  fullName: BreakablePlatform
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BreakablePlatform
    path: ../Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
    startLine: 20
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class BreakablePlatform : SpecialPlatform'
    content.vb: Public Class BreakablePlatform Implements SpecialPlatform
  inheritance:
  - System.Object
  implements:
  - Global.SpecialPlatform
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.BreakablePlatform.TileIndex
  commentId: P:Global.BreakablePlatform.TileIndex
  id: TileIndex
  parent: Global.BreakablePlatform
  langs:
  - csharp
  - vb
  name: TileIndex
  nameWithType: BreakablePlatform.TileIndex
  fullName: BreakablePlatform.TileIndex
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TileIndex
    path: ../Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector3Int TileIndex { get; protected set; }
    parameters: []
    return:
      type: UnityEngine.Vector3Int
    content.vb: Public Property TileIndex As Vector3Int
  overload: Global.BreakablePlatform.TileIndex*
- uid: Global.BreakablePlatform.tileBase
  commentId: F:Global.BreakablePlatform.tileBase
  id: tileBase
  parent: Global.BreakablePlatform
  langs:
  - csharp
  - vb
  name: tileBase
  nameWithType: BreakablePlatform.tileBase
  fullName: BreakablePlatform.tileBase
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: tileBase
    path: ../Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected CrumblingPlatform.TileBasePair tileBase
    return:
      type: Global.CrumblingPlatform.TileBasePair
    content.vb: Protected tileBase As CrumblingPlatform.TileBasePair
- uid: Global.BreakablePlatform.state
  commentId: F:Global.BreakablePlatform.state
  id: state
  parent: Global.BreakablePlatform
  langs:
  - csharp
  - vb
  name: state
  nameWithType: BreakablePlatform.state
  fullName: BreakablePlatform.state
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: state
    path: ../Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntColliderState state
    return:
      type: Global.IntColliderState
    content.vb: Protected state As IntColliderState
- uid: Global.BreakablePlatform.tilemapIntCollider
  commentId: F:Global.BreakablePlatform.tilemapIntCollider
  id: tilemapIntCollider
  parent: Global.BreakablePlatform
  langs:
  - csharp
  - vb
  name: tilemapIntCollider
  nameWithType: BreakablePlatform.tilemapIntCollider
  fullName: BreakablePlatform.tilemapIntCollider
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: tilemapIntCollider
    path: ../Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected TilemapIntCollider tilemapIntCollider
    return:
      type: Global.TilemapIntCollider
    content.vb: Protected tilemapIntCollider As TilemapIntCollider
- uid: Global.BreakablePlatform.functionalTilemap
  commentId: F:Global.BreakablePlatform.functionalTilemap
  id: functionalTilemap
  parent: Global.BreakablePlatform
  langs:
  - csharp
  - vb
  name: functionalTilemap
  nameWithType: BreakablePlatform.functionalTilemap
  fullName: BreakablePlatform.functionalTilemap
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: functionalTilemap
    path: ../Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
    startLine: 26
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Tilemap functionalTilemap
    return:
      type: UnityEngine.Tilemaps.Tilemap
    content.vb: Protected functionalTilemap As Tilemap
- uid: Global.BreakablePlatform.artTilemap
  commentId: F:Global.BreakablePlatform.artTilemap
  id: artTilemap
  parent: Global.BreakablePlatform
  langs:
  - csharp
  - vb
  name: artTilemap
  nameWithType: BreakablePlatform.artTilemap
  fullName: BreakablePlatform.artTilemap
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: artTilemap
    path: ../Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
    startLine: 26
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Tilemap artTilemap
    return:
      type: UnityEngine.Tilemaps.Tilemap
    content.vb: Protected artTilemap As Tilemap
- uid: Global.BreakablePlatform.triggerList
  commentId: F:Global.BreakablePlatform.triggerList
  id: triggerList
  parent: Global.BreakablePlatform
  langs:
  - csharp
  - vb
  name: triggerList
  nameWithType: BreakablePlatform.triggerList
  fullName: BreakablePlatform.triggerList
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: triggerList
    path: ../Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected List<IntTrigger> triggerList
    return:
      type: System.Collections.Generic.List{IntTrigger}
    content.vb: Protected triggerList As List(Of IntTrigger)
- uid: Global.BreakablePlatform.Active
  commentId: P:Global.BreakablePlatform.Active
  id: Active
  parent: Global.BreakablePlatform
  langs:
  - csharp
  - vb
  name: Active
  nameWithType: BreakablePlatform.Active
  fullName: BreakablePlatform.Active
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Active
    path: ../Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool Active { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Active As Boolean
  overload: Global.BreakablePlatform.Active*
- uid: Global.BreakablePlatform.#ctor(IntColliderState,TilemapIntCollider,UnityEngine.Vector3Int)
  commentId: M:Global.BreakablePlatform.#ctor(IntColliderState,TilemapIntCollider,UnityEngine.Vector3Int)
  id: '#ctor(IntColliderState,TilemapIntCollider,UnityEngine.Vector3Int)'
  parent: Global.BreakablePlatform
  langs:
  - csharp
  - vb
  name: BreakablePlatform(IntColliderState, TilemapIntCollider, Vector3Int)
  nameWithType: BreakablePlatform.BreakablePlatform(IntColliderState, TilemapIntCollider, Vector3Int)
  fullName: BreakablePlatform.BreakablePlatform(IntColliderState, TilemapIntCollider, UnityEngine.Vector3Int)
  type: Constructor
  source:
    remote:
      path: Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: .ctor
    path: ../Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
    startLine: 31
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public BreakablePlatform(IntColliderState state, TilemapIntCollider tilemapIntcollider, Vector3Int tileIndex)
    parameters:
    - id: state
      type: Global.IntColliderState
    - id: tilemapIntcollider
      type: Global.TilemapIntCollider
    - id: tileIndex
      type: UnityEngine.Vector3Int
    content.vb: Public Sub New(state As IntColliderState, tilemapIntcollider As TilemapIntCollider, tileIndex As Vector3Int)
  overload: Global.BreakablePlatform.#ctor*
  nameWithType.vb: BreakablePlatform.New(IntColliderState, TilemapIntCollider, Vector3Int)
  fullName.vb: BreakablePlatform.New(IntColliderState, TilemapIntCollider, UnityEngine.Vector3Int)
  name.vb: New(IntColliderState, TilemapIntCollider, Vector3Int)
- uid: Global.BreakablePlatform.RemovePlatformFromTilemap
  commentId: M:Global.BreakablePlatform.RemovePlatformFromTilemap
  id: RemovePlatformFromTilemap
  parent: Global.BreakablePlatform
  langs:
  - csharp
  - vb
  name: RemovePlatformFromTilemap()
  nameWithType: BreakablePlatform.RemovePlatformFromTilemap()
  fullName: BreakablePlatform.RemovePlatformFromTilemap()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RemovePlatformFromTilemap
    path: ../Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
    startLine: 45
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void RemovePlatformFromTilemap()
    content.vb: Public Sub RemovePlatformFromTilemap()
  overload: Global.BreakablePlatform.RemovePlatformFromTilemap*
- uid: Global.BreakablePlatform.AddPlatformToTilemap
  commentId: M:Global.BreakablePlatform.AddPlatformToTilemap
  id: AddPlatformToTilemap
  parent: Global.BreakablePlatform
  langs:
  - csharp
  - vb
  name: AddPlatformToTilemap()
  nameWithType: BreakablePlatform.AddPlatformToTilemap()
  fullName: BreakablePlatform.AddPlatformToTilemap()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AddPlatformToTilemap
    path: ../Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
    startLine: 55
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void AddPlatformToTilemap()
    content.vb: Public Sub AddPlatformToTilemap()
  overload: Global.BreakablePlatform.AddPlatformToTilemap*
- uid: Global.BreakablePlatform.DebugDraw
  commentId: M:Global.BreakablePlatform.DebugDraw
  id: DebugDraw
  parent: Global.BreakablePlatform
  langs:
  - csharp
  - vb
  name: DebugDraw()
  nameWithType: BreakablePlatform.DebugDraw()
  fullName: BreakablePlatform.DebugDraw()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DebugDraw
    path: ../Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
    startLine: 89
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void DebugDraw()
    content.vb: Public Sub DebugDraw()
  overload: Global.BreakablePlatform.DebugDraw*
- uid: Global.BreakablePlatform.GetTilemapIntCollider
  commentId: M:Global.BreakablePlatform.GetTilemapIntCollider
  id: GetTilemapIntCollider
  parent: Global.BreakablePlatform
  langs:
  - csharp
  - vb
  name: GetTilemapIntCollider()
  nameWithType: BreakablePlatform.GetTilemapIntCollider()
  fullName: BreakablePlatform.GetTilemapIntCollider()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetTilemapIntCollider
    path: ../Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
    startLine: 94
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public TilemapIntCollider GetTilemapIntCollider()
    return:
      type: Global.TilemapIntCollider
    content.vb: Public Function GetTilemapIntCollider() As TilemapIntCollider
  overload: Global.BreakablePlatform.GetTilemapIntCollider*
- uid: Global.BreakablePlatform.Overlaps(AABBIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.BreakablePlatform.Overlaps(AABBIntCollider,UnityEngine.Vector2Int)
  id: Overlaps(AABBIntCollider,UnityEngine.Vector2Int)
  parent: Global.BreakablePlatform
  langs:
  - csharp
  - vb
  name: Overlaps(AABBIntCollider, Vector2Int)
  nameWithType: BreakablePlatform.Overlaps(AABBIntCollider, Vector2Int)
  fullName: BreakablePlatform.Overlaps(AABBIntCollider, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Overlaps
    path: ../Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
    startLine: 99
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool Overlaps(AABBIntCollider aabb, Vector2Int dPos)
    parameters:
    - id: aabb
      type: Global.AABBIntCollider
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: System.Boolean
    content.vb: Public Function Overlaps(aabb As AABBIntCollider, dPos As Vector2Int) As Boolean
  overload: Global.BreakablePlatform.Overlaps*
  implements:
  - Global.SpecialPlatform.Overlaps(AABBIntCollider,UnityEngine.Vector2Int)
- uid: Global.BreakablePlatform.Update(System.Single)
  commentId: M:Global.BreakablePlatform.Update(System.Single)
  id: Update(System.Single)
  parent: Global.BreakablePlatform
  langs:
  - csharp
  - vb
  name: Update(float)
  nameWithType: BreakablePlatform.Update(float)
  fullName: BreakablePlatform.Update(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Update
    path: ../Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
    startLine: 119
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Update(float deltaTime)
    parameters:
    - id: deltaTime
      type: System.Single
    content.vb: Public Sub Update(deltaTime As Single)
  overload: Global.BreakablePlatform.Update*
  implements:
  - Global.SpecialPlatform.Update(System.Single)
  nameWithType.vb: BreakablePlatform.Update(Single)
  fullName.vb: BreakablePlatform.Update(Single)
  name.vb: Update(Single)
- uid: Global.BreakablePlatform.ResetObject
  commentId: M:Global.BreakablePlatform.ResetObject
  id: ResetObject
  parent: Global.BreakablePlatform
  langs:
  - csharp
  - vb
  name: ResetObject()
  nameWithType: BreakablePlatform.ResetObject()
  fullName: BreakablePlatform.ResetObject()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResetObject
    path: ../Assets/Objects & Components/World/Platforms/BreakablePlatforms/BreakablePlatform.cs
    startLine: 144
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void ResetObject()
    content.vb: Public Sub ResetObject()
  overload: Global.BreakablePlatform.ResetObject*
  implements:
  - Global.SpecialPlatform.ResetObject
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.SpecialPlatform
  commentId: T:Global.SpecialPlatform
  name: SpecialPlatform
  nameWithType: SpecialPlatform
  fullName: SpecialPlatform
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.BreakablePlatform.TileIndex*
  commentId: Overload:Global.BreakablePlatform.TileIndex
  name: TileIndex
  nameWithType: BreakablePlatform.TileIndex
  fullName: BreakablePlatform.TileIndex
- uid: UnityEngine.Vector3Int
  commentId: T:UnityEngine.Vector3Int
  parent: UnityEngine
  isExternal: true
  name: Vector3Int
  nameWithType: Vector3Int
  fullName: UnityEngine.Vector3Int
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.CrumblingPlatform.TileBasePair
  commentId: T:Global.CrumblingPlatform.TileBasePair
  name: CrumblingPlatform.TileBasePair
  nameWithType: CrumblingPlatform.TileBasePair
  fullName: CrumblingPlatform.TileBasePair
  spec.csharp:
  - uid: Global.CrumblingPlatform
    name: CrumblingPlatform
  - name: .
  - uid: Global.CrumblingPlatform.TileBasePair
    name: TileBasePair
  spec.vb:
  - uid: Global.CrumblingPlatform
    name: CrumblingPlatform
  - name: .
  - uid: Global.CrumblingPlatform.TileBasePair
    name: TileBasePair
- uid: Global.IntColliderState
  commentId: T:Global.IntColliderState
  name: IntColliderState
  nameWithType: IntColliderState
  fullName: IntColliderState
- uid: Global.TilemapIntCollider
  commentId: T:Global.TilemapIntCollider
  name: TilemapIntCollider
  nameWithType: TilemapIntCollider
  fullName: TilemapIntCollider
- uid: UnityEngine.Tilemaps.Tilemap
  commentId: T:UnityEngine.Tilemaps.Tilemap
  parent: UnityEngine.Tilemaps
  isExternal: true
  name: Tilemap
  nameWithType: Tilemap
  fullName: UnityEngine.Tilemaps.Tilemap
- uid: UnityEngine.Tilemaps
  commentId: N:UnityEngine.Tilemaps
  isExternal: true
  name: UnityEngine.Tilemaps
  nameWithType: UnityEngine.Tilemaps
  fullName: UnityEngine.Tilemaps
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Tilemaps
    name: Tilemaps
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Tilemaps
    name: Tilemaps
    isExternal: true
- uid: System.Collections.Generic.List{IntTrigger}
  commentId: T:System.Collections.Generic.List{IntTrigger}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IntTrigger>
  nameWithType: List<IntTrigger>
  fullName: System.Collections.Generic.List<IntTrigger>
  nameWithType.vb: List(Of IntTrigger)
  fullName.vb: System.Collections.Generic.List(Of IntTrigger)
  name.vb: List(Of IntTrigger)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: Global.BreakablePlatform.Active*
  commentId: Overload:Global.BreakablePlatform.Active
  name: Active
  nameWithType: BreakablePlatform.Active
  fullName: BreakablePlatform.Active
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.BreakablePlatform.#ctor*
  commentId: Overload:Global.BreakablePlatform.#ctor
  name: BreakablePlatform
  nameWithType: BreakablePlatform.BreakablePlatform
  fullName: BreakablePlatform.BreakablePlatform
  nameWithType.vb: BreakablePlatform.New
  fullName.vb: BreakablePlatform.New
  name.vb: New
- uid: Global.BreakablePlatform.RemovePlatformFromTilemap*
  commentId: Overload:Global.BreakablePlatform.RemovePlatformFromTilemap
  name: RemovePlatformFromTilemap
  nameWithType: BreakablePlatform.RemovePlatformFromTilemap
  fullName: BreakablePlatform.RemovePlatformFromTilemap
- uid: Global.BreakablePlatform.AddPlatformToTilemap*
  commentId: Overload:Global.BreakablePlatform.AddPlatformToTilemap
  name: AddPlatformToTilemap
  nameWithType: BreakablePlatform.AddPlatformToTilemap
  fullName: BreakablePlatform.AddPlatformToTilemap
- uid: Global.BreakablePlatform.DebugDraw*
  commentId: Overload:Global.BreakablePlatform.DebugDraw
  name: DebugDraw
  nameWithType: BreakablePlatform.DebugDraw
  fullName: BreakablePlatform.DebugDraw
- uid: Global.BreakablePlatform.GetTilemapIntCollider*
  commentId: Overload:Global.BreakablePlatform.GetTilemapIntCollider
  name: GetTilemapIntCollider
  nameWithType: BreakablePlatform.GetTilemapIntCollider
  fullName: BreakablePlatform.GetTilemapIntCollider
- uid: Global.BreakablePlatform.Overlaps*
  commentId: Overload:Global.BreakablePlatform.Overlaps
  name: Overlaps
  nameWithType: BreakablePlatform.Overlaps
  fullName: BreakablePlatform.Overlaps
- uid: Global.SpecialPlatform.Overlaps(AABBIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.SpecialPlatform.Overlaps(AABBIntCollider,UnityEngine.Vector2Int)
  parent: Global.SpecialPlatform
  isExternal: true
  name: Overlaps(AABBIntCollider, Vector2Int)
  nameWithType: SpecialPlatform.Overlaps(AABBIntCollider, Vector2Int)
  fullName: SpecialPlatform.Overlaps(AABBIntCollider, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.SpecialPlatform.Overlaps(AABBIntCollider,UnityEngine.Vector2Int)
    name: Overlaps
  - name: (
  - uid: Global.AABBIntCollider
    name: AABBIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.SpecialPlatform.Overlaps(AABBIntCollider,UnityEngine.Vector2Int)
    name: Overlaps
  - name: (
  - uid: Global.AABBIntCollider
    name: AABBIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.AABBIntCollider
  commentId: T:Global.AABBIntCollider
  name: AABBIntCollider
  nameWithType: AABBIntCollider
  fullName: AABBIntCollider
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: Global.BreakablePlatform.Update*
  commentId: Overload:Global.BreakablePlatform.Update
  name: Update
  nameWithType: BreakablePlatform.Update
  fullName: BreakablePlatform.Update
- uid: Global.SpecialPlatform.Update(System.Single)
  commentId: M:Global.SpecialPlatform.Update(System.Single)
  parent: Global.SpecialPlatform
  isExternal: true
  name: Update(float)
  nameWithType: SpecialPlatform.Update(float)
  fullName: SpecialPlatform.Update(float)
  nameWithType.vb: SpecialPlatform.Update(Single)
  fullName.vb: SpecialPlatform.Update(Single)
  name.vb: Update(Single)
  spec.csharp:
  - uid: Global.SpecialPlatform.Update(System.Single)
    name: Update
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.SpecialPlatform.Update(System.Single)
    name: Update
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.BreakablePlatform.ResetObject*
  commentId: Overload:Global.BreakablePlatform.ResetObject
  name: ResetObject
  nameWithType: BreakablePlatform.ResetObject
  fullName: BreakablePlatform.ResetObject
- uid: Global.SpecialPlatform.ResetObject
  commentId: M:Global.SpecialPlatform.ResetObject
  parent: Global.SpecialPlatform
  name: ResetObject()
  nameWithType: SpecialPlatform.ResetObject()
  fullName: SpecialPlatform.ResetObject()
  spec.csharp:
  - uid: Global.SpecialPlatform.ResetObject
    name: ResetObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.SpecialPlatform.ResetObject
    name: ResetObject
  - name: (
  - name: )
