### YamlMime:ManagedReference
items:
- uid: Global.SimpleAttack
  commentId: T:Global.SimpleAttack
  id: SimpleAttack
  parent: Global
  children:
  - Global.SimpleAttack.OnSimpleAttackHitbox(IntActor)
  - Global.SimpleAttack.player
  - Global.SimpleAttack.SimpleAttackHitBox
  langs:
  - csharp
  - vb
  name: SimpleAttack
  nameWithType: SimpleAttack
  fullName: SimpleAttack
  type: Class
  source:
    remote:
      path: Assets/SimpleAttack.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SimpleAttack
    path: ../Assets/SimpleAttack.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class SimpleAttack : MonoBehaviour'
    content.vb: Public Class SimpleAttack Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.SimpleAttack.SimpleAttackHitBox
  commentId: F:Global.SimpleAttack.SimpleAttackHitBox
  id: SimpleAttackHitBox
  parent: Global.SimpleAttack
  langs:
  - csharp
  - vb
  name: SimpleAttackHitBox
  nameWithType: SimpleAttack.SimpleAttackHitBox
  fullName: SimpleAttack.SimpleAttackHitBox
  type: Field
  source:
    remote:
      path: Assets/SimpleAttack.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SimpleAttackHitBox
    path: ../Assets/SimpleAttack.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public IntTrigger SimpleAttackHitBox
    return:
      type: Global.IntTrigger
    content.vb: Public SimpleAttackHitBox As IntTrigger
- uid: Global.SimpleAttack.player
  commentId: F:Global.SimpleAttack.player
  id: player
  parent: Global.SimpleAttack
  langs:
  - csharp
  - vb
  name: player
  nameWithType: SimpleAttack.player
  fullName: SimpleAttack.player
  type: Field
  source:
    remote:
      path: Assets/SimpleAttack.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: player
    path: ../Assets/SimpleAttack.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Player player
    return:
      type: Global.Player
    content.vb: Public player As Player
- uid: Global.SimpleAttack.OnSimpleAttackHitbox(IntActor)
  commentId: M:Global.SimpleAttack.OnSimpleAttackHitbox(IntActor)
  id: OnSimpleAttackHitbox(IntActor)
  parent: Global.SimpleAttack
  langs:
  - csharp
  - vb
  name: OnSimpleAttackHitbox(IntActor)
  nameWithType: SimpleAttack.OnSimpleAttackHitbox(IntActor)
  fullName: SimpleAttack.OnSimpleAttackHitbox(IntActor)
  type: Method
  source:
    remote:
      path: Assets/SimpleAttack.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnSimpleAttackHitbox
    path: ../Assets/SimpleAttack.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void OnSimpleAttackHitbox(IntActor actor)
    parameters:
    - id: actor
      type: Global.IntActor
    content.vb: Protected Sub OnSimpleAttackHitbox(actor As IntActor)
  overload: Global.SimpleAttack.OnSimpleAttackHitbox*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.IntTrigger
  commentId: T:Global.IntTrigger
  name: IntTrigger
  nameWithType: IntTrigger
  fullName: IntTrigger
- uid: Global.Player
  commentId: T:Global.Player
  name: Player
  nameWithType: Player
  fullName: Player
- uid: Global.SimpleAttack.OnSimpleAttackHitbox*
  commentId: Overload:Global.SimpleAttack.OnSimpleAttackHitbox
  name: OnSimpleAttackHitbox
  nameWithType: SimpleAttack.OnSimpleAttackHitbox
  fullName: SimpleAttack.OnSimpleAttackHitbox
- uid: Global.IntActor
  commentId: T:Global.IntActor
  name: IntActor
  nameWithType: IntActor
  fullName: IntActor
