### YamlMime:ManagedReference
items:
- uid: Global.Player
  commentId: T:Global.Player
  id: Player
  parent: Global
  children:
  - Global.Player.afterimage
  - Global.Player.airJumpAudio
  - Global.Player.airJumpIndicator
  - Global.Player.Animate
  - Global.Player.AttackHitstopTime
  - Global.Player.AttackTimeScale
  - Global.Player.AuraHitCount
  - Global.Player.AuraHitstopTime
  - Global.Player.breakBlockAudio
  - Global.Player.CameraTarget
  - Global.Player.CanInteract
  - Global.Player.castAuraAudio
  - Global.Player.ChangeWeaponAnimatorState(UnityEngine.Animator,System.String)
  - Global.Player.createDust
  - Global.Player.currentWeaponAnimatorState
  - Global.Player.DASH_X_DISPLACEMENT
  - Global.Player.DASH_Y_DISPLACEMENT
  - Global.Player.dashAudio
  - Global.Player.dashExhaustedIndicator
  - Global.Player.dashThroughAuraAudio
  - Global.Player.DashTrailPrefab
  - Global.Player.DoubleJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  - Global.Player.EFFECT_NOTHING
  - Global.Player.EffectAnimator
  - Global.Player.EnemyDeathHitstopTime
  - Global.Player.EnemyHitstopTime
  - Global.Player.FirstAuraDashDirection
  - Global.Player.flapWing
  - Global.Player.GetFeetOffset
  - Global.Player.GetLastMajorCheckpoint
  - Global.Player.GetLastMinorCheckpoint
  - Global.Player.GetMajorSpawnLocation
  - Global.Player.GetMinorSpawnLocation
  - Global.Player.GetObjectSaveData
  - Global.Player.GetTarget
  - Global.Player.GroundedCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  - Global.Player.HazardHitstopTime
  - Global.Player.HitStopSpeedDivisor
  - Global.Player.hurtAudio
  - Global.Player.initializeWeaponGlow
  - Global.Player.Interact
  - Global.Player.interactAudio
  - Global.Player.InvincibilityRing
  - Global.Player.INVISIBLE_CHARGED
  - Global.Player.InvulnerbilityTime
  - Global.Player.jumpAudio
  - Global.Player.JumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  - Global.Player.JumpDust
  - Global.Player.lastMajorCheckpoint
  - Global.Player.lastMinorCheckpoint
  - Global.Player.LoadObjectSaveData(Player.PlayerSaveData)
  - Global.Player.MajorSpawnLocation
  - Global.Player.MELEE_ATTACK
  - Global.Player.MELEE_CHARGED
  - Global.Player.meleeStrikeAudio
  - Global.Player.MinorSpawnLocation
  - Global.Player.OnActor(IntActor)
  - Global.Player.OnAttackCharged
  - Global.Player.OnAttackChargeUnused
  - Global.Player.OnDeath(System.Boolean)
  - Global.Player.OnDoubleJump
  - Global.Player.OnEnterWater(WaterComponent,System.Single)
  - Global.Player.OnExitWater(WaterComponent)
  - Global.Player.OnInivinsibilityEnd
  - Global.Player.OnSpike(IntSolid)
  - Global.Player.OnTriggerStart(IntTrigger)
  - Global.Player.Overlaps(IntObject,UnityEngine.Vector2Int)
  - Global.Player.PostInputUpdate
  - Global.Player.RANGED_ATTACK_LEFT
  - Global.Player.RANGED_ATTACK_RIGHT
  - Global.Player.rangedStrikeAudio
  - Global.Player.RegisterOnPlayerDeath(Player.OnPlayerDeathDelegate)
  - Global.Player.RegisterSelf
  - Global.Player.RepositionBasedOnFlip(System.Single,System.Single)
  - Global.Player.repositionGlowIdle(System.String)
  - Global.Player.ResetCollisionValueTime
  - Global.Player.ResetPlayerMovement
  - Global.Player.ResetState
  - Global.Player.Respawn(System.Boolean)
  - Global.Player.SetLastMajorCheckpoint(MajorCheckpoint)
  - Global.Player.SetLastMinorCheckpoint(MinorCheckpoint)
  - Global.Player.SetLateralInputValue(System.Single)
  - Global.Player.SetMajorSpawnLocation(UnityEngine.Vector3)
  - Global.Player.SetMinorSpawnLocation(UnityEngine.Vector3)
  - Global.Player.ShouldAttackChargeReset
  - Global.Player.showWeaponGlow
  - Global.Player.Squish(IntSolid)
  - Global.Player.Start
  - Global.Player.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  - Global.Player.TakeDamagePrefab
  - Global.Player.toggleSimpleIndicators
  - Global.Player.UnregisterOnPlayerDeath(Player.OnPlayerDeathDelegate)
  - Global.Player.updateDashIndicator
  - Global.Player.UpdateInput
  - Global.Player.updateWeaponGlow
  - Global.Player.WallJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  - Global.Player.WallSlideTrail
  - Global.Player.WeaponGlow
  - Global.Player.WeaponSwitched
  - Global.Player.wingFlapPrefab
  langs:
  - csharp
  - vb
  name: Player
  nameWithType: Player
  fullName: Player
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Player
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 6
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class Player : IntBasePlatformer, ISavableObject<IntObjectSaveData>, IEntity, ISavableObject<Player.PlayerSaveData>'
    content.vb: Public Class Player Inherits IntBasePlatformer Implements ISavableObject(Of IntObjectSaveData), IEntity, ISavableObject(Of Player.PlayerSaveData)
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - Global.IntObject
  - Global.IntActor
  - Global.IntBasePlatformer
  implements:
  - Global.ISavableObject{IntObjectSaveData}
  - Global.IEntity
  - Global.ISavableObject{Player.PlayerSaveData}
  inheritedMembers:
  - Global.IntBasePlatformer.currentState
  - Global.IntBasePlatformer.AllowWalk
  - Global.IntBasePlatformer.AllowJump
  - Global.IntBasePlatformer.AllowDoubleJump
  - Global.IntBasePlatformer.AllowDoubleJumpReset
  - Global.IntBasePlatformer.AllowSwimJumps
  - Global.IntBasePlatformer.AllowDash
  - Global.IntBasePlatformer.AllowWallJump
  - Global.IntBasePlatformer.AllowInteract
  - Global.IntBasePlatformer.AllowCastAura
  - Global.IntBasePlatformer.AllowHover
  - Global.IntBasePlatformer.WallJumpLevel
  - Global.IntBasePlatformer.MaxFallSpeed
  - Global.IntBasePlatformer.FallGravityScale
  - Global.IntBasePlatformer.LateralSpeed
  - Global.IntBasePlatformer.JumpLateral
  - Global.IntBasePlatformer.JumpHeight
  - Global.IntBasePlatformer.JumpReleaseGravityScale
  - Global.IntBasePlatformer.JumpReleaseVelocityScale
  - Global.IntBasePlatformer.DoubleJumpLateral
  - Global.IntBasePlatformer.DoubleJumpHeight
  - Global.IntBasePlatformer.DoubleJumpReleaseGravityScale
  - Global.IntBasePlatformer.DoubleJumpReleaseVelocityScale
  - Global.IntBasePlatformer.MaxSuperJumpLateralSpeed
  - Global.IntBasePlatformer.MaxSuperJumpVerticalSpeed
  - Global.IntBasePlatformer.FastDecelleration
  - Global.IntBasePlatformer.ToeHitForgivenessHeight
  - Global.IntBasePlatformer.SwimJumpInterval
  - Global.IntBasePlatformer.DoubleJumpReset
  - Global.IntBasePlatformer.WallJumpHeight
  - Global.IntBasePlatformer.WallJumpLateralDistance
  - Global.IntBasePlatformer.WallJumpLateralSpeed
  - Global.IntBasePlatformer.WallJumpDashVelocity
  - Global.IntBasePlatformer.WallJumpDashDistance
  - Global.IntBasePlatformer.MaxWallSlideSpeed
  - Global.IntBasePlatformer.WallSlideAccelerationScalar
  - Global.IntBasePlatformer.WallSlideDeccelerationScalar
  - Global.IntBasePlatformer.WallJumpRecoveryAcceleration
  - Global.IntBasePlatformer.WallJumpInputDisableDuration
  - Global.IntBasePlatformer.WeakWallJumpHeight
  - Global.IntBasePlatformer.WeakWallJumpLateralDistance
  - Global.IntBasePlatformer.WeakWallJumpLateralSpeed
  - Global.IntBasePlatformer.WeakWallJumpDashVelocity
  - Global.IntBasePlatformer.WeakWallJumpDashDistance
  - Global.IntBasePlatformer.WallJumped
  - Global.IntBasePlatformer.WallJumped_t
  - Global.IntBasePlatformer.WallJumpDirection
  - Global.IntBasePlatformer.AuraMaterial
  - Global.IntBasePlatformer.DashDistRange
  - Global.IntBasePlatformer.MaxDashHoldTime
  - Global.IntBasePlatformer.DashDecelerationTime
  - Global.IntBasePlatformer.DashOpacityBlendTime
  - Global.IntBasePlatformer.DashReloadTime
  - Global.IntBasePlatformer.DashMaxGlideTime
  - Global.IntBasePlatformer.DashMomentumDamp
  - Global.IntBasePlatformer.MaxDashHoverTime
  - Global.IntBasePlatformer.HoverTimeScale
  - Global.IntBasePlatformer.HoverTimeScaleBlendTime
  - Global.IntBasePlatformer.MaxWindInducedSpeed
  - Global.IntBasePlatformer.MaxWindInducedSpeedGrounded
  - Global.IntBasePlatformer.WindForceWhenGroundedScalar
  - Global.IntBasePlatformer.WindLateralDampeningFactor
  - Global.IntBasePlatformer.GroundedSlideDecelerationScalar
  - Global.IntBasePlatformer.AirDecelerationScalar
  - Global.IntBasePlatformer.LateralInput
  - Global.IntBasePlatformer.LateralInputRaw
  - Global.IntBasePlatformer.dampingFactor
  - Global.IntBasePlatformer.Shedding
  - Global.IntBasePlatformer.SheddingDirection
  - Global.IntBasePlatformer.InitialState
  - Global.IntBasePlatformer.IsAttacking
  - Global.IntBasePlatformer.invisibilityMaterial
  - Global.IntBasePlatformer.InvisibilityCountdown
  - Global.IntBasePlatformer.currentAnimatorState
  - Global.IntBasePlatformer.ishurt
  - Global.IntBasePlatformer.changingweapon
  - Global.IntBasePlatformer.recoveryTime
  - Global.IntBasePlatformer.weaponswitchTime
  - Global.IntBasePlatformer.minVelocityForLandCrouch
  - Global.IntBasePlatformer.landDust
  - Global.IntBasePlatformer.jumpDust
  - Global.IntBasePlatformer.walljumpDust
  - Global.IntBasePlatformer.PLAYER_IDLE
  - Global.IntBasePlatformer.PLAYER_SPRINT
  - Global.IntBasePlatformer.PLAYER_JUMPPREP
  - Global.IntBasePlatformer.PLAYER_RISE
  - Global.IntBasePlatformer.PLAYER_DOUBLEJUMP
  - Global.IntBasePlatformer.PLAYER_FALL
  - Global.IntBasePlatformer.PLAYER_LAND
  - Global.IntBasePlatformer.PLAYER_GROUNDDASH
  - Global.IntBasePlatformer.PLAYER_AIRDASH
  - Global.IntBasePlatformer.PLAYER_UPDASH
  - Global.IntBasePlatformer.PLAYER_DOWNDASH
  - Global.IntBasePlatformer.PLAYER_UPDIAGDASH
  - Global.IntBasePlatformer.PLAYER_DOWNDIAGDASH
  - Global.IntBasePlatformer.PLAYER_HURT
  - Global.IntBasePlatformer.PLAYER_SWITCHWEAPON
  - Global.IntBasePlatformer.PLAYER_DEATH
  - Global.IntBasePlatformer.PLAYER_RESPAWN
  - Global.IntBasePlatformer.PLAYER_WALLSLIDE
  - Global.IntBasePlatformer.PLAYER_WALLSLIDEPREP
  - Global.IntBasePlatformer.PLAYER_WALLJUMP
  - Global.IntBasePlatformer.PLAYER_WALLJUMPFALLTRANSITION
  - Global.IntBasePlatformer.PLAYER_WALLJUMPFALLTURNTRANSITION
  - Global.IntBasePlatformer.JumpWindowBounds
  - Global.IntBasePlatformer.DashWindowBounds
  - Global.IntBasePlatformer.WallJumpWindowBounds
  - Global.IntBasePlatformer.Stats
  - Global.IntBasePlatformer.BumpTime
  - Global.IntBasePlatformer.BumpScale
  - Global.IntBasePlatformer.MinBumpVelY
  - Global.IntBasePlatformer.MinBumpSpeedX
  - Global.IntBasePlatformer.MaxBumpSpeed
  - Global.IntBasePlatformer.Bumped
  - Global.IntBasePlatformer.Bumped_t
  - Global.IntBasePlatformer.fsm
  - Global.IntBasePlatformer.last_state
  - Global.IntBasePlatformer.Gravity
  - Global.IntBasePlatformer.JumpVelocity
  - Global.IntBasePlatformer.DoubleJumpGravity
  - Global.IntBasePlatformer.DoubleJumpVelocity
  - Global.IntBasePlatformer.WallJumpVerticalSpeed
  - Global.IntBasePlatformer.WallJumpGravity
  - Global.IntBasePlatformer.WeakWallJumpVerticalSpeed
  - Global.IntBasePlatformer.WeakWallJumpGravity
  - Global.IntBasePlatformer.IsGrounded
  - Global.IntBasePlatformer.GetWallSide
  - Global.IntBasePlatformer.IsOnWall
  - Global.IntBasePlatformer.JumpReleased
  - Global.IntBasePlatformer.velocity
  - Global.IntBasePlatformer.DashDirection
  - Global.IntBasePlatformer.DashSpeed
  - Global.IntBasePlatformer.Dash_t
  - Global.IntBasePlatformer.Dash_t_unscaled
  - Global.IntBasePlatformer.Hover_t_unscaled
  - Global.IntBasePlatformer.MinDashHoldTime
  - Global.IntBasePlatformer.DashReleasedTime
  - Global.IntBasePlatformer.TimeSinceLastDash
  - Global.IntBasePlatformer.Dashed
  - Global.IntBasePlatformer.DashReset
  - Global.IntBasePlatformer.DashReleased
  - Global.IntBasePlatformer.HoverReleased
  - Global.IntBasePlatformer.IsHovering
  - Global.IntBasePlatformer.DoubleJumped
  - Global.IntBasePlatformer.FirstAura
  - Global.IntBasePlatformer.DashGlided
  - Global.IntBasePlatformer.DashGlideCurrentTime
  - Global.IntBasePlatformer.CarryMomentum
  - Global.IntBasePlatformer.animator
  - Global.IntBasePlatformer.sprite
  - Global.IntBasePlatformer.Equipment
  - Global.IntBasePlatformer.Loadout
  - Global.IntBasePlatformer.Ability
  - Global.IntBasePlatformer.Invisible
  - Global.IntBasePlatformer.InvisibileWarning
  - Global.IntBasePlatformer.RespawnedInsidePlatform
  - Global.IntBasePlatformer.SquishGlideLimit
  - Global.IntBasePlatformer.OnTakeDamage
  - Global.IntBasePlatformer.EndRespawnState
  - Global.IntBasePlatformer.SingleJumpBinding
  - Global.IntBasePlatformer.DoubleJumpBinding
  - Global.IntBasePlatformer.WallJumpBinding
  - Global.IntBasePlatformer.DashBinding
  - Global.IntBasePlatformer.BindFunctionToWallJump(IntObject.Action)
  - Global.IntBasePlatformer.BindFunctionToDoubleJump(IntObject.Action)
  - Global.IntBasePlatformer.BindFunctionToSingleJump(IntObject.Action)
  - Global.IntBasePlatformer.BindFunctionToDash(IntObject.Action)
  - Global.IntBasePlatformer.GetFlipX
  - Global.IntBasePlatformer.GetLookDirection
  - Global.IntBasePlatformer.GetAnimator
  - Global.IntBasePlatformer.Initialize
  - Global.IntBasePlatformer.OnFirstFrame
  - Global.IntBasePlatformer.OnDrawDebugGizmos
  - Global.IntBasePlatformer.PreInputUpdate
  - Global.IntBasePlatformer.Update
  - Global.IntBasePlatformer.SetLateralInput(System.Single)
  - Global.IntBasePlatformer.SetLateralInputRawValue(System.Single)
  - Global.IntBasePlatformer.HandleWind
  - Global.IntBasePlatformer.IsWindy
  - Global.IntBasePlatformer.IsFast
  - Global.IntBasePlatformer.Bump(UnityEngine.Vector2)
  - Global.IntBasePlatformer.Bump(UnityEngine.Vector2,UnityEngine.Vector2)
  - Global.IntBasePlatformer.BumpUpdate
  - Global.IntBasePlatformer.WallJumpUpdate
  - Global.IntBasePlatformer.HitStop(System.Single,System.Single,System.Boolean)
  - Global.IntBasePlatformer.HitStopUpdate
  - Global.IntBasePlatformer.GetDashDirection
  - Global.IntBasePlatformer.CanDash
  - Global.IntBasePlatformer.CanHover
  - Global.IntBasePlatformer.InterruptHover
  - Global.IntBasePlatformer.EndDash
  - Global.IntBasePlatformer.ResetDash
  - Global.IntBasePlatformer.Dash(UnityEngine.Vector2)
  - Global.IntBasePlatformer.DashRelease
  - Global.IntBasePlatformer.HoverRelease
  - Global.IntBasePlatformer.UpdateDashDirection(UnityEngine.Vector2)
  - Global.IntBasePlatformer.CanJump
  - Global.IntBasePlatformer.JumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  - Global.IntBasePlatformer.DoubleJumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  - Global.IntBasePlatformer.WallJumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  - Global.IntBasePlatformer.FallLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  - Global.IntBasePlatformer.Jump
  - Global.IntBasePlatformer.JumpRelease
  - Global.IntBasePlatformer.ResetDoubleJump
  - Global.IntBasePlatformer.ChargeAttack
  - Global.IntBasePlatformer.IsCharged
  - Global.IntBasePlatformer.ReleaseAttack
  - Global.IntBasePlatformer.SetInvisibility(System.Boolean)
  - Global.IntBasePlatformer.SetInvisibilityWarning(System.Boolean)
  - Global.IntBasePlatformer.IsInvisible
  - Global.IntBasePlatformer.GetVelocity
  - Global.IntBasePlatformer.SetVelocity(UnityEngine.Vector2)
  - Global.IntBasePlatformer.GetStateMachine
  - Global.IntBasePlatformer.SpawnAura
  - Global.IntBasePlatformer.ShedSpores
  - Global.IntBasePlatformer.GetOverlappingActors
  - Global.IntBasePlatformer.GetOverlappingTriggers
  - Global.IntBasePlatformer.OnRespawnInsidePlatform(SpecialPlatform)
  - Global.IntBasePlatformer.OnCollideX(IntSolid)
  - Global.IntBasePlatformer.OnCollideY(IntSolid)
  - Global.IntActor.HurtBySpike
  - Global.IntActor.aabb
  - Global.IntActor.Left
  - Global.IntActor.Right
  - Global.IntActor.Top
  - Global.IntActor.Bottom
  - Global.IntActor.Size
  - Global.IntActor.WindInfluence
  - Global.IntActor.OnTakeDamageCallback
  - Global.IntActor.RidingSolid
  - Global.IntActor.RidingTangent
  - Global.IntActor.RidingNormal
  - Global.IntActor.IsRidingFlatSurface
  - Global.IntActor.Awake
  - Global.IntActor.ManualInit
  - Global.IntActor.GetAABBIntCollider
  - Global.IntActor.EnsureAABBIntColliderSet
  - Global.IntActor.IsRiding(IntSolid)
  - Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
  - Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
  - Global.IntActor.IsTouchingWall(IntSolid)
  - Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
  - Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  - Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  - Global.IntActor.OnTakeDamage(System.Int32)
  - Global.IntActor.ResetAuraCollisionMap
  - Global.IntActor.ResetActorCollisionMap
  - Global.IntActor.ResetCollisionMap
  - Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
  - Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
  - Global.IntActor.GetCollisionMapValue(IntObject)
  - Global.IntActor.OnTriggerEnd(IntTrigger)
  - Global.IntActor.CheckGrounded
  - Global.IntActor.GroundActor
  - Global.IntActor.CheckOnWall
  - Global.IntActor.DropDownOneWay
  - Global.IntActor.activeWater
  - Global.IntActor.GetSubmergedPercentage
  - Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
  - Global.IntActor.IsInWater
  - Global.IntActor.ApplyWind(UnityEngine.Vector2)
  - Global.IntActor.RemoveWind
  - Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
  - Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
  - Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
  - Global.IntActor.NotifyObjectKilled(IntObject)
  - Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.CheckActorInteractableCollisions
  - Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
  - Global.IntObject.section
  - Global.IntObject.state
  - Global.IntObject.int_collider
  - Global.IntObject.remainder
  - Global.IntObject.StartPosition
  - Global.IntObject.AttachedToPlayer
  - Global.IntObject.IgnoredObjectsMap
  - Global.IntObject.KilledCallback
  - Global.IntObject.Position
  - Global.IntObject.GetStartWorldPosition
  - Global.IntObject.collider_type
  - Global.IntObject.MarkedForKill
  - Global.IntObject.ObjectID
  - Global.IntObject.DestroyOnKill
  - Global.IntObject.RespawnBehavior
  - Global.IntObject.Status
  - Global.IntObject.InitialStatus
  - Global.IntObject.SaveObject
  - Global.IntObject.IsInSetPiece
  - Global.IntObject.Init
  - Global.IntObject.FindIntColliderState(System.Int32)
  - Global.IntObject.GetLocalGameStates
  - Global.IntObject.UnregisterSelf
  - Global.IntObject.RegisterKilledCallback(IntObject.Action)
  - Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  - Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  - Global.IntObject.SetStatus(ObjectStatus)
  - Global.IntObject.OnKill(System.Boolean)
  - Global.IntObject.Kill
  - Global.IntObject.Kill(System.Boolean)
  - Global.IntObject.Kill(System.Single)
  - Global.IntObject.Kill(System.Boolean,System.Single)
  - Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  - Global.IntObject.SleepObject
  - Global.IntObject.OptimizeSleepObject
  - Global.IntObject.WakeObject
  - Global.IntObject.EnableObject
  - Global.IntObject.DisableObject
  - Global.IntObject.RespawnObject
  - Global.IntObject.ResetObject
  - Global.IntObject.RecursiveSetCollidable(System.Boolean)
  - Global.IntObject.SetColliderState(IntColliderState)
  - Global.IntObject.Translate(UnityEngine.Vector2Int)
  - Global.IntObject.Translate(UnityEngine.Vector2)
  - Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  - Global.IntObject.SetCollidable(System.Boolean)
  - Global.IntObject.GetCollidable
  - Global.IntObject.GetCollider
  - Global.IntObject.GetColliderState
  - Global.IntObject.Overlaps(IntObject)
  - Global.IntObject.RayCast(IntRay)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  - Global.IntObject.OnDrawGizmos
  - Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  - Global.IntObject.OnPostLoadSaveFile
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.Player.MinorSpawnLocation
  commentId: F:Global.Player.MinorSpawnLocation
  id: MinorSpawnLocation
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: MinorSpawnLocation
  nameWithType: Player.MinorSpawnLocation
  fullName: Player.MinorSpawnLocation
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MinorSpawnLocation
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Vector3 MinorSpawnLocation
    return:
      type: UnityEngine.Vector3
    content.vb: Protected MinorSpawnLocation As Vector3
- uid: Global.Player.MajorSpawnLocation
  commentId: F:Global.Player.MajorSpawnLocation
  id: MajorSpawnLocation
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: MajorSpawnLocation
  nameWithType: Player.MajorSpawnLocation
  fullName: Player.MajorSpawnLocation
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MajorSpawnLocation
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Vector3 MajorSpawnLocation
    return:
      type: UnityEngine.Vector3
    content.vb: Protected MajorSpawnLocation As Vector3
- uid: Global.Player.EffectAnimator
  commentId: P:Global.Player.EffectAnimator
  id: EffectAnimator
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: EffectAnimator
  nameWithType: Player.EffectAnimator
  fullName: Player.EffectAnimator
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EffectAnimator
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Animator EffectAnimator { get; protected set; }
    parameters: []
    return:
      type: UnityEngine.Animator
    content.vb: Public Property EffectAnimator As Animator
  overload: Global.Player.EffectAnimator*
- uid: Global.Player.InvulnerbilityTime
  commentId: F:Global.Player.InvulnerbilityTime
  id: InvulnerbilityTime
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: InvulnerbilityTime
  nameWithType: Player.InvulnerbilityTime
  fullName: Player.InvulnerbilityTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: InvulnerbilityTime
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Gameplay Properties")]

      public float InvulnerbilityTime
    return:
      type: System.Single
    content.vb: >-
      <Header("Gameplay Properties")>

      Public InvulnerbilityTime As Single
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Gameplay Properties
- uid: Global.Player.TakeDamagePrefab
  commentId: F:Global.Player.TakeDamagePrefab
  id: TakeDamagePrefab
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: TakeDamagePrefab
  nameWithType: Player.TakeDamagePrefab
  fullName: Player.TakeDamagePrefab
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TakeDamagePrefab
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Prefab Animations")]

      public GameObject TakeDamagePrefab
    return:
      type: UnityEngine.GameObject
    content.vb: >-
      <Header("Prefab Animations")>

      Public TakeDamagePrefab As GameObject
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Prefab Animations
- uid: Global.Player.DashTrailPrefab
  commentId: F:Global.Player.DashTrailPrefab
  id: DashTrailPrefab
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: DashTrailPrefab
  nameWithType: Player.DashTrailPrefab
  fullName: Player.DashTrailPrefab
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DashTrailPrefab
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 20
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public GameObject DashTrailPrefab
    return:
      type: UnityEngine.GameObject
    content.vb: Public DashTrailPrefab As GameObject
- uid: Global.Player.InvincibilityRing
  commentId: F:Global.Player.InvincibilityRing
  id: InvincibilityRing
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: InvincibilityRing
  nameWithType: Player.InvincibilityRing
  fullName: Player.InvincibilityRing
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: InvincibilityRing
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 21
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public GameObject InvincibilityRing
    return:
      type: UnityEngine.GameObject
    content.vb: Public InvincibilityRing As GameObject
- uid: Global.Player.afterimage
  commentId: F:Global.Player.afterimage
  id: afterimage
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: afterimage
  nameWithType: Player.afterimage
  fullName: Player.afterimage
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: afterimage
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Afterimage afterimage
    return:
      type: Global.Afterimage
    content.vb: Public afterimage As Afterimage
- uid: Global.Player.dashExhaustedIndicator
  commentId: F:Global.Player.dashExhaustedIndicator
  id: dashExhaustedIndicator
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: dashExhaustedIndicator
  nameWithType: Player.dashExhaustedIndicator
  fullName: Player.dashExhaustedIndicator
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: dashExhaustedIndicator
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Afterimage dashExhaustedIndicator
    return:
      type: Global.Afterimage
    content.vb: Public dashExhaustedIndicator As Afterimage
- uid: Global.Player.wingFlapPrefab
  commentId: F:Global.Player.wingFlapPrefab
  id: wingFlapPrefab
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: wingFlapPrefab
  nameWithType: Player.wingFlapPrefab
  fullName: Player.wingFlapPrefab
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: wingFlapPrefab
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public GameObject wingFlapPrefab
    return:
      type: UnityEngine.GameObject
    content.vb: Public wingFlapPrefab As GameObject
- uid: Global.Player.airJumpIndicator
  commentId: F:Global.Player.airJumpIndicator
  id: airJumpIndicator
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: airJumpIndicator
  nameWithType: Player.airJumpIndicator
  fullName: Player.airJumpIndicator
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: airJumpIndicator
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public GameObject airJumpIndicator
    return:
      type: UnityEngine.GameObject
    content.vb: Public airJumpIndicator As GameObject
- uid: Global.Player.WallSlideTrail
  commentId: F:Global.Player.WallSlideTrail
  id: WallSlideTrail
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: WallSlideTrail
  nameWithType: Player.WallSlideTrail
  fullName: Player.WallSlideTrail
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WallSlideTrail
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 28
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Paticle Systems")]

      public ParticleSystem WallSlideTrail
    return:
      type: UnityEngine.ParticleSystem
    content.vb: >-
      <Header("Paticle Systems")>

      Public WallSlideTrail As ParticleSystem
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Paticle Systems
- uid: Global.Player.JumpDust
  commentId: F:Global.Player.JumpDust
  id: JumpDust
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: JumpDust
  nameWithType: Player.JumpDust
  fullName: Player.JumpDust
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: JumpDust
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public ParticleSystem JumpDust
    return:
      type: UnityEngine.ParticleSystem
    content.vb: Public JumpDust As ParticleSystem
- uid: Global.Player.WeaponGlow
  commentId: F:Global.Player.WeaponGlow
  id: WeaponGlow
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: WeaponGlow
  nameWithType: Player.WeaponGlow
  fullName: Player.WeaponGlow
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WeaponGlow
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 30
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public ParticleSystem WeaponGlow
    return:
      type: UnityEngine.ParticleSystem
    content.vb: Public WeaponGlow As ParticleSystem
- uid: Global.Player.showWeaponGlow
  commentId: F:Global.Player.showWeaponGlow
  id: showWeaponGlow
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: showWeaponGlow
  nameWithType: Player.showWeaponGlow
  fullName: Player.showWeaponGlow
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: showWeaponGlow
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 31
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool showWeaponGlow
    return:
      type: System.Boolean
    content.vb: Public showWeaponGlow As Boolean
- uid: Global.Player.jumpAudio
  commentId: F:Global.Player.jumpAudio
  id: jumpAudio
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: jumpAudio
  nameWithType: Player.jumpAudio
  fullName: Player.jumpAudio
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: jumpAudio
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 35
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Sound Effects")]

      public AudioSource jumpAudio
    return:
      type: UnityEngine.AudioSource
    content.vb: >-
      <Header("Sound Effects")>

      Public jumpAudio As AudioSource
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Sound Effects
- uid: Global.Player.dashAudio
  commentId: F:Global.Player.dashAudio
  id: dashAudio
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: dashAudio
  nameWithType: Player.dashAudio
  fullName: Player.dashAudio
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: dashAudio
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 36
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public AudioSource dashAudio
    return:
      type: UnityEngine.AudioSource
    content.vb: Public dashAudio As AudioSource
- uid: Global.Player.dashThroughAuraAudio
  commentId: F:Global.Player.dashThroughAuraAudio
  id: dashThroughAuraAudio
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: dashThroughAuraAudio
  nameWithType: Player.dashThroughAuraAudio
  fullName: Player.dashThroughAuraAudio
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: dashThroughAuraAudio
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 37
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public AudioSource dashThroughAuraAudio
    return:
      type: UnityEngine.AudioSource
    content.vb: Public dashThroughAuraAudio As AudioSource
- uid: Global.Player.airJumpAudio
  commentId: F:Global.Player.airJumpAudio
  id: airJumpAudio
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: airJumpAudio
  nameWithType: Player.airJumpAudio
  fullName: Player.airJumpAudio
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: airJumpAudio
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 38
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public AudioSource airJumpAudio
    return:
      type: UnityEngine.AudioSource
    content.vb: Public airJumpAudio As AudioSource
- uid: Global.Player.castAuraAudio
  commentId: F:Global.Player.castAuraAudio
  id: castAuraAudio
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: castAuraAudio
  nameWithType: Player.castAuraAudio
  fullName: Player.castAuraAudio
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: castAuraAudio
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 39
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public AudioSource castAuraAudio
    return:
      type: UnityEngine.AudioSource
    content.vb: Public castAuraAudio As AudioSource
- uid: Global.Player.meleeStrikeAudio
  commentId: F:Global.Player.meleeStrikeAudio
  id: meleeStrikeAudio
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: meleeStrikeAudio
  nameWithType: Player.meleeStrikeAudio
  fullName: Player.meleeStrikeAudio
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: meleeStrikeAudio
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 40
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public AudioSource meleeStrikeAudio
    return:
      type: UnityEngine.AudioSource
    content.vb: Public meleeStrikeAudio As AudioSource
- uid: Global.Player.rangedStrikeAudio
  commentId: F:Global.Player.rangedStrikeAudio
  id: rangedStrikeAudio
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: rangedStrikeAudio
  nameWithType: Player.rangedStrikeAudio
  fullName: Player.rangedStrikeAudio
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: rangedStrikeAudio
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 41
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public AudioSource rangedStrikeAudio
    return:
      type: UnityEngine.AudioSource
    content.vb: Public rangedStrikeAudio As AudioSource
- uid: Global.Player.hurtAudio
  commentId: F:Global.Player.hurtAudio
  id: hurtAudio
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: hurtAudio
  nameWithType: Player.hurtAudio
  fullName: Player.hurtAudio
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: hurtAudio
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 42
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public AudioSource hurtAudio
    return:
      type: UnityEngine.AudioSource
    content.vb: Public hurtAudio As AudioSource
- uid: Global.Player.breakBlockAudio
  commentId: F:Global.Player.breakBlockAudio
  id: breakBlockAudio
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: breakBlockAudio
  nameWithType: Player.breakBlockAudio
  fullName: Player.breakBlockAudio
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: breakBlockAudio
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 43
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public AudioSource breakBlockAudio
    return:
      type: UnityEngine.AudioSource
    content.vb: Public breakBlockAudio As AudioSource
- uid: Global.Player.interactAudio
  commentId: F:Global.Player.interactAudio
  id: interactAudio
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: interactAudio
  nameWithType: Player.interactAudio
  fullName: Player.interactAudio
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: interactAudio
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 44
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public AudioSource interactAudio
    return:
      type: UnityEngine.AudioSource
    content.vb: Public interactAudio As AudioSource
- uid: Global.Player.DASH_X_DISPLACEMENT
  commentId: F:Global.Player.DASH_X_DISPLACEMENT
  id: DASH_X_DISPLACEMENT
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: DASH_X_DISPLACEMENT
  nameWithType: Player.DASH_X_DISPLACEMENT
  fullName: Player.DASH_X_DISPLACEMENT
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DASH_X_DISPLACEMENT
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 47
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int DASH_X_DISPLACEMENT
    return:
      type: System.Int32
    content.vb: Public DASH_X_DISPLACEMENT As Integer
- uid: Global.Player.DASH_Y_DISPLACEMENT
  commentId: F:Global.Player.DASH_Y_DISPLACEMENT
  id: DASH_Y_DISPLACEMENT
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: DASH_Y_DISPLACEMENT
  nameWithType: Player.DASH_Y_DISPLACEMENT
  fullName: Player.DASH_Y_DISPLACEMENT
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DASH_Y_DISPLACEMENT
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 48
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int DASH_Y_DISPLACEMENT
    return:
      type: System.Int32
    content.vb: Public DASH_Y_DISPLACEMENT As Integer
- uid: Global.Player.toggleSimpleIndicators
  commentId: F:Global.Player.toggleSimpleIndicators
  id: toggleSimpleIndicators
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: toggleSimpleIndicators
  nameWithType: Player.toggleSimpleIndicators
  fullName: Player.toggleSimpleIndicators
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: toggleSimpleIndicators
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 51
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool toggleSimpleIndicators
    return:
      type: System.Boolean
    content.vb: Public toggleSimpleIndicators As Boolean
- uid: Global.Player.currentWeaponAnimatorState
  commentId: F:Global.Player.currentWeaponAnimatorState
  id: currentWeaponAnimatorState
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: currentWeaponAnimatorState
  nameWithType: Player.currentWeaponAnimatorState
  fullName: Player.currentWeaponAnimatorState
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: currentWeaponAnimatorState
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 52
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public string currentWeaponAnimatorState
    return:
      type: System.String
    content.vb: Public currentWeaponAnimatorState As String
- uid: Global.Player.EFFECT_NOTHING
  commentId: F:Global.Player.EFFECT_NOTHING
  id: EFFECT_NOTHING
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: EFFECT_NOTHING
  nameWithType: Player.EFFECT_NOTHING
  fullName: Player.EFFECT_NOTHING
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EFFECT_NOTHING
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 53
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string EFFECT_NOTHING = "Blank"
    return:
      type: System.String
    content.vb: Public Const EFFECT_NOTHING As String = "Blank"
- uid: Global.Player.MELEE_ATTACK
  commentId: F:Global.Player.MELEE_ATTACK
  id: MELEE_ATTACK
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: MELEE_ATTACK
  nameWithType: Player.MELEE_ATTACK
  fullName: Player.MELEE_ATTACK
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MELEE_ATTACK
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 54
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string MELEE_ATTACK = "Melee-Attack"
    return:
      type: System.String
    content.vb: Public Const MELEE_ATTACK As String = "Melee-Attack"
- uid: Global.Player.MELEE_CHARGED
  commentId: F:Global.Player.MELEE_CHARGED
  id: MELEE_CHARGED
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: MELEE_CHARGED
  nameWithType: Player.MELEE_CHARGED
  fullName: Player.MELEE_CHARGED
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MELEE_CHARGED
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 55
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string MELEE_CHARGED = "Melee-Charged"
    return:
      type: System.String
    content.vb: Public Const MELEE_CHARGED As String = "Melee-Charged"
- uid: Global.Player.RANGED_ATTACK_RIGHT
  commentId: F:Global.Player.RANGED_ATTACK_RIGHT
  id: RANGED_ATTACK_RIGHT
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: RANGED_ATTACK_RIGHT
  nameWithType: Player.RANGED_ATTACK_RIGHT
  fullName: Player.RANGED_ATTACK_RIGHT
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RANGED_ATTACK_RIGHT
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 56
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string RANGED_ATTACK_RIGHT = "Ranged-Attack-Right"
    return:
      type: System.String
    content.vb: Public Const RANGED_ATTACK_RIGHT As String = "Ranged-Attack-Right"
- uid: Global.Player.RANGED_ATTACK_LEFT
  commentId: F:Global.Player.RANGED_ATTACK_LEFT
  id: RANGED_ATTACK_LEFT
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: RANGED_ATTACK_LEFT
  nameWithType: Player.RANGED_ATTACK_LEFT
  fullName: Player.RANGED_ATTACK_LEFT
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RANGED_ATTACK_LEFT
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 57
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string RANGED_ATTACK_LEFT = "Ranged-Attack-Left"
    return:
      type: System.String
    content.vb: Public Const RANGED_ATTACK_LEFT As String = "Ranged-Attack-Left"
- uid: Global.Player.INVISIBLE_CHARGED
  commentId: F:Global.Player.INVISIBLE_CHARGED
  id: INVISIBLE_CHARGED
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: INVISIBLE_CHARGED
  nameWithType: Player.INVISIBLE_CHARGED
  fullName: Player.INVISIBLE_CHARGED
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: INVISIBLE_CHARGED
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 58
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string INVISIBLE_CHARGED = "Becomeinvisible"
    return:
      type: System.String
    content.vb: Public Const INVISIBLE_CHARGED As String = "Becomeinvisible"
- uid: Global.Player.FirstAuraDashDirection
  commentId: P:Global.Player.FirstAuraDashDirection
  id: FirstAuraDashDirection
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: FirstAuraDashDirection
  nameWithType: Player.FirstAuraDashDirection
  fullName: Player.FirstAuraDashDirection
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: FirstAuraDashDirection
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 64
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2 FirstAuraDashDirection { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public Property FirstAuraDashDirection As Vector2
  overload: Global.Player.FirstAuraDashDirection*
- uid: Global.Player.AuraHitCount
  commentId: F:Global.Player.AuraHitCount
  id: AuraHitCount
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: AuraHitCount
  nameWithType: Player.AuraHitCount
  fullName: Player.AuraHitCount
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AuraHitCount
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 65
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected int AuraHitCount
    return:
      type: System.Int32
    content.vb: Protected AuraHitCount As Integer
- uid: Global.Player.lastMinorCheckpoint
  commentId: F:Global.Player.lastMinorCheckpoint
  id: lastMinorCheckpoint
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: lastMinorCheckpoint
  nameWithType: Player.lastMinorCheckpoint
  fullName: Player.lastMinorCheckpoint
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: lastMinorCheckpoint
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 66
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected MinorCheckpoint lastMinorCheckpoint
    return:
      type: Global.MinorCheckpoint
    content.vb: Protected lastMinorCheckpoint As MinorCheckpoint
- uid: Global.Player.lastMajorCheckpoint
  commentId: F:Global.Player.lastMajorCheckpoint
  id: lastMajorCheckpoint
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: lastMajorCheckpoint
  nameWithType: Player.lastMajorCheckpoint
  fullName: Player.lastMajorCheckpoint
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: lastMajorCheckpoint
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 67
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected MajorCheckpoint lastMajorCheckpoint
    return:
      type: Global.MajorCheckpoint
    content.vb: Protected lastMajorCheckpoint As MajorCheckpoint
- uid: Global.Player.AuraHitstopTime
  commentId: F:Global.Player.AuraHitstopTime
  id: AuraHitstopTime
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: AuraHitstopTime
  nameWithType: Player.AuraHitstopTime
  fullName: Player.AuraHitstopTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AuraHitstopTime
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 70
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Hitstop")]

      public float AuraHitstopTime
    return:
      type: System.Single
    content.vb: >-
      <Header("Hitstop")>

      Public AuraHitstopTime As Single
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Hitstop
- uid: Global.Player.EnemyHitstopTime
  commentId: F:Global.Player.EnemyHitstopTime
  id: EnemyHitstopTime
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: EnemyHitstopTime
  nameWithType: Player.EnemyHitstopTime
  fullName: Player.EnemyHitstopTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EnemyHitstopTime
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 71
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float EnemyHitstopTime
    return:
      type: System.Single
    content.vb: Public EnemyHitstopTime As Single
- uid: Global.Player.EnemyDeathHitstopTime
  commentId: F:Global.Player.EnemyDeathHitstopTime
  id: EnemyDeathHitstopTime
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: EnemyDeathHitstopTime
  nameWithType: Player.EnemyDeathHitstopTime
  fullName: Player.EnemyDeathHitstopTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EnemyDeathHitstopTime
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 72
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float EnemyDeathHitstopTime
    return:
      type: System.Single
    content.vb: Public EnemyDeathHitstopTime As Single
- uid: Global.Player.AttackHitstopTime
  commentId: F:Global.Player.AttackHitstopTime
  id: AttackHitstopTime
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: AttackHitstopTime
  nameWithType: Player.AttackHitstopTime
  fullName: Player.AttackHitstopTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AttackHitstopTime
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 73
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float AttackHitstopTime
    return:
      type: System.Single
    content.vb: Public AttackHitstopTime As Single
- uid: Global.Player.AttackTimeScale
  commentId: F:Global.Player.AttackTimeScale
  id: AttackTimeScale
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: AttackTimeScale
  nameWithType: Player.AttackTimeScale
  fullName: Player.AttackTimeScale
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AttackTimeScale
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 74
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float AttackTimeScale
    return:
      type: System.Single
    content.vb: Public AttackTimeScale As Single
- uid: Global.Player.HazardHitstopTime
  commentId: F:Global.Player.HazardHitstopTime
  id: HazardHitstopTime
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: HazardHitstopTime
  nameWithType: Player.HazardHitstopTime
  fullName: Player.HazardHitstopTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: HazardHitstopTime
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 75
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float HazardHitstopTime
    return:
      type: System.Single
    content.vb: Public HazardHitstopTime As Single
- uid: Global.Player.HitStopSpeedDivisor
  commentId: F:Global.Player.HitStopSpeedDivisor
  id: HitStopSpeedDivisor
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: HitStopSpeedDivisor
  nameWithType: Player.HitStopSpeedDivisor
  fullName: Player.HitStopSpeedDivisor
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: HitStopSpeedDivisor
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 76
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float HitStopSpeedDivisor
    return:
      type: System.Single
    content.vb: Public HitStopSpeedDivisor As Single
- uid: Global.Player.ResetCollisionValueTime
  commentId: F:Global.Player.ResetCollisionValueTime
  id: ResetCollisionValueTime
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ResetCollisionValueTime
  nameWithType: Player.ResetCollisionValueTime
  fullName: Player.ResetCollisionValueTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResetCollisionValueTime
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 79
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Miscellaneous")]

      public float ResetCollisionValueTime
    return:
      type: System.Single
    content.vb: >-
      <Header("Miscellaneous")>

      Public ResetCollisionValueTime As Single
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Miscellaneous
- uid: Global.Player.CameraTarget
  commentId: F:Global.Player.CameraTarget
  id: CameraTarget
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: CameraTarget
  nameWithType: Player.CameraTarget
  fullName: Player.CameraTarget
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CameraTarget
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 80
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected CameraTargetController CameraTarget
    return:
      type: Global.CameraTargetController
    content.vb: Protected CameraTarget As CameraTargetController
- uid: Global.Player.Start
  commentId: M:Global.Player.Start
  id: Start
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: Player.Start()
  fullName: Player.Start()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Start
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 86
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Start()
    content.vb: Protected Sub Start()
  overload: Global.Player.Start*
- uid: Global.Player.ResetState
  commentId: M:Global.Player.ResetState
  id: ResetState
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ResetState()
  nameWithType: Player.ResetState()
  fullName: Player.ResetState()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResetState
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 102
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override void ResetState()
    content.vb: Protected Overrides Sub ResetState()
  overridden: Global.IntBasePlatformer.ResetState
  overload: Global.Player.ResetState*
- uid: Global.Player.RegisterSelf
  commentId: M:Global.Player.RegisterSelf
  id: RegisterSelf
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: RegisterSelf()
  nameWithType: Player.RegisterSelf()
  fullName: Player.RegisterSelf()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RegisterSelf
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 109
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override void RegisterSelf()
    content.vb: Protected Overrides Sub RegisterSelf()
  overridden: Global.IntObject.RegisterSelf
  overload: Global.Player.RegisterSelf*
- uid: Global.Player.GetTarget
  commentId: M:Global.Player.GetTarget
  id: GetTarget
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: GetTarget()
  nameWithType: Player.GetTarget()
  fullName: Player.GetTarget()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetTarget
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 111
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public CameraTargetController GetTarget()
    return:
      type: Global.CameraTargetController
    content.vb: Public Function GetTarget() As CameraTargetController
  overload: Global.Player.GetTarget*
- uid: Global.Player.UpdateInput
  commentId: M:Global.Player.UpdateInput
  id: UpdateInput
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: UpdateInput()
  nameWithType: Player.UpdateInput()
  fullName: Player.UpdateInput()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UpdateInput
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 119
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void UpdateInput()
    content.vb: Public Overrides Sub UpdateInput()
  overridden: Global.IntBasePlatformer.UpdateInput
  overload: Global.Player.UpdateInput*
- uid: Global.Player.ChangeWeaponAnimatorState(UnityEngine.Animator,System.String)
  commentId: M:Global.Player.ChangeWeaponAnimatorState(UnityEngine.Animator,System.String)
  id: ChangeWeaponAnimatorState(UnityEngine.Animator,System.String)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ChangeWeaponAnimatorState(Animator, string)
  nameWithType: Player.ChangeWeaponAnimatorState(Animator, string)
  fullName: Player.ChangeWeaponAnimatorState(UnityEngine.Animator, string)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ChangeWeaponAnimatorState
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 313
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void ChangeWeaponAnimatorState(Animator weaponAnimator, string newAnimatorState)
    parameters:
    - id: weaponAnimator
      type: UnityEngine.Animator
    - id: newAnimatorState
      type: System.String
    content.vb: Public Sub ChangeWeaponAnimatorState(weaponAnimator As Animator, newAnimatorState As String)
  overload: Global.Player.ChangeWeaponAnimatorState*
  nameWithType.vb: Player.ChangeWeaponAnimatorState(Animator, String)
  fullName.vb: Player.ChangeWeaponAnimatorState(UnityEngine.Animator, String)
  name.vb: ChangeWeaponAnimatorState(Animator, String)
- uid: Global.Player.PostInputUpdate
  commentId: M:Global.Player.PostInputUpdate
  id: PostInputUpdate
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: PostInputUpdate()
  nameWithType: Player.PostInputUpdate()
  fullName: Player.PostInputUpdate()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PostInputUpdate
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 325
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void PostInputUpdate()
    content.vb: Public Overrides Sub PostInputUpdate()
  overridden: Global.IntBasePlatformer.PostInputUpdate
  overload: Global.Player.PostInputUpdate*
- uid: Global.Player.Animate
  commentId: M:Global.Player.Animate
  id: Animate
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Animate()
  nameWithType: Player.Animate()
  fullName: Player.Animate()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Animate
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 331
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void Animate()
    content.vb: Public Overrides Sub Animate()
  overridden: Global.IntBasePlatformer.Animate
  overload: Global.Player.Animate*
- uid: Global.Player.CanInteract
  commentId: M:Global.Player.CanInteract
  id: CanInteract
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: CanInteract()
  nameWithType: Player.CanInteract()
  fullName: Player.CanInteract()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CanInteract
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 411
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool CanInteract()
    return:
      type: System.Boolean
    content.vb: Public Function CanInteract() As Boolean
  overload: Global.Player.CanInteract*
- uid: Global.Player.ResetPlayerMovement
  commentId: M:Global.Player.ResetPlayerMovement
  id: ResetPlayerMovement
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ResetPlayerMovement()
  nameWithType: Player.ResetPlayerMovement()
  fullName: Player.ResetPlayerMovement()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResetPlayerMovement
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 416
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void ResetPlayerMovement()
    content.vb: Public Sub ResetPlayerMovement()
  overload: Global.Player.ResetPlayerMovement*
- uid: Global.Player.Interact
  commentId: M:Global.Player.Interact
  id: Interact
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Interact()
  nameWithType: Player.Interact()
  fullName: Player.Interact()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Interact
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 434
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Interact()
    content.vb: Public Sub Interact()
  overload: Global.Player.Interact*
- uid: Global.Player.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  commentId: M:Global.Player.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  id: TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: TakeDamage(int, bool, bool, DamageType)
  nameWithType: Player.TakeDamage(int, bool, bool, DamageType)
  fullName: Player.TakeDamage(int, bool, bool, DamageType)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TakeDamage
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 450
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void TakeDamage(int amount = 1, bool force = false, bool Respawn = false, DamageType damageType = DamageType.PlayerHurt)
    parameters:
    - id: amount
      type: System.Int32
    - id: force
      type: System.Boolean
    - id: Respawn
      type: System.Boolean
    - id: damageType
      type: Global.DamageType
    content.vb: Public Overrides Sub TakeDamage(amount As Integer = 1, force As Boolean = False, Respawn As Boolean = False, damageType As DamageType = DamageType.PlayerHurt)
  overridden: Global.IntActor.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  overload: Global.Player.TakeDamage*
  nameWithType.vb: Player.TakeDamage(Integer, Boolean, Boolean, DamageType)
  fullName.vb: Player.TakeDamage(Integer, Boolean, Boolean, DamageType)
  name.vb: TakeDamage(Integer, Boolean, Boolean, DamageType)
- uid: Global.Player.JumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  commentId: M:Global.Player.JumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  id: JumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: JumpCallback(PlatformerState, PlatformerState)
  nameWithType: Player.JumpCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  fullName: Player.JumpCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: JumpCallback
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 477
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override void JumpCallback(IntBasePlatformer.PlatformerState from, IntBasePlatformer.PlatformerState to)
    parameters:
    - id: from
      type: Global.IntBasePlatformer.PlatformerState
    - id: to
      type: Global.IntBasePlatformer.PlatformerState
    content.vb: Protected Overrides Sub JumpCallback(from As IntBasePlatformer.PlatformerState, [to] As IntBasePlatformer.PlatformerState)
  overridden: Global.IntBasePlatformer.JumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  overload: Global.Player.JumpCallback*
- uid: Global.Player.DoubleJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  commentId: M:Global.Player.DoubleJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  id: DoubleJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: DoubleJumpCallback(PlatformerState, PlatformerState)
  nameWithType: Player.DoubleJumpCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  fullName: Player.DoubleJumpCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DoubleJumpCallback
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 485
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override void DoubleJumpCallback(IntBasePlatformer.PlatformerState from, IntBasePlatformer.PlatformerState to)
    parameters:
    - id: from
      type: Global.IntBasePlatformer.PlatformerState
    - id: to
      type: Global.IntBasePlatformer.PlatformerState
    content.vb: Protected Overrides Sub DoubleJumpCallback(from As IntBasePlatformer.PlatformerState, [to] As IntBasePlatformer.PlatformerState)
  overridden: Global.IntBasePlatformer.DoubleJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  overload: Global.Player.DoubleJumpCallback*
- uid: Global.Player.WallJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  commentId: M:Global.Player.WallJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  id: WallJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: WallJumpCallback(PlatformerState, PlatformerState)
  nameWithType: Player.WallJumpCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  fullName: Player.WallJumpCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WallJumpCallback
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 493
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override void WallJumpCallback(IntBasePlatformer.PlatformerState from, IntBasePlatformer.PlatformerState to)
    parameters:
    - id: from
      type: Global.IntBasePlatformer.PlatformerState
    - id: to
      type: Global.IntBasePlatformer.PlatformerState
    content.vb: Protected Overrides Sub WallJumpCallback(from As IntBasePlatformer.PlatformerState, [to] As IntBasePlatformer.PlatformerState)
  overridden: Global.IntBasePlatformer.WallJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  overload: Global.Player.WallJumpCallback*
- uid: Global.Player.GroundedCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  commentId: M:Global.Player.GroundedCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  id: GroundedCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: GroundedCallback(PlatformerState, PlatformerState)
  nameWithType: Player.GroundedCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  fullName: Player.GroundedCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GroundedCallback
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 501
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override void GroundedCallback(IntBasePlatformer.PlatformerState from, IntBasePlatformer.PlatformerState to)
    parameters:
    - id: from
      type: Global.IntBasePlatformer.PlatformerState
    - id: to
      type: Global.IntBasePlatformer.PlatformerState
    content.vb: Protected Overrides Sub GroundedCallback(from As IntBasePlatformer.PlatformerState, [to] As IntBasePlatformer.PlatformerState)
  overridden: Global.IntBasePlatformer.GroundedCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  overload: Global.Player.GroundedCallback*
- uid: Global.Player.RegisterOnPlayerDeath(Player.OnPlayerDeathDelegate)
  commentId: M:Global.Player.RegisterOnPlayerDeath(Player.OnPlayerDeathDelegate)
  id: RegisterOnPlayerDeath(Player.OnPlayerDeathDelegate)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: RegisterOnPlayerDeath(OnPlayerDeathDelegate)
  nameWithType: Player.RegisterOnPlayerDeath(Player.OnPlayerDeathDelegate)
  fullName: Player.RegisterOnPlayerDeath(Player.OnPlayerDeathDelegate)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RegisterOnPlayerDeath
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 506
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void RegisterOnPlayerDeath(Player.OnPlayerDeathDelegate callback)
    parameters:
    - id: callback
      type: Global.Player.OnPlayerDeathDelegate
    content.vb: Public Sub RegisterOnPlayerDeath(callback As Player.OnPlayerDeathDelegate)
  overload: Global.Player.RegisterOnPlayerDeath*
- uid: Global.Player.UnregisterOnPlayerDeath(Player.OnPlayerDeathDelegate)
  commentId: M:Global.Player.UnregisterOnPlayerDeath(Player.OnPlayerDeathDelegate)
  id: UnregisterOnPlayerDeath(Player.OnPlayerDeathDelegate)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: UnregisterOnPlayerDeath(OnPlayerDeathDelegate)
  nameWithType: Player.UnregisterOnPlayerDeath(Player.OnPlayerDeathDelegate)
  fullName: Player.UnregisterOnPlayerDeath(Player.OnPlayerDeathDelegate)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UnregisterOnPlayerDeath
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 511
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UnregisterOnPlayerDeath(Player.OnPlayerDeathDelegate callback)
    parameters:
    - id: callback
      type: Global.Player.OnPlayerDeathDelegate
    content.vb: Public Sub UnregisterOnPlayerDeath(callback As Player.OnPlayerDeathDelegate)
  overload: Global.Player.UnregisterOnPlayerDeath*
- uid: Global.Player.OnDeath(System.Boolean)
  commentId: M:Global.Player.OnDeath(System.Boolean)
  id: OnDeath(System.Boolean)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: OnDeath(bool)
  nameWithType: Player.OnDeath(bool)
  fullName: Player.OnDeath(bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnDeath
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 516
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnDeath(bool MajorRespawn)
    parameters:
    - id: MajorRespawn
      type: System.Boolean
    content.vb: Public Overrides Sub OnDeath(MajorRespawn As Boolean)
  overridden: Global.IntBasePlatformer.OnDeath(System.Boolean)
  overload: Global.Player.OnDeath*
  nameWithType.vb: Player.OnDeath(Boolean)
  fullName.vb: Player.OnDeath(Boolean)
  name.vb: OnDeath(Boolean)
- uid: Global.Player.GetLastMinorCheckpoint
  commentId: M:Global.Player.GetLastMinorCheckpoint
  id: GetLastMinorCheckpoint
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: GetLastMinorCheckpoint()
  nameWithType: Player.GetLastMinorCheckpoint()
  fullName: Player.GetLastMinorCheckpoint()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetLastMinorCheckpoint
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 523
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public MinorCheckpoint GetLastMinorCheckpoint()
    return:
      type: Global.MinorCheckpoint
    content.vb: Public Function GetLastMinorCheckpoint() As MinorCheckpoint
  overload: Global.Player.GetLastMinorCheckpoint*
- uid: Global.Player.GetLastMajorCheckpoint
  commentId: M:Global.Player.GetLastMajorCheckpoint
  id: GetLastMajorCheckpoint
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: GetLastMajorCheckpoint()
  nameWithType: Player.GetLastMajorCheckpoint()
  fullName: Player.GetLastMajorCheckpoint()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetLastMajorCheckpoint
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 528
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public MajorCheckpoint GetLastMajorCheckpoint()
    return:
      type: Global.MajorCheckpoint
    content.vb: Public Function GetLastMajorCheckpoint() As MajorCheckpoint
  overload: Global.Player.GetLastMajorCheckpoint*
- uid: Global.Player.SetLastMinorCheckpoint(MinorCheckpoint)
  commentId: M:Global.Player.SetLastMinorCheckpoint(MinorCheckpoint)
  id: SetLastMinorCheckpoint(MinorCheckpoint)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SetLastMinorCheckpoint(MinorCheckpoint)
  nameWithType: Player.SetLastMinorCheckpoint(MinorCheckpoint)
  fullName: Player.SetLastMinorCheckpoint(MinorCheckpoint)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetLastMinorCheckpoint
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 533
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetLastMinorCheckpoint(MinorCheckpoint checkpoint)
    parameters:
    - id: checkpoint
      type: Global.MinorCheckpoint
    content.vb: Public Sub SetLastMinorCheckpoint(checkpoint As MinorCheckpoint)
  overload: Global.Player.SetLastMinorCheckpoint*
- uid: Global.Player.SetLastMajorCheckpoint(MajorCheckpoint)
  commentId: M:Global.Player.SetLastMajorCheckpoint(MajorCheckpoint)
  id: SetLastMajorCheckpoint(MajorCheckpoint)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SetLastMajorCheckpoint(MajorCheckpoint)
  nameWithType: Player.SetLastMajorCheckpoint(MajorCheckpoint)
  fullName: Player.SetLastMajorCheckpoint(MajorCheckpoint)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetLastMajorCheckpoint
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 538
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetLastMajorCheckpoint(MajorCheckpoint checkpoint)
    parameters:
    - id: checkpoint
      type: Global.MajorCheckpoint
    content.vb: Public Sub SetLastMajorCheckpoint(checkpoint As MajorCheckpoint)
  overload: Global.Player.SetLastMajorCheckpoint*
- uid: Global.Player.Respawn(System.Boolean)
  commentId: M:Global.Player.Respawn(System.Boolean)
  id: Respawn(System.Boolean)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Respawn(bool)
  nameWithType: Player.Respawn(bool)
  fullName: Player.Respawn(bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Respawn
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 543
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void Respawn(bool major)
    parameters:
    - id: major
      type: System.Boolean
    content.vb: Public Overrides Sub Respawn(major As Boolean)
  overridden: Global.IntBasePlatformer.Respawn(System.Boolean)
  overload: Global.Player.Respawn*
  nameWithType.vb: Player.Respawn(Boolean)
  fullName.vb: Player.Respawn(Boolean)
  name.vb: Respawn(Boolean)
- uid: Global.Player.ShouldAttackChargeReset
  commentId: M:Global.Player.ShouldAttackChargeReset
  id: ShouldAttackChargeReset
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ShouldAttackChargeReset()
  nameWithType: Player.ShouldAttackChargeReset()
  fullName: Player.ShouldAttackChargeReset()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ShouldAttackChargeReset
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 581
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override bool ShouldAttackChargeReset()
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function ShouldAttackChargeReset() As Boolean
  overridden: Global.IntBasePlatformer.ShouldAttackChargeReset
  overload: Global.Player.ShouldAttackChargeReset*
- uid: Global.Player.OnAttackCharged
  commentId: M:Global.Player.OnAttackCharged
  id: OnAttackCharged
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: OnAttackCharged()
  nameWithType: Player.OnAttackCharged()
  fullName: Player.OnAttackCharged()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnAttackCharged
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 586
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override void OnAttackCharged()
    content.vb: Protected Overrides Sub OnAttackCharged()
  overridden: Global.IntBasePlatformer.OnAttackCharged
  overload: Global.Player.OnAttackCharged*
- uid: Global.Player.OnAttackChargeUnused
  commentId: M:Global.Player.OnAttackChargeUnused
  id: OnAttackChargeUnused
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: OnAttackChargeUnused()
  nameWithType: Player.OnAttackChargeUnused()
  fullName: Player.OnAttackChargeUnused()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnAttackChargeUnused
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 592
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override void OnAttackChargeUnused()
    content.vb: Protected Overrides Sub OnAttackChargeUnused()
  overridden: Global.IntBasePlatformer.OnAttackChargeUnused
  overload: Global.Player.OnAttackChargeUnused*
- uid: Global.Player.WeaponSwitched
  commentId: M:Global.Player.WeaponSwitched
  id: WeaponSwitched
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: WeaponSwitched()
  nameWithType: Player.WeaponSwitched()
  fullName: Player.WeaponSwitched()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WeaponSwitched
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 598
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void WeaponSwitched()
    content.vb: Public Sub WeaponSwitched()
  overload: Global.Player.WeaponSwitched*
- uid: Global.Player.OnTriggerStart(IntTrigger)
  commentId: M:Global.Player.OnTriggerStart(IntTrigger)
  id: OnTriggerStart(IntTrigger)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: OnTriggerStart(IntTrigger)
  nameWithType: Player.OnTriggerStart(IntTrigger)
  fullName: Player.OnTriggerStart(IntTrigger)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnTriggerStart
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 603
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnTriggerStart(IntTrigger trigger)
    parameters:
    - id: trigger
      type: Global.IntTrigger
    content.vb: Public Overrides Sub OnTriggerStart(trigger As IntTrigger)
  overridden: Global.IntActor.OnTriggerStart(IntTrigger)
  overload: Global.Player.OnTriggerStart*
- uid: Global.Player.OnInivinsibilityEnd
  commentId: M:Global.Player.OnInivinsibilityEnd
  id: OnInivinsibilityEnd
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: OnInivinsibilityEnd()
  nameWithType: Player.OnInivinsibilityEnd()
  fullName: Player.OnInivinsibilityEnd()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnInivinsibilityEnd
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 661
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void OnInivinsibilityEnd()
    content.vb: Protected Sub OnInivinsibilityEnd()
  overload: Global.Player.OnInivinsibilityEnd*
- uid: Global.Player.OnSpike(IntSolid)
  commentId: M:Global.Player.OnSpike(IntSolid)
  id: OnSpike(IntSolid)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: OnSpike(IntSolid)
  nameWithType: Player.OnSpike(IntSolid)
  fullName: Player.OnSpike(IntSolid)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnSpike
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 667
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override void OnSpike(IntSolid solid)
    parameters:
    - id: solid
      type: Global.IntSolid
    content.vb: Protected Overrides Sub OnSpike(solid As IntSolid)
  overridden: Global.IntActor.OnSpike(IntSolid)
  overload: Global.Player.OnSpike*
- uid: Global.Player.SetLateralInputValue(System.Single)
  commentId: M:Global.Player.SetLateralInputValue(System.Single)
  id: SetLateralInputValue(System.Single)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SetLateralInputValue(float)
  nameWithType: Player.SetLateralInputValue(float)
  fullName: Player.SetLateralInputValue(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetLateralInputValue
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 680
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override void SetLateralInputValue(float value)
    parameters:
    - id: value
      type: System.Single
    content.vb: Protected Overrides Sub SetLateralInputValue(value As Single)
  overridden: Global.IntBasePlatformer.SetLateralInputValue(System.Single)
  overload: Global.Player.SetLateralInputValue*
  nameWithType.vb: Player.SetLateralInputValue(Single)
  fullName.vb: Player.SetLateralInputValue(Single)
  name.vb: SetLateralInputValue(Single)
- uid: Global.Player.OnActor(IntActor)
  commentId: M:Global.Player.OnActor(IntActor)
  id: OnActor(IntActor)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: OnActor(IntActor)
  nameWithType: Player.OnActor(IntActor)
  fullName: Player.OnActor(IntActor)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnActor
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 685
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnActor(IntActor actor)
    parameters:
    - id: actor
      type: Global.IntActor
    content.vb: Public Overrides Sub OnActor(actor As IntActor)
  overridden: Global.IntActor.OnActor(IntActor)
  overload: Global.Player.OnActor*
- uid: Global.Player.GetMinorSpawnLocation
  commentId: M:Global.Player.GetMinorSpawnLocation
  id: GetMinorSpawnLocation
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: GetMinorSpawnLocation()
  nameWithType: Player.GetMinorSpawnLocation()
  fullName: Player.GetMinorSpawnLocation()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetMinorSpawnLocation
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 727
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector3 GetMinorSpawnLocation()
    return:
      type: UnityEngine.Vector3
    content.vb: Public Function GetMinorSpawnLocation() As Vector3
  overload: Global.Player.GetMinorSpawnLocation*
- uid: Global.Player.SetMinorSpawnLocation(UnityEngine.Vector3)
  commentId: M:Global.Player.SetMinorSpawnLocation(UnityEngine.Vector3)
  id: SetMinorSpawnLocation(UnityEngine.Vector3)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SetMinorSpawnLocation(Vector3)
  nameWithType: Player.SetMinorSpawnLocation(Vector3)
  fullName: Player.SetMinorSpawnLocation(UnityEngine.Vector3)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetMinorSpawnLocation
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 732
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetMinorSpawnLocation(Vector3 NewSpawn)
    parameters:
    - id: NewSpawn
      type: UnityEngine.Vector3
    content.vb: Public Sub SetMinorSpawnLocation(NewSpawn As Vector3)
  overload: Global.Player.SetMinorSpawnLocation*
- uid: Global.Player.GetMajorSpawnLocation
  commentId: M:Global.Player.GetMajorSpawnLocation
  id: GetMajorSpawnLocation
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: GetMajorSpawnLocation()
  nameWithType: Player.GetMajorSpawnLocation()
  fullName: Player.GetMajorSpawnLocation()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetMajorSpawnLocation
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 737
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector3 GetMajorSpawnLocation()
    return:
      type: UnityEngine.Vector3
    content.vb: Public Function GetMajorSpawnLocation() As Vector3
  overload: Global.Player.GetMajorSpawnLocation*
- uid: Global.Player.SetMajorSpawnLocation(UnityEngine.Vector3)
  commentId: M:Global.Player.SetMajorSpawnLocation(UnityEngine.Vector3)
  id: SetMajorSpawnLocation(UnityEngine.Vector3)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SetMajorSpawnLocation(Vector3)
  nameWithType: Player.SetMajorSpawnLocation(Vector3)
  fullName: Player.SetMajorSpawnLocation(UnityEngine.Vector3)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetMajorSpawnLocation
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 742
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetMajorSpawnLocation(Vector3 NewSpawn)
    parameters:
    - id: NewSpawn
      type: UnityEngine.Vector3
    content.vb: Public Sub SetMajorSpawnLocation(NewSpawn As Vector3)
  overload: Global.Player.SetMajorSpawnLocation*
- uid: Global.Player.GetFeetOffset
  commentId: M:Global.Player.GetFeetOffset
  id: GetFeetOffset
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: GetFeetOffset()
  nameWithType: Player.GetFeetOffset()
  fullName: Player.GetFeetOffset()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetFeetOffset
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 747
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int GetFeetOffset()
    return:
      type: System.Int32
    content.vb: Public Function GetFeetOffset() As Integer
  overload: Global.Player.GetFeetOffset*
- uid: Global.Player.Squish(IntSolid)
  commentId: M:Global.Player.Squish(IntSolid)
  id: Squish(IntSolid)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Squish(IntSolid)
  nameWithType: Player.Squish(IntSolid)
  fullName: Player.Squish(IntSolid)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Squish
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 752
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void Squish(IntSolid solid)
    parameters:
    - id: solid
      type: Global.IntSolid
    content.vb: Public Overrides Sub Squish(solid As IntSolid)
  overridden: Global.IntActor.Squish(IntSolid)
  overload: Global.Player.Squish*
- uid: Global.Player.Overlaps(IntObject,UnityEngine.Vector2Int)
  commentId: M:Global.Player.Overlaps(IntObject,UnityEngine.Vector2Int)
  id: Overlaps(IntObject,UnityEngine.Vector2Int)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Overlaps(IntObject, Vector2Int)
  nameWithType: Player.Overlaps(IntObject, Vector2Int)
  fullName: Player.Overlaps(IntObject, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Overlaps
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 758
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override bool Overlaps(IntObject other, Vector2Int dPos)
    parameters:
    - id: other
      type: Global.IntObject
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Overlaps(other As IntObject, dPos As Vector2Int) As Boolean
  overridden: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  overload: Global.Player.Overlaps*
- uid: Global.Player.createDust
  commentId: M:Global.Player.createDust
  id: createDust
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: createDust()
  nameWithType: Player.createDust()
  fullName: Player.createDust()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: createDust
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 765
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void createDust()
    content.vb: Public Sub createDust()
  overload: Global.Player.createDust*
- uid: Global.Player.flapWing
  commentId: M:Global.Player.flapWing
  id: flapWing
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: flapWing()
  nameWithType: Player.flapWing()
  fullName: Player.flapWing()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: flapWing
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 770
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void flapWing()
    content.vb: Public Sub flapWing()
  overload: Global.Player.flapWing*
- uid: Global.Player.initializeWeaponGlow
  commentId: M:Global.Player.initializeWeaponGlow
  id: initializeWeaponGlow
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: initializeWeaponGlow()
  nameWithType: Player.initializeWeaponGlow()
  fullName: Player.initializeWeaponGlow()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: initializeWeaponGlow
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 777
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void initializeWeaponGlow()
    content.vb: Public Sub initializeWeaponGlow()
  overload: Global.Player.initializeWeaponGlow*
- uid: Global.Player.updateDashIndicator
  commentId: M:Global.Player.updateDashIndicator
  id: updateDashIndicator
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: updateDashIndicator()
  nameWithType: Player.updateDashIndicator()
  fullName: Player.updateDashIndicator()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: updateDashIndicator
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 810
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void updateDashIndicator()
    content.vb: Public Sub updateDashIndicator()
  overload: Global.Player.updateDashIndicator*
- uid: Global.Player.updateWeaponGlow
  commentId: M:Global.Player.updateWeaponGlow
  id: updateWeaponGlow
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: updateWeaponGlow()
  nameWithType: Player.updateWeaponGlow()
  fullName: Player.updateWeaponGlow()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: updateWeaponGlow
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 824
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void updateWeaponGlow()
    content.vb: Public Sub updateWeaponGlow()
  overload: Global.Player.updateWeaponGlow*
- uid: Global.Player.RepositionBasedOnFlip(System.Single,System.Single)
  commentId: M:Global.Player.RepositionBasedOnFlip(System.Single,System.Single)
  id: RepositionBasedOnFlip(System.Single,System.Single)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: RepositionBasedOnFlip(float, float)
  nameWithType: Player.RepositionBasedOnFlip(float, float)
  fullName: Player.RepositionBasedOnFlip(float, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RepositionBasedOnFlip
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 891
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector3 RepositionBasedOnFlip(float x, float y)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    return:
      type: UnityEngine.Vector3
    content.vb: Public Function RepositionBasedOnFlip(x As Single, y As Single) As Vector3
  overload: Global.Player.RepositionBasedOnFlip*
  nameWithType.vb: Player.RepositionBasedOnFlip(Single, Single)
  fullName.vb: Player.RepositionBasedOnFlip(Single, Single)
  name.vb: RepositionBasedOnFlip(Single, Single)
- uid: Global.Player.repositionGlowIdle(System.String)
  commentId: M:Global.Player.repositionGlowIdle(System.String)
  id: repositionGlowIdle(System.String)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: repositionGlowIdle(string)
  nameWithType: Player.repositionGlowIdle(string)
  fullName: Player.repositionGlowIdle(string)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: repositionGlowIdle
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 902
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void repositionGlowIdle(string mode)
    parameters:
    - id: mode
      type: System.String
    content.vb: Public Sub repositionGlowIdle(mode As String)
  overload: Global.Player.repositionGlowIdle*
  nameWithType.vb: Player.repositionGlowIdle(String)
  fullName.vb: Player.repositionGlowIdle(String)
  name.vb: repositionGlowIdle(String)
- uid: Global.Player.OnDoubleJump
  commentId: M:Global.Player.OnDoubleJump
  id: OnDoubleJump
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: OnDoubleJump()
  nameWithType: Player.OnDoubleJump()
  fullName: Player.OnDoubleJump()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnDoubleJump
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 907
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void OnDoubleJump()
    content.vb: Public Sub OnDoubleJump()
  overload: Global.Player.OnDoubleJump*
- uid: Global.Player.OnEnterWater(WaterComponent,System.Single)
  commentId: M:Global.Player.OnEnterWater(WaterComponent,System.Single)
  id: OnEnterWater(WaterComponent,System.Single)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: OnEnterWater(WaterComponent, float)
  nameWithType: Player.OnEnterWater(WaterComponent, float)
  fullName: Player.OnEnterWater(WaterComponent, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnEnterWater
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 914
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnEnterWater(WaterComponent water, float dampingFactor)
    parameters:
    - id: water
      type: Global.WaterComponent
    - id: dampingFactor
      type: System.Single
    content.vb: Public Overrides Sub OnEnterWater(water As WaterComponent, dampingFactor As Single)
  overridden: Global.IntActor.OnEnterWater(WaterComponent,System.Single)
  overload: Global.Player.OnEnterWater*
  nameWithType.vb: Player.OnEnterWater(WaterComponent, Single)
  fullName.vb: Player.OnEnterWater(WaterComponent, Single)
  name.vb: OnEnterWater(WaterComponent, Single)
- uid: Global.Player.OnExitWater(WaterComponent)
  commentId: M:Global.Player.OnExitWater(WaterComponent)
  id: OnExitWater(WaterComponent)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: OnExitWater(WaterComponent)
  nameWithType: Player.OnExitWater(WaterComponent)
  fullName: Player.OnExitWater(WaterComponent)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnExitWater
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 920
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnExitWater(WaterComponent water)
    parameters:
    - id: water
      type: Global.WaterComponent
    content.vb: Public Overrides Sub OnExitWater(water As WaterComponent)
  overridden: Global.IntActor.OnExitWater(WaterComponent)
  overload: Global.Player.OnExitWater*
- uid: Global.Player.LoadObjectSaveData(Player.PlayerSaveData)
  commentId: M:Global.Player.LoadObjectSaveData(Player.PlayerSaveData)
  id: LoadObjectSaveData(Player.PlayerSaveData)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: LoadObjectSaveData(PlayerSaveData)
  nameWithType: Player.LoadObjectSaveData(Player.PlayerSaveData)
  fullName: Player.LoadObjectSaveData(Player.PlayerSaveData)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LoadObjectSaveData
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 955
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool LoadObjectSaveData(Player.PlayerSaveData data)
    parameters:
    - id: data
      type: Global.Player.PlayerSaveData
    return:
      type: System.Boolean
    content.vb: Public Function LoadObjectSaveData(data As Player.PlayerSaveData) As Boolean
  overload: Global.Player.LoadObjectSaveData*
  implements:
  - Global.ISavableObject{Player.PlayerSaveData}.LoadObjectSaveData(Player.PlayerSaveData)
- uid: Global.Player.GetObjectSaveData
  commentId: M:Global.Player.GetObjectSaveData
  id: GetObjectSaveData
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: GetObjectSaveData()
  nameWithType: Player.GetObjectSaveData()
  fullName: Player.GetObjectSaveData()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetObjectSaveData
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 982
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Player.PlayerSaveData GetObjectSaveData()
    return:
      type: Global.Player.PlayerSaveData
    content.vb: Public Function GetObjectSaveData() As Player.PlayerSaveData
  overload: Global.Player.GetObjectSaveData*
  implements:
  - Global.ISavableObject{Player.PlayerSaveData}.GetObjectSaveData
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Global.IntObject
  commentId: T:Global.IntObject
  name: IntObject
  nameWithType: IntObject
  fullName: IntObject
- uid: Global.IntActor
  commentId: T:Global.IntActor
  name: IntActor
  nameWithType: IntActor
  fullName: IntActor
- uid: Global.IntBasePlatformer
  commentId: T:Global.IntBasePlatformer
  name: IntBasePlatformer
  nameWithType: IntBasePlatformer
  fullName: IntBasePlatformer
- uid: Global.ISavableObject{IntObjectSaveData}
  commentId: T:Global.ISavableObject{IntObjectSaveData}
  definition: Global.ISavableObject`1
  name: ISavableObject<IntObjectSaveData>
  nameWithType: ISavableObject<IntObjectSaveData>
  fullName: ISavableObject<IntObjectSaveData>
  nameWithType.vb: ISavableObject(Of IntObjectSaveData)
  fullName.vb: ISavableObject(Of IntObjectSaveData)
  name.vb: ISavableObject(Of IntObjectSaveData)
  spec.csharp:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: <
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: '>'
  spec.vb:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
- uid: Global.IEntity
  commentId: T:Global.IEntity
  name: IEntity
  nameWithType: IEntity
  fullName: IEntity
- uid: Global.ISavableObject{Player.PlayerSaveData}
  commentId: T:Global.ISavableObject{Player.PlayerSaveData}
  definition: Global.ISavableObject`1
  name: ISavableObject<Player.PlayerSaveData>
  nameWithType: ISavableObject<Player.PlayerSaveData>
  fullName: ISavableObject<Player.PlayerSaveData>
  nameWithType.vb: ISavableObject(Of Player.PlayerSaveData)
  fullName.vb: ISavableObject(Of Player.PlayerSaveData)
  name.vb: ISavableObject(Of Player.PlayerSaveData)
  spec.csharp:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: <
  - uid: Global.Player
    name: Player
  - name: .
  - uid: Global.Player.PlayerSaveData
    name: PlayerSaveData
  - name: '>'
  spec.vb:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Player
    name: Player
  - name: .
  - uid: Global.Player.PlayerSaveData
    name: PlayerSaveData
  - name: )
- uid: Global.IntBasePlatformer.currentState
  commentId: P:Global.IntBasePlatformer.currentState
  parent: Global.IntBasePlatformer
  name: currentState
  nameWithType: IntBasePlatformer.currentState
  fullName: IntBasePlatformer.currentState
- uid: Global.IntBasePlatformer.AllowWalk
  commentId: F:Global.IntBasePlatformer.AllowWalk
  parent: Global.IntBasePlatformer
  name: AllowWalk
  nameWithType: IntBasePlatformer.AllowWalk
  fullName: IntBasePlatformer.AllowWalk
- uid: Global.IntBasePlatformer.AllowJump
  commentId: F:Global.IntBasePlatformer.AllowJump
  parent: Global.IntBasePlatformer
  name: AllowJump
  nameWithType: IntBasePlatformer.AllowJump
  fullName: IntBasePlatformer.AllowJump
- uid: Global.IntBasePlatformer.AllowDoubleJump
  commentId: F:Global.IntBasePlatformer.AllowDoubleJump
  parent: Global.IntBasePlatformer
  name: AllowDoubleJump
  nameWithType: IntBasePlatformer.AllowDoubleJump
  fullName: IntBasePlatformer.AllowDoubleJump
- uid: Global.IntBasePlatformer.AllowDoubleJumpReset
  commentId: F:Global.IntBasePlatformer.AllowDoubleJumpReset
  parent: Global.IntBasePlatformer
  name: AllowDoubleJumpReset
  nameWithType: IntBasePlatformer.AllowDoubleJumpReset
  fullName: IntBasePlatformer.AllowDoubleJumpReset
- uid: Global.IntBasePlatformer.AllowSwimJumps
  commentId: F:Global.IntBasePlatformer.AllowSwimJumps
  parent: Global.IntBasePlatformer
  name: AllowSwimJumps
  nameWithType: IntBasePlatformer.AllowSwimJumps
  fullName: IntBasePlatformer.AllowSwimJumps
- uid: Global.IntBasePlatformer.AllowDash
  commentId: F:Global.IntBasePlatformer.AllowDash
  parent: Global.IntBasePlatformer
  name: AllowDash
  nameWithType: IntBasePlatformer.AllowDash
  fullName: IntBasePlatformer.AllowDash
- uid: Global.IntBasePlatformer.AllowWallJump
  commentId: P:Global.IntBasePlatformer.AllowWallJump
  parent: Global.IntBasePlatformer
  name: AllowWallJump
  nameWithType: IntBasePlatformer.AllowWallJump
  fullName: IntBasePlatformer.AllowWallJump
- uid: Global.IntBasePlatformer.AllowInteract
  commentId: F:Global.IntBasePlatformer.AllowInteract
  parent: Global.IntBasePlatformer
  name: AllowInteract
  nameWithType: IntBasePlatformer.AllowInteract
  fullName: IntBasePlatformer.AllowInteract
- uid: Global.IntBasePlatformer.AllowCastAura
  commentId: F:Global.IntBasePlatformer.AllowCastAura
  parent: Global.IntBasePlatformer
  name: AllowCastAura
  nameWithType: IntBasePlatformer.AllowCastAura
  fullName: IntBasePlatformer.AllowCastAura
- uid: Global.IntBasePlatformer.AllowHover
  commentId: F:Global.IntBasePlatformer.AllowHover
  parent: Global.IntBasePlatformer
  name: AllowHover
  nameWithType: IntBasePlatformer.AllowHover
  fullName: IntBasePlatformer.AllowHover
- uid: Global.IntBasePlatformer.WallJumpLevel
  commentId: F:Global.IntBasePlatformer.WallJumpLevel
  parent: Global.IntBasePlatformer
  name: WallJumpLevel
  nameWithType: IntBasePlatformer.WallJumpLevel
  fullName: IntBasePlatformer.WallJumpLevel
- uid: Global.IntBasePlatformer.MaxFallSpeed
  commentId: F:Global.IntBasePlatformer.MaxFallSpeed
  parent: Global.IntBasePlatformer
  name: MaxFallSpeed
  nameWithType: IntBasePlatformer.MaxFallSpeed
  fullName: IntBasePlatformer.MaxFallSpeed
- uid: Global.IntBasePlatformer.FallGravityScale
  commentId: F:Global.IntBasePlatformer.FallGravityScale
  parent: Global.IntBasePlatformer
  name: FallGravityScale
  nameWithType: IntBasePlatformer.FallGravityScale
  fullName: IntBasePlatformer.FallGravityScale
- uid: Global.IntBasePlatformer.LateralSpeed
  commentId: F:Global.IntBasePlatformer.LateralSpeed
  parent: Global.IntBasePlatformer
  name: LateralSpeed
  nameWithType: IntBasePlatformer.LateralSpeed
  fullName: IntBasePlatformer.LateralSpeed
- uid: Global.IntBasePlatformer.JumpLateral
  commentId: F:Global.IntBasePlatformer.JumpLateral
  parent: Global.IntBasePlatformer
  name: JumpLateral
  nameWithType: IntBasePlatformer.JumpLateral
  fullName: IntBasePlatformer.JumpLateral
- uid: Global.IntBasePlatformer.JumpHeight
  commentId: F:Global.IntBasePlatformer.JumpHeight
  parent: Global.IntBasePlatformer
  name: JumpHeight
  nameWithType: IntBasePlatformer.JumpHeight
  fullName: IntBasePlatformer.JumpHeight
- uid: Global.IntBasePlatformer.JumpReleaseGravityScale
  commentId: F:Global.IntBasePlatformer.JumpReleaseGravityScale
  parent: Global.IntBasePlatformer
  name: JumpReleaseGravityScale
  nameWithType: IntBasePlatformer.JumpReleaseGravityScale
  fullName: IntBasePlatformer.JumpReleaseGravityScale
- uid: Global.IntBasePlatformer.JumpReleaseVelocityScale
  commentId: F:Global.IntBasePlatformer.JumpReleaseVelocityScale
  parent: Global.IntBasePlatformer
  name: JumpReleaseVelocityScale
  nameWithType: IntBasePlatformer.JumpReleaseVelocityScale
  fullName: IntBasePlatformer.JumpReleaseVelocityScale
- uid: Global.IntBasePlatformer.DoubleJumpLateral
  commentId: F:Global.IntBasePlatformer.DoubleJumpLateral
  parent: Global.IntBasePlatformer
  name: DoubleJumpLateral
  nameWithType: IntBasePlatformer.DoubleJumpLateral
  fullName: IntBasePlatformer.DoubleJumpLateral
- uid: Global.IntBasePlatformer.DoubleJumpHeight
  commentId: F:Global.IntBasePlatformer.DoubleJumpHeight
  parent: Global.IntBasePlatformer
  name: DoubleJumpHeight
  nameWithType: IntBasePlatformer.DoubleJumpHeight
  fullName: IntBasePlatformer.DoubleJumpHeight
- uid: Global.IntBasePlatformer.DoubleJumpReleaseGravityScale
  commentId: F:Global.IntBasePlatformer.DoubleJumpReleaseGravityScale
  parent: Global.IntBasePlatformer
  name: DoubleJumpReleaseGravityScale
  nameWithType: IntBasePlatformer.DoubleJumpReleaseGravityScale
  fullName: IntBasePlatformer.DoubleJumpReleaseGravityScale
- uid: Global.IntBasePlatformer.DoubleJumpReleaseVelocityScale
  commentId: F:Global.IntBasePlatformer.DoubleJumpReleaseVelocityScale
  parent: Global.IntBasePlatformer
  name: DoubleJumpReleaseVelocityScale
  nameWithType: IntBasePlatformer.DoubleJumpReleaseVelocityScale
  fullName: IntBasePlatformer.DoubleJumpReleaseVelocityScale
- uid: Global.IntBasePlatformer.MaxSuperJumpLateralSpeed
  commentId: F:Global.IntBasePlatformer.MaxSuperJumpLateralSpeed
  parent: Global.IntBasePlatformer
  name: MaxSuperJumpLateralSpeed
  nameWithType: IntBasePlatformer.MaxSuperJumpLateralSpeed
  fullName: IntBasePlatformer.MaxSuperJumpLateralSpeed
- uid: Global.IntBasePlatformer.MaxSuperJumpVerticalSpeed
  commentId: F:Global.IntBasePlatformer.MaxSuperJumpVerticalSpeed
  parent: Global.IntBasePlatformer
  name: MaxSuperJumpVerticalSpeed
  nameWithType: IntBasePlatformer.MaxSuperJumpVerticalSpeed
  fullName: IntBasePlatformer.MaxSuperJumpVerticalSpeed
- uid: Global.IntBasePlatformer.FastDecelleration
  commentId: F:Global.IntBasePlatformer.FastDecelleration
  parent: Global.IntBasePlatformer
  name: FastDecelleration
  nameWithType: IntBasePlatformer.FastDecelleration
  fullName: IntBasePlatformer.FastDecelleration
- uid: Global.IntBasePlatformer.ToeHitForgivenessHeight
  commentId: F:Global.IntBasePlatformer.ToeHitForgivenessHeight
  parent: Global.IntBasePlatformer
  name: ToeHitForgivenessHeight
  nameWithType: IntBasePlatformer.ToeHitForgivenessHeight
  fullName: IntBasePlatformer.ToeHitForgivenessHeight
- uid: Global.IntBasePlatformer.SwimJumpInterval
  commentId: F:Global.IntBasePlatformer.SwimJumpInterval
  parent: Global.IntBasePlatformer
  name: SwimJumpInterval
  nameWithType: IntBasePlatformer.SwimJumpInterval
  fullName: IntBasePlatformer.SwimJumpInterval
- uid: Global.IntBasePlatformer.DoubleJumpReset
  commentId: F:Global.IntBasePlatformer.DoubleJumpReset
  parent: Global.IntBasePlatformer
  name: DoubleJumpReset
  nameWithType: IntBasePlatformer.DoubleJumpReset
  fullName: IntBasePlatformer.DoubleJumpReset
- uid: Global.IntBasePlatformer.WallJumpHeight
  commentId: F:Global.IntBasePlatformer.WallJumpHeight
  parent: Global.IntBasePlatformer
  name: WallJumpHeight
  nameWithType: IntBasePlatformer.WallJumpHeight
  fullName: IntBasePlatformer.WallJumpHeight
- uid: Global.IntBasePlatformer.WallJumpLateralDistance
  commentId: F:Global.IntBasePlatformer.WallJumpLateralDistance
  parent: Global.IntBasePlatformer
  name: WallJumpLateralDistance
  nameWithType: IntBasePlatformer.WallJumpLateralDistance
  fullName: IntBasePlatformer.WallJumpLateralDistance
- uid: Global.IntBasePlatformer.WallJumpLateralSpeed
  commentId: F:Global.IntBasePlatformer.WallJumpLateralSpeed
  parent: Global.IntBasePlatformer
  name: WallJumpLateralSpeed
  nameWithType: IntBasePlatformer.WallJumpLateralSpeed
  fullName: IntBasePlatformer.WallJumpLateralSpeed
- uid: Global.IntBasePlatformer.WallJumpDashVelocity
  commentId: F:Global.IntBasePlatformer.WallJumpDashVelocity
  parent: Global.IntBasePlatformer
  name: WallJumpDashVelocity
  nameWithType: IntBasePlatformer.WallJumpDashVelocity
  fullName: IntBasePlatformer.WallJumpDashVelocity
- uid: Global.IntBasePlatformer.WallJumpDashDistance
  commentId: F:Global.IntBasePlatformer.WallJumpDashDistance
  parent: Global.IntBasePlatformer
  name: WallJumpDashDistance
  nameWithType: IntBasePlatformer.WallJumpDashDistance
  fullName: IntBasePlatformer.WallJumpDashDistance
- uid: Global.IntBasePlatformer.MaxWallSlideSpeed
  commentId: F:Global.IntBasePlatformer.MaxWallSlideSpeed
  parent: Global.IntBasePlatformer
  name: MaxWallSlideSpeed
  nameWithType: IntBasePlatformer.MaxWallSlideSpeed
  fullName: IntBasePlatformer.MaxWallSlideSpeed
- uid: Global.IntBasePlatformer.WallSlideAccelerationScalar
  commentId: F:Global.IntBasePlatformer.WallSlideAccelerationScalar
  parent: Global.IntBasePlatformer
  name: WallSlideAccelerationScalar
  nameWithType: IntBasePlatformer.WallSlideAccelerationScalar
  fullName: IntBasePlatformer.WallSlideAccelerationScalar
- uid: Global.IntBasePlatformer.WallSlideDeccelerationScalar
  commentId: F:Global.IntBasePlatformer.WallSlideDeccelerationScalar
  parent: Global.IntBasePlatformer
  name: WallSlideDeccelerationScalar
  nameWithType: IntBasePlatformer.WallSlideDeccelerationScalar
  fullName: IntBasePlatformer.WallSlideDeccelerationScalar
- uid: Global.IntBasePlatformer.WallJumpRecoveryAcceleration
  commentId: F:Global.IntBasePlatformer.WallJumpRecoveryAcceleration
  parent: Global.IntBasePlatformer
  name: WallJumpRecoveryAcceleration
  nameWithType: IntBasePlatformer.WallJumpRecoveryAcceleration
  fullName: IntBasePlatformer.WallJumpRecoveryAcceleration
- uid: Global.IntBasePlatformer.WallJumpInputDisableDuration
  commentId: F:Global.IntBasePlatformer.WallJumpInputDisableDuration
  parent: Global.IntBasePlatformer
  name: WallJumpInputDisableDuration
  nameWithType: IntBasePlatformer.WallJumpInputDisableDuration
  fullName: IntBasePlatformer.WallJumpInputDisableDuration
- uid: Global.IntBasePlatformer.WeakWallJumpHeight
  commentId: F:Global.IntBasePlatformer.WeakWallJumpHeight
  parent: Global.IntBasePlatformer
  name: WeakWallJumpHeight
  nameWithType: IntBasePlatformer.WeakWallJumpHeight
  fullName: IntBasePlatformer.WeakWallJumpHeight
- uid: Global.IntBasePlatformer.WeakWallJumpLateralDistance
  commentId: F:Global.IntBasePlatformer.WeakWallJumpLateralDistance
  parent: Global.IntBasePlatformer
  name: WeakWallJumpLateralDistance
  nameWithType: IntBasePlatformer.WeakWallJumpLateralDistance
  fullName: IntBasePlatformer.WeakWallJumpLateralDistance
- uid: Global.IntBasePlatformer.WeakWallJumpLateralSpeed
  commentId: F:Global.IntBasePlatformer.WeakWallJumpLateralSpeed
  parent: Global.IntBasePlatformer
  name: WeakWallJumpLateralSpeed
  nameWithType: IntBasePlatformer.WeakWallJumpLateralSpeed
  fullName: IntBasePlatformer.WeakWallJumpLateralSpeed
- uid: Global.IntBasePlatformer.WeakWallJumpDashVelocity
  commentId: F:Global.IntBasePlatformer.WeakWallJumpDashVelocity
  parent: Global.IntBasePlatformer
  name: WeakWallJumpDashVelocity
  nameWithType: IntBasePlatformer.WeakWallJumpDashVelocity
  fullName: IntBasePlatformer.WeakWallJumpDashVelocity
- uid: Global.IntBasePlatformer.WeakWallJumpDashDistance
  commentId: F:Global.IntBasePlatformer.WeakWallJumpDashDistance
  parent: Global.IntBasePlatformer
  name: WeakWallJumpDashDistance
  nameWithType: IntBasePlatformer.WeakWallJumpDashDistance
  fullName: IntBasePlatformer.WeakWallJumpDashDistance
- uid: Global.IntBasePlatformer.WallJumped
  commentId: F:Global.IntBasePlatformer.WallJumped
  parent: Global.IntBasePlatformer
  name: WallJumped
  nameWithType: IntBasePlatformer.WallJumped
  fullName: IntBasePlatformer.WallJumped
- uid: Global.IntBasePlatformer.WallJumped_t
  commentId: F:Global.IntBasePlatformer.WallJumped_t
  parent: Global.IntBasePlatformer
  name: WallJumped_t
  nameWithType: IntBasePlatformer.WallJumped_t
  fullName: IntBasePlatformer.WallJumped_t
- uid: Global.IntBasePlatformer.WallJumpDirection
  commentId: F:Global.IntBasePlatformer.WallJumpDirection
  parent: Global.IntBasePlatformer
  name: WallJumpDirection
  nameWithType: IntBasePlatformer.WallJumpDirection
  fullName: IntBasePlatformer.WallJumpDirection
- uid: Global.IntBasePlatformer.AuraMaterial
  commentId: F:Global.IntBasePlatformer.AuraMaterial
  parent: Global.IntBasePlatformer
  name: AuraMaterial
  nameWithType: IntBasePlatformer.AuraMaterial
  fullName: IntBasePlatformer.AuraMaterial
- uid: Global.IntBasePlatformer.DashDistRange
  commentId: F:Global.IntBasePlatformer.DashDistRange
  parent: Global.IntBasePlatformer
  name: DashDistRange
  nameWithType: IntBasePlatformer.DashDistRange
  fullName: IntBasePlatformer.DashDistRange
- uid: Global.IntBasePlatformer.MaxDashHoldTime
  commentId: F:Global.IntBasePlatformer.MaxDashHoldTime
  parent: Global.IntBasePlatformer
  name: MaxDashHoldTime
  nameWithType: IntBasePlatformer.MaxDashHoldTime
  fullName: IntBasePlatformer.MaxDashHoldTime
- uid: Global.IntBasePlatformer.DashDecelerationTime
  commentId: F:Global.IntBasePlatformer.DashDecelerationTime
  parent: Global.IntBasePlatformer
  name: DashDecelerationTime
  nameWithType: IntBasePlatformer.DashDecelerationTime
  fullName: IntBasePlatformer.DashDecelerationTime
- uid: Global.IntBasePlatformer.DashOpacityBlendTime
  commentId: F:Global.IntBasePlatformer.DashOpacityBlendTime
  parent: Global.IntBasePlatformer
  name: DashOpacityBlendTime
  nameWithType: IntBasePlatformer.DashOpacityBlendTime
  fullName: IntBasePlatformer.DashOpacityBlendTime
- uid: Global.IntBasePlatformer.DashReloadTime
  commentId: F:Global.IntBasePlatformer.DashReloadTime
  parent: Global.IntBasePlatformer
  name: DashReloadTime
  nameWithType: IntBasePlatformer.DashReloadTime
  fullName: IntBasePlatformer.DashReloadTime
- uid: Global.IntBasePlatformer.DashMaxGlideTime
  commentId: F:Global.IntBasePlatformer.DashMaxGlideTime
  parent: Global.IntBasePlatformer
  name: DashMaxGlideTime
  nameWithType: IntBasePlatformer.DashMaxGlideTime
  fullName: IntBasePlatformer.DashMaxGlideTime
- uid: Global.IntBasePlatformer.DashMomentumDamp
  commentId: F:Global.IntBasePlatformer.DashMomentumDamp
  parent: Global.IntBasePlatformer
  name: DashMomentumDamp
  nameWithType: IntBasePlatformer.DashMomentumDamp
  fullName: IntBasePlatformer.DashMomentumDamp
- uid: Global.IntBasePlatformer.MaxDashHoverTime
  commentId: F:Global.IntBasePlatformer.MaxDashHoverTime
  parent: Global.IntBasePlatformer
  name: MaxDashHoverTime
  nameWithType: IntBasePlatformer.MaxDashHoverTime
  fullName: IntBasePlatformer.MaxDashHoverTime
- uid: Global.IntBasePlatformer.HoverTimeScale
  commentId: F:Global.IntBasePlatformer.HoverTimeScale
  parent: Global.IntBasePlatformer
  name: HoverTimeScale
  nameWithType: IntBasePlatformer.HoverTimeScale
  fullName: IntBasePlatformer.HoverTimeScale
- uid: Global.IntBasePlatformer.HoverTimeScaleBlendTime
  commentId: F:Global.IntBasePlatformer.HoverTimeScaleBlendTime
  parent: Global.IntBasePlatformer
  name: HoverTimeScaleBlendTime
  nameWithType: IntBasePlatformer.HoverTimeScaleBlendTime
  fullName: IntBasePlatformer.HoverTimeScaleBlendTime
- uid: Global.IntBasePlatformer.MaxWindInducedSpeed
  commentId: F:Global.IntBasePlatformer.MaxWindInducedSpeed
  parent: Global.IntBasePlatformer
  name: MaxWindInducedSpeed
  nameWithType: IntBasePlatformer.MaxWindInducedSpeed
  fullName: IntBasePlatformer.MaxWindInducedSpeed
- uid: Global.IntBasePlatformer.MaxWindInducedSpeedGrounded
  commentId: F:Global.IntBasePlatformer.MaxWindInducedSpeedGrounded
  parent: Global.IntBasePlatformer
  name: MaxWindInducedSpeedGrounded
  nameWithType: IntBasePlatformer.MaxWindInducedSpeedGrounded
  fullName: IntBasePlatformer.MaxWindInducedSpeedGrounded
- uid: Global.IntBasePlatformer.WindForceWhenGroundedScalar
  commentId: F:Global.IntBasePlatformer.WindForceWhenGroundedScalar
  parent: Global.IntBasePlatformer
  name: WindForceWhenGroundedScalar
  nameWithType: IntBasePlatformer.WindForceWhenGroundedScalar
  fullName: IntBasePlatformer.WindForceWhenGroundedScalar
- uid: Global.IntBasePlatformer.WindLateralDampeningFactor
  commentId: F:Global.IntBasePlatformer.WindLateralDampeningFactor
  parent: Global.IntBasePlatformer
  name: WindLateralDampeningFactor
  nameWithType: IntBasePlatformer.WindLateralDampeningFactor
  fullName: IntBasePlatformer.WindLateralDampeningFactor
- uid: Global.IntBasePlatformer.GroundedSlideDecelerationScalar
  commentId: F:Global.IntBasePlatformer.GroundedSlideDecelerationScalar
  parent: Global.IntBasePlatformer
  name: GroundedSlideDecelerationScalar
  nameWithType: IntBasePlatformer.GroundedSlideDecelerationScalar
  fullName: IntBasePlatformer.GroundedSlideDecelerationScalar
- uid: Global.IntBasePlatformer.AirDecelerationScalar
  commentId: F:Global.IntBasePlatformer.AirDecelerationScalar
  parent: Global.IntBasePlatformer
  name: AirDecelerationScalar
  nameWithType: IntBasePlatformer.AirDecelerationScalar
  fullName: IntBasePlatformer.AirDecelerationScalar
- uid: Global.IntBasePlatformer.LateralInput
  commentId: F:Global.IntBasePlatformer.LateralInput
  parent: Global.IntBasePlatformer
  name: LateralInput
  nameWithType: IntBasePlatformer.LateralInput
  fullName: IntBasePlatformer.LateralInput
- uid: Global.IntBasePlatformer.LateralInputRaw
  commentId: F:Global.IntBasePlatformer.LateralInputRaw
  parent: Global.IntBasePlatformer
  name: LateralInputRaw
  nameWithType: IntBasePlatformer.LateralInputRaw
  fullName: IntBasePlatformer.LateralInputRaw
- uid: Global.IntBasePlatformer.dampingFactor
  commentId: F:Global.IntBasePlatformer.dampingFactor
  parent: Global.IntBasePlatformer
  name: dampingFactor
  nameWithType: IntBasePlatformer.dampingFactor
  fullName: IntBasePlatformer.dampingFactor
- uid: Global.IntBasePlatformer.Shedding
  commentId: F:Global.IntBasePlatformer.Shedding
  parent: Global.IntBasePlatformer
  name: Shedding
  nameWithType: IntBasePlatformer.Shedding
  fullName: IntBasePlatformer.Shedding
- uid: Global.IntBasePlatformer.SheddingDirection
  commentId: F:Global.IntBasePlatformer.SheddingDirection
  parent: Global.IntBasePlatformer
  name: SheddingDirection
  nameWithType: IntBasePlatformer.SheddingDirection
  fullName: IntBasePlatformer.SheddingDirection
- uid: Global.IntBasePlatformer.InitialState
  commentId: F:Global.IntBasePlatformer.InitialState
  parent: Global.IntBasePlatformer
  name: InitialState
  nameWithType: IntBasePlatformer.InitialState
  fullName: IntBasePlatformer.InitialState
- uid: Global.IntBasePlatformer.IsAttacking
  commentId: P:Global.IntBasePlatformer.IsAttacking
  parent: Global.IntBasePlatformer
  name: IsAttacking
  nameWithType: IntBasePlatformer.IsAttacking
  fullName: IntBasePlatformer.IsAttacking
- uid: Global.IntBasePlatformer.invisibilityMaterial
  commentId: F:Global.IntBasePlatformer.invisibilityMaterial
  parent: Global.IntBasePlatformer
  name: invisibilityMaterial
  nameWithType: IntBasePlatformer.invisibilityMaterial
  fullName: IntBasePlatformer.invisibilityMaterial
- uid: Global.IntBasePlatformer.InvisibilityCountdown
  commentId: F:Global.IntBasePlatformer.InvisibilityCountdown
  parent: Global.IntBasePlatformer
  name: InvisibilityCountdown
  nameWithType: IntBasePlatformer.InvisibilityCountdown
  fullName: IntBasePlatformer.InvisibilityCountdown
- uid: Global.IntBasePlatformer.currentAnimatorState
  commentId: F:Global.IntBasePlatformer.currentAnimatorState
  parent: Global.IntBasePlatformer
  name: currentAnimatorState
  nameWithType: IntBasePlatformer.currentAnimatorState
  fullName: IntBasePlatformer.currentAnimatorState
- uid: Global.IntBasePlatformer.ishurt
  commentId: F:Global.IntBasePlatformer.ishurt
  parent: Global.IntBasePlatformer
  name: ishurt
  nameWithType: IntBasePlatformer.ishurt
  fullName: IntBasePlatformer.ishurt
- uid: Global.IntBasePlatformer.changingweapon
  commentId: F:Global.IntBasePlatformer.changingweapon
  parent: Global.IntBasePlatformer
  name: changingweapon
  nameWithType: IntBasePlatformer.changingweapon
  fullName: IntBasePlatformer.changingweapon
- uid: Global.IntBasePlatformer.recoveryTime
  commentId: F:Global.IntBasePlatformer.recoveryTime
  parent: Global.IntBasePlatformer
  name: recoveryTime
  nameWithType: IntBasePlatformer.recoveryTime
  fullName: IntBasePlatformer.recoveryTime
- uid: Global.IntBasePlatformer.weaponswitchTime
  commentId: F:Global.IntBasePlatformer.weaponswitchTime
  parent: Global.IntBasePlatformer
  name: weaponswitchTime
  nameWithType: IntBasePlatformer.weaponswitchTime
  fullName: IntBasePlatformer.weaponswitchTime
- uid: Global.IntBasePlatformer.minVelocityForLandCrouch
  commentId: F:Global.IntBasePlatformer.minVelocityForLandCrouch
  parent: Global.IntBasePlatformer
  name: minVelocityForLandCrouch
  nameWithType: IntBasePlatformer.minVelocityForLandCrouch
  fullName: IntBasePlatformer.minVelocityForLandCrouch
- uid: Global.IntBasePlatformer.landDust
  commentId: F:Global.IntBasePlatformer.landDust
  parent: Global.IntBasePlatformer
  name: landDust
  nameWithType: IntBasePlatformer.landDust
  fullName: IntBasePlatformer.landDust
- uid: Global.IntBasePlatformer.jumpDust
  commentId: F:Global.IntBasePlatformer.jumpDust
  parent: Global.IntBasePlatformer
  name: jumpDust
  nameWithType: IntBasePlatformer.jumpDust
  fullName: IntBasePlatformer.jumpDust
- uid: Global.IntBasePlatformer.walljumpDust
  commentId: F:Global.IntBasePlatformer.walljumpDust
  parent: Global.IntBasePlatformer
  name: walljumpDust
  nameWithType: IntBasePlatformer.walljumpDust
  fullName: IntBasePlatformer.walljumpDust
- uid: Global.IntBasePlatformer.PLAYER_IDLE
  commentId: F:Global.IntBasePlatformer.PLAYER_IDLE
  parent: Global.IntBasePlatformer
  name: PLAYER_IDLE
  nameWithType: IntBasePlatformer.PLAYER_IDLE
  fullName: IntBasePlatformer.PLAYER_IDLE
- uid: Global.IntBasePlatformer.PLAYER_SPRINT
  commentId: F:Global.IntBasePlatformer.PLAYER_SPRINT
  parent: Global.IntBasePlatformer
  name: PLAYER_SPRINT
  nameWithType: IntBasePlatformer.PLAYER_SPRINT
  fullName: IntBasePlatformer.PLAYER_SPRINT
- uid: Global.IntBasePlatformer.PLAYER_JUMPPREP
  commentId: F:Global.IntBasePlatformer.PLAYER_JUMPPREP
  parent: Global.IntBasePlatformer
  name: PLAYER_JUMPPREP
  nameWithType: IntBasePlatformer.PLAYER_JUMPPREP
  fullName: IntBasePlatformer.PLAYER_JUMPPREP
- uid: Global.IntBasePlatformer.PLAYER_RISE
  commentId: F:Global.IntBasePlatformer.PLAYER_RISE
  parent: Global.IntBasePlatformer
  name: PLAYER_RISE
  nameWithType: IntBasePlatformer.PLAYER_RISE
  fullName: IntBasePlatformer.PLAYER_RISE
- uid: Global.IntBasePlatformer.PLAYER_DOUBLEJUMP
  commentId: F:Global.IntBasePlatformer.PLAYER_DOUBLEJUMP
  parent: Global.IntBasePlatformer
  name: PLAYER_DOUBLEJUMP
  nameWithType: IntBasePlatformer.PLAYER_DOUBLEJUMP
  fullName: IntBasePlatformer.PLAYER_DOUBLEJUMP
- uid: Global.IntBasePlatformer.PLAYER_FALL
  commentId: F:Global.IntBasePlatformer.PLAYER_FALL
  parent: Global.IntBasePlatformer
  name: PLAYER_FALL
  nameWithType: IntBasePlatformer.PLAYER_FALL
  fullName: IntBasePlatformer.PLAYER_FALL
- uid: Global.IntBasePlatformer.PLAYER_LAND
  commentId: F:Global.IntBasePlatformer.PLAYER_LAND
  parent: Global.IntBasePlatformer
  name: PLAYER_LAND
  nameWithType: IntBasePlatformer.PLAYER_LAND
  fullName: IntBasePlatformer.PLAYER_LAND
- uid: Global.IntBasePlatformer.PLAYER_GROUNDDASH
  commentId: F:Global.IntBasePlatformer.PLAYER_GROUNDDASH
  parent: Global.IntBasePlatformer
  name: PLAYER_GROUNDDASH
  nameWithType: IntBasePlatformer.PLAYER_GROUNDDASH
  fullName: IntBasePlatformer.PLAYER_GROUNDDASH
- uid: Global.IntBasePlatformer.PLAYER_AIRDASH
  commentId: F:Global.IntBasePlatformer.PLAYER_AIRDASH
  parent: Global.IntBasePlatformer
  name: PLAYER_AIRDASH
  nameWithType: IntBasePlatformer.PLAYER_AIRDASH
  fullName: IntBasePlatformer.PLAYER_AIRDASH
- uid: Global.IntBasePlatformer.PLAYER_UPDASH
  commentId: F:Global.IntBasePlatformer.PLAYER_UPDASH
  parent: Global.IntBasePlatformer
  name: PLAYER_UPDASH
  nameWithType: IntBasePlatformer.PLAYER_UPDASH
  fullName: IntBasePlatformer.PLAYER_UPDASH
- uid: Global.IntBasePlatformer.PLAYER_DOWNDASH
  commentId: F:Global.IntBasePlatformer.PLAYER_DOWNDASH
  parent: Global.IntBasePlatformer
  name: PLAYER_DOWNDASH
  nameWithType: IntBasePlatformer.PLAYER_DOWNDASH
  fullName: IntBasePlatformer.PLAYER_DOWNDASH
- uid: Global.IntBasePlatformer.PLAYER_UPDIAGDASH
  commentId: F:Global.IntBasePlatformer.PLAYER_UPDIAGDASH
  parent: Global.IntBasePlatformer
  name: PLAYER_UPDIAGDASH
  nameWithType: IntBasePlatformer.PLAYER_UPDIAGDASH
  fullName: IntBasePlatformer.PLAYER_UPDIAGDASH
- uid: Global.IntBasePlatformer.PLAYER_DOWNDIAGDASH
  commentId: F:Global.IntBasePlatformer.PLAYER_DOWNDIAGDASH
  parent: Global.IntBasePlatformer
  name: PLAYER_DOWNDIAGDASH
  nameWithType: IntBasePlatformer.PLAYER_DOWNDIAGDASH
  fullName: IntBasePlatformer.PLAYER_DOWNDIAGDASH
- uid: Global.IntBasePlatformer.PLAYER_HURT
  commentId: F:Global.IntBasePlatformer.PLAYER_HURT
  parent: Global.IntBasePlatformer
  name: PLAYER_HURT
  nameWithType: IntBasePlatformer.PLAYER_HURT
  fullName: IntBasePlatformer.PLAYER_HURT
- uid: Global.IntBasePlatformer.PLAYER_SWITCHWEAPON
  commentId: F:Global.IntBasePlatformer.PLAYER_SWITCHWEAPON
  parent: Global.IntBasePlatformer
  name: PLAYER_SWITCHWEAPON
  nameWithType: IntBasePlatformer.PLAYER_SWITCHWEAPON
  fullName: IntBasePlatformer.PLAYER_SWITCHWEAPON
- uid: Global.IntBasePlatformer.PLAYER_DEATH
  commentId: F:Global.IntBasePlatformer.PLAYER_DEATH
  parent: Global.IntBasePlatformer
  name: PLAYER_DEATH
  nameWithType: IntBasePlatformer.PLAYER_DEATH
  fullName: IntBasePlatformer.PLAYER_DEATH
- uid: Global.IntBasePlatformer.PLAYER_RESPAWN
  commentId: F:Global.IntBasePlatformer.PLAYER_RESPAWN
  parent: Global.IntBasePlatformer
  name: PLAYER_RESPAWN
  nameWithType: IntBasePlatformer.PLAYER_RESPAWN
  fullName: IntBasePlatformer.PLAYER_RESPAWN
- uid: Global.IntBasePlatformer.PLAYER_WALLSLIDE
  commentId: F:Global.IntBasePlatformer.PLAYER_WALLSLIDE
  parent: Global.IntBasePlatformer
  name: PLAYER_WALLSLIDE
  nameWithType: IntBasePlatformer.PLAYER_WALLSLIDE
  fullName: IntBasePlatformer.PLAYER_WALLSLIDE
- uid: Global.IntBasePlatformer.PLAYER_WALLSLIDEPREP
  commentId: F:Global.IntBasePlatformer.PLAYER_WALLSLIDEPREP
  parent: Global.IntBasePlatformer
  name: PLAYER_WALLSLIDEPREP
  nameWithType: IntBasePlatformer.PLAYER_WALLSLIDEPREP
  fullName: IntBasePlatformer.PLAYER_WALLSLIDEPREP
- uid: Global.IntBasePlatformer.PLAYER_WALLJUMP
  commentId: F:Global.IntBasePlatformer.PLAYER_WALLJUMP
  parent: Global.IntBasePlatformer
  name: PLAYER_WALLJUMP
  nameWithType: IntBasePlatformer.PLAYER_WALLJUMP
  fullName: IntBasePlatformer.PLAYER_WALLJUMP
- uid: Global.IntBasePlatformer.PLAYER_WALLJUMPFALLTRANSITION
  commentId: F:Global.IntBasePlatformer.PLAYER_WALLJUMPFALLTRANSITION
  parent: Global.IntBasePlatformer
  name: PLAYER_WALLJUMPFALLTRANSITION
  nameWithType: IntBasePlatformer.PLAYER_WALLJUMPFALLTRANSITION
  fullName: IntBasePlatformer.PLAYER_WALLJUMPFALLTRANSITION
- uid: Global.IntBasePlatformer.PLAYER_WALLJUMPFALLTURNTRANSITION
  commentId: F:Global.IntBasePlatformer.PLAYER_WALLJUMPFALLTURNTRANSITION
  parent: Global.IntBasePlatformer
  name: PLAYER_WALLJUMPFALLTURNTRANSITION
  nameWithType: IntBasePlatformer.PLAYER_WALLJUMPFALLTURNTRANSITION
  fullName: IntBasePlatformer.PLAYER_WALLJUMPFALLTURNTRANSITION
- uid: Global.IntBasePlatformer.JumpWindowBounds
  commentId: F:Global.IntBasePlatformer.JumpWindowBounds
  parent: Global.IntBasePlatformer
  name: JumpWindowBounds
  nameWithType: IntBasePlatformer.JumpWindowBounds
  fullName: IntBasePlatformer.JumpWindowBounds
- uid: Global.IntBasePlatformer.DashWindowBounds
  commentId: F:Global.IntBasePlatformer.DashWindowBounds
  parent: Global.IntBasePlatformer
  name: DashWindowBounds
  nameWithType: IntBasePlatformer.DashWindowBounds
  fullName: IntBasePlatformer.DashWindowBounds
- uid: Global.IntBasePlatformer.WallJumpWindowBounds
  commentId: F:Global.IntBasePlatformer.WallJumpWindowBounds
  parent: Global.IntBasePlatformer
  name: WallJumpWindowBounds
  nameWithType: IntBasePlatformer.WallJumpWindowBounds
  fullName: IntBasePlatformer.WallJumpWindowBounds
- uid: Global.IntBasePlatformer.Stats
  commentId: P:Global.IntBasePlatformer.Stats
  parent: Global.IntBasePlatformer
  name: Stats
  nameWithType: IntBasePlatformer.Stats
  fullName: IntBasePlatformer.Stats
- uid: Global.IntBasePlatformer.BumpTime
  commentId: F:Global.IntBasePlatformer.BumpTime
  parent: Global.IntBasePlatformer
  name: BumpTime
  nameWithType: IntBasePlatformer.BumpTime
  fullName: IntBasePlatformer.BumpTime
- uid: Global.IntBasePlatformer.BumpScale
  commentId: F:Global.IntBasePlatformer.BumpScale
  parent: Global.IntBasePlatformer
  name: BumpScale
  nameWithType: IntBasePlatformer.BumpScale
  fullName: IntBasePlatformer.BumpScale
- uid: Global.IntBasePlatformer.MinBumpVelY
  commentId: F:Global.IntBasePlatformer.MinBumpVelY
  parent: Global.IntBasePlatformer
  name: MinBumpVelY
  nameWithType: IntBasePlatformer.MinBumpVelY
  fullName: IntBasePlatformer.MinBumpVelY
- uid: Global.IntBasePlatformer.MinBumpSpeedX
  commentId: F:Global.IntBasePlatformer.MinBumpSpeedX
  parent: Global.IntBasePlatformer
  name: MinBumpSpeedX
  nameWithType: IntBasePlatformer.MinBumpSpeedX
  fullName: IntBasePlatformer.MinBumpSpeedX
- uid: Global.IntBasePlatformer.MaxBumpSpeed
  commentId: F:Global.IntBasePlatformer.MaxBumpSpeed
  parent: Global.IntBasePlatformer
  name: MaxBumpSpeed
  nameWithType: IntBasePlatformer.MaxBumpSpeed
  fullName: IntBasePlatformer.MaxBumpSpeed
- uid: Global.IntBasePlatformer.Bumped
  commentId: F:Global.IntBasePlatformer.Bumped
  parent: Global.IntBasePlatformer
  name: Bumped
  nameWithType: IntBasePlatformer.Bumped
  fullName: IntBasePlatformer.Bumped
- uid: Global.IntBasePlatformer.Bumped_t
  commentId: F:Global.IntBasePlatformer.Bumped_t
  parent: Global.IntBasePlatformer
  name: Bumped_t
  nameWithType: IntBasePlatformer.Bumped_t
  fullName: IntBasePlatformer.Bumped_t
- uid: Global.IntBasePlatformer.fsm
  commentId: F:Global.IntBasePlatformer.fsm
  parent: Global.IntBasePlatformer
  name: fsm
  nameWithType: IntBasePlatformer.fsm
  fullName: IntBasePlatformer.fsm
- uid: Global.IntBasePlatformer.last_state
  commentId: F:Global.IntBasePlatformer.last_state
  parent: Global.IntBasePlatformer
  name: last_state
  nameWithType: IntBasePlatformer.last_state
  fullName: IntBasePlatformer.last_state
- uid: Global.IntBasePlatformer.Gravity
  commentId: F:Global.IntBasePlatformer.Gravity
  parent: Global.IntBasePlatformer
  name: Gravity
  nameWithType: IntBasePlatformer.Gravity
  fullName: IntBasePlatformer.Gravity
- uid: Global.IntBasePlatformer.JumpVelocity
  commentId: F:Global.IntBasePlatformer.JumpVelocity
  parent: Global.IntBasePlatformer
  name: JumpVelocity
  nameWithType: IntBasePlatformer.JumpVelocity
  fullName: IntBasePlatformer.JumpVelocity
- uid: Global.IntBasePlatformer.DoubleJumpGravity
  commentId: F:Global.IntBasePlatformer.DoubleJumpGravity
  parent: Global.IntBasePlatformer
  name: DoubleJumpGravity
  nameWithType: IntBasePlatformer.DoubleJumpGravity
  fullName: IntBasePlatformer.DoubleJumpGravity
- uid: Global.IntBasePlatformer.DoubleJumpVelocity
  commentId: F:Global.IntBasePlatformer.DoubleJumpVelocity
  parent: Global.IntBasePlatformer
  name: DoubleJumpVelocity
  nameWithType: IntBasePlatformer.DoubleJumpVelocity
  fullName: IntBasePlatformer.DoubleJumpVelocity
- uid: Global.IntBasePlatformer.WallJumpVerticalSpeed
  commentId: F:Global.IntBasePlatformer.WallJumpVerticalSpeed
  parent: Global.IntBasePlatformer
  name: WallJumpVerticalSpeed
  nameWithType: IntBasePlatformer.WallJumpVerticalSpeed
  fullName: IntBasePlatformer.WallJumpVerticalSpeed
- uid: Global.IntBasePlatformer.WallJumpGravity
  commentId: F:Global.IntBasePlatformer.WallJumpGravity
  parent: Global.IntBasePlatformer
  name: WallJumpGravity
  nameWithType: IntBasePlatformer.WallJumpGravity
  fullName: IntBasePlatformer.WallJumpGravity
- uid: Global.IntBasePlatformer.WeakWallJumpVerticalSpeed
  commentId: F:Global.IntBasePlatformer.WeakWallJumpVerticalSpeed
  parent: Global.IntBasePlatformer
  name: WeakWallJumpVerticalSpeed
  nameWithType: IntBasePlatformer.WeakWallJumpVerticalSpeed
  fullName: IntBasePlatformer.WeakWallJumpVerticalSpeed
- uid: Global.IntBasePlatformer.WeakWallJumpGravity
  commentId: F:Global.IntBasePlatformer.WeakWallJumpGravity
  parent: Global.IntBasePlatformer
  name: WeakWallJumpGravity
  nameWithType: IntBasePlatformer.WeakWallJumpGravity
  fullName: IntBasePlatformer.WeakWallJumpGravity
- uid: Global.IntBasePlatformer.IsGrounded
  commentId: P:Global.IntBasePlatformer.IsGrounded
  parent: Global.IntBasePlatformer
  name: IsGrounded
  nameWithType: IntBasePlatformer.IsGrounded
  fullName: IntBasePlatformer.IsGrounded
- uid: Global.IntBasePlatformer.GetWallSide
  commentId: P:Global.IntBasePlatformer.GetWallSide
  parent: Global.IntBasePlatformer
  name: GetWallSide
  nameWithType: IntBasePlatformer.GetWallSide
  fullName: IntBasePlatformer.GetWallSide
- uid: Global.IntBasePlatformer.IsOnWall
  commentId: P:Global.IntBasePlatformer.IsOnWall
  parent: Global.IntBasePlatformer
  name: IsOnWall
  nameWithType: IntBasePlatformer.IsOnWall
  fullName: IntBasePlatformer.IsOnWall
- uid: Global.IntBasePlatformer.JumpReleased
  commentId: F:Global.IntBasePlatformer.JumpReleased
  parent: Global.IntBasePlatformer
  name: JumpReleased
  nameWithType: IntBasePlatformer.JumpReleased
  fullName: IntBasePlatformer.JumpReleased
- uid: Global.IntBasePlatformer.velocity
  commentId: F:Global.IntBasePlatformer.velocity
  parent: Global.IntBasePlatformer
  name: velocity
  nameWithType: IntBasePlatformer.velocity
  fullName: IntBasePlatformer.velocity
- uid: Global.IntBasePlatformer.DashDirection
  commentId: P:Global.IntBasePlatformer.DashDirection
  parent: Global.IntBasePlatformer
  name: DashDirection
  nameWithType: IntBasePlatformer.DashDirection
  fullName: IntBasePlatformer.DashDirection
- uid: Global.IntBasePlatformer.DashSpeed
  commentId: F:Global.IntBasePlatformer.DashSpeed
  parent: Global.IntBasePlatformer
  name: DashSpeed
  nameWithType: IntBasePlatformer.DashSpeed
  fullName: IntBasePlatformer.DashSpeed
- uid: Global.IntBasePlatformer.Dash_t
  commentId: F:Global.IntBasePlatformer.Dash_t
  parent: Global.IntBasePlatformer
  name: Dash_t
  nameWithType: IntBasePlatformer.Dash_t
  fullName: IntBasePlatformer.Dash_t
- uid: Global.IntBasePlatformer.Dash_t_unscaled
  commentId: F:Global.IntBasePlatformer.Dash_t_unscaled
  parent: Global.IntBasePlatformer
  name: Dash_t_unscaled
  nameWithType: IntBasePlatformer.Dash_t_unscaled
  fullName: IntBasePlatformer.Dash_t_unscaled
- uid: Global.IntBasePlatformer.Hover_t_unscaled
  commentId: F:Global.IntBasePlatformer.Hover_t_unscaled
  parent: Global.IntBasePlatformer
  name: Hover_t_unscaled
  nameWithType: IntBasePlatformer.Hover_t_unscaled
  fullName: IntBasePlatformer.Hover_t_unscaled
- uid: Global.IntBasePlatformer.MinDashHoldTime
  commentId: F:Global.IntBasePlatformer.MinDashHoldTime
  parent: Global.IntBasePlatformer
  name: MinDashHoldTime
  nameWithType: IntBasePlatformer.MinDashHoldTime
  fullName: IntBasePlatformer.MinDashHoldTime
- uid: Global.IntBasePlatformer.DashReleasedTime
  commentId: F:Global.IntBasePlatformer.DashReleasedTime
  parent: Global.IntBasePlatformer
  name: DashReleasedTime
  nameWithType: IntBasePlatformer.DashReleasedTime
  fullName: IntBasePlatformer.DashReleasedTime
- uid: Global.IntBasePlatformer.TimeSinceLastDash
  commentId: F:Global.IntBasePlatformer.TimeSinceLastDash
  parent: Global.IntBasePlatformer
  name: TimeSinceLastDash
  nameWithType: IntBasePlatformer.TimeSinceLastDash
  fullName: IntBasePlatformer.TimeSinceLastDash
- uid: Global.IntBasePlatformer.Dashed
  commentId: F:Global.IntBasePlatformer.Dashed
  parent: Global.IntBasePlatformer
  name: Dashed
  nameWithType: IntBasePlatformer.Dashed
  fullName: IntBasePlatformer.Dashed
- uid: Global.IntBasePlatformer.DashReset
  commentId: F:Global.IntBasePlatformer.DashReset
  parent: Global.IntBasePlatformer
  name: DashReset
  nameWithType: IntBasePlatformer.DashReset
  fullName: IntBasePlatformer.DashReset
- uid: Global.IntBasePlatformer.DashReleased
  commentId: F:Global.IntBasePlatformer.DashReleased
  parent: Global.IntBasePlatformer
  name: DashReleased
  nameWithType: IntBasePlatformer.DashReleased
  fullName: IntBasePlatformer.DashReleased
- uid: Global.IntBasePlatformer.HoverReleased
  commentId: F:Global.IntBasePlatformer.HoverReleased
  parent: Global.IntBasePlatformer
  name: HoverReleased
  nameWithType: IntBasePlatformer.HoverReleased
  fullName: IntBasePlatformer.HoverReleased
- uid: Global.IntBasePlatformer.IsHovering
  commentId: F:Global.IntBasePlatformer.IsHovering
  parent: Global.IntBasePlatformer
  name: IsHovering
  nameWithType: IntBasePlatformer.IsHovering
  fullName: IntBasePlatformer.IsHovering
- uid: Global.IntBasePlatformer.DoubleJumped
  commentId: F:Global.IntBasePlatformer.DoubleJumped
  parent: Global.IntBasePlatformer
  name: DoubleJumped
  nameWithType: IntBasePlatformer.DoubleJumped
  fullName: IntBasePlatformer.DoubleJumped
- uid: Global.IntBasePlatformer.FirstAura
  commentId: F:Global.IntBasePlatformer.FirstAura
  parent: Global.IntBasePlatformer
  name: FirstAura
  nameWithType: IntBasePlatformer.FirstAura
  fullName: IntBasePlatformer.FirstAura
- uid: Global.IntBasePlatformer.DashGlided
  commentId: F:Global.IntBasePlatformer.DashGlided
  parent: Global.IntBasePlatformer
  name: DashGlided
  nameWithType: IntBasePlatformer.DashGlided
  fullName: IntBasePlatformer.DashGlided
- uid: Global.IntBasePlatformer.DashGlideCurrentTime
  commentId: F:Global.IntBasePlatformer.DashGlideCurrentTime
  parent: Global.IntBasePlatformer
  name: DashGlideCurrentTime
  nameWithType: IntBasePlatformer.DashGlideCurrentTime
  fullName: IntBasePlatformer.DashGlideCurrentTime
- uid: Global.IntBasePlatformer.CarryMomentum
  commentId: F:Global.IntBasePlatformer.CarryMomentum
  parent: Global.IntBasePlatformer
  name: CarryMomentum
  nameWithType: IntBasePlatformer.CarryMomentum
  fullName: IntBasePlatformer.CarryMomentum
- uid: Global.IntBasePlatformer.animator
  commentId: F:Global.IntBasePlatformer.animator
  parent: Global.IntBasePlatformer
  name: animator
  nameWithType: IntBasePlatformer.animator
  fullName: IntBasePlatformer.animator
- uid: Global.IntBasePlatformer.sprite
  commentId: F:Global.IntBasePlatformer.sprite
  parent: Global.IntBasePlatformer
  name: sprite
  nameWithType: IntBasePlatformer.sprite
  fullName: IntBasePlatformer.sprite
- uid: Global.IntBasePlatformer.Equipment
  commentId: F:Global.IntBasePlatformer.Equipment
  parent: Global.IntBasePlatformer
  name: Equipment
  nameWithType: IntBasePlatformer.Equipment
  fullName: IntBasePlatformer.Equipment
- uid: Global.IntBasePlatformer.Loadout
  commentId: F:Global.IntBasePlatformer.Loadout
  parent: Global.IntBasePlatformer
  name: Loadout
  nameWithType: IntBasePlatformer.Loadout
  fullName: IntBasePlatformer.Loadout
- uid: Global.IntBasePlatformer.Ability
  commentId: F:Global.IntBasePlatformer.Ability
  parent: Global.IntBasePlatformer
  name: Ability
  nameWithType: IntBasePlatformer.Ability
  fullName: IntBasePlatformer.Ability
- uid: Global.IntBasePlatformer.Invisible
  commentId: F:Global.IntBasePlatformer.Invisible
  parent: Global.IntBasePlatformer
  name: Invisible
  nameWithType: IntBasePlatformer.Invisible
  fullName: IntBasePlatformer.Invisible
- uid: Global.IntBasePlatformer.InvisibileWarning
  commentId: F:Global.IntBasePlatformer.InvisibileWarning
  parent: Global.IntBasePlatformer
  name: InvisibileWarning
  nameWithType: IntBasePlatformer.InvisibileWarning
  fullName: IntBasePlatformer.InvisibileWarning
- uid: Global.IntBasePlatformer.RespawnedInsidePlatform
  commentId: F:Global.IntBasePlatformer.RespawnedInsidePlatform
  parent: Global.IntBasePlatformer
  name: RespawnedInsidePlatform
  nameWithType: IntBasePlatformer.RespawnedInsidePlatform
  fullName: IntBasePlatformer.RespawnedInsidePlatform
- uid: Global.IntBasePlatformer.SquishGlideLimit
  commentId: F:Global.IntBasePlatformer.SquishGlideLimit
  parent: Global.IntBasePlatformer
  name: SquishGlideLimit
  nameWithType: IntBasePlatformer.SquishGlideLimit
  fullName: IntBasePlatformer.SquishGlideLimit
- uid: Global.IntBasePlatformer.OnTakeDamage
  commentId: M:Global.IntBasePlatformer.OnTakeDamage
  parent: Global.IntBasePlatformer
  name: OnTakeDamage()
  nameWithType: IntBasePlatformer.OnTakeDamage()
  fullName: IntBasePlatformer.OnTakeDamage()
  spec.csharp:
  - uid: Global.IntBasePlatformer.OnTakeDamage
    name: OnTakeDamage
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.OnTakeDamage
    name: OnTakeDamage
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.EndRespawnState
  commentId: M:Global.IntBasePlatformer.EndRespawnState
  parent: Global.IntBasePlatformer
  name: EndRespawnState()
  nameWithType: IntBasePlatformer.EndRespawnState()
  fullName: IntBasePlatformer.EndRespawnState()
  spec.csharp:
  - uid: Global.IntBasePlatformer.EndRespawnState
    name: EndRespawnState
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.EndRespawnState
    name: EndRespawnState
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.SingleJumpBinding
  commentId: F:Global.IntBasePlatformer.SingleJumpBinding
  parent: Global.IntBasePlatformer
  name: SingleJumpBinding
  nameWithType: IntBasePlatformer.SingleJumpBinding
  fullName: IntBasePlatformer.SingleJumpBinding
- uid: Global.IntBasePlatformer.DoubleJumpBinding
  commentId: F:Global.IntBasePlatformer.DoubleJumpBinding
  parent: Global.IntBasePlatformer
  name: DoubleJumpBinding
  nameWithType: IntBasePlatformer.DoubleJumpBinding
  fullName: IntBasePlatformer.DoubleJumpBinding
- uid: Global.IntBasePlatformer.WallJumpBinding
  commentId: F:Global.IntBasePlatformer.WallJumpBinding
  parent: Global.IntBasePlatformer
  name: WallJumpBinding
  nameWithType: IntBasePlatformer.WallJumpBinding
  fullName: IntBasePlatformer.WallJumpBinding
- uid: Global.IntBasePlatformer.DashBinding
  commentId: F:Global.IntBasePlatformer.DashBinding
  parent: Global.IntBasePlatformer
  name: DashBinding
  nameWithType: IntBasePlatformer.DashBinding
  fullName: IntBasePlatformer.DashBinding
- uid: Global.IntBasePlatformer.BindFunctionToWallJump(IntObject.Action)
  commentId: M:Global.IntBasePlatformer.BindFunctionToWallJump(IntObject.Action)
  parent: Global.IntBasePlatformer
  name: BindFunctionToWallJump(Action)
  nameWithType: IntBasePlatformer.BindFunctionToWallJump(IntObject.Action)
  fullName: IntBasePlatformer.BindFunctionToWallJump(IntObject.Action)
  spec.csharp:
  - uid: Global.IntBasePlatformer.BindFunctionToWallJump(IntObject.Action)
    name: BindFunctionToWallJump
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.BindFunctionToWallJump(IntObject.Action)
    name: BindFunctionToWallJump
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntBasePlatformer.BindFunctionToDoubleJump(IntObject.Action)
  commentId: M:Global.IntBasePlatformer.BindFunctionToDoubleJump(IntObject.Action)
  parent: Global.IntBasePlatformer
  name: BindFunctionToDoubleJump(Action)
  nameWithType: IntBasePlatformer.BindFunctionToDoubleJump(IntObject.Action)
  fullName: IntBasePlatformer.BindFunctionToDoubleJump(IntObject.Action)
  spec.csharp:
  - uid: Global.IntBasePlatformer.BindFunctionToDoubleJump(IntObject.Action)
    name: BindFunctionToDoubleJump
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.BindFunctionToDoubleJump(IntObject.Action)
    name: BindFunctionToDoubleJump
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntBasePlatformer.BindFunctionToSingleJump(IntObject.Action)
  commentId: M:Global.IntBasePlatformer.BindFunctionToSingleJump(IntObject.Action)
  parent: Global.IntBasePlatformer
  name: BindFunctionToSingleJump(Action)
  nameWithType: IntBasePlatformer.BindFunctionToSingleJump(IntObject.Action)
  fullName: IntBasePlatformer.BindFunctionToSingleJump(IntObject.Action)
  spec.csharp:
  - uid: Global.IntBasePlatformer.BindFunctionToSingleJump(IntObject.Action)
    name: BindFunctionToSingleJump
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.BindFunctionToSingleJump(IntObject.Action)
    name: BindFunctionToSingleJump
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntBasePlatformer.BindFunctionToDash(IntObject.Action)
  commentId: M:Global.IntBasePlatformer.BindFunctionToDash(IntObject.Action)
  parent: Global.IntBasePlatformer
  name: BindFunctionToDash(Action)
  nameWithType: IntBasePlatformer.BindFunctionToDash(IntObject.Action)
  fullName: IntBasePlatformer.BindFunctionToDash(IntObject.Action)
  spec.csharp:
  - uid: Global.IntBasePlatformer.BindFunctionToDash(IntObject.Action)
    name: BindFunctionToDash
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.BindFunctionToDash(IntObject.Action)
    name: BindFunctionToDash
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntBasePlatformer.GetFlipX
  commentId: M:Global.IntBasePlatformer.GetFlipX
  parent: Global.IntBasePlatformer
  name: GetFlipX()
  nameWithType: IntBasePlatformer.GetFlipX()
  fullName: IntBasePlatformer.GetFlipX()
  spec.csharp:
  - uid: Global.IntBasePlatformer.GetFlipX
    name: GetFlipX
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.GetFlipX
    name: GetFlipX
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.GetLookDirection
  commentId: M:Global.IntBasePlatformer.GetLookDirection
  parent: Global.IntBasePlatformer
  name: GetLookDirection()
  nameWithType: IntBasePlatformer.GetLookDirection()
  fullName: IntBasePlatformer.GetLookDirection()
  spec.csharp:
  - uid: Global.IntBasePlatformer.GetLookDirection
    name: GetLookDirection
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.GetLookDirection
    name: GetLookDirection
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.GetAnimator
  commentId: M:Global.IntBasePlatformer.GetAnimator
  parent: Global.IntBasePlatformer
  name: GetAnimator()
  nameWithType: IntBasePlatformer.GetAnimator()
  fullName: IntBasePlatformer.GetAnimator()
  spec.csharp:
  - uid: Global.IntBasePlatformer.GetAnimator
    name: GetAnimator
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.GetAnimator
    name: GetAnimator
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.Initialize
  commentId: M:Global.IntBasePlatformer.Initialize
  parent: Global.IntBasePlatformer
  name: Initialize()
  nameWithType: IntBasePlatformer.Initialize()
  fullName: IntBasePlatformer.Initialize()
  spec.csharp:
  - uid: Global.IntBasePlatformer.Initialize
    name: Initialize
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.Initialize
    name: Initialize
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.OnFirstFrame
  commentId: M:Global.IntBasePlatformer.OnFirstFrame
  parent: Global.IntBasePlatformer
  name: OnFirstFrame()
  nameWithType: IntBasePlatformer.OnFirstFrame()
  fullName: IntBasePlatformer.OnFirstFrame()
  spec.csharp:
  - uid: Global.IntBasePlatformer.OnFirstFrame
    name: OnFirstFrame
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.OnFirstFrame
    name: OnFirstFrame
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.OnDrawDebugGizmos
  commentId: M:Global.IntBasePlatformer.OnDrawDebugGizmos
  parent: Global.IntBasePlatformer
  name: OnDrawDebugGizmos()
  nameWithType: IntBasePlatformer.OnDrawDebugGizmos()
  fullName: IntBasePlatformer.OnDrawDebugGizmos()
  spec.csharp:
  - uid: Global.IntBasePlatformer.OnDrawDebugGizmos
    name: OnDrawDebugGizmos
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.OnDrawDebugGizmos
    name: OnDrawDebugGizmos
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.PreInputUpdate
  commentId: M:Global.IntBasePlatformer.PreInputUpdate
  parent: Global.IntBasePlatformer
  name: PreInputUpdate()
  nameWithType: IntBasePlatformer.PreInputUpdate()
  fullName: IntBasePlatformer.PreInputUpdate()
  spec.csharp:
  - uid: Global.IntBasePlatformer.PreInputUpdate
    name: PreInputUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.PreInputUpdate
    name: PreInputUpdate
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.Update
  commentId: M:Global.IntBasePlatformer.Update
  parent: Global.IntBasePlatformer
  name: Update()
  nameWithType: IntBasePlatformer.Update()
  fullName: IntBasePlatformer.Update()
  spec.csharp:
  - uid: Global.IntBasePlatformer.Update
    name: Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.Update
    name: Update
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.SetLateralInput(System.Single)
  commentId: M:Global.IntBasePlatformer.SetLateralInput(System.Single)
  parent: Global.IntBasePlatformer
  isExternal: true
  name: SetLateralInput(float)
  nameWithType: IntBasePlatformer.SetLateralInput(float)
  fullName: IntBasePlatformer.SetLateralInput(float)
  nameWithType.vb: IntBasePlatformer.SetLateralInput(Single)
  fullName.vb: IntBasePlatformer.SetLateralInput(Single)
  name.vb: SetLateralInput(Single)
  spec.csharp:
  - uid: Global.IntBasePlatformer.SetLateralInput(System.Single)
    name: SetLateralInput
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.SetLateralInput(System.Single)
    name: SetLateralInput
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntBasePlatformer.SetLateralInputRawValue(System.Single)
  commentId: M:Global.IntBasePlatformer.SetLateralInputRawValue(System.Single)
  parent: Global.IntBasePlatformer
  isExternal: true
  name: SetLateralInputRawValue(float)
  nameWithType: IntBasePlatformer.SetLateralInputRawValue(float)
  fullName: IntBasePlatformer.SetLateralInputRawValue(float)
  nameWithType.vb: IntBasePlatformer.SetLateralInputRawValue(Single)
  fullName.vb: IntBasePlatformer.SetLateralInputRawValue(Single)
  name.vb: SetLateralInputRawValue(Single)
  spec.csharp:
  - uid: Global.IntBasePlatformer.SetLateralInputRawValue(System.Single)
    name: SetLateralInputRawValue
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.SetLateralInputRawValue(System.Single)
    name: SetLateralInputRawValue
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntBasePlatformer.HandleWind
  commentId: M:Global.IntBasePlatformer.HandleWind
  parent: Global.IntBasePlatformer
  name: HandleWind()
  nameWithType: IntBasePlatformer.HandleWind()
  fullName: IntBasePlatformer.HandleWind()
  spec.csharp:
  - uid: Global.IntBasePlatformer.HandleWind
    name: HandleWind
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.HandleWind
    name: HandleWind
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.IsWindy
  commentId: M:Global.IntBasePlatformer.IsWindy
  parent: Global.IntBasePlatformer
  name: IsWindy()
  nameWithType: IntBasePlatformer.IsWindy()
  fullName: IntBasePlatformer.IsWindy()
  spec.csharp:
  - uid: Global.IntBasePlatformer.IsWindy
    name: IsWindy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.IsWindy
    name: IsWindy
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.IsFast
  commentId: M:Global.IntBasePlatformer.IsFast
  parent: Global.IntBasePlatformer
  name: IsFast()
  nameWithType: IntBasePlatformer.IsFast()
  fullName: IntBasePlatformer.IsFast()
  spec.csharp:
  - uid: Global.IntBasePlatformer.IsFast
    name: IsFast
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.IsFast
    name: IsFast
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.Bump(UnityEngine.Vector2)
  commentId: M:Global.IntBasePlatformer.Bump(UnityEngine.Vector2)
  parent: Global.IntBasePlatformer
  isExternal: true
  name: Bump(Vector2)
  nameWithType: IntBasePlatformer.Bump(Vector2)
  fullName: IntBasePlatformer.Bump(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntBasePlatformer.Bump(UnityEngine.Vector2)
    name: Bump
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.Bump(UnityEngine.Vector2)
    name: Bump
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntBasePlatformer.Bump(UnityEngine.Vector2,UnityEngine.Vector2)
  commentId: M:Global.IntBasePlatformer.Bump(UnityEngine.Vector2,UnityEngine.Vector2)
  parent: Global.IntBasePlatformer
  isExternal: true
  name: Bump(Vector2, Vector2)
  nameWithType: IntBasePlatformer.Bump(Vector2, Vector2)
  fullName: IntBasePlatformer.Bump(UnityEngine.Vector2, UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntBasePlatformer.Bump(UnityEngine.Vector2,UnityEngine.Vector2)
    name: Bump
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.Bump(UnityEngine.Vector2,UnityEngine.Vector2)
    name: Bump
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntBasePlatformer.BumpUpdate
  commentId: M:Global.IntBasePlatformer.BumpUpdate
  parent: Global.IntBasePlatformer
  name: BumpUpdate()
  nameWithType: IntBasePlatformer.BumpUpdate()
  fullName: IntBasePlatformer.BumpUpdate()
  spec.csharp:
  - uid: Global.IntBasePlatformer.BumpUpdate
    name: BumpUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.BumpUpdate
    name: BumpUpdate
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.WallJumpUpdate
  commentId: M:Global.IntBasePlatformer.WallJumpUpdate
  parent: Global.IntBasePlatformer
  name: WallJumpUpdate()
  nameWithType: IntBasePlatformer.WallJumpUpdate()
  fullName: IntBasePlatformer.WallJumpUpdate()
  spec.csharp:
  - uid: Global.IntBasePlatformer.WallJumpUpdate
    name: WallJumpUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.WallJumpUpdate
    name: WallJumpUpdate
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.HitStop(System.Single,System.Single,System.Boolean)
  commentId: M:Global.IntBasePlatformer.HitStop(System.Single,System.Single,System.Boolean)
  parent: Global.IntBasePlatformer
  isExternal: true
  name: HitStop(float, float, bool)
  nameWithType: IntBasePlatformer.HitStop(float, float, bool)
  fullName: IntBasePlatformer.HitStop(float, float, bool)
  nameWithType.vb: IntBasePlatformer.HitStop(Single, Single, Boolean)
  fullName.vb: IntBasePlatformer.HitStop(Single, Single, Boolean)
  name.vb: HitStop(Single, Single, Boolean)
  spec.csharp:
  - uid: Global.IntBasePlatformer.HitStop(System.Single,System.Single,System.Boolean)
    name: HitStop
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.HitStop(System.Single,System.Single,System.Boolean)
    name: HitStop
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntBasePlatformer.HitStopUpdate
  commentId: M:Global.IntBasePlatformer.HitStopUpdate
  parent: Global.IntBasePlatformer
  name: HitStopUpdate()
  nameWithType: IntBasePlatformer.HitStopUpdate()
  fullName: IntBasePlatformer.HitStopUpdate()
  spec.csharp:
  - uid: Global.IntBasePlatformer.HitStopUpdate
    name: HitStopUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.HitStopUpdate
    name: HitStopUpdate
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.GetDashDirection
  commentId: M:Global.IntBasePlatformer.GetDashDirection
  parent: Global.IntBasePlatformer
  name: GetDashDirection()
  nameWithType: IntBasePlatformer.GetDashDirection()
  fullName: IntBasePlatformer.GetDashDirection()
  spec.csharp:
  - uid: Global.IntBasePlatformer.GetDashDirection
    name: GetDashDirection
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.GetDashDirection
    name: GetDashDirection
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.CanDash
  commentId: M:Global.IntBasePlatformer.CanDash
  parent: Global.IntBasePlatformer
  name: CanDash()
  nameWithType: IntBasePlatformer.CanDash()
  fullName: IntBasePlatformer.CanDash()
  spec.csharp:
  - uid: Global.IntBasePlatformer.CanDash
    name: CanDash
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.CanDash
    name: CanDash
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.CanHover
  commentId: M:Global.IntBasePlatformer.CanHover
  parent: Global.IntBasePlatformer
  name: CanHover()
  nameWithType: IntBasePlatformer.CanHover()
  fullName: IntBasePlatformer.CanHover()
  spec.csharp:
  - uid: Global.IntBasePlatformer.CanHover
    name: CanHover
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.CanHover
    name: CanHover
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.InterruptHover
  commentId: M:Global.IntBasePlatformer.InterruptHover
  parent: Global.IntBasePlatformer
  name: InterruptHover()
  nameWithType: IntBasePlatformer.InterruptHover()
  fullName: IntBasePlatformer.InterruptHover()
  spec.csharp:
  - uid: Global.IntBasePlatformer.InterruptHover
    name: InterruptHover
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.InterruptHover
    name: InterruptHover
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.EndDash
  commentId: M:Global.IntBasePlatformer.EndDash
  parent: Global.IntBasePlatformer
  name: EndDash()
  nameWithType: IntBasePlatformer.EndDash()
  fullName: IntBasePlatformer.EndDash()
  spec.csharp:
  - uid: Global.IntBasePlatformer.EndDash
    name: EndDash
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.EndDash
    name: EndDash
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.ResetDash
  commentId: M:Global.IntBasePlatformer.ResetDash
  parent: Global.IntBasePlatformer
  name: ResetDash()
  nameWithType: IntBasePlatformer.ResetDash()
  fullName: IntBasePlatformer.ResetDash()
  spec.csharp:
  - uid: Global.IntBasePlatformer.ResetDash
    name: ResetDash
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.ResetDash
    name: ResetDash
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.Dash(UnityEngine.Vector2)
  commentId: M:Global.IntBasePlatformer.Dash(UnityEngine.Vector2)
  parent: Global.IntBasePlatformer
  isExternal: true
  name: Dash(Vector2)
  nameWithType: IntBasePlatformer.Dash(Vector2)
  fullName: IntBasePlatformer.Dash(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntBasePlatformer.Dash(UnityEngine.Vector2)
    name: Dash
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.Dash(UnityEngine.Vector2)
    name: Dash
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntBasePlatformer.DashRelease
  commentId: M:Global.IntBasePlatformer.DashRelease
  parent: Global.IntBasePlatformer
  name: DashRelease()
  nameWithType: IntBasePlatformer.DashRelease()
  fullName: IntBasePlatformer.DashRelease()
  spec.csharp:
  - uid: Global.IntBasePlatformer.DashRelease
    name: DashRelease
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.DashRelease
    name: DashRelease
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.HoverRelease
  commentId: M:Global.IntBasePlatformer.HoverRelease
  parent: Global.IntBasePlatformer
  name: HoverRelease()
  nameWithType: IntBasePlatformer.HoverRelease()
  fullName: IntBasePlatformer.HoverRelease()
  spec.csharp:
  - uid: Global.IntBasePlatformer.HoverRelease
    name: HoverRelease
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.HoverRelease
    name: HoverRelease
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.UpdateDashDirection(UnityEngine.Vector2)
  commentId: M:Global.IntBasePlatformer.UpdateDashDirection(UnityEngine.Vector2)
  parent: Global.IntBasePlatformer
  isExternal: true
  name: UpdateDashDirection(Vector2)
  nameWithType: IntBasePlatformer.UpdateDashDirection(Vector2)
  fullName: IntBasePlatformer.UpdateDashDirection(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntBasePlatformer.UpdateDashDirection(UnityEngine.Vector2)
    name: UpdateDashDirection
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.UpdateDashDirection(UnityEngine.Vector2)
    name: UpdateDashDirection
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntBasePlatformer.CanJump
  commentId: M:Global.IntBasePlatformer.CanJump
  parent: Global.IntBasePlatformer
  name: CanJump()
  nameWithType: IntBasePlatformer.CanJump()
  fullName: IntBasePlatformer.CanJump()
  spec.csharp:
  - uid: Global.IntBasePlatformer.CanJump
    name: CanJump
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.CanJump
    name: CanJump
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.JumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  commentId: M:Global.IntBasePlatformer.JumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  parent: Global.IntBasePlatformer
  name: JumpLeaveCallback(PlatformerState, PlatformerState)
  nameWithType: IntBasePlatformer.JumpLeaveCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  fullName: IntBasePlatformer.JumpLeaveCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  spec.csharp:
  - uid: Global.IntBasePlatformer.JumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
    name: JumpLeaveCallback
  - name: (
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: ','
  - name: " "
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.JumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
    name: JumpLeaveCallback
  - name: (
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: ','
  - name: " "
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: )
- uid: Global.IntBasePlatformer.DoubleJumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  commentId: M:Global.IntBasePlatformer.DoubleJumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  parent: Global.IntBasePlatformer
  name: DoubleJumpLeaveCallback(PlatformerState, PlatformerState)
  nameWithType: IntBasePlatformer.DoubleJumpLeaveCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  fullName: IntBasePlatformer.DoubleJumpLeaveCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  spec.csharp:
  - uid: Global.IntBasePlatformer.DoubleJumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
    name: DoubleJumpLeaveCallback
  - name: (
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: ','
  - name: " "
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.DoubleJumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
    name: DoubleJumpLeaveCallback
  - name: (
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: ','
  - name: " "
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: )
- uid: Global.IntBasePlatformer.WallJumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  commentId: M:Global.IntBasePlatformer.WallJumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  parent: Global.IntBasePlatformer
  name: WallJumpLeaveCallback(PlatformerState, PlatformerState)
  nameWithType: IntBasePlatformer.WallJumpLeaveCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  fullName: IntBasePlatformer.WallJumpLeaveCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  spec.csharp:
  - uid: Global.IntBasePlatformer.WallJumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
    name: WallJumpLeaveCallback
  - name: (
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: ','
  - name: " "
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.WallJumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
    name: WallJumpLeaveCallback
  - name: (
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: ','
  - name: " "
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: )
- uid: Global.IntBasePlatformer.FallLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  commentId: M:Global.IntBasePlatformer.FallLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  parent: Global.IntBasePlatformer
  name: FallLeaveCallback(PlatformerState, PlatformerState)
  nameWithType: IntBasePlatformer.FallLeaveCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  fullName: IntBasePlatformer.FallLeaveCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  spec.csharp:
  - uid: Global.IntBasePlatformer.FallLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
    name: FallLeaveCallback
  - name: (
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: ','
  - name: " "
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.FallLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
    name: FallLeaveCallback
  - name: (
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: ','
  - name: " "
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: )
- uid: Global.IntBasePlatformer.Jump
  commentId: M:Global.IntBasePlatformer.Jump
  parent: Global.IntBasePlatformer
  name: Jump()
  nameWithType: IntBasePlatformer.Jump()
  fullName: IntBasePlatformer.Jump()
  spec.csharp:
  - uid: Global.IntBasePlatformer.Jump
    name: Jump
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.Jump
    name: Jump
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.JumpRelease
  commentId: M:Global.IntBasePlatformer.JumpRelease
  parent: Global.IntBasePlatformer
  name: JumpRelease()
  nameWithType: IntBasePlatformer.JumpRelease()
  fullName: IntBasePlatformer.JumpRelease()
  spec.csharp:
  - uid: Global.IntBasePlatformer.JumpRelease
    name: JumpRelease
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.JumpRelease
    name: JumpRelease
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.ResetDoubleJump
  commentId: M:Global.IntBasePlatformer.ResetDoubleJump
  parent: Global.IntBasePlatformer
  name: ResetDoubleJump()
  nameWithType: IntBasePlatformer.ResetDoubleJump()
  fullName: IntBasePlatformer.ResetDoubleJump()
  spec.csharp:
  - uid: Global.IntBasePlatformer.ResetDoubleJump
    name: ResetDoubleJump
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.ResetDoubleJump
    name: ResetDoubleJump
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.ChargeAttack
  commentId: M:Global.IntBasePlatformer.ChargeAttack
  parent: Global.IntBasePlatformer
  name: ChargeAttack()
  nameWithType: IntBasePlatformer.ChargeAttack()
  fullName: IntBasePlatformer.ChargeAttack()
  spec.csharp:
  - uid: Global.IntBasePlatformer.ChargeAttack
    name: ChargeAttack
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.ChargeAttack
    name: ChargeAttack
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.IsCharged
  commentId: M:Global.IntBasePlatformer.IsCharged
  parent: Global.IntBasePlatformer
  name: IsCharged()
  nameWithType: IntBasePlatformer.IsCharged()
  fullName: IntBasePlatformer.IsCharged()
  spec.csharp:
  - uid: Global.IntBasePlatformer.IsCharged
    name: IsCharged
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.IsCharged
    name: IsCharged
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.ReleaseAttack
  commentId: M:Global.IntBasePlatformer.ReleaseAttack
  parent: Global.IntBasePlatformer
  name: ReleaseAttack()
  nameWithType: IntBasePlatformer.ReleaseAttack()
  fullName: IntBasePlatformer.ReleaseAttack()
  spec.csharp:
  - uid: Global.IntBasePlatformer.ReleaseAttack
    name: ReleaseAttack
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.ReleaseAttack
    name: ReleaseAttack
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.SetInvisibility(System.Boolean)
  commentId: M:Global.IntBasePlatformer.SetInvisibility(System.Boolean)
  parent: Global.IntBasePlatformer
  isExternal: true
  name: SetInvisibility(bool)
  nameWithType: IntBasePlatformer.SetInvisibility(bool)
  fullName: IntBasePlatformer.SetInvisibility(bool)
  nameWithType.vb: IntBasePlatformer.SetInvisibility(Boolean)
  fullName.vb: IntBasePlatformer.SetInvisibility(Boolean)
  name.vb: SetInvisibility(Boolean)
  spec.csharp:
  - uid: Global.IntBasePlatformer.SetInvisibility(System.Boolean)
    name: SetInvisibility
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.SetInvisibility(System.Boolean)
    name: SetInvisibility
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntBasePlatformer.SetInvisibilityWarning(System.Boolean)
  commentId: M:Global.IntBasePlatformer.SetInvisibilityWarning(System.Boolean)
  parent: Global.IntBasePlatformer
  isExternal: true
  name: SetInvisibilityWarning(bool)
  nameWithType: IntBasePlatformer.SetInvisibilityWarning(bool)
  fullName: IntBasePlatformer.SetInvisibilityWarning(bool)
  nameWithType.vb: IntBasePlatformer.SetInvisibilityWarning(Boolean)
  fullName.vb: IntBasePlatformer.SetInvisibilityWarning(Boolean)
  name.vb: SetInvisibilityWarning(Boolean)
  spec.csharp:
  - uid: Global.IntBasePlatformer.SetInvisibilityWarning(System.Boolean)
    name: SetInvisibilityWarning
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.SetInvisibilityWarning(System.Boolean)
    name: SetInvisibilityWarning
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntBasePlatformer.IsInvisible
  commentId: M:Global.IntBasePlatformer.IsInvisible
  parent: Global.IntBasePlatformer
  name: IsInvisible()
  nameWithType: IntBasePlatformer.IsInvisible()
  fullName: IntBasePlatformer.IsInvisible()
  spec.csharp:
  - uid: Global.IntBasePlatformer.IsInvisible
    name: IsInvisible
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.IsInvisible
    name: IsInvisible
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.GetVelocity
  commentId: M:Global.IntBasePlatformer.GetVelocity
  parent: Global.IntBasePlatformer
  name: GetVelocity()
  nameWithType: IntBasePlatformer.GetVelocity()
  fullName: IntBasePlatformer.GetVelocity()
  spec.csharp:
  - uid: Global.IntBasePlatformer.GetVelocity
    name: GetVelocity
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.GetVelocity
    name: GetVelocity
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.SetVelocity(UnityEngine.Vector2)
  commentId: M:Global.IntBasePlatformer.SetVelocity(UnityEngine.Vector2)
  parent: Global.IntBasePlatformer
  isExternal: true
  name: SetVelocity(Vector2)
  nameWithType: IntBasePlatformer.SetVelocity(Vector2)
  fullName: IntBasePlatformer.SetVelocity(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntBasePlatformer.SetVelocity(UnityEngine.Vector2)
    name: SetVelocity
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.SetVelocity(UnityEngine.Vector2)
    name: SetVelocity
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntBasePlatformer.GetStateMachine
  commentId: M:Global.IntBasePlatformer.GetStateMachine
  parent: Global.IntBasePlatformer
  name: GetStateMachine()
  nameWithType: IntBasePlatformer.GetStateMachine()
  fullName: IntBasePlatformer.GetStateMachine()
  spec.csharp:
  - uid: Global.IntBasePlatformer.GetStateMachine
    name: GetStateMachine
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.GetStateMachine
    name: GetStateMachine
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.SpawnAura
  commentId: M:Global.IntBasePlatformer.SpawnAura
  parent: Global.IntBasePlatformer
  name: SpawnAura()
  nameWithType: IntBasePlatformer.SpawnAura()
  fullName: IntBasePlatformer.SpawnAura()
  spec.csharp:
  - uid: Global.IntBasePlatformer.SpawnAura
    name: SpawnAura
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.SpawnAura
    name: SpawnAura
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.ShedSpores
  commentId: M:Global.IntBasePlatformer.ShedSpores
  parent: Global.IntBasePlatformer
  name: ShedSpores()
  nameWithType: IntBasePlatformer.ShedSpores()
  fullName: IntBasePlatformer.ShedSpores()
  spec.csharp:
  - uid: Global.IntBasePlatformer.ShedSpores
    name: ShedSpores
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.ShedSpores
    name: ShedSpores
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.GetOverlappingActors
  commentId: M:Global.IntBasePlatformer.GetOverlappingActors
  parent: Global.IntBasePlatformer
  name: GetOverlappingActors()
  nameWithType: IntBasePlatformer.GetOverlappingActors()
  fullName: IntBasePlatformer.GetOverlappingActors()
  spec.csharp:
  - uid: Global.IntBasePlatformer.GetOverlappingActors
    name: GetOverlappingActors
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.GetOverlappingActors
    name: GetOverlappingActors
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.GetOverlappingTriggers
  commentId: M:Global.IntBasePlatformer.GetOverlappingTriggers
  parent: Global.IntBasePlatformer
  name: GetOverlappingTriggers()
  nameWithType: IntBasePlatformer.GetOverlappingTriggers()
  fullName: IntBasePlatformer.GetOverlappingTriggers()
  spec.csharp:
  - uid: Global.IntBasePlatformer.GetOverlappingTriggers
    name: GetOverlappingTriggers
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.GetOverlappingTriggers
    name: GetOverlappingTriggers
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.OnRespawnInsidePlatform(SpecialPlatform)
  commentId: M:Global.IntBasePlatformer.OnRespawnInsidePlatform(SpecialPlatform)
  parent: Global.IntBasePlatformer
  name: OnRespawnInsidePlatform(SpecialPlatform)
  nameWithType: IntBasePlatformer.OnRespawnInsidePlatform(SpecialPlatform)
  fullName: IntBasePlatformer.OnRespawnInsidePlatform(SpecialPlatform)
  spec.csharp:
  - uid: Global.IntBasePlatformer.OnRespawnInsidePlatform(SpecialPlatform)
    name: OnRespawnInsidePlatform
  - name: (
  - uid: Global.SpecialPlatform
    name: SpecialPlatform
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.OnRespawnInsidePlatform(SpecialPlatform)
    name: OnRespawnInsidePlatform
  - name: (
  - uid: Global.SpecialPlatform
    name: SpecialPlatform
  - name: )
- uid: Global.IntBasePlatformer.OnCollideX(IntSolid)
  commentId: M:Global.IntBasePlatformer.OnCollideX(IntSolid)
  parent: Global.IntBasePlatformer
  name: OnCollideX(IntSolid)
  nameWithType: IntBasePlatformer.OnCollideX(IntSolid)
  fullName: IntBasePlatformer.OnCollideX(IntSolid)
  spec.csharp:
  - uid: Global.IntBasePlatformer.OnCollideX(IntSolid)
    name: OnCollideX
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.OnCollideX(IntSolid)
    name: OnCollideX
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.IntBasePlatformer.OnCollideY(IntSolid)
  commentId: M:Global.IntBasePlatformer.OnCollideY(IntSolid)
  parent: Global.IntBasePlatformer
  name: OnCollideY(IntSolid)
  nameWithType: IntBasePlatformer.OnCollideY(IntSolid)
  fullName: IntBasePlatformer.OnCollideY(IntSolid)
  spec.csharp:
  - uid: Global.IntBasePlatformer.OnCollideY(IntSolid)
    name: OnCollideY
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.OnCollideY(IntSolid)
    name: OnCollideY
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.IntActor.HurtBySpike
  commentId: F:Global.IntActor.HurtBySpike
  parent: Global.IntActor
  name: HurtBySpike
  nameWithType: IntActor.HurtBySpike
  fullName: IntActor.HurtBySpike
- uid: Global.IntActor.aabb
  commentId: F:Global.IntActor.aabb
  parent: Global.IntActor
  name: aabb
  nameWithType: IntActor.aabb
  fullName: IntActor.aabb
- uid: Global.IntActor.Left
  commentId: P:Global.IntActor.Left
  parent: Global.IntActor
  name: Left
  nameWithType: IntActor.Left
  fullName: IntActor.Left
- uid: Global.IntActor.Right
  commentId: P:Global.IntActor.Right
  parent: Global.IntActor
  name: Right
  nameWithType: IntActor.Right
  fullName: IntActor.Right
- uid: Global.IntActor.Top
  commentId: P:Global.IntActor.Top
  parent: Global.IntActor
  name: Top
  nameWithType: IntActor.Top
  fullName: IntActor.Top
- uid: Global.IntActor.Bottom
  commentId: P:Global.IntActor.Bottom
  parent: Global.IntActor
  name: Bottom
  nameWithType: IntActor.Bottom
  fullName: IntActor.Bottom
- uid: Global.IntActor.Size
  commentId: P:Global.IntActor.Size
  parent: Global.IntActor
  name: Size
  nameWithType: IntActor.Size
  fullName: IntActor.Size
- uid: Global.IntActor.WindInfluence
  commentId: F:Global.IntActor.WindInfluence
  parent: Global.IntActor
  name: WindInfluence
  nameWithType: IntActor.WindInfluence
  fullName: IntActor.WindInfluence
- uid: Global.IntActor.OnTakeDamageCallback
  commentId: F:Global.IntActor.OnTakeDamageCallback
  parent: Global.IntActor
  name: OnTakeDamageCallback
  nameWithType: IntActor.OnTakeDamageCallback
  fullName: IntActor.OnTakeDamageCallback
- uid: Global.IntActor.RidingSolid
  commentId: P:Global.IntActor.RidingSolid
  parent: Global.IntActor
  name: RidingSolid
  nameWithType: IntActor.RidingSolid
  fullName: IntActor.RidingSolid
- uid: Global.IntActor.RidingTangent
  commentId: P:Global.IntActor.RidingTangent
  parent: Global.IntActor
  name: RidingTangent
  nameWithType: IntActor.RidingTangent
  fullName: IntActor.RidingTangent
- uid: Global.IntActor.RidingNormal
  commentId: P:Global.IntActor.RidingNormal
  parent: Global.IntActor
  name: RidingNormal
  nameWithType: IntActor.RidingNormal
  fullName: IntActor.RidingNormal
- uid: Global.IntActor.IsRidingFlatSurface
  commentId: P:Global.IntActor.IsRidingFlatSurface
  parent: Global.IntActor
  name: IsRidingFlatSurface
  nameWithType: IntActor.IsRidingFlatSurface
  fullName: IntActor.IsRidingFlatSurface
- uid: Global.IntActor.Awake
  commentId: M:Global.IntActor.Awake
  parent: Global.IntActor
  name: Awake()
  nameWithType: IntActor.Awake()
  fullName: IntActor.Awake()
  spec.csharp:
  - uid: Global.IntActor.Awake
    name: Awake
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.Awake
    name: Awake
  - name: (
  - name: )
- uid: Global.IntActor.ManualInit
  commentId: M:Global.IntActor.ManualInit
  parent: Global.IntActor
  name: ManualInit()
  nameWithType: IntActor.ManualInit()
  fullName: IntActor.ManualInit()
  spec.csharp:
  - uid: Global.IntActor.ManualInit
    name: ManualInit
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.ManualInit
    name: ManualInit
  - name: (
  - name: )
- uid: Global.IntActor.GetAABBIntCollider
  commentId: M:Global.IntActor.GetAABBIntCollider
  parent: Global.IntActor
  name: GetAABBIntCollider()
  nameWithType: IntActor.GetAABBIntCollider()
  fullName: IntActor.GetAABBIntCollider()
  spec.csharp:
  - uid: Global.IntActor.GetAABBIntCollider
    name: GetAABBIntCollider
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetAABBIntCollider
    name: GetAABBIntCollider
  - name: (
  - name: )
- uid: Global.IntActor.EnsureAABBIntColliderSet
  commentId: M:Global.IntActor.EnsureAABBIntColliderSet
  parent: Global.IntActor
  name: EnsureAABBIntColliderSet()
  nameWithType: IntActor.EnsureAABBIntColliderSet()
  fullName: IntActor.EnsureAABBIntColliderSet()
  spec.csharp:
  - uid: Global.IntActor.EnsureAABBIntColliderSet
    name: EnsureAABBIntColliderSet
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.EnsureAABBIntColliderSet
    name: EnsureAABBIntColliderSet
  - name: (
  - name: )
- uid: Global.IntActor.IsRiding(IntSolid)
  commentId: M:Global.IntActor.IsRiding(IntSolid)
  parent: Global.IntActor
  name: IsRiding(IntSolid)
  nameWithType: IntActor.IsRiding(IntSolid)
  fullName: IntActor.IsRiding(IntSolid)
  spec.csharp:
  - uid: Global.IntActor.IsRiding(IntSolid)
    name: IsRiding
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.IntActor.IsRiding(IntSolid)
    name: IsRiding
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
  commentId: M:Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
  parent: Global.IntActor
  isExternal: true
  name: IsWalkingFlatOrUphill(Vector2)
  nameWithType: IntActor.IsWalkingFlatOrUphill(Vector2)
  fullName: IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
    name: IsWalkingFlatOrUphill
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
    name: IsWalkingFlatOrUphill
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
  commentId: M:Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
  parent: Global.IntActor
  isExternal: true
  name: GetEffectiveVelocity(Vector2)
  nameWithType: IntActor.GetEffectiveVelocity(Vector2)
  fullName: IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
    name: GetEffectiveVelocity
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
    name: GetEffectiveVelocity
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntActor.IsTouchingWall(IntSolid)
  commentId: M:Global.IntActor.IsTouchingWall(IntSolid)
  parent: Global.IntActor
  name: IsTouchingWall(IntSolid)
  nameWithType: IntActor.IsTouchingWall(IntSolid)
  fullName: IntActor.IsTouchingWall(IntSolid)
  spec.csharp:
  - uid: Global.IntActor.IsTouchingWall(IntSolid)
    name: IsTouchingWall
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.IntActor.IsTouchingWall(IntSolid)
    name: IsTouchingWall
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
  commentId: M:Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
  parent: Global.IntActor
  isExternal: true
  name: SolidContainsPoint(Vector2Int)
  nameWithType: IntActor.SolidContainsPoint(Vector2Int)
  fullName: IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
    name: SolidContainsPoint
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
    name: SolidContainsPoint
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  commentId: M:Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  parent: Global.IntActor
  name: RegisterOnTakeDamageCallback(Action)
  nameWithType: IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  fullName: IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
    name: RegisterOnTakeDamageCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
    name: RegisterOnTakeDamageCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  commentId: M:Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  parent: Global.IntActor
  name: UnregisterOnTakeDamageCallback(Action)
  nameWithType: IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  fullName: IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
    name: UnregisterOnTakeDamageCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
    name: UnregisterOnTakeDamageCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntActor.OnTakeDamage(System.Int32)
  commentId: M:Global.IntActor.OnTakeDamage(System.Int32)
  parent: Global.IntActor
  isExternal: true
  name: OnTakeDamage(int)
  nameWithType: IntActor.OnTakeDamage(int)
  fullName: IntActor.OnTakeDamage(int)
  nameWithType.vb: IntActor.OnTakeDamage(Integer)
  fullName.vb: IntActor.OnTakeDamage(Integer)
  name.vb: OnTakeDamage(Integer)
  spec.csharp:
  - uid: Global.IntActor.OnTakeDamage(System.Int32)
    name: OnTakeDamage
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnTakeDamage(System.Int32)
    name: OnTakeDamage
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Global.IntActor.ResetAuraCollisionMap
  commentId: M:Global.IntActor.ResetAuraCollisionMap
  parent: Global.IntActor
  name: ResetAuraCollisionMap()
  nameWithType: IntActor.ResetAuraCollisionMap()
  fullName: IntActor.ResetAuraCollisionMap()
  spec.csharp:
  - uid: Global.IntActor.ResetAuraCollisionMap
    name: ResetAuraCollisionMap
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResetAuraCollisionMap
    name: ResetAuraCollisionMap
  - name: (
  - name: )
- uid: Global.IntActor.ResetActorCollisionMap
  commentId: M:Global.IntActor.ResetActorCollisionMap
  parent: Global.IntActor
  name: ResetActorCollisionMap()
  nameWithType: IntActor.ResetActorCollisionMap()
  fullName: IntActor.ResetActorCollisionMap()
  spec.csharp:
  - uid: Global.IntActor.ResetActorCollisionMap
    name: ResetActorCollisionMap
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResetActorCollisionMap
    name: ResetActorCollisionMap
  - name: (
  - name: )
- uid: Global.IntActor.ResetCollisionMap
  commentId: M:Global.IntActor.ResetCollisionMap
  parent: Global.IntActor
  name: ResetCollisionMap()
  nameWithType: IntActor.ResetCollisionMap()
  fullName: IntActor.ResetCollisionMap()
  spec.csharp:
  - uid: Global.IntActor.ResetCollisionMap
    name: ResetCollisionMap
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResetCollisionMap
    name: ResetCollisionMap
  - name: (
  - name: )
- uid: Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
  commentId: M:Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
  parent: Global.IntActor
  isExternal: true
  name: ResetCollisionsAfterTime(IntObject, float)
  nameWithType: IntActor.ResetCollisionsAfterTime(IntObject, float)
  fullName: IntActor.ResetCollisionsAfterTime(IntObject, float)
  nameWithType.vb: IntActor.ResetCollisionsAfterTime(IntObject, Single)
  fullName.vb: IntActor.ResetCollisionsAfterTime(IntObject, Single)
  name.vb: ResetCollisionsAfterTime(IntObject, Single)
  spec.csharp:
  - uid: Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
    name: ResetCollisionsAfterTime
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
    name: ResetCollisionsAfterTime
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
  commentId: M:Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
  parent: Global.IntActor
  isExternal: true
  name: SetCollisionMapValue(IntObject, bool)
  nameWithType: IntActor.SetCollisionMapValue(IntObject, bool)
  fullName: IntActor.SetCollisionMapValue(IntObject, bool)
  nameWithType.vb: IntActor.SetCollisionMapValue(IntObject, Boolean)
  fullName.vb: IntActor.SetCollisionMapValue(IntObject, Boolean)
  name.vb: SetCollisionMapValue(IntObject, Boolean)
  spec.csharp:
  - uid: Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
    name: SetCollisionMapValue
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
    name: SetCollisionMapValue
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntActor.GetCollisionMapValue(IntObject)
  commentId: M:Global.IntActor.GetCollisionMapValue(IntObject)
  parent: Global.IntActor
  name: GetCollisionMapValue(IntObject)
  nameWithType: IntActor.GetCollisionMapValue(IntObject)
  fullName: IntActor.GetCollisionMapValue(IntObject)
  spec.csharp:
  - uid: Global.IntActor.GetCollisionMapValue(IntObject)
    name: GetCollisionMapValue
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetCollisionMapValue(IntObject)
    name: GetCollisionMapValue
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
- uid: Global.IntActor.OnTriggerEnd(IntTrigger)
  commentId: M:Global.IntActor.OnTriggerEnd(IntTrigger)
  parent: Global.IntActor
  name: OnTriggerEnd(IntTrigger)
  nameWithType: IntActor.OnTriggerEnd(IntTrigger)
  fullName: IntActor.OnTriggerEnd(IntTrigger)
  spec.csharp:
  - uid: Global.IntActor.OnTriggerEnd(IntTrigger)
    name: OnTriggerEnd
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnTriggerEnd(IntTrigger)
    name: OnTriggerEnd
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
- uid: Global.IntActor.CheckGrounded
  commentId: M:Global.IntActor.CheckGrounded
  parent: Global.IntActor
  name: CheckGrounded()
  nameWithType: IntActor.CheckGrounded()
  fullName: IntActor.CheckGrounded()
  spec.csharp:
  - uid: Global.IntActor.CheckGrounded
    name: CheckGrounded
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.CheckGrounded
    name: CheckGrounded
  - name: (
  - name: )
- uid: Global.IntActor.GroundActor
  commentId: M:Global.IntActor.GroundActor
  parent: Global.IntActor
  name: GroundActor()
  nameWithType: IntActor.GroundActor()
  fullName: IntActor.GroundActor()
  spec.csharp:
  - uid: Global.IntActor.GroundActor
    name: GroundActor
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.GroundActor
    name: GroundActor
  - name: (
  - name: )
- uid: Global.IntActor.CheckOnWall
  commentId: M:Global.IntActor.CheckOnWall
  parent: Global.IntActor
  name: CheckOnWall()
  nameWithType: IntActor.CheckOnWall()
  fullName: IntActor.CheckOnWall()
  spec.csharp:
  - uid: Global.IntActor.CheckOnWall
    name: CheckOnWall
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.CheckOnWall
    name: CheckOnWall
  - name: (
  - name: )
- uid: Global.IntActor.DropDownOneWay
  commentId: M:Global.IntActor.DropDownOneWay
  parent: Global.IntActor
  name: DropDownOneWay()
  nameWithType: IntActor.DropDownOneWay()
  fullName: IntActor.DropDownOneWay()
  spec.csharp:
  - uid: Global.IntActor.DropDownOneWay
    name: DropDownOneWay
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.DropDownOneWay
    name: DropDownOneWay
  - name: (
  - name: )
- uid: Global.IntActor.activeWater
  commentId: P:Global.IntActor.activeWater
  parent: Global.IntActor
  name: activeWater
  nameWithType: IntActor.activeWater
  fullName: IntActor.activeWater
- uid: Global.IntActor.GetSubmergedPercentage
  commentId: M:Global.IntActor.GetSubmergedPercentage
  parent: Global.IntActor
  name: GetSubmergedPercentage()
  nameWithType: IntActor.GetSubmergedPercentage()
  fullName: IntActor.GetSubmergedPercentage()
  spec.csharp:
  - uid: Global.IntActor.GetSubmergedPercentage
    name: GetSubmergedPercentage
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetSubmergedPercentage
    name: GetSubmergedPercentage
  - name: (
  - name: )
- uid: Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
  commentId: M:Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
  parent: Global.IntActor
  isExternal: true
  name: GetSubmergedPercentage(Vector2Int)
  nameWithType: IntActor.GetSubmergedPercentage(Vector2Int)
  fullName: IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
    name: GetSubmergedPercentage
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
    name: GetSubmergedPercentage
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntActor.IsInWater
  commentId: P:Global.IntActor.IsInWater
  parent: Global.IntActor
  name: IsInWater
  nameWithType: IntActor.IsInWater
  fullName: IntActor.IsInWater
- uid: Global.IntActor.ApplyWind(UnityEngine.Vector2)
  commentId: M:Global.IntActor.ApplyWind(UnityEngine.Vector2)
  parent: Global.IntActor
  isExternal: true
  name: ApplyWind(Vector2)
  nameWithType: IntActor.ApplyWind(Vector2)
  fullName: IntActor.ApplyWind(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntActor.ApplyWind(UnityEngine.Vector2)
    name: ApplyWind
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.ApplyWind(UnityEngine.Vector2)
    name: ApplyWind
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntActor.RemoveWind
  commentId: M:Global.IntActor.RemoveWind
  parent: Global.IntActor
  name: RemoveWind()
  nameWithType: IntActor.RemoveWind()
  fullName: IntActor.RemoveWind()
  spec.csharp:
  - uid: Global.IntActor.RemoveWind
    name: RemoveWind
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.RemoveWind
    name: RemoveWind
  - name: (
  - name: )
- uid: Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: ResolvePosition(Vector2, float, int, bool, bool, ActorAction, TriggerAction)
  nameWithType: IntActor.ResolvePosition(Vector2, float, int, bool, bool, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.ResolvePosition(UnityEngine.Vector2, float, int, bool, bool, IntObject.ActorAction, IntObject.TriggerAction)
  nameWithType.vb: IntActor.ResolvePosition(Vector2, Single, Integer, Boolean, Boolean, IntObject.ActorAction, IntObject.TriggerAction)
  fullName.vb: IntActor.ResolvePosition(UnityEngine.Vector2, Single, Integer, Boolean, Boolean, IntObject.ActorAction, IntObject.TriggerAction)
  name.vb: ResolvePosition(Vector2, Single, Integer, Boolean, Boolean, ActorAction, TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
    name: ResolvePosition
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
    name: ResolvePosition
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
  commentId: M:Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
  parent: Global.IntActor
  isExternal: true
  name: ResolvePositionNoSlide(Vector2Int)
  nameWithType: IntActor.ResolvePositionNoSlide(Vector2Int)
  fullName: IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
    name: ResolvePositionNoSlide
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
    name: ResolvePositionNoSlide
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
  commentId: M:Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
  parent: Global.IntActor
  isExternal: true
  name: EfficientMove(Vector2, SolidAction, SolidAction)
  nameWithType: IntActor.EfficientMove(Vector2, IntObject.SolidAction, IntObject.SolidAction)
  fullName: IntActor.EfficientMove(UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction)
  spec.csharp:
  - uid: Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
    name: EfficientMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
    name: EfficientMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
- uid: Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: MoveX(float, SolidAction, ActorAction, TriggerAction)
  nameWithType: IntActor.MoveX(float, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.MoveX(float, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  nameWithType.vb: IntActor.MoveX(Single, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName.vb: IntActor.MoveX(Single, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  name.vb: MoveX(Single, SolidAction, ActorAction, TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: MoveX
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: MoveX
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: MoveY(float, SolidAction, ActorAction, TriggerAction)
  nameWithType: IntActor.MoveY(float, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.MoveY(float, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  nameWithType.vb: IntActor.MoveY(Single, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName.vb: IntActor.MoveY(Single, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  name.vb: MoveY(Single, SolidAction, ActorAction, TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: MoveY
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: MoveY
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
  commentId: M:Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
  parent: Global.IntActor
  isExternal: true
  name: getIntersectParameters(int, float, float, float)
  nameWithType: IntActor.getIntersectParameters(int, float, float, float)
  fullName: IntActor.getIntersectParameters(int, float, float, float)
  nameWithType.vb: IntActor.getIntersectParameters(Integer, Single, Single, Single)
  fullName.vb: IntActor.getIntersectParameters(Integer, Single, Single, Single)
  name.vb: getIntersectParameters(Integer, Single, Single, Single)
  spec.csharp:
  - uid: Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
    name: getIntersectParameters
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
    name: getIntersectParameters
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntActor.NotifyObjectKilled(IntObject)
  commentId: M:Global.IntActor.NotifyObjectKilled(IntObject)
  parent: Global.IntActor
  name: NotifyObjectKilled(IntObject)
  nameWithType: IntActor.NotifyObjectKilled(IntObject)
  fullName: IntActor.NotifyObjectKilled(IntObject)
  spec.csharp:
  - uid: Global.IntActor.NotifyObjectKilled(IntObject)
    name: NotifyObjectKilled
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
  spec.vb:
  - uid: Global.IntActor.NotifyObjectKilled(IntObject)
    name: NotifyObjectKilled
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
- uid: Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: SlantMove(Vector2, ActorAction, TriggerAction)
  nameWithType: IntActor.SlantMove(Vector2, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.SlantMove(UnityEngine.Vector2, IntObject.ActorAction, IntObject.TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
    name: SlantMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
    name: SlantMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  name: CheckActorTriggerCollisions(ActorAction, TriggerAction)
  nameWithType: IntActor.CheckActorTriggerCollisions(IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.CheckActorTriggerCollisions(IntObject.ActorAction, IntObject.TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
    name: CheckActorTriggerCollisions
  - name: (
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
    name: CheckActorTriggerCollisions
  - name: (
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.CheckActorInteractableCollisions
  commentId: M:Global.IntActor.CheckActorInteractableCollisions
  parent: Global.IntActor
  name: CheckActorInteractableCollisions()
  nameWithType: IntActor.CheckActorInteractableCollisions()
  fullName: IntActor.CheckActorInteractableCollisions()
  spec.csharp:
  - uid: Global.IntActor.CheckActorInteractableCollisions
    name: CheckActorInteractableCollisions
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.CheckActorInteractableCollisions
    name: CheckActorInteractableCollisions
  - name: (
  - name: )
- uid: Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: SimpleMove(Vector2, SolidAction, SolidAction, ActorAction, TriggerAction)
  nameWithType: IntActor.SimpleMove(Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.SimpleMove(UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: SimpleMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: SimpleMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
  commentId: M:Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
  parent: Global.IntActor
  isExternal: true
  name: ComplexMove(Vector2, SolidAction, SolidAction, ActorAction, TriggerAction, int)
  nameWithType: IntActor.ComplexMove(Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction, int)
  fullName: IntActor.ComplexMove(UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction, int)
  nameWithType.vb: IntActor.ComplexMove(Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction, Integer)
  fullName.vb: IntActor.ComplexMove(UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction, Integer)
  name.vb: ComplexMove(Vector2, SolidAction, SolidAction, ActorAction, TriggerAction, Integer)
  spec.csharp:
  - uid: Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
    name: ComplexMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
    name: ComplexMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Global.IntObject.section
  commentId: P:Global.IntObject.section
  parent: Global.IntObject
  name: section
  nameWithType: IntObject.section
  fullName: IntObject.section
- uid: Global.IntObject.state
  commentId: P:Global.IntObject.state
  parent: Global.IntObject
  name: state
  nameWithType: IntObject.state
  fullName: IntObject.state
- uid: Global.IntObject.int_collider
  commentId: F:Global.IntObject.int_collider
  parent: Global.IntObject
  name: int_collider
  nameWithType: IntObject.int_collider
  fullName: IntObject.int_collider
- uid: Global.IntObject.remainder
  commentId: F:Global.IntObject.remainder
  parent: Global.IntObject
  name: remainder
  nameWithType: IntObject.remainder
  fullName: IntObject.remainder
- uid: Global.IntObject.StartPosition
  commentId: F:Global.IntObject.StartPosition
  parent: Global.IntObject
  name: StartPosition
  nameWithType: IntObject.StartPosition
  fullName: IntObject.StartPosition
- uid: Global.IntObject.AttachedToPlayer
  commentId: F:Global.IntObject.AttachedToPlayer
  parent: Global.IntObject
  name: AttachedToPlayer
  nameWithType: IntObject.AttachedToPlayer
  fullName: IntObject.AttachedToPlayer
- uid: Global.IntObject.IgnoredObjectsMap
  commentId: F:Global.IntObject.IgnoredObjectsMap
  parent: Global.IntObject
  name: IgnoredObjectsMap
  nameWithType: IntObject.IgnoredObjectsMap
  fullName: IntObject.IgnoredObjectsMap
- uid: Global.IntObject.KilledCallback
  commentId: F:Global.IntObject.KilledCallback
  parent: Global.IntObject
  name: KilledCallback
  nameWithType: IntObject.KilledCallback
  fullName: IntObject.KilledCallback
- uid: Global.IntObject.Position
  commentId: P:Global.IntObject.Position
  parent: Global.IntObject
  name: Position
  nameWithType: IntObject.Position
  fullName: IntObject.Position
- uid: Global.IntObject.GetStartWorldPosition
  commentId: P:Global.IntObject.GetStartWorldPosition
  parent: Global.IntObject
  name: GetStartWorldPosition
  nameWithType: IntObject.GetStartWorldPosition
  fullName: IntObject.GetStartWorldPosition
- uid: Global.IntObject.collider_type
  commentId: P:Global.IntObject.collider_type
  parent: Global.IntObject
  name: collider_type
  nameWithType: IntObject.collider_type
  fullName: IntObject.collider_type
- uid: Global.IntObject.MarkedForKill
  commentId: P:Global.IntObject.MarkedForKill
  parent: Global.IntObject
  name: MarkedForKill
  nameWithType: IntObject.MarkedForKill
  fullName: IntObject.MarkedForKill
- uid: Global.IntObject.ObjectID
  commentId: F:Global.IntObject.ObjectID
  parent: Global.IntObject
  name: ObjectID
  nameWithType: IntObject.ObjectID
  fullName: IntObject.ObjectID
- uid: Global.IntObject.DestroyOnKill
  commentId: F:Global.IntObject.DestroyOnKill
  parent: Global.IntObject
  name: DestroyOnKill
  nameWithType: IntObject.DestroyOnKill
  fullName: IntObject.DestroyOnKill
- uid: Global.IntObject.RespawnBehavior
  commentId: F:Global.IntObject.RespawnBehavior
  parent: Global.IntObject
  name: RespawnBehavior
  nameWithType: IntObject.RespawnBehavior
  fullName: IntObject.RespawnBehavior
- uid: Global.IntObject.Status
  commentId: F:Global.IntObject.Status
  parent: Global.IntObject
  name: Status
  nameWithType: IntObject.Status
  fullName: IntObject.Status
- uid: Global.IntObject.InitialStatus
  commentId: F:Global.IntObject.InitialStatus
  parent: Global.IntObject
  name: InitialStatus
  nameWithType: IntObject.InitialStatus
  fullName: IntObject.InitialStatus
- uid: Global.IntObject.SaveObject
  commentId: F:Global.IntObject.SaveObject
  parent: Global.IntObject
  name: SaveObject
  nameWithType: IntObject.SaveObject
  fullName: IntObject.SaveObject
- uid: Global.IntObject.IsInSetPiece
  commentId: P:Global.IntObject.IsInSetPiece
  parent: Global.IntObject
  name: IsInSetPiece
  nameWithType: IntObject.IsInSetPiece
  fullName: IntObject.IsInSetPiece
- uid: Global.IntObject.Init
  commentId: M:Global.IntObject.Init
  parent: Global.IntObject
  name: Init()
  nameWithType: IntObject.Init()
  fullName: IntObject.Init()
  spec.csharp:
  - uid: Global.IntObject.Init
    name: Init
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.Init
    name: Init
  - name: (
  - name: )
- uid: Global.IntObject.FindIntColliderState(System.Int32)
  commentId: M:Global.IntObject.FindIntColliderState(System.Int32)
  parent: Global.IntObject
  isExternal: true
  name: FindIntColliderState(int)
  nameWithType: IntObject.FindIntColliderState(int)
  fullName: IntObject.FindIntColliderState(int)
  nameWithType.vb: IntObject.FindIntColliderState(Integer)
  fullName.vb: IntObject.FindIntColliderState(Integer)
  name.vb: FindIntColliderState(Integer)
  spec.csharp:
  - uid: Global.IntObject.FindIntColliderState(System.Int32)
    name: FindIntColliderState
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.FindIntColliderState(System.Int32)
    name: FindIntColliderState
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Global.IntObject.GetLocalGameStates
  commentId: M:Global.IntObject.GetLocalGameStates
  parent: Global.IntObject
  name: GetLocalGameStates()
  nameWithType: IntObject.GetLocalGameStates()
  fullName: IntObject.GetLocalGameStates()
  spec.csharp:
  - uid: Global.IntObject.GetLocalGameStates
    name: GetLocalGameStates
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetLocalGameStates
    name: GetLocalGameStates
  - name: (
  - name: )
- uid: Global.IntObject.UnregisterSelf
  commentId: M:Global.IntObject.UnregisterSelf
  parent: Global.IntObject
  name: UnregisterSelf()
  nameWithType: IntObject.UnregisterSelf()
  fullName: IntObject.UnregisterSelf()
  spec.csharp:
  - uid: Global.IntObject.UnregisterSelf
    name: UnregisterSelf
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.UnregisterSelf
    name: UnregisterSelf
  - name: (
  - name: )
- uid: Global.IntObject.RegisterKilledCallback(IntObject.Action)
  commentId: M:Global.IntObject.RegisterKilledCallback(IntObject.Action)
  parent: Global.IntObject
  name: RegisterKilledCallback(Action)
  nameWithType: IntObject.RegisterKilledCallback(IntObject.Action)
  fullName: IntObject.RegisterKilledCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntObject.RegisterKilledCallback(IntObject.Action)
    name: RegisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntObject.RegisterKilledCallback(IntObject.Action)
    name: RegisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  commentId: M:Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  parent: Global.IntObject
  name: UnregisterKilledCallback(Action)
  nameWithType: IntObject.UnregisterKilledCallback(IntObject.Action)
  fullName: IntObject.UnregisterKilledCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntObject.UnregisterKilledCallback(IntObject.Action)
    name: UnregisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntObject.UnregisterKilledCallback(IntObject.Action)
    name: UnregisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  commentId: M:Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  parent: Global.IntObject
  isExternal: true
  name: IsContainedInRect(Rect)
  nameWithType: IntObject.IsContainedInRect(Rect)
  fullName: IntObject.IsContainedInRect(UnityEngine.Rect)
  spec.csharp:
  - uid: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
    name: IsContainedInRect
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
    name: IsContainedInRect
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: )
- uid: Global.IntObject.SetStatus(ObjectStatus)
  commentId: M:Global.IntObject.SetStatus(ObjectStatus)
  parent: Global.IntObject
  name: SetStatus(ObjectStatus)
  nameWithType: IntObject.SetStatus(ObjectStatus)
  fullName: IntObject.SetStatus(ObjectStatus)
  spec.csharp:
  - uid: Global.IntObject.SetStatus(ObjectStatus)
    name: SetStatus
  - name: (
  - uid: Global.ObjectStatus
    name: ObjectStatus
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetStatus(ObjectStatus)
    name: SetStatus
  - name: (
  - uid: Global.ObjectStatus
    name: ObjectStatus
  - name: )
- uid: Global.IntObject.OnKill(System.Boolean)
  commentId: M:Global.IntObject.OnKill(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: OnKill(bool)
  nameWithType: IntObject.OnKill(bool)
  fullName: IntObject.OnKill(bool)
  nameWithType.vb: IntObject.OnKill(Boolean)
  fullName.vb: IntObject.OnKill(Boolean)
  name.vb: OnKill(Boolean)
  spec.csharp:
  - uid: Global.IntObject.OnKill(System.Boolean)
    name: OnKill
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.OnKill(System.Boolean)
    name: OnKill
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.Kill
  commentId: M:Global.IntObject.Kill
  parent: Global.IntObject
  name: Kill()
  nameWithType: IntObject.Kill()
  fullName: IntObject.Kill()
  spec.csharp:
  - uid: Global.IntObject.Kill
    name: Kill
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill
    name: Kill
  - name: (
  - name: )
- uid: Global.IntObject.Kill(System.Boolean)
  commentId: M:Global.IntObject.Kill(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: Kill(bool)
  nameWithType: IntObject.Kill(bool)
  fullName: IntObject.Kill(bool)
  nameWithType.vb: IntObject.Kill(Boolean)
  fullName.vb: IntObject.Kill(Boolean)
  name.vb: Kill(Boolean)
  spec.csharp:
  - uid: Global.IntObject.Kill(System.Boolean)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill(System.Boolean)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.Kill(System.Single)
  commentId: M:Global.IntObject.Kill(System.Single)
  parent: Global.IntObject
  isExternal: true
  name: Kill(float)
  nameWithType: IntObject.Kill(float)
  fullName: IntObject.Kill(float)
  nameWithType.vb: IntObject.Kill(Single)
  fullName.vb: IntObject.Kill(Single)
  name.vb: Kill(Single)
  spec.csharp:
  - uid: Global.IntObject.Kill(System.Single)
    name: Kill
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill(System.Single)
    name: Kill
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntObject.Kill(System.Boolean,System.Single)
  commentId: M:Global.IntObject.Kill(System.Boolean,System.Single)
  parent: Global.IntObject
  isExternal: true
  name: Kill(bool, float)
  nameWithType: IntObject.Kill(bool, float)
  fullName: IntObject.Kill(bool, float)
  nameWithType.vb: IntObject.Kill(Boolean, Single)
  fullName.vb: IntObject.Kill(Boolean, Single)
  name.vb: Kill(Boolean, Single)
  spec.csharp:
  - uid: Global.IntObject.Kill(System.Boolean,System.Single)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill(System.Boolean,System.Single)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  commentId: M:Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  parent: Global.IntObject
  isExternal: true
  name: IgnoreObjectCollisions(IntObject, float)
  nameWithType: IntObject.IgnoreObjectCollisions(IntObject, float)
  fullName: IntObject.IgnoreObjectCollisions(IntObject, float)
  nameWithType.vb: IntObject.IgnoreObjectCollisions(IntObject, Single)
  fullName.vb: IntObject.IgnoreObjectCollisions(IntObject, Single)
  name.vb: IgnoreObjectCollisions(IntObject, Single)
  spec.csharp:
  - uid: Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
    name: IgnoreObjectCollisions
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
    name: IgnoreObjectCollisions
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntObject.SleepObject
  commentId: M:Global.IntObject.SleepObject
  parent: Global.IntObject
  name: SleepObject()
  nameWithType: IntObject.SleepObject()
  fullName: IntObject.SleepObject()
  spec.csharp:
  - uid: Global.IntObject.SleepObject
    name: SleepObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.SleepObject
    name: SleepObject
  - name: (
  - name: )
- uid: Global.IntObject.OptimizeSleepObject
  commentId: M:Global.IntObject.OptimizeSleepObject
  parent: Global.IntObject
  name: OptimizeSleepObject()
  nameWithType: IntObject.OptimizeSleepObject()
  fullName: IntObject.OptimizeSleepObject()
  spec.csharp:
  - uid: Global.IntObject.OptimizeSleepObject
    name: OptimizeSleepObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.OptimizeSleepObject
    name: OptimizeSleepObject
  - name: (
  - name: )
- uid: Global.IntObject.WakeObject
  commentId: M:Global.IntObject.WakeObject
  parent: Global.IntObject
  name: WakeObject()
  nameWithType: IntObject.WakeObject()
  fullName: IntObject.WakeObject()
  spec.csharp:
  - uid: Global.IntObject.WakeObject
    name: WakeObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.WakeObject
    name: WakeObject
  - name: (
  - name: )
- uid: Global.IntObject.EnableObject
  commentId: M:Global.IntObject.EnableObject
  parent: Global.IntObject
  name: EnableObject()
  nameWithType: IntObject.EnableObject()
  fullName: IntObject.EnableObject()
  spec.csharp:
  - uid: Global.IntObject.EnableObject
    name: EnableObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.EnableObject
    name: EnableObject
  - name: (
  - name: )
- uid: Global.IntObject.DisableObject
  commentId: M:Global.IntObject.DisableObject
  parent: Global.IntObject
  name: DisableObject()
  nameWithType: IntObject.DisableObject()
  fullName: IntObject.DisableObject()
  spec.csharp:
  - uid: Global.IntObject.DisableObject
    name: DisableObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.DisableObject
    name: DisableObject
  - name: (
  - name: )
- uid: Global.IntObject.RespawnObject
  commentId: M:Global.IntObject.RespawnObject
  parent: Global.IntObject
  name: RespawnObject()
  nameWithType: IntObject.RespawnObject()
  fullName: IntObject.RespawnObject()
  spec.csharp:
  - uid: Global.IntObject.RespawnObject
    name: RespawnObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.RespawnObject
    name: RespawnObject
  - name: (
  - name: )
- uid: Global.IntObject.ResetObject
  commentId: M:Global.IntObject.ResetObject
  parent: Global.IntObject
  name: ResetObject()
  nameWithType: IntObject.ResetObject()
  fullName: IntObject.ResetObject()
  spec.csharp:
  - uid: Global.IntObject.ResetObject
    name: ResetObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.ResetObject
    name: ResetObject
  - name: (
  - name: )
- uid: Global.IntObject.RecursiveSetCollidable(System.Boolean)
  commentId: M:Global.IntObject.RecursiveSetCollidable(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: RecursiveSetCollidable(bool)
  nameWithType: IntObject.RecursiveSetCollidable(bool)
  fullName: IntObject.RecursiveSetCollidable(bool)
  nameWithType.vb: IntObject.RecursiveSetCollidable(Boolean)
  fullName.vb: IntObject.RecursiveSetCollidable(Boolean)
  name.vb: RecursiveSetCollidable(Boolean)
  spec.csharp:
  - uid: Global.IntObject.RecursiveSetCollidable(System.Boolean)
    name: RecursiveSetCollidable
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.RecursiveSetCollidable(System.Boolean)
    name: RecursiveSetCollidable
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.SetColliderState(IntColliderState)
  commentId: M:Global.IntObject.SetColliderState(IntColliderState)
  parent: Global.IntObject
  name: SetColliderState(IntColliderState)
  nameWithType: IntObject.SetColliderState(IntColliderState)
  fullName: IntObject.SetColliderState(IntColliderState)
  spec.csharp:
  - uid: Global.IntObject.SetColliderState(IntColliderState)
    name: SetColliderState
  - name: (
  - uid: Global.IntColliderState
    name: IntColliderState
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetColliderState(IntColliderState)
    name: SetColliderState
  - name: (
  - uid: Global.IntColliderState
    name: IntColliderState
  - name: )
- uid: Global.IntObject.Translate(UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.Translate(UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: Translate(Vector2Int)
  nameWithType: IntObject.Translate(Vector2Int)
  fullName: IntObject.Translate(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2Int)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2Int)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.Translate(UnityEngine.Vector2)
  commentId: M:Global.IntObject.Translate(UnityEngine.Vector2)
  parent: Global.IntObject
  isExternal: true
  name: Translate(Vector2)
  nameWithType: IntObject.Translate(Vector2)
  fullName: IntObject.Translate(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: SetPosition(Vector2Int)
  nameWithType: IntObject.SetPosition(Vector2Int)
  fullName: IntObject.SetPosition(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.SetPosition(UnityEngine.Vector2Int)
    name: SetPosition
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetPosition(UnityEngine.Vector2Int)
    name: SetPosition
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.SetCollidable(System.Boolean)
  commentId: M:Global.IntObject.SetCollidable(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: SetCollidable(bool)
  nameWithType: IntObject.SetCollidable(bool)
  fullName: IntObject.SetCollidable(bool)
  nameWithType.vb: IntObject.SetCollidable(Boolean)
  fullName.vb: IntObject.SetCollidable(Boolean)
  name.vb: SetCollidable(Boolean)
  spec.csharp:
  - uid: Global.IntObject.SetCollidable(System.Boolean)
    name: SetCollidable
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetCollidable(System.Boolean)
    name: SetCollidable
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.GetCollidable
  commentId: M:Global.IntObject.GetCollidable
  parent: Global.IntObject
  name: GetCollidable()
  nameWithType: IntObject.GetCollidable()
  fullName: IntObject.GetCollidable()
  spec.csharp:
  - uid: Global.IntObject.GetCollidable
    name: GetCollidable
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetCollidable
    name: GetCollidable
  - name: (
  - name: )
- uid: Global.IntObject.GetCollider
  commentId: M:Global.IntObject.GetCollider
  parent: Global.IntObject
  name: GetCollider()
  nameWithType: IntObject.GetCollider()
  fullName: IntObject.GetCollider()
  spec.csharp:
  - uid: Global.IntObject.GetCollider
    name: GetCollider
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetCollider
    name: GetCollider
  - name: (
  - name: )
- uid: Global.IntObject.GetColliderState
  commentId: M:Global.IntObject.GetColliderState
  parent: Global.IntObject
  name: GetColliderState()
  nameWithType: IntObject.GetColliderState()
  fullName: IntObject.GetColliderState()
  spec.csharp:
  - uid: Global.IntObject.GetColliderState
    name: GetColliderState
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetColliderState
    name: GetColliderState
  - name: (
  - name: )
- uid: Global.IntObject.Overlaps(IntObject)
  commentId: M:Global.IntObject.Overlaps(IntObject)
  parent: Global.IntObject
  name: Overlaps(IntObject)
  nameWithType: IntObject.Overlaps(IntObject)
  fullName: IntObject.Overlaps(IntObject)
  spec.csharp:
  - uid: Global.IntObject.Overlaps(IntObject)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
  spec.vb:
  - uid: Global.IntObject.Overlaps(IntObject)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
- uid: Global.IntObject.RayCast(IntRay)
  commentId: M:Global.IntObject.RayCast(IntRay)
  parent: Global.IntObject
  name: RayCast(IntRay)
  nameWithType: IntObject.RayCast(IntRay)
  fullName: IntObject.RayCast(IntRay)
  spec.csharp:
  - uid: Global.IntObject.RayCast(IntRay)
    name: RayCast
  - name: (
  - uid: Global.IntRay
    name: IntRay
  - name: )
  spec.vb:
  - uid: Global.IntObject.RayCast(IntRay)
    name: RayCast
  - name: (
  - uid: Global.IntRay
    name: IntRay
  - name: )
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: CollideAt(List<IntSolid>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntSolid>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntSolid>, UnityEngine.Vector2Int)
  nameWithType.vb: IntObject.CollideAt(List(Of IntSolid), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntSolid), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntSolid), Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntSolid
    name: IntSolid
  - name: '>'
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: CollideAt(List<IntActor>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntActor>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntActor>, UnityEngine.Vector2Int)
  nameWithType.vb: IntObject.CollideAt(List(Of IntActor), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntActor), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntActor), Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntActor
    name: IntActor
  - name: '>'
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntActor
    name: IntActor
  - name: )
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: CollideAt(List<IntTrigger>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntTrigger>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntTrigger>, UnityEngine.Vector2Int)
  nameWithType.vb: IntObject.CollideAt(List(Of IntTrigger), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntTrigger), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntTrigger), Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: '>'
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.OnDrawGizmos
  commentId: M:Global.IntObject.OnDrawGizmos
  parent: Global.IntObject
  name: OnDrawGizmos()
  nameWithType: IntObject.OnDrawGizmos()
  fullName: IntObject.OnDrawGizmos()
  spec.csharp:
  - uid: Global.IntObject.OnDrawGizmos
    name: OnDrawGizmos
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.OnDrawGizmos
    name: OnDrawGizmos
  - name: (
  - name: )
- uid: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  commentId: M:Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  parent: Global.IntObject
  name: LoadObjectSaveData(IntObjectSaveData)
  nameWithType: IntObject.LoadObjectSaveData(IntObjectSaveData)
  fullName: IntObject.LoadObjectSaveData(IntObjectSaveData)
  spec.csharp:
  - uid: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
    name: LoadObjectSaveData
  - name: (
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
  spec.vb:
  - uid: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
    name: LoadObjectSaveData
  - name: (
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
- uid: Global.IntObject.OnPostLoadSaveFile
  commentId: M:Global.IntObject.OnPostLoadSaveFile
  parent: Global.IntObject
  name: OnPostLoadSaveFile()
  nameWithType: IntObject.OnPostLoadSaveFile()
  fullName: IntObject.OnPostLoadSaveFile()
  spec.csharp:
  - uid: Global.IntObject.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ISavableObject`1
  commentId: T:Global.ISavableObject`1
  name: ISavableObject<T>
  nameWithType: ISavableObject<T>
  fullName: ISavableObject<T>
  nameWithType.vb: ISavableObject(Of T)
  fullName.vb: ISavableObject(Of T)
  name.vb: ISavableObject(Of T)
  spec.csharp:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: Global.Player.EffectAnimator*
  commentId: Overload:Global.Player.EffectAnimator
  name: EffectAnimator
  nameWithType: Player.EffectAnimator
  fullName: Player.EffectAnimator
- uid: UnityEngine.Animator
  commentId: T:UnityEngine.Animator
  parent: UnityEngine
  isExternal: true
  name: Animator
  nameWithType: Animator
  fullName: UnityEngine.Animator
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: Global.Afterimage
  commentId: T:Global.Afterimage
  name: Afterimage
  nameWithType: Afterimage
  fullName: Afterimage
- uid: UnityEngine.ParticleSystem
  commentId: T:UnityEngine.ParticleSystem
  parent: UnityEngine
  isExternal: true
  name: ParticleSystem
  nameWithType: ParticleSystem
  fullName: UnityEngine.ParticleSystem
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UnityEngine.AudioSource
  commentId: T:UnityEngine.AudioSource
  parent: UnityEngine
  isExternal: true
  name: AudioSource
  nameWithType: AudioSource
  fullName: UnityEngine.AudioSource
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.Player.FirstAuraDashDirection*
  commentId: Overload:Global.Player.FirstAuraDashDirection
  name: FirstAuraDashDirection
  nameWithType: Player.FirstAuraDashDirection
  fullName: Player.FirstAuraDashDirection
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.MinorCheckpoint
  commentId: T:Global.MinorCheckpoint
  name: MinorCheckpoint
  nameWithType: MinorCheckpoint
  fullName: MinorCheckpoint
- uid: Global.MajorCheckpoint
  commentId: T:Global.MajorCheckpoint
  name: MajorCheckpoint
  nameWithType: MajorCheckpoint
  fullName: MajorCheckpoint
- uid: Global.CameraTargetController
  commentId: T:Global.CameraTargetController
  name: CameraTargetController
  nameWithType: CameraTargetController
  fullName: CameraTargetController
- uid: Global.Player.Start*
  commentId: Overload:Global.Player.Start
  name: Start
  nameWithType: Player.Start
  fullName: Player.Start
- uid: Global.IntBasePlatformer.ResetState
  commentId: M:Global.IntBasePlatformer.ResetState
  parent: Global.IntBasePlatformer
  name: ResetState()
  nameWithType: IntBasePlatformer.ResetState()
  fullName: IntBasePlatformer.ResetState()
  spec.csharp:
  - uid: Global.IntBasePlatformer.ResetState
    name: ResetState
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.ResetState
    name: ResetState
  - name: (
  - name: )
- uid: Global.Player.ResetState*
  commentId: Overload:Global.Player.ResetState
  name: ResetState
  nameWithType: Player.ResetState
  fullName: Player.ResetState
- uid: Global.IntObject.RegisterSelf
  commentId: M:Global.IntObject.RegisterSelf
  parent: Global.IntObject
  name: RegisterSelf()
  nameWithType: IntObject.RegisterSelf()
  fullName: IntObject.RegisterSelf()
  spec.csharp:
  - uid: Global.IntObject.RegisterSelf
    name: RegisterSelf
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.RegisterSelf
    name: RegisterSelf
  - name: (
  - name: )
- uid: Global.Player.RegisterSelf*
  commentId: Overload:Global.Player.RegisterSelf
  name: RegisterSelf
  nameWithType: Player.RegisterSelf
  fullName: Player.RegisterSelf
- uid: Global.Player.GetTarget*
  commentId: Overload:Global.Player.GetTarget
  name: GetTarget
  nameWithType: Player.GetTarget
  fullName: Player.GetTarget
- uid: Global.IntBasePlatformer.UpdateInput
  commentId: M:Global.IntBasePlatformer.UpdateInput
  parent: Global.IntBasePlatformer
  name: UpdateInput()
  nameWithType: IntBasePlatformer.UpdateInput()
  fullName: IntBasePlatformer.UpdateInput()
  spec.csharp:
  - uid: Global.IntBasePlatformer.UpdateInput
    name: UpdateInput
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.UpdateInput
    name: UpdateInput
  - name: (
  - name: )
- uid: Global.Player.UpdateInput*
  commentId: Overload:Global.Player.UpdateInput
  name: UpdateInput
  nameWithType: Player.UpdateInput
  fullName: Player.UpdateInput
- uid: Global.Player.ChangeWeaponAnimatorState*
  commentId: Overload:Global.Player.ChangeWeaponAnimatorState
  name: ChangeWeaponAnimatorState
  nameWithType: Player.ChangeWeaponAnimatorState
  fullName: Player.ChangeWeaponAnimatorState
- uid: Global.IntBasePlatformer.PostInputUpdate
  commentId: M:Global.IntBasePlatformer.PostInputUpdate
  parent: Global.IntBasePlatformer
  name: PostInputUpdate()
  nameWithType: IntBasePlatformer.PostInputUpdate()
  fullName: IntBasePlatformer.PostInputUpdate()
  spec.csharp:
  - uid: Global.IntBasePlatformer.PostInputUpdate
    name: PostInputUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.PostInputUpdate
    name: PostInputUpdate
  - name: (
  - name: )
- uid: Global.Player.PostInputUpdate*
  commentId: Overload:Global.Player.PostInputUpdate
  name: PostInputUpdate
  nameWithType: Player.PostInputUpdate
  fullName: Player.PostInputUpdate
- uid: Global.IntBasePlatformer.Animate
  commentId: M:Global.IntBasePlatformer.Animate
  parent: Global.IntBasePlatformer
  name: Animate()
  nameWithType: IntBasePlatformer.Animate()
  fullName: IntBasePlatformer.Animate()
  spec.csharp:
  - uid: Global.IntBasePlatformer.Animate
    name: Animate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.Animate
    name: Animate
  - name: (
  - name: )
- uid: Global.Player.Animate*
  commentId: Overload:Global.Player.Animate
  name: Animate
  nameWithType: Player.Animate
  fullName: Player.Animate
- uid: Global.Player.CanInteract*
  commentId: Overload:Global.Player.CanInteract
  name: CanInteract
  nameWithType: Player.CanInteract
  fullName: Player.CanInteract
- uid: Global.Player.ResetPlayerMovement*
  commentId: Overload:Global.Player.ResetPlayerMovement
  name: ResetPlayerMovement
  nameWithType: Player.ResetPlayerMovement
  fullName: Player.ResetPlayerMovement
- uid: Global.Player.Interact*
  commentId: Overload:Global.Player.Interact
  name: Interact
  nameWithType: Player.Interact
  fullName: Player.Interact
- uid: Global.IntActor.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  commentId: M:Global.IntActor.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  parent: Global.IntActor
  isExternal: true
  name: TakeDamage(int, bool, bool, DamageType)
  nameWithType: IntActor.TakeDamage(int, bool, bool, DamageType)
  fullName: IntActor.TakeDamage(int, bool, bool, DamageType)
  nameWithType.vb: IntActor.TakeDamage(Integer, Boolean, Boolean, DamageType)
  fullName.vb: IntActor.TakeDamage(Integer, Boolean, Boolean, DamageType)
  name.vb: TakeDamage(Integer, Boolean, Boolean, DamageType)
  spec.csharp:
  - uid: Global.IntActor.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
    name: TakeDamage
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.DamageType
    name: DamageType
  - name: )
  spec.vb:
  - uid: Global.IntActor.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
    name: TakeDamage
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.DamageType
    name: DamageType
  - name: )
- uid: Global.Player.TakeDamage*
  commentId: Overload:Global.Player.TakeDamage
  name: TakeDamage
  nameWithType: Player.TakeDamage
  fullName: Player.TakeDamage
- uid: Global.DamageType
  commentId: T:Global.DamageType
  name: DamageType
  nameWithType: DamageType
  fullName: DamageType
- uid: Global.IntBasePlatformer.JumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  commentId: M:Global.IntBasePlatformer.JumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  parent: Global.IntBasePlatformer
  name: JumpCallback(PlatformerState, PlatformerState)
  nameWithType: IntBasePlatformer.JumpCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  fullName: IntBasePlatformer.JumpCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  spec.csharp:
  - uid: Global.IntBasePlatformer.JumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
    name: JumpCallback
  - name: (
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: ','
  - name: " "
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.JumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
    name: JumpCallback
  - name: (
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: ','
  - name: " "
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: )
- uid: Global.Player.JumpCallback*
  commentId: Overload:Global.Player.JumpCallback
  name: JumpCallback
  nameWithType: Player.JumpCallback
  fullName: Player.JumpCallback
- uid: Global.IntBasePlatformer.PlatformerState
  commentId: T:Global.IntBasePlatformer.PlatformerState
  name: IntBasePlatformer.PlatformerState
  nameWithType: IntBasePlatformer.PlatformerState
  fullName: IntBasePlatformer.PlatformerState
  spec.csharp:
  - uid: Global.IntBasePlatformer
    name: IntBasePlatformer
  - name: .
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  spec.vb:
  - uid: Global.IntBasePlatformer
    name: IntBasePlatformer
  - name: .
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
- uid: Global.IntBasePlatformer.DoubleJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  commentId: M:Global.IntBasePlatformer.DoubleJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  parent: Global.IntBasePlatformer
  name: DoubleJumpCallback(PlatformerState, PlatformerState)
  nameWithType: IntBasePlatformer.DoubleJumpCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  fullName: IntBasePlatformer.DoubleJumpCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  spec.csharp:
  - uid: Global.IntBasePlatformer.DoubleJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
    name: DoubleJumpCallback
  - name: (
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: ','
  - name: " "
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.DoubleJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
    name: DoubleJumpCallback
  - name: (
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: ','
  - name: " "
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: )
- uid: Global.Player.DoubleJumpCallback*
  commentId: Overload:Global.Player.DoubleJumpCallback
  name: DoubleJumpCallback
  nameWithType: Player.DoubleJumpCallback
  fullName: Player.DoubleJumpCallback
- uid: Global.IntBasePlatformer.WallJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  commentId: M:Global.IntBasePlatformer.WallJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  parent: Global.IntBasePlatformer
  name: WallJumpCallback(PlatformerState, PlatformerState)
  nameWithType: IntBasePlatformer.WallJumpCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  fullName: IntBasePlatformer.WallJumpCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  spec.csharp:
  - uid: Global.IntBasePlatformer.WallJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
    name: WallJumpCallback
  - name: (
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: ','
  - name: " "
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.WallJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
    name: WallJumpCallback
  - name: (
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: ','
  - name: " "
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: )
- uid: Global.Player.WallJumpCallback*
  commentId: Overload:Global.Player.WallJumpCallback
  name: WallJumpCallback
  nameWithType: Player.WallJumpCallback
  fullName: Player.WallJumpCallback
- uid: Global.IntBasePlatformer.GroundedCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  commentId: M:Global.IntBasePlatformer.GroundedCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  parent: Global.IntBasePlatformer
  name: GroundedCallback(PlatformerState, PlatformerState)
  nameWithType: IntBasePlatformer.GroundedCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  fullName: IntBasePlatformer.GroundedCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  spec.csharp:
  - uid: Global.IntBasePlatformer.GroundedCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
    name: GroundedCallback
  - name: (
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: ','
  - name: " "
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.GroundedCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
    name: GroundedCallback
  - name: (
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: ','
  - name: " "
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: )
- uid: Global.Player.GroundedCallback*
  commentId: Overload:Global.Player.GroundedCallback
  name: GroundedCallback
  nameWithType: Player.GroundedCallback
  fullName: Player.GroundedCallback
- uid: Global.Player.RegisterOnPlayerDeath*
  commentId: Overload:Global.Player.RegisterOnPlayerDeath
  name: RegisterOnPlayerDeath
  nameWithType: Player.RegisterOnPlayerDeath
  fullName: Player.RegisterOnPlayerDeath
- uid: Global.Player.OnPlayerDeathDelegate
  commentId: T:Global.Player.OnPlayerDeathDelegate
  name: Player.OnPlayerDeathDelegate
  nameWithType: Player.OnPlayerDeathDelegate
  fullName: Player.OnPlayerDeathDelegate
  spec.csharp:
  - uid: Global.Player
    name: Player
  - name: .
  - uid: Global.Player.OnPlayerDeathDelegate
    name: OnPlayerDeathDelegate
  spec.vb:
  - uid: Global.Player
    name: Player
  - name: .
  - uid: Global.Player.OnPlayerDeathDelegate
    name: OnPlayerDeathDelegate
- uid: Global.Player.UnregisterOnPlayerDeath*
  commentId: Overload:Global.Player.UnregisterOnPlayerDeath
  name: UnregisterOnPlayerDeath
  nameWithType: Player.UnregisterOnPlayerDeath
  fullName: Player.UnregisterOnPlayerDeath
- uid: Global.IntBasePlatformer.OnDeath(System.Boolean)
  commentId: M:Global.IntBasePlatformer.OnDeath(System.Boolean)
  parent: Global.IntBasePlatformer
  isExternal: true
  name: OnDeath(bool)
  nameWithType: IntBasePlatformer.OnDeath(bool)
  fullName: IntBasePlatformer.OnDeath(bool)
  nameWithType.vb: IntBasePlatformer.OnDeath(Boolean)
  fullName.vb: IntBasePlatformer.OnDeath(Boolean)
  name.vb: OnDeath(Boolean)
  spec.csharp:
  - uid: Global.IntBasePlatformer.OnDeath(System.Boolean)
    name: OnDeath
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.OnDeath(System.Boolean)
    name: OnDeath
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.Player.OnDeath*
  commentId: Overload:Global.Player.OnDeath
  name: OnDeath
  nameWithType: Player.OnDeath
  fullName: Player.OnDeath
- uid: Global.Player.GetLastMinorCheckpoint*
  commentId: Overload:Global.Player.GetLastMinorCheckpoint
  name: GetLastMinorCheckpoint
  nameWithType: Player.GetLastMinorCheckpoint
  fullName: Player.GetLastMinorCheckpoint
- uid: Global.Player.GetLastMajorCheckpoint*
  commentId: Overload:Global.Player.GetLastMajorCheckpoint
  name: GetLastMajorCheckpoint
  nameWithType: Player.GetLastMajorCheckpoint
  fullName: Player.GetLastMajorCheckpoint
- uid: Global.Player.SetLastMinorCheckpoint*
  commentId: Overload:Global.Player.SetLastMinorCheckpoint
  name: SetLastMinorCheckpoint
  nameWithType: Player.SetLastMinorCheckpoint
  fullName: Player.SetLastMinorCheckpoint
- uid: Global.Player.SetLastMajorCheckpoint*
  commentId: Overload:Global.Player.SetLastMajorCheckpoint
  name: SetLastMajorCheckpoint
  nameWithType: Player.SetLastMajorCheckpoint
  fullName: Player.SetLastMajorCheckpoint
- uid: Global.IntBasePlatformer.Respawn(System.Boolean)
  commentId: M:Global.IntBasePlatformer.Respawn(System.Boolean)
  parent: Global.IntBasePlatformer
  isExternal: true
  name: Respawn(bool)
  nameWithType: IntBasePlatformer.Respawn(bool)
  fullName: IntBasePlatformer.Respawn(bool)
  nameWithType.vb: IntBasePlatformer.Respawn(Boolean)
  fullName.vb: IntBasePlatformer.Respawn(Boolean)
  name.vb: Respawn(Boolean)
  spec.csharp:
  - uid: Global.IntBasePlatformer.Respawn(System.Boolean)
    name: Respawn
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.Respawn(System.Boolean)
    name: Respawn
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.Player.Respawn*
  commentId: Overload:Global.Player.Respawn
  name: Respawn
  nameWithType: Player.Respawn
  fullName: Player.Respawn
- uid: Global.IntBasePlatformer.ShouldAttackChargeReset
  commentId: M:Global.IntBasePlatformer.ShouldAttackChargeReset
  parent: Global.IntBasePlatformer
  name: ShouldAttackChargeReset()
  nameWithType: IntBasePlatformer.ShouldAttackChargeReset()
  fullName: IntBasePlatformer.ShouldAttackChargeReset()
  spec.csharp:
  - uid: Global.IntBasePlatformer.ShouldAttackChargeReset
    name: ShouldAttackChargeReset
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.ShouldAttackChargeReset
    name: ShouldAttackChargeReset
  - name: (
  - name: )
- uid: Global.Player.ShouldAttackChargeReset*
  commentId: Overload:Global.Player.ShouldAttackChargeReset
  name: ShouldAttackChargeReset
  nameWithType: Player.ShouldAttackChargeReset
  fullName: Player.ShouldAttackChargeReset
- uid: Global.IntBasePlatformer.OnAttackCharged
  commentId: M:Global.IntBasePlatformer.OnAttackCharged
  parent: Global.IntBasePlatformer
  name: OnAttackCharged()
  nameWithType: IntBasePlatformer.OnAttackCharged()
  fullName: IntBasePlatformer.OnAttackCharged()
  spec.csharp:
  - uid: Global.IntBasePlatformer.OnAttackCharged
    name: OnAttackCharged
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.OnAttackCharged
    name: OnAttackCharged
  - name: (
  - name: )
- uid: Global.Player.OnAttackCharged*
  commentId: Overload:Global.Player.OnAttackCharged
  name: OnAttackCharged
  nameWithType: Player.OnAttackCharged
  fullName: Player.OnAttackCharged
- uid: Global.IntBasePlatformer.OnAttackChargeUnused
  commentId: M:Global.IntBasePlatformer.OnAttackChargeUnused
  parent: Global.IntBasePlatformer
  name: OnAttackChargeUnused()
  nameWithType: IntBasePlatformer.OnAttackChargeUnused()
  fullName: IntBasePlatformer.OnAttackChargeUnused()
  spec.csharp:
  - uid: Global.IntBasePlatformer.OnAttackChargeUnused
    name: OnAttackChargeUnused
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.OnAttackChargeUnused
    name: OnAttackChargeUnused
  - name: (
  - name: )
- uid: Global.Player.OnAttackChargeUnused*
  commentId: Overload:Global.Player.OnAttackChargeUnused
  name: OnAttackChargeUnused
  nameWithType: Player.OnAttackChargeUnused
  fullName: Player.OnAttackChargeUnused
- uid: Global.Player.WeaponSwitched*
  commentId: Overload:Global.Player.WeaponSwitched
  name: WeaponSwitched
  nameWithType: Player.WeaponSwitched
  fullName: Player.WeaponSwitched
- uid: Global.IntActor.OnTriggerStart(IntTrigger)
  commentId: M:Global.IntActor.OnTriggerStart(IntTrigger)
  parent: Global.IntActor
  name: OnTriggerStart(IntTrigger)
  nameWithType: IntActor.OnTriggerStart(IntTrigger)
  fullName: IntActor.OnTriggerStart(IntTrigger)
  spec.csharp:
  - uid: Global.IntActor.OnTriggerStart(IntTrigger)
    name: OnTriggerStart
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnTriggerStart(IntTrigger)
    name: OnTriggerStart
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
- uid: Global.Player.OnTriggerStart*
  commentId: Overload:Global.Player.OnTriggerStart
  name: OnTriggerStart
  nameWithType: Player.OnTriggerStart
  fullName: Player.OnTriggerStart
- uid: Global.IntTrigger
  commentId: T:Global.IntTrigger
  name: IntTrigger
  nameWithType: IntTrigger
  fullName: IntTrigger
- uid: Global.Player.OnInivinsibilityEnd*
  commentId: Overload:Global.Player.OnInivinsibilityEnd
  name: OnInivinsibilityEnd
  nameWithType: Player.OnInivinsibilityEnd
  fullName: Player.OnInivinsibilityEnd
- uid: Global.IntActor.OnSpike(IntSolid)
  commentId: M:Global.IntActor.OnSpike(IntSolid)
  parent: Global.IntActor
  name: OnSpike(IntSolid)
  nameWithType: IntActor.OnSpike(IntSolid)
  fullName: IntActor.OnSpike(IntSolid)
  spec.csharp:
  - uid: Global.IntActor.OnSpike(IntSolid)
    name: OnSpike
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnSpike(IntSolid)
    name: OnSpike
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.Player.OnSpike*
  commentId: Overload:Global.Player.OnSpike
  name: OnSpike
  nameWithType: Player.OnSpike
  fullName: Player.OnSpike
- uid: Global.IntSolid
  commentId: T:Global.IntSolid
  name: IntSolid
  nameWithType: IntSolid
  fullName: IntSolid
- uid: Global.IntBasePlatformer.SetLateralInputValue(System.Single)
  commentId: M:Global.IntBasePlatformer.SetLateralInputValue(System.Single)
  parent: Global.IntBasePlatformer
  isExternal: true
  name: SetLateralInputValue(float)
  nameWithType: IntBasePlatformer.SetLateralInputValue(float)
  fullName: IntBasePlatformer.SetLateralInputValue(float)
  nameWithType.vb: IntBasePlatformer.SetLateralInputValue(Single)
  fullName.vb: IntBasePlatformer.SetLateralInputValue(Single)
  name.vb: SetLateralInputValue(Single)
  spec.csharp:
  - uid: Global.IntBasePlatformer.SetLateralInputValue(System.Single)
    name: SetLateralInputValue
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntBasePlatformer.SetLateralInputValue(System.Single)
    name: SetLateralInputValue
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.Player.SetLateralInputValue*
  commentId: Overload:Global.Player.SetLateralInputValue
  name: SetLateralInputValue
  nameWithType: Player.SetLateralInputValue
  fullName: Player.SetLateralInputValue
- uid: Global.IntActor.OnActor(IntActor)
  commentId: M:Global.IntActor.OnActor(IntActor)
  parent: Global.IntActor
  name: OnActor(IntActor)
  nameWithType: IntActor.OnActor(IntActor)
  fullName: IntActor.OnActor(IntActor)
  spec.csharp:
  - uid: Global.IntActor.OnActor(IntActor)
    name: OnActor
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnActor(IntActor)
    name: OnActor
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
- uid: Global.Player.OnActor*
  commentId: Overload:Global.Player.OnActor
  name: OnActor
  nameWithType: Player.OnActor
  fullName: Player.OnActor
- uid: Global.Player.GetMinorSpawnLocation*
  commentId: Overload:Global.Player.GetMinorSpawnLocation
  name: GetMinorSpawnLocation
  nameWithType: Player.GetMinorSpawnLocation
  fullName: Player.GetMinorSpawnLocation
- uid: Global.Player.SetMinorSpawnLocation*
  commentId: Overload:Global.Player.SetMinorSpawnLocation
  name: SetMinorSpawnLocation
  nameWithType: Player.SetMinorSpawnLocation
  fullName: Player.SetMinorSpawnLocation
- uid: Global.Player.GetMajorSpawnLocation*
  commentId: Overload:Global.Player.GetMajorSpawnLocation
  name: GetMajorSpawnLocation
  nameWithType: Player.GetMajorSpawnLocation
  fullName: Player.GetMajorSpawnLocation
- uid: Global.Player.SetMajorSpawnLocation*
  commentId: Overload:Global.Player.SetMajorSpawnLocation
  name: SetMajorSpawnLocation
  nameWithType: Player.SetMajorSpawnLocation
  fullName: Player.SetMajorSpawnLocation
- uid: Global.Player.GetFeetOffset*
  commentId: Overload:Global.Player.GetFeetOffset
  name: GetFeetOffset
  nameWithType: Player.GetFeetOffset
  fullName: Player.GetFeetOffset
- uid: Global.IntActor.Squish(IntSolid)
  commentId: M:Global.IntActor.Squish(IntSolid)
  parent: Global.IntActor
  name: Squish(IntSolid)
  nameWithType: IntActor.Squish(IntSolid)
  fullName: IntActor.Squish(IntSolid)
  spec.csharp:
  - uid: Global.IntActor.Squish(IntSolid)
    name: Squish
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.IntActor.Squish(IntSolid)
    name: Squish
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.Player.Squish*
  commentId: Overload:Global.Player.Squish
  name: Squish
  nameWithType: Player.Squish
  fullName: Player.Squish
- uid: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: Overlaps(IntObject, Vector2Int)
  nameWithType: IntObject.Overlaps(IntObject, Vector2Int)
  fullName: IntObject.Overlaps(IntObject, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.Player.Overlaps*
  commentId: Overload:Global.Player.Overlaps
  name: Overlaps
  nameWithType: Player.Overlaps
  fullName: Player.Overlaps
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: Global.Player.createDust*
  commentId: Overload:Global.Player.createDust
  name: createDust
  nameWithType: Player.createDust
  fullName: Player.createDust
- uid: Global.Player.flapWing*
  commentId: Overload:Global.Player.flapWing
  name: flapWing
  nameWithType: Player.flapWing
  fullName: Player.flapWing
- uid: Global.Player.initializeWeaponGlow*
  commentId: Overload:Global.Player.initializeWeaponGlow
  name: initializeWeaponGlow
  nameWithType: Player.initializeWeaponGlow
  fullName: Player.initializeWeaponGlow
- uid: Global.Player.updateDashIndicator*
  commentId: Overload:Global.Player.updateDashIndicator
  name: updateDashIndicator
  nameWithType: Player.updateDashIndicator
  fullName: Player.updateDashIndicator
- uid: Global.Player.updateWeaponGlow*
  commentId: Overload:Global.Player.updateWeaponGlow
  name: updateWeaponGlow
  nameWithType: Player.updateWeaponGlow
  fullName: Player.updateWeaponGlow
- uid: Global.Player.RepositionBasedOnFlip*
  commentId: Overload:Global.Player.RepositionBasedOnFlip
  name: RepositionBasedOnFlip
  nameWithType: Player.RepositionBasedOnFlip
  fullName: Player.RepositionBasedOnFlip
- uid: Global.Player.repositionGlowIdle*
  commentId: Overload:Global.Player.repositionGlowIdle
  name: repositionGlowIdle
  nameWithType: Player.repositionGlowIdle
  fullName: Player.repositionGlowIdle
- uid: Global.Player.OnDoubleJump*
  commentId: Overload:Global.Player.OnDoubleJump
  name: OnDoubleJump
  nameWithType: Player.OnDoubleJump
  fullName: Player.OnDoubleJump
- uid: Global.IntActor.OnEnterWater(WaterComponent,System.Single)
  commentId: M:Global.IntActor.OnEnterWater(WaterComponent,System.Single)
  parent: Global.IntActor
  isExternal: true
  name: OnEnterWater(WaterComponent, float)
  nameWithType: IntActor.OnEnterWater(WaterComponent, float)
  fullName: IntActor.OnEnterWater(WaterComponent, float)
  nameWithType.vb: IntActor.OnEnterWater(WaterComponent, Single)
  fullName.vb: IntActor.OnEnterWater(WaterComponent, Single)
  name.vb: OnEnterWater(WaterComponent, Single)
  spec.csharp:
  - uid: Global.IntActor.OnEnterWater(WaterComponent,System.Single)
    name: OnEnterWater
  - name: (
  - uid: Global.WaterComponent
    name: WaterComponent
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnEnterWater(WaterComponent,System.Single)
    name: OnEnterWater
  - name: (
  - uid: Global.WaterComponent
    name: WaterComponent
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.Player.OnEnterWater*
  commentId: Overload:Global.Player.OnEnterWater
  name: OnEnterWater
  nameWithType: Player.OnEnterWater
  fullName: Player.OnEnterWater
- uid: Global.WaterComponent
  commentId: T:Global.WaterComponent
  name: WaterComponent
  nameWithType: WaterComponent
  fullName: WaterComponent
- uid: Global.IntActor.OnExitWater(WaterComponent)
  commentId: M:Global.IntActor.OnExitWater(WaterComponent)
  parent: Global.IntActor
  name: OnExitWater(WaterComponent)
  nameWithType: IntActor.OnExitWater(WaterComponent)
  fullName: IntActor.OnExitWater(WaterComponent)
  spec.csharp:
  - uid: Global.IntActor.OnExitWater(WaterComponent)
    name: OnExitWater
  - name: (
  - uid: Global.WaterComponent
    name: WaterComponent
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnExitWater(WaterComponent)
    name: OnExitWater
  - name: (
  - uid: Global.WaterComponent
    name: WaterComponent
  - name: )
- uid: Global.Player.OnExitWater*
  commentId: Overload:Global.Player.OnExitWater
  name: OnExitWater
  nameWithType: Player.OnExitWater
  fullName: Player.OnExitWater
- uid: Global.Player.LoadObjectSaveData*
  commentId: Overload:Global.Player.LoadObjectSaveData
  name: LoadObjectSaveData
  nameWithType: Player.LoadObjectSaveData
  fullName: Player.LoadObjectSaveData
- uid: Global.ISavableObject{Player.PlayerSaveData}.LoadObjectSaveData(Player.PlayerSaveData)
  commentId: M:Global.ISavableObject{Player.PlayerSaveData}.LoadObjectSaveData(Player.PlayerSaveData)
  parent: Global.ISavableObject{Player.PlayerSaveData}
  definition: Global.ISavableObject`1.LoadObjectSaveData(`0)
  name: LoadObjectSaveData(PlayerSaveData)
  nameWithType: ISavableObject<Player.PlayerSaveData>.LoadObjectSaveData(Player.PlayerSaveData)
  fullName: ISavableObject<Player.PlayerSaveData>.LoadObjectSaveData(Player.PlayerSaveData)
  nameWithType.vb: ISavableObject(Of Player.PlayerSaveData).LoadObjectSaveData(Player.PlayerSaveData)
  fullName.vb: ISavableObject(Of Player.PlayerSaveData).LoadObjectSaveData(Player.PlayerSaveData)
  spec.csharp:
  - uid: Global.ISavableObject{Player.PlayerSaveData}.LoadObjectSaveData(Player.PlayerSaveData)
    name: LoadObjectSaveData
  - name: (
  - uid: Global.Player.PlayerSaveData
    name: PlayerSaveData
  - name: )
  spec.vb:
  - uid: Global.ISavableObject{Player.PlayerSaveData}.LoadObjectSaveData(Player.PlayerSaveData)
    name: LoadObjectSaveData
  - name: (
  - uid: Global.Player.PlayerSaveData
    name: PlayerSaveData
  - name: )
- uid: Global.Player.PlayerSaveData
  commentId: T:Global.Player.PlayerSaveData
  name: Player.PlayerSaveData
  nameWithType: Player.PlayerSaveData
  fullName: Player.PlayerSaveData
  spec.csharp:
  - uid: Global.Player
    name: Player
  - name: .
  - uid: Global.Player.PlayerSaveData
    name: PlayerSaveData
  spec.vb:
  - uid: Global.Player
    name: Player
  - name: .
  - uid: Global.Player.PlayerSaveData
    name: PlayerSaveData
- uid: Global.ISavableObject`1.LoadObjectSaveData(`0)
  commentId: M:Global.ISavableObject`1.LoadObjectSaveData(`0)
  name: LoadObjectSaveData(T)
  nameWithType: ISavableObject<T>.LoadObjectSaveData(T)
  fullName: ISavableObject<T>.LoadObjectSaveData(T)
  nameWithType.vb: ISavableObject(Of T).LoadObjectSaveData(T)
  fullName.vb: ISavableObject(Of T).LoadObjectSaveData(T)
  spec.csharp:
  - uid: Global.ISavableObject`1.LoadObjectSaveData(`0)
    name: LoadObjectSaveData
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Global.ISavableObject`1.LoadObjectSaveData(`0)
    name: LoadObjectSaveData
  - name: (
  - name: T
  - name: )
- uid: Global.Player.GetObjectSaveData*
  commentId: Overload:Global.Player.GetObjectSaveData
  name: GetObjectSaveData
  nameWithType: Player.GetObjectSaveData
  fullName: Player.GetObjectSaveData
- uid: Global.ISavableObject{Player.PlayerSaveData}.GetObjectSaveData
  commentId: M:Global.ISavableObject{Player.PlayerSaveData}.GetObjectSaveData
  parent: Global.ISavableObject{Player.PlayerSaveData}
  definition: Global.ISavableObject`1.GetObjectSaveData
  name: GetObjectSaveData()
  nameWithType: ISavableObject<Player.PlayerSaveData>.GetObjectSaveData()
  fullName: ISavableObject<Player.PlayerSaveData>.GetObjectSaveData()
  nameWithType.vb: ISavableObject(Of Player.PlayerSaveData).GetObjectSaveData()
  fullName.vb: ISavableObject(Of Player.PlayerSaveData).GetObjectSaveData()
  spec.csharp:
  - uid: Global.ISavableObject{Player.PlayerSaveData}.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ISavableObject{Player.PlayerSaveData}.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
- uid: Global.ISavableObject`1.GetObjectSaveData
  commentId: M:Global.ISavableObject`1.GetObjectSaveData
  name: GetObjectSaveData()
  nameWithType: ISavableObject<T>.GetObjectSaveData()
  fullName: ISavableObject<T>.GetObjectSaveData()
  nameWithType.vb: ISavableObject(Of T).GetObjectSaveData()
  fullName.vb: ISavableObject(Of T).GetObjectSaveData()
  spec.csharp:
  - uid: Global.ISavableObject`1.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ISavableObject`1.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
