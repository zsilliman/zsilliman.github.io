### YamlMime:ManagedReference
items:
- uid: Global.DialogueController.Dialogue
  commentId: T:Global.DialogueController.Dialogue
  id: DialogueController.Dialogue
  parent: Global
  children:
  - Global.DialogueController.Dialogue.dialogue
  - Global.DialogueController.Dialogue.speaker
  langs:
  - csharp
  - vb
  name: DialogueController.Dialogue
  nameWithType: DialogueController.Dialogue
  fullName: DialogueController.Dialogue
  type: Struct
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/DialogueController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Dialogue
    path: ../Assets/Objects & Components/UI/Ingame/DialogueController.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public struct DialogueController.Dialogue
    content.vb: >-
      <Serializable>

      Public Structure DialogueController.Dialogue
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.DialogueController.Dialogue.speaker
  commentId: F:Global.DialogueController.Dialogue.speaker
  id: speaker
  parent: Global.DialogueController.Dialogue
  langs:
  - csharp
  - vb
  name: speaker
  nameWithType: DialogueController.Dialogue.speaker
  fullName: DialogueController.Dialogue.speaker
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/DialogueController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: speaker
    path: ../Assets/Objects & Components/UI/Ingame/DialogueController.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public SpeakerOLD speaker
    return:
      type: Global.SpeakerOLD
    content.vb: Public speaker As SpeakerOLD
- uid: Global.DialogueController.Dialogue.dialogue
  commentId: F:Global.DialogueController.Dialogue.dialogue
  id: dialogue
  parent: Global.DialogueController.Dialogue
  langs:
  - csharp
  - vb
  name: dialogue
  nameWithType: DialogueController.Dialogue.dialogue
  fullName: DialogueController.Dialogue.dialogue
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/DialogueController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: dialogue
    path: ../Assets/Objects & Components/UI/Ingame/DialogueController.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public List<string> dialogue
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public dialogue As List(Of String)
references:
- uid: Global
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.SpeakerOLD
  commentId: T:Global.SpeakerOLD
  name: SpeakerOLD
  nameWithType: SpeakerOLD
  fullName: SpeakerOLD
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
