### YamlMime:ManagedReference
items:
- uid: Global.IntEnemy
  commentId: T:Global.IntEnemy
  id: IntEnemy
  parent: Global
  children:
  - Global.IntEnemy.AIMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.Action,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntEnemy.AIMoveWithJump(System.Int32,UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.Action,IntObject.ActorAction,IntObject.TriggerAction,IntObject.Action)
  - Global.IntEnemy.AlwaysDrawGizmos
  - Global.IntEnemy.Animate
  - Global.IntEnemy.ApplyGravity(System.Single)
  - Global.IntEnemy.CanContinueForward
  - Global.IntEnemy.CanRepelEnemy
  - Global.IntEnemy.CastForwardSightRay(System.Single,IntColliderState.RayCastFilter)
  - Global.IntEnemy.CastForwardSightRay(System.Single)
  - Global.IntEnemy.Charge(IntEnemy.ChargeProps,IntObject.Action,IntObject.SolidAction,IntObject.SolidAction,IntObject.TriggerAction,IntObject.ActorAction)
  - Global.IntEnemy.ComputeJumpHangTimeFromHeight(System.Single,System.Single)
  - Global.IntEnemy.ComputeJumpHangTimeFromVelocity(System.Single,System.Single)
  - Global.IntEnemy.ComputeJumpInitialVelocity(System.Single,System.Single)
  - Global.IntEnemy.ComputeJumpInitialVelocityFromTile(System.Int32,System.Single)
  - Global.IntEnemy.CurrentHealth
  - Global.IntEnemy.CurrentShieldHealth
  - Global.IntEnemy.DebugDrawTileVision
  - Global.IntEnemy.EnemyUIEnabled
  - Global.IntEnemy.GetForwardSightRayDirection
  - Global.IntEnemy.GetJumpInfo(System.Int32)
  - Global.IntEnemy.GetLookAtFlipX(System.Boolean,UnityEngine.GameObject)
  - Global.IntEnemy.GetSightRayOrigin
  - Global.IntEnemy.GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
  - Global.IntEnemy.GetSpawnProperties
  - Global.IntEnemy.GetSpriteFlip(System.Boolean,System.Boolean)
  - Global.IntEnemy.GetVelocity
  - Global.IntEnemy.GizmosDrawRequiredSpace
  - Global.IntEnemy.GizmosDrawTileVision
  - Global.IntEnemy.Initialize
  - Global.IntEnemy.IsAlive
  - Global.IntEnemy.IsCollected
  - Global.IntEnemy.IsGrounded
  - Global.IntEnemy.IsKillable
  - Global.IntEnemy.Jump(System.Single)
  - Global.IntEnemy.JumpHeight(System.Single,System.Single)
  - Global.IntEnemy.JumpTiles(System.Int32,System.Single)
  - Global.IntEnemy.MaxDropTileDistance
  - Global.IntEnemy.MaxFallSpeed
  - Global.IntEnemy.MaxHealth
  - Global.IntEnemy.MaxShieldHealth
  - Global.IntEnemy.OnDrawDebugGizmos
  - Global.IntEnemy.OnDrawGizmos
  - Global.IntEnemy.OnDrawGizmosSelected
  - Global.IntEnemy.OnFirstFrame
  - Global.IntEnemy.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  - Global.IntEnemy.OnSpike(IntSolid)
  - Global.IntEnemy.POISON_DISPEL_TIMER
  - Global.IntEnemy.POISON_PROC_TIMER
  - Global.IntEnemy.PostInputUpdate
  - Global.IntEnemy.PreInputUpdate
  - Global.IntEnemy.ResetObject
  - Global.IntEnemy.ResolveSpawnLocation
  - Global.IntEnemy.SetCurrentShieldHealth(System.Int32)
  - Global.IntEnemy.SetPoisoned(System.Int32)
  - Global.IntEnemy.SpawnAura
  - Global.IntEnemy.SpawnProperties
  - Global.IntEnemy.Start
  - Global.IntEnemy.StartShieldHealth
  - Global.IntEnemy.StaticMoveUpdate
  - Global.IntEnemy.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  - Global.IntEnemy.tilemap
  - Global.IntEnemy.Update
  - Global.IntEnemy.UpdateInput
  - Global.IntEnemy.velocity
  langs:
  - csharp
  - vb
  name: IntEnemy
  nameWithType: IntEnemy
  fullName: IntEnemy
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IntEnemy
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 106
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public abstract class IntEnemy : IntActor, ISavableObject<IntObjectSaveData>, IEntity, ICollectableInterface, ISpawnable'
    content.vb: Public MustInherit Class IntEnemy Inherits IntActor Implements ISavableObject(Of IntObjectSaveData), IEntity, ICollectableInterface, ISpawnable
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - Global.IntObject
  - Global.IntActor
  derivedClasses:
  - Global.Baby
  - Global.BasicZombie
  - Global.Beacon
  - Global.Bee`1
  - Global.Bird
  - Global.Boomerang
  - Global.BubbleCoral
  - Global.Burd1
  - Global.Burd2
  - Global.ChargerEnemy
  - Global.Eyeball
  - Global.Fish
  - Global.FlyingFish
  - Global.FollowerEnemy
  - Global.Ground1
  - Global.Ground2
  - Global.Ground3
  - Global.Herd
  - Global.ModularEnemy
  - Global.MushroomEnemy
  - Global.Plant
  - Global.QueenBee
  - Global.RadialShooterZombie
  - Global.Ripple
  - Global.Screamer
  - Global.Shrub
  - Global.ShrubEnemy
  - Global.Sludge
  - Global.Spear
  - Global.Spider
  - Global.Sprout
  - Global.Squish
  - Global.StandardEnemy
  - Global.TargetDummy
  - Global.Villager
  - Global.Walker
  - Global.Wanderer
  - Global.WaterBender
  - Global.WaterBunny
  - Global.Wisp1
  - Global.Wisp2
  - Global.Wisp3
  implements:
  - Global.ISavableObject{IntObjectSaveData}
  - Global.IEntity
  - Global.ICollectableInterface
  - Global.ISpawnable
  inheritedMembers:
  - Global.IntActor.HurtBySpike
  - Global.IntActor.aabb
  - Global.IntActor.Left
  - Global.IntActor.Right
  - Global.IntActor.Top
  - Global.IntActor.Bottom
  - Global.IntActor.Size
  - Global.IntActor.WindInfluence
  - Global.IntActor.OnTakeDamageCallback
  - Global.IntActor.RidingSolid
  - Global.IntActor.RidingTangent
  - Global.IntActor.RidingNormal
  - Global.IntActor.IsRidingFlatSurface
  - Global.IntActor.Awake
  - Global.IntActor.ManualInit
  - Global.IntActor.GetAABBIntCollider
  - Global.IntActor.EnsureAABBIntColliderSet
  - Global.IntActor.IsRiding(IntSolid)
  - Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
  - Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
  - Global.IntActor.IsTouchingWall(IntSolid)
  - Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
  - Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  - Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  - Global.IntActor.OnTakeDamage(System.Int32)
  - Global.IntActor.ResetAuraCollisionMap
  - Global.IntActor.ResetActorCollisionMap
  - Global.IntActor.ResetCollisionMap
  - Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
  - Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
  - Global.IntActor.GetCollisionMapValue(IntObject)
  - Global.IntActor.Squish(IntSolid)
  - Global.IntActor.OnTriggerStart(IntTrigger)
  - Global.IntActor.OnTriggerEnd(IntTrigger)
  - Global.IntActor.OnActor(IntActor)
  - Global.IntActor.CheckGrounded
  - Global.IntActor.GroundActor
  - Global.IntActor.CheckOnWall
  - Global.IntActor.DropDownOneWay
  - Global.IntActor.activeWater
  - Global.IntActor.GetSubmergedPercentage
  - Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
  - Global.IntActor.IsInWater
  - Global.IntActor.OnEnterWater(WaterComponent,System.Single)
  - Global.IntActor.OnExitWater(WaterComponent)
  - Global.IntActor.ApplyWind(UnityEngine.Vector2)
  - Global.IntActor.RemoveWind
  - Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
  - Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
  - Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
  - Global.IntActor.NotifyObjectKilled(IntObject)
  - Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.CheckActorInteractableCollisions
  - Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
  - Global.IntObject.section
  - Global.IntObject.state
  - Global.IntObject.int_collider
  - Global.IntObject.remainder
  - Global.IntObject.StartPosition
  - Global.IntObject.AttachedToPlayer
  - Global.IntObject.IgnoredObjectsMap
  - Global.IntObject.KilledCallback
  - Global.IntObject.Position
  - Global.IntObject.GetStartWorldPosition
  - Global.IntObject.collider_type
  - Global.IntObject.MarkedForKill
  - Global.IntObject.ObjectID
  - Global.IntObject.DestroyOnKill
  - Global.IntObject.RespawnBehavior
  - Global.IntObject.Status
  - Global.IntObject.InitialStatus
  - Global.IntObject.SaveObject
  - Global.IntObject.IsInSetPiece
  - Global.IntObject.Init
  - Global.IntObject.FindIntColliderState(System.Int32)
  - Global.IntObject.GetLocalGameStates
  - Global.IntObject.RegisterSelf
  - Global.IntObject.UnregisterSelf
  - Global.IntObject.RegisterKilledCallback(IntObject.Action)
  - Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  - Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  - Global.IntObject.SetStatus(ObjectStatus)
  - Global.IntObject.OnKill(System.Boolean)
  - Global.IntObject.Kill
  - Global.IntObject.Kill(System.Boolean)
  - Global.IntObject.Kill(System.Single)
  - Global.IntObject.Kill(System.Boolean,System.Single)
  - Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  - Global.IntObject.SleepObject
  - Global.IntObject.OptimizeSleepObject
  - Global.IntObject.WakeObject
  - Global.IntObject.EnableObject
  - Global.IntObject.DisableObject
  - Global.IntObject.RespawnObject
  - Global.IntObject.RecursiveSetCollidable(System.Boolean)
  - Global.IntObject.SetColliderState(IntColliderState)
  - Global.IntObject.Translate(UnityEngine.Vector2Int)
  - Global.IntObject.Translate(UnityEngine.Vector2)
  - Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  - Global.IntObject.SetCollidable(System.Boolean)
  - Global.IntObject.GetCollidable
  - Global.IntObject.GetCollider
  - Global.IntObject.GetColliderState
  - Global.IntObject.Overlaps(IntObject)
  - Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  - Global.IntObject.RayCast(IntRay)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  - Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  - Global.IntObject.GetObjectSaveData
  - Global.IntObject.OnPostLoadSaveFile
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.IntEnemy.AlwaysDrawGizmos
  commentId: F:Global.IntEnemy.AlwaysDrawGizmos
  id: AlwaysDrawGizmos
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: AlwaysDrawGizmos
  nameWithType: IntEnemy.AlwaysDrawGizmos
  fullName: IntEnemy.AlwaysDrawGizmos
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AlwaysDrawGizmos
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 109
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Int Enemy")]

      public bool AlwaysDrawGizmos
    return:
      type: System.Boolean
    content.vb: >-
      <Header("Int Enemy")>

      Public AlwaysDrawGizmos As Boolean
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Int Enemy
- uid: Global.IntEnemy.EnemyUIEnabled
  commentId: F:Global.IntEnemy.EnemyUIEnabled
  id: EnemyUIEnabled
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: EnemyUIEnabled
  nameWithType: IntEnemy.EnemyUIEnabled
  fullName: IntEnemy.EnemyUIEnabled
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EnemyUIEnabled
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 111
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Should this enemy render its healthbar. (Cannot be modified at runtime)")]

      public bool EnemyUIEnabled
    return:
      type: System.Boolean
    content.vb: >-
      <Tooltip("Should this enemy render its healthbar. (Cannot be modified at runtime)")>

      Public EnemyUIEnabled As Boolean
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Should this enemy render its healthbar. (Cannot be modified at runtime)
- uid: Global.IntEnemy.MaxDropTileDistance
  commentId: F:Global.IntEnemy.MaxDropTileDistance
  id: MaxDropTileDistance
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: MaxDropTileDistance
  nameWithType: IntEnemy.MaxDropTileDistance
  fullName: IntEnemy.MaxDropTileDistance
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxDropTileDistance
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 112
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int MaxDropTileDistance
    return:
      type: System.Int32
    content.vb: Public MaxDropTileDistance As Integer
- uid: Global.IntEnemy.IsKillable
  commentId: F:Global.IntEnemy.IsKillable
  id: IsKillable
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: IsKillable
  nameWithType: IntEnemy.IsKillable
  fullName: IntEnemy.IsKillable
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsKillable
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 113
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsKillable
    return:
      type: System.Boolean
    content.vb: Public IsKillable As Boolean
- uid: Global.IntEnemy.MaxHealth
  commentId: F:Global.IntEnemy.MaxHealth
  id: MaxHealth
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: MaxHealth
  nameWithType: IntEnemy.MaxHealth
  fullName: IntEnemy.MaxHealth
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxHealth
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 115
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("IsKillable", 1)]

      public int MaxHealth
    return:
      type: System.Int32
    content.vb: >-
      <ConditionalShow("IsKillable", 1)>

      Public MaxHealth As Integer
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: IsKillable
    - type: System.Int32
      value: 1
- uid: Global.IntEnemy.MaxShieldHealth
  commentId: F:Global.IntEnemy.MaxShieldHealth
  id: MaxShieldHealth
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: MaxShieldHealth
  nameWithType: IntEnemy.MaxShieldHealth
  fullName: IntEnemy.MaxShieldHealth
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxShieldHealth
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 117
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("IsKillable", 1)]

      public int MaxShieldHealth
    return:
      type: System.Int32
    content.vb: >-
      <ConditionalShow("IsKillable", 1)>

      Public MaxShieldHealth As Integer
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: IsKillable
    - type: System.Int32
      value: 1
- uid: Global.IntEnemy.StartShieldHealth
  commentId: F:Global.IntEnemy.StartShieldHealth
  id: StartShieldHealth
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: StartShieldHealth
  nameWithType: IntEnemy.StartShieldHealth
  fullName: IntEnemy.StartShieldHealth
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: StartShieldHealth
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 119
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("IsKillable", 1)]

      public int StartShieldHealth
    return:
      type: System.Int32
    content.vb: >-
      <ConditionalShow("IsKillable", 1)>

      Public StartShieldHealth As Integer
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: IsKillable
    - type: System.Int32
      value: 1
- uid: Global.IntEnemy.CurrentHealth
  commentId: P:Global.IntEnemy.CurrentHealth
  id: CurrentHealth
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: CurrentHealth
  nameWithType: IntEnemy.CurrentHealth
  fullName: IntEnemy.CurrentHealth
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CurrentHealth
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 120
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int CurrentHealth { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CurrentHealth As Integer
  overload: Global.IntEnemy.CurrentHealth*
- uid: Global.IntEnemy.CurrentShieldHealth
  commentId: P:Global.IntEnemy.CurrentShieldHealth
  id: CurrentShieldHealth
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: CurrentShieldHealth
  nameWithType: IntEnemy.CurrentShieldHealth
  fullName: IntEnemy.CurrentShieldHealth
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CurrentShieldHealth
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 121
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int CurrentShieldHealth { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CurrentShieldHealth As Integer
  overload: Global.IntEnemy.CurrentShieldHealth*
- uid: Global.IntEnemy.MaxFallSpeed
  commentId: F:Global.IntEnemy.MaxFallSpeed
  id: MaxFallSpeed
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: MaxFallSpeed
  nameWithType: IntEnemy.MaxFallSpeed
  fullName: IntEnemy.MaxFallSpeed
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxFallSpeed
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 122
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float MaxFallSpeed
    return:
      type: System.Single
    content.vb: Public MaxFallSpeed As Single
- uid: Global.IntEnemy.POISON_DISPEL_TIMER
  commentId: F:Global.IntEnemy.POISON_DISPEL_TIMER
  id: POISON_DISPEL_TIMER
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: POISON_DISPEL_TIMER
  nameWithType: IntEnemy.POISON_DISPEL_TIMER
  fullName: IntEnemy.POISON_DISPEL_TIMER
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: POISON_DISPEL_TIMER
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 130
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Time until poison damage procs once")]

      public const float POISON_DISPEL_TIMER = 10
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("Time until poison damage procs once")>

      Public Const POISON_DISPEL_TIMER As Single = 10
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Time until poison damage procs once
- uid: Global.IntEnemy.POISON_PROC_TIMER
  commentId: F:Global.IntEnemy.POISON_PROC_TIMER
  id: POISON_PROC_TIMER
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: POISON_PROC_TIMER
  nameWithType: IntEnemy.POISON_PROC_TIMER
  fullName: IntEnemy.POISON_PROC_TIMER
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: POISON_PROC_TIMER
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 131
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const float POISON_PROC_TIMER = 0.5
    return:
      type: System.Single
    content.vb: Public Const POISON_PROC_TIMER As Single = 0.5
- uid: Global.IntEnemy.tilemap
  commentId: P:Global.IntEnemy.tilemap
  id: tilemap
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: tilemap
  nameWithType: IntEnemy.tilemap
  fullName: IntEnemy.tilemap
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: tilemap
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 133
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [HideInInspector]

      public TilemapIntCollider tilemap { get; protected set; }
    parameters: []
    return:
      type: Global.TilemapIntCollider
    content.vb: >-
      <HideInInspector>

      Public Property tilemap As TilemapIntCollider
  overload: Global.IntEnemy.tilemap*
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.IntEnemy.velocity
  commentId: F:Global.IntEnemy.velocity
  id: velocity
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: velocity
  nameWithType: IntEnemy.velocity
  fullName: IntEnemy.velocity
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: velocity
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 137
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [HideInInspector]

      public Vector2 velocity
    return:
      type: UnityEngine.Vector2
    content.vb: >-
      <HideInInspector>

      Public velocity As Vector2
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.IntEnemy.IsGrounded
  commentId: P:Global.IntEnemy.IsGrounded
  id: IsGrounded
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: IsGrounded
  nameWithType: IntEnemy.IsGrounded
  fullName: IntEnemy.IsGrounded
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsGrounded
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 138
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [HideInInspector]

      public bool IsGrounded { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <HideInInspector>

      Public Property IsGrounded As Boolean
  overload: Global.IntEnemy.IsGrounded*
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.IntEnemy.IsAlive
  commentId: P:Global.IntEnemy.IsAlive
  id: IsAlive
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: IsAlive
  nameWithType: IntEnemy.IsAlive
  fullName: IntEnemy.IsAlive
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsAlive
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 140
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsAlive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAlive As Boolean
  overload: Global.IntEnemy.IsAlive*
- uid: Global.IntEnemy.SpawnProperties
  commentId: F:Global.IntEnemy.SpawnProperties
  id: SpawnProperties
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: SpawnProperties
  nameWithType: IntEnemy.SpawnProperties
  fullName: IntEnemy.SpawnProperties
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SpawnProperties
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 143
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Procedural Spawning")]

      public EnemySpawnProperties SpawnProperties
    return:
      type: Global.EnemySpawnProperties
    content.vb: >-
      <Header("Procedural Spawning")>

      Public SpawnProperties As EnemySpawnProperties
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Procedural Spawning
- uid: Global.IntEnemy.Start
  commentId: M:Global.IntEnemy.Start
  id: Start
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: IntEnemy.Start()
  fullName: IntEnemy.Start()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Start
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 151
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Start()
    content.vb: Protected Sub Start()
  overload: Global.IntEnemy.Start*
- uid: Global.IntEnemy.CanRepelEnemy
  commentId: M:Global.IntEnemy.CanRepelEnemy
  id: CanRepelEnemy
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: CanRepelEnemy()
  nameWithType: IntEnemy.CanRepelEnemy()
  fullName: IntEnemy.CanRepelEnemy()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CanRepelEnemy
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 183
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual bool CanRepelEnemy()
    return:
      type: System.Boolean
    content.vb: Public Overridable Function CanRepelEnemy() As Boolean
  overload: Global.IntEnemy.CanRepelEnemy*
- uid: Global.IntEnemy.ComputeJumpInitialVelocityFromTile(System.Int32,System.Single)
  commentId: M:Global.IntEnemy.ComputeJumpInitialVelocityFromTile(System.Int32,System.Single)
  id: ComputeJumpInitialVelocityFromTile(System.Int32,System.Single)
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: ComputeJumpInitialVelocityFromTile(int, float)
  nameWithType: IntEnemy.ComputeJumpInitialVelocityFromTile(int, float)
  fullName: IntEnemy.ComputeJumpInitialVelocityFromTile(int, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ComputeJumpInitialVelocityFromTile
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 185
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual float ComputeJumpInitialVelocityFromTile(int tiles, float GravityScale = 1)
    parameters:
    - id: tiles
      type: System.Int32
    - id: GravityScale
      type: System.Single
    return:
      type: System.Single
    content.vb: Protected Overridable Function ComputeJumpInitialVelocityFromTile(tiles As Integer, GravityScale As Single = 1) As Single
  overload: Global.IntEnemy.ComputeJumpInitialVelocityFromTile*
  nameWithType.vb: IntEnemy.ComputeJumpInitialVelocityFromTile(Integer, Single)
  fullName.vb: IntEnemy.ComputeJumpInitialVelocityFromTile(Integer, Single)
  name.vb: ComputeJumpInitialVelocityFromTile(Integer, Single)
- uid: Global.IntEnemy.ComputeJumpInitialVelocity(System.Single,System.Single)
  commentId: M:Global.IntEnemy.ComputeJumpInitialVelocity(System.Single,System.Single)
  id: ComputeJumpInitialVelocity(System.Single,System.Single)
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: ComputeJumpInitialVelocity(float, float)
  nameWithType: IntEnemy.ComputeJumpInitialVelocity(float, float)
  fullName: IntEnemy.ComputeJumpInitialVelocity(float, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ComputeJumpInitialVelocity
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 191
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual float ComputeJumpInitialVelocity(float JumpHeight, float GravityScale = 1)
    parameters:
    - id: JumpHeight
      type: System.Single
    - id: GravityScale
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Overridable Function ComputeJumpInitialVelocity(JumpHeight As Single, GravityScale As Single = 1) As Single
  overload: Global.IntEnemy.ComputeJumpInitialVelocity*
  nameWithType.vb: IntEnemy.ComputeJumpInitialVelocity(Single, Single)
  fullName.vb: IntEnemy.ComputeJumpInitialVelocity(Single, Single)
  name.vb: ComputeJumpInitialVelocity(Single, Single)
- uid: Global.IntEnemy.ComputeJumpHangTimeFromVelocity(System.Single,System.Single)
  commentId: M:Global.IntEnemy.ComputeJumpHangTimeFromVelocity(System.Single,System.Single)
  id: ComputeJumpHangTimeFromVelocity(System.Single,System.Single)
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: ComputeJumpHangTimeFromVelocity(float, float)
  nameWithType: IntEnemy.ComputeJumpHangTimeFromVelocity(float, float)
  fullName: IntEnemy.ComputeJumpHangTimeFromVelocity(float, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ComputeJumpHangTimeFromVelocity
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 197
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float ComputeJumpHangTimeFromVelocity(float JumpInitialVelocityY, float GravityScale = 1)
    parameters:
    - id: JumpInitialVelocityY
      type: System.Single
    - id: GravityScale
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Function ComputeJumpHangTimeFromVelocity(JumpInitialVelocityY As Single, GravityScale As Single = 1) As Single
  overload: Global.IntEnemy.ComputeJumpHangTimeFromVelocity*
  nameWithType.vb: IntEnemy.ComputeJumpHangTimeFromVelocity(Single, Single)
  fullName.vb: IntEnemy.ComputeJumpHangTimeFromVelocity(Single, Single)
  name.vb: ComputeJumpHangTimeFromVelocity(Single, Single)
- uid: Global.IntEnemy.ComputeJumpHangTimeFromHeight(System.Single,System.Single)
  commentId: M:Global.IntEnemy.ComputeJumpHangTimeFromHeight(System.Single,System.Single)
  id: ComputeJumpHangTimeFromHeight(System.Single,System.Single)
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: ComputeJumpHangTimeFromHeight(float, float)
  nameWithType: IntEnemy.ComputeJumpHangTimeFromHeight(float, float)
  fullName: IntEnemy.ComputeJumpHangTimeFromHeight(float, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ComputeJumpHangTimeFromHeight
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 206
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float ComputeJumpHangTimeFromHeight(float JumpHeight, float GravityScale = 1)
    parameters:
    - id: JumpHeight
      type: System.Single
    - id: GravityScale
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Function ComputeJumpHangTimeFromHeight(JumpHeight As Single, GravityScale As Single = 1) As Single
  overload: Global.IntEnemy.ComputeJumpHangTimeFromHeight*
  nameWithType.vb: IntEnemy.ComputeJumpHangTimeFromHeight(Single, Single)
  fullName.vb: IntEnemy.ComputeJumpHangTimeFromHeight(Single, Single)
  name.vb: ComputeJumpHangTimeFromHeight(Single, Single)
- uid: Global.IntEnemy.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  commentId: M:Global.IntEnemy.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  id: TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: TakeDamage(int, bool, bool, DamageType)
  nameWithType: IntEnemy.TakeDamage(int, bool, bool, DamageType)
  fullName: IntEnemy.TakeDamage(int, bool, bool, DamageType)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TakeDamage
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 211
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void TakeDamage(int amount, bool force = false, bool MajorRespawn = false, DamageType damageType = DamageType.Impact)
    parameters:
    - id: amount
      type: System.Int32
    - id: force
      type: System.Boolean
    - id: MajorRespawn
      type: System.Boolean
    - id: damageType
      type: Global.DamageType
    content.vb: Public Overrides Sub TakeDamage(amount As Integer, force As Boolean = False, MajorRespawn As Boolean = False, damageType As DamageType = DamageType.Impact)
  overridden: Global.IntActor.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  overload: Global.IntEnemy.TakeDamage*
  nameWithType.vb: IntEnemy.TakeDamage(Integer, Boolean, Boolean, DamageType)
  fullName.vb: IntEnemy.TakeDamage(Integer, Boolean, Boolean, DamageType)
  name.vb: TakeDamage(Integer, Boolean, Boolean, DamageType)
- uid: Global.IntEnemy.SetCurrentShieldHealth(System.Int32)
  commentId: M:Global.IntEnemy.SetCurrentShieldHealth(System.Int32)
  id: SetCurrentShieldHealth(System.Int32)
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: SetCurrentShieldHealth(int)
  nameWithType: IntEnemy.SetCurrentShieldHealth(int)
  fullName: IntEnemy.SetCurrentShieldHealth(int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetCurrentShieldHealth
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 242
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetCurrentShieldHealth(int newCurrentShieldHealth)
    parameters:
    - id: newCurrentShieldHealth
      type: System.Int32
    content.vb: Public Sub SetCurrentShieldHealth(newCurrentShieldHealth As Integer)
  overload: Global.IntEnemy.SetCurrentShieldHealth*
  nameWithType.vb: IntEnemy.SetCurrentShieldHealth(Integer)
  fullName.vb: IntEnemy.SetCurrentShieldHealth(Integer)
  name.vb: SetCurrentShieldHealth(Integer)
- uid: Global.IntEnemy.SetPoisoned(System.Int32)
  commentId: M:Global.IntEnemy.SetPoisoned(System.Int32)
  id: SetPoisoned(System.Int32)
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: SetPoisoned(int)
  nameWithType: IntEnemy.SetPoisoned(int)
  fullName: IntEnemy.SetPoisoned(int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetPoisoned
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 247
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetPoisoned(int poisonAmount)
    parameters:
    - id: poisonAmount
      type: System.Int32
    content.vb: Public Sub SetPoisoned(poisonAmount As Integer)
  overload: Global.IntEnemy.SetPoisoned*
  nameWithType.vb: IntEnemy.SetPoisoned(Integer)
  fullName.vb: IntEnemy.SetPoisoned(Integer)
  name.vb: SetPoisoned(Integer)
- uid: Global.IntEnemy.ResetObject
  commentId: M:Global.IntEnemy.ResetObject
  id: ResetObject
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: ResetObject()
  nameWithType: IntEnemy.ResetObject()
  fullName: IntEnemy.ResetObject()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResetObject
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 252
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void ResetObject()
    content.vb: Public Overrides Sub ResetObject()
  overridden: Global.IntObject.ResetObject
  overload: Global.IntEnemy.ResetObject*
- uid: Global.IntEnemy.GetSightRayOrigin
  commentId: M:Global.IntEnemy.GetSightRayOrigin
  id: GetSightRayOrigin
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: GetSightRayOrigin()
  nameWithType: IntEnemy.GetSightRayOrigin()
  fullName: IntEnemy.GetSightRayOrigin()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetSightRayOrigin
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 266
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\n\n"
  example: []
  syntax:
    content: protected Vector2Int GetSightRayOrigin()
    return:
      type: UnityEngine.Vector2Int
      description: ''
    content.vb: Protected Function GetSightRayOrigin() As Vector2Int
  overload: Global.IntEnemy.GetSightRayOrigin*
- uid: Global.IntEnemy.GetForwardSightRayDirection
  commentId: M:Global.IntEnemy.GetForwardSightRayDirection
  id: GetForwardSightRayDirection
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: GetForwardSightRayDirection()
  nameWithType: IntEnemy.GetForwardSightRayDirection()
  fullName: IntEnemy.GetForwardSightRayDirection()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetForwardSightRayDirection
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 281
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected int GetForwardSightRayDirection()
    return:
      type: System.Int32
    content.vb: Protected Function GetForwardSightRayDirection() As Integer
  overload: Global.IntEnemy.GetForwardSightRayDirection*
- uid: Global.IntEnemy.GetVelocity
  commentId: M:Global.IntEnemy.GetVelocity
  id: GetVelocity
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: GetVelocity()
  nameWithType: IntEnemy.GetVelocity()
  fullName: IntEnemy.GetVelocity()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetVelocity
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 289
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override Vector2 GetVelocity()
    return:
      type: UnityEngine.Vector2
    content.vb: Public Overrides Function GetVelocity() As Vector2
  overridden: Global.IntActor.GetVelocity
  overload: Global.IntEnemy.GetVelocity*
- uid: Global.IntEnemy.IsCollected
  commentId: M:Global.IntEnemy.IsCollected
  id: IsCollected
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: IsCollected()
  nameWithType: IntEnemy.IsCollected()
  fullName: IntEnemy.IsCollected()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsCollected
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 294
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsCollected()
    return:
      type: System.Boolean
    content.vb: Public Function IsCollected() As Boolean
  overload: Global.IntEnemy.IsCollected*
  implements:
  - Global.ICollectableInterface.IsCollected
- uid: Global.IntEnemy.StaticMoveUpdate
  commentId: M:Global.IntEnemy.StaticMoveUpdate
  id: StaticMoveUpdate
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: StaticMoveUpdate()
  nameWithType: IntEnemy.StaticMoveUpdate()
  fullName: IntEnemy.StaticMoveUpdate()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: StaticMoveUpdate
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 306
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nUpdate function for enemies that do not have a movement controller. This ensures collisions work properly.\n"
  example: []
  syntax:
    content: public void StaticMoveUpdate()
    content.vb: Public Sub StaticMoveUpdate()
  overload: Global.IntEnemy.StaticMoveUpdate*
- uid: Global.IntEnemy.GetSpriteFlip(System.Boolean,System.Boolean)
  commentId: M:Global.IntEnemy.GetSpriteFlip(System.Boolean,System.Boolean)
  id: GetSpriteFlip(System.Boolean,System.Boolean)
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: GetSpriteFlip(bool, bool)
  nameWithType: IntEnemy.GetSpriteFlip(bool, bool)
  fullName: IntEnemy.GetSpriteFlip(bool, bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetSpriteFlip
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 311
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool GetSpriteFlip(bool current, bool inverted = false)
    parameters:
    - id: current
      type: System.Boolean
    - id: inverted
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function GetSpriteFlip(current As Boolean, inverted As Boolean = False) As Boolean
  overload: Global.IntEnemy.GetSpriteFlip*
  nameWithType.vb: IntEnemy.GetSpriteFlip(Boolean, Boolean)
  fullName.vb: IntEnemy.GetSpriteFlip(Boolean, Boolean)
  name.vb: GetSpriteFlip(Boolean, Boolean)
- uid: Global.IntEnemy.GetLookAtFlipX(System.Boolean,UnityEngine.GameObject)
  commentId: M:Global.IntEnemy.GetLookAtFlipX(System.Boolean,UnityEngine.GameObject)
  id: GetLookAtFlipX(System.Boolean,UnityEngine.GameObject)
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: GetLookAtFlipX(bool, GameObject)
  nameWithType: IntEnemy.GetLookAtFlipX(bool, GameObject)
  fullName: IntEnemy.GetLookAtFlipX(bool, UnityEngine.GameObject)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetLookAtFlipX
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 320
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool GetLookAtFlipX(bool current, GameObject obj)
    parameters:
    - id: current
      type: System.Boolean
    - id: obj
      type: UnityEngine.GameObject
    return:
      type: System.Boolean
    content.vb: Public Function GetLookAtFlipX(current As Boolean, obj As GameObject) As Boolean
  overload: Global.IntEnemy.GetLookAtFlipX*
  nameWithType.vb: IntEnemy.GetLookAtFlipX(Boolean, GameObject)
  fullName.vb: IntEnemy.GetLookAtFlipX(Boolean, UnityEngine.GameObject)
  name.vb: GetLookAtFlipX(Boolean, GameObject)
- uid: Global.IntEnemy.JumpTiles(System.Int32,System.Single)
  commentId: M:Global.IntEnemy.JumpTiles(System.Int32,System.Single)
  id: JumpTiles(System.Int32,System.Single)
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: JumpTiles(int, float)
  nameWithType: IntEnemy.JumpTiles(int, float)
  fullName: IntEnemy.JumpTiles(int, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: JumpTiles
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 331
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void JumpTiles(int tiles, float GravityScale = 1)
    parameters:
    - id: tiles
      type: System.Int32
    - id: GravityScale
      type: System.Single
    content.vb: Public Sub JumpTiles(tiles As Integer, GravityScale As Single = 1)
  overload: Global.IntEnemy.JumpTiles*
  nameWithType.vb: IntEnemy.JumpTiles(Integer, Single)
  fullName.vb: IntEnemy.JumpTiles(Integer, Single)
  name.vb: JumpTiles(Integer, Single)
- uid: Global.IntEnemy.JumpHeight(System.Single,System.Single)
  commentId: M:Global.IntEnemy.JumpHeight(System.Single,System.Single)
  id: JumpHeight(System.Single,System.Single)
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: JumpHeight(float, float)
  nameWithType: IntEnemy.JumpHeight(float, float)
  fullName: IntEnemy.JumpHeight(float, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: JumpHeight
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 337
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void JumpHeight(float height, float GravityScale = 1)
    parameters:
    - id: height
      type: System.Single
    - id: GravityScale
      type: System.Single
    content.vb: Public Sub JumpHeight(height As Single, GravityScale As Single = 1)
  overload: Global.IntEnemy.JumpHeight*
  nameWithType.vb: IntEnemy.JumpHeight(Single, Single)
  fullName.vb: IntEnemy.JumpHeight(Single, Single)
  name.vb: JumpHeight(Single, Single)
- uid: Global.IntEnemy.Jump(System.Single)
  commentId: M:Global.IntEnemy.Jump(System.Single)
  id: Jump(System.Single)
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: Jump(float)
  nameWithType: IntEnemy.Jump(float)
  fullName: IntEnemy.Jump(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Jump
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 343
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Jump(float InitialVelocity)
    parameters:
    - id: InitialVelocity
      type: System.Single
    content.vb: Public Sub Jump(InitialVelocity As Single)
  overload: Global.IntEnemy.Jump*
  nameWithType.vb: IntEnemy.Jump(Single)
  fullName.vb: IntEnemy.Jump(Single)
  name.vb: Jump(Single)
- uid: Global.IntEnemy.ApplyGravity(System.Single)
  commentId: M:Global.IntEnemy.ApplyGravity(System.Single)
  id: ApplyGravity(System.Single)
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: ApplyGravity(float)
  nameWithType: IntEnemy.ApplyGravity(float)
  fullName: IntEnemy.ApplyGravity(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ApplyGravity
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 352
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nCause the enemy to fall\n"
  example: []
  syntax:
    content: public void ApplyGravity(float GravityScale = 1)
    parameters:
    - id: GravityScale
      type: System.Single
      description: ''
    content.vb: Public Sub ApplyGravity(GravityScale As Single = 1)
  overload: Global.IntEnemy.ApplyGravity*
  nameWithType.vb: IntEnemy.ApplyGravity(Single)
  fullName.vb: IntEnemy.ApplyGravity(Single)
  name.vb: ApplyGravity(Single)
- uid: Global.IntEnemy.AIMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.Action,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntEnemy.AIMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.Action,IntObject.ActorAction,IntObject.TriggerAction)
  id: AIMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.Action,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: AIMove(Vector2, SolidAction, SolidAction, Action, ActorAction, TriggerAction)
  nameWithType: IntEnemy.AIMove(Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.Action, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntEnemy.AIMove(UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.Action, IntObject.ActorAction, IntObject.TriggerAction)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AIMove
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 372
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nMoves the enemy along the X axis but does not allow the enemy to fall off edges or run into spikes\n"
  example: []
  syntax:
    content: public void AIMove(Vector2 amount, IntObject.SolidAction OnCollideX, IntObject.SolidAction OnCollideY, IntObject.Action OnEdgeX, IntObject.ActorAction OnActor = null, IntObject.TriggerAction OnTrigger = null)
    parameters:
    - id: amount
      type: UnityEngine.Vector2
      description: ''
    - id: OnCollideX
      type: Global.IntObject.SolidAction
      description: ''
    - id: OnCollideY
      type: Global.IntObject.SolidAction
    - id: OnEdgeX
      type: Global.IntObject.Action
      description: Called anytime the actor is at an edge
    - id: OnActor
      type: Global.IntObject.ActorAction
    - id: OnTrigger
      type: Global.IntObject.TriggerAction
    content.vb: Public Sub AIMove(amount As Vector2, OnCollideX As IntObject.SolidAction, OnCollideY As IntObject.SolidAction, OnEdgeX As IntObject.Action, OnActor As IntObject.ActorAction = Nothing, OnTrigger As IntObject.TriggerAction = Nothing)
  overload: Global.IntEnemy.AIMove*
- uid: Global.IntEnemy.AIMoveWithJump(System.Int32,UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.Action,IntObject.ActorAction,IntObject.TriggerAction,IntObject.Action)
  commentId: M:Global.IntEnemy.AIMoveWithJump(System.Int32,UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.Action,IntObject.ActorAction,IntObject.TriggerAction,IntObject.Action)
  id: AIMoveWithJump(System.Int32,UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.Action,IntObject.ActorAction,IntObject.TriggerAction,IntObject.Action)
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: AIMoveWithJump(int, Vector2, SolidAction, SolidAction, Action, ActorAction, TriggerAction, Action)
  nameWithType: IntEnemy.AIMoveWithJump(int, Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.Action, IntObject.ActorAction, IntObject.TriggerAction, IntObject.Action)
  fullName: IntEnemy.AIMoveWithJump(int, UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.Action, IntObject.ActorAction, IntObject.TriggerAction, IntObject.Action)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AIMoveWithJump
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 397
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void AIMoveWithJump(int MaxJumpTileHeight, Vector2 amount, IntObject.SolidAction OnCollideX, IntObject.SolidAction OnCollideY, IntObject.Action OnEdgeX, IntObject.ActorAction OnActor = null, IntObject.TriggerAction OnTrigger = null, IntObject.Action OnJump = null)
    parameters:
    - id: MaxJumpTileHeight
      type: System.Int32
    - id: amount
      type: UnityEngine.Vector2
    - id: OnCollideX
      type: Global.IntObject.SolidAction
    - id: OnCollideY
      type: Global.IntObject.SolidAction
    - id: OnEdgeX
      type: Global.IntObject.Action
    - id: OnActor
      type: Global.IntObject.ActorAction
    - id: OnTrigger
      type: Global.IntObject.TriggerAction
    - id: OnJump
      type: Global.IntObject.Action
    content.vb: Public Sub AIMoveWithJump(MaxJumpTileHeight As Integer, amount As Vector2, OnCollideX As IntObject.SolidAction, OnCollideY As IntObject.SolidAction, OnEdgeX As IntObject.Action, OnActor As IntObject.ActorAction = Nothing, OnTrigger As IntObject.TriggerAction = Nothing, OnJump As IntObject.Action = Nothing)
  overload: Global.IntEnemy.AIMoveWithJump*
  nameWithType.vb: IntEnemy.AIMoveWithJump(Integer, Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.Action, IntObject.ActorAction, IntObject.TriggerAction, IntObject.Action)
  fullName.vb: IntEnemy.AIMoveWithJump(Integer, UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.Action, IntObject.ActorAction, IntObject.TriggerAction, IntObject.Action)
  name.vb: AIMoveWithJump(Integer, Vector2, SolidAction, SolidAction, Action, ActorAction, TriggerAction, Action)
- uid: Global.IntEnemy.Charge(IntEnemy.ChargeProps,IntObject.Action,IntObject.SolidAction,IntObject.SolidAction,IntObject.TriggerAction,IntObject.ActorAction)
  commentId: M:Global.IntEnemy.Charge(IntEnemy.ChargeProps,IntObject.Action,IntObject.SolidAction,IntObject.SolidAction,IntObject.TriggerAction,IntObject.ActorAction)
  id: Charge(IntEnemy.ChargeProps,IntObject.Action,IntObject.SolidAction,IntObject.SolidAction,IntObject.TriggerAction,IntObject.ActorAction)
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: Charge(ChargeProps, Action, SolidAction, SolidAction, TriggerAction, ActorAction)
  nameWithType: IntEnemy.Charge(IntEnemy.ChargeProps, IntObject.Action, IntObject.SolidAction, IntObject.SolidAction, IntObject.TriggerAction, IntObject.ActorAction)
  fullName: IntEnemy.Charge(IntEnemy.ChargeProps, IntObject.Action, IntObject.SolidAction, IntObject.SolidAction, IntObject.TriggerAction, IntObject.ActorAction)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Charge
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 430
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Charge(IntEnemy.ChargeProps chargeProps, IntObject.Action OnChargeEnded, IntObject.SolidAction OnCollideX, IntObject.SolidAction OnCollideY, IntObject.TriggerAction OnHitTrigger = null, IntObject.ActorAction OnHitActor = null)
    parameters:
    - id: chargeProps
      type: Global.IntEnemy.ChargeProps
    - id: OnChargeEnded
      type: Global.IntObject.Action
    - id: OnCollideX
      type: Global.IntObject.SolidAction
    - id: OnCollideY
      type: Global.IntObject.SolidAction
    - id: OnHitTrigger
      type: Global.IntObject.TriggerAction
    - id: OnHitActor
      type: Global.IntObject.ActorAction
    content.vb: Public Sub Charge(chargeProps As IntEnemy.ChargeProps, OnChargeEnded As IntObject.Action, OnCollideX As IntObject.SolidAction, OnCollideY As IntObject.SolidAction, OnHitTrigger As IntObject.TriggerAction = Nothing, OnHitActor As IntObject.ActorAction = Nothing)
  overload: Global.IntEnemy.Charge*
- uid: Global.IntEnemy.CastForwardSightRay(System.Single)
  commentId: M:Global.IntEnemy.CastForwardSightRay(System.Single)
  id: CastForwardSightRay(System.Single)
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: CastForwardSightRay(float)
  nameWithType: IntEnemy.CastForwardSightRay(float)
  fullName: IntEnemy.CastForwardSightRay(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CastForwardSightRay
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 484
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Intersection CastForwardSightRay(float SightDistance)
    parameters:
    - id: SightDistance
      type: System.Single
    return:
      type: Global.Intersection
    content.vb: Public Function CastForwardSightRay(SightDistance As Single) As Intersection
  overload: Global.IntEnemy.CastForwardSightRay*
  nameWithType.vb: IntEnemy.CastForwardSightRay(Single)
  fullName.vb: IntEnemy.CastForwardSightRay(Single)
  name.vb: CastForwardSightRay(Single)
- uid: Global.IntEnemy.CastForwardSightRay(System.Single,IntColliderState.RayCastFilter)
  commentId: M:Global.IntEnemy.CastForwardSightRay(System.Single,IntColliderState.RayCastFilter)
  id: CastForwardSightRay(System.Single,IntColliderState.RayCastFilter)
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: CastForwardSightRay(float, RayCastFilter)
  nameWithType: IntEnemy.CastForwardSightRay(float, IntColliderState.RayCastFilter)
  fullName: IntEnemy.CastForwardSightRay(float, IntColliderState.RayCastFilter)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CastForwardSightRay
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 489
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Intersection CastForwardSightRay(float SightDistance, IntColliderState.RayCastFilter filter)
    parameters:
    - id: SightDistance
      type: System.Single
    - id: filter
      type: Global.IntColliderState.RayCastFilter
    return:
      type: Global.Intersection
    content.vb: Public Function CastForwardSightRay(SightDistance As Single, filter As IntColliderState.RayCastFilter) As Intersection
  overload: Global.IntEnemy.CastForwardSightRay*
  nameWithType.vb: IntEnemy.CastForwardSightRay(Single, IntColliderState.RayCastFilter)
  fullName.vb: IntEnemy.CastForwardSightRay(Single, IntColliderState.RayCastFilter)
  name.vb: CastForwardSightRay(Single, RayCastFilter)
- uid: Global.IntEnemy.GetJumpInfo(System.Int32)
  commentId: M:Global.IntEnemy.GetJumpInfo(System.Int32)
  id: GetJumpInfo(System.Int32)
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: GetJumpInfo(int)
  nameWithType: IntEnemy.GetJumpInfo(int)
  fullName: IntEnemy.GetJumpInfo(int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetJumpInfo
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 509
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nProvides the enemy with whether it can jump onto a ledge and how high that ledge is.\n"
  example: []
  syntax:
    content: public IntEnemy.JumpInfo GetJumpInfo(int MaxTileJumpHeight)
    parameters:
    - id: MaxTileJumpHeight
      type: System.Int32
      description: The max height the user is able to jump
    return:
      type: Global.IntEnemy.JumpInfo
    content.vb: Public Function GetJumpInfo(MaxTileJumpHeight As Integer) As IntEnemy.JumpInfo
  overload: Global.IntEnemy.GetJumpInfo*
  nameWithType.vb: IntEnemy.GetJumpInfo(Integer)
  fullName.vb: IntEnemy.GetJumpInfo(Integer)
  name.vb: GetJumpInfo(Integer)
- uid: Global.IntEnemy.CanContinueForward
  commentId: M:Global.IntEnemy.CanContinueForward
  id: CanContinueForward
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: CanContinueForward()
  nameWithType: IntEnemy.CanContinueForward()
  fullName: IntEnemy.CanContinueForward()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CanContinueForward
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 557
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nChecks if the tiles adjacent to the enemy are available to be walked through. Checks only tilemap and spike map. Not other types of solids.\n"
  example: []
  syntax:
    content: public bool CanContinueForward()
    return:
      type: System.Boolean
      description: True or False
    content.vb: Public Function CanContinueForward() As Boolean
  overload: Global.IntEnemy.CanContinueForward*
- uid: Global.IntEnemy.Update
  commentId: M:Global.IntEnemy.Update
  id: Update
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: IntEnemy.Update()
  fullName: IntEnemy.Update()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Update
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 592
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Update()
    content.vb: Protected Sub Update()
  overload: Global.IntEnemy.Update*
- uid: Global.IntEnemy.Initialize
  commentId: M:Global.IntEnemy.Initialize
  id: Initialize
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: IntEnemy.Initialize()
  fullName: IntEnemy.Initialize()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Initialize
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 631
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void Initialize()
    content.vb: Public Overridable Sub Initialize()
  overload: Global.IntEnemy.Initialize*
  implements:
  - Global.IEntity.Initialize
- uid: Global.IntEnemy.OnFirstFrame
  commentId: M:Global.IntEnemy.OnFirstFrame
  id: OnFirstFrame
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: OnFirstFrame()
  nameWithType: IntEnemy.OnFirstFrame()
  fullName: IntEnemy.OnFirstFrame()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnFirstFrame
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 638
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void OnFirstFrame()
    content.vb: Public Overridable Sub OnFirstFrame()
  overload: Global.IntEnemy.OnFirstFrame*
  implements:
  - Global.IEntity.OnFirstFrame
- uid: Global.IntEnemy.OnSpike(IntSolid)
  commentId: M:Global.IntEnemy.OnSpike(IntSolid)
  id: OnSpike(IntSolid)
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: OnSpike(IntSolid)
  nameWithType: IntEnemy.OnSpike(IntSolid)
  fullName: IntEnemy.OnSpike(IntSolid)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnSpike
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 640
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override void OnSpike(IntSolid solid)
    parameters:
    - id: solid
      type: Global.IntSolid
    content.vb: Protected Overrides Sub OnSpike(solid As IntSolid)
  overridden: Global.IntActor.OnSpike(IntSolid)
  overload: Global.IntEnemy.OnSpike*
- uid: Global.IntEnemy.SpawnAura
  commentId: M:Global.IntEnemy.SpawnAura
  id: SpawnAura
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: SpawnAura()
  nameWithType: IntEnemy.SpawnAura()
  fullName: IntEnemy.SpawnAura()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SpawnAura
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 647
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual GameObject SpawnAura()
    return:
      type: UnityEngine.GameObject
    content.vb: Public Overridable Function SpawnAura() As GameObject
  overload: Global.IntEnemy.SpawnAura*
  implements:
  - Global.IEntity.SpawnAura
- uid: Global.IntEnemy.PreInputUpdate
  commentId: M:Global.IntEnemy.PreInputUpdate
  id: PreInputUpdate
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: PreInputUpdate()
  nameWithType: IntEnemy.PreInputUpdate()
  fullName: IntEnemy.PreInputUpdate()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PreInputUpdate
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 649
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void PreInputUpdate()
    content.vb: Public Overridable Sub PreInputUpdate()
  overload: Global.IntEnemy.PreInputUpdate*
  implements:
  - Global.IEntity.PreInputUpdate
- uid: Global.IntEnemy.UpdateInput
  commentId: M:Global.IntEnemy.UpdateInput
  id: UpdateInput
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: UpdateInput()
  nameWithType: IntEnemy.UpdateInput()
  fullName: IntEnemy.UpdateInput()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UpdateInput
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 651
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void UpdateInput()
    content.vb: Public Overridable Sub UpdateInput()
  overload: Global.IntEnemy.UpdateInput*
  implements:
  - Global.IEntity.UpdateInput
- uid: Global.IntEnemy.PostInputUpdate
  commentId: M:Global.IntEnemy.PostInputUpdate
  id: PostInputUpdate
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: PostInputUpdate()
  nameWithType: IntEnemy.PostInputUpdate()
  fullName: IntEnemy.PostInputUpdate()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PostInputUpdate
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 653
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void PostInputUpdate()
    content.vb: Public Overridable Sub PostInputUpdate()
  overload: Global.IntEnemy.PostInputUpdate*
  implements:
  - Global.IEntity.PostInputUpdate
- uid: Global.IntEnemy.Animate
  commentId: M:Global.IntEnemy.Animate
  id: Animate
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: Animate()
  nameWithType: IntEnemy.Animate()
  fullName: IntEnemy.Animate()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Animate
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 655
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void Animate()
    content.vb: Public Overridable Sub Animate()
  overload: Global.IntEnemy.Animate*
  implements:
  - Global.IEntity.Animate
- uid: Global.IntEnemy.OnDrawDebugGizmos
  commentId: M:Global.IntEnemy.OnDrawDebugGizmos
  id: OnDrawDebugGizmos
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: OnDrawDebugGizmos()
  nameWithType: IntEnemy.OnDrawDebugGizmos()
  fullName: IntEnemy.OnDrawDebugGizmos()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnDrawDebugGizmos
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 657
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void OnDrawDebugGizmos()
    content.vb: Public Overridable Sub OnDrawDebugGizmos()
  overload: Global.IntEnemy.OnDrawDebugGizmos*
  implements:
  - Global.IEntity.OnDrawDebugGizmos
- uid: Global.IntEnemy.DebugDrawTileVision
  commentId: M:Global.IntEnemy.DebugDrawTileVision
  id: DebugDrawTileVision
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: DebugDrawTileVision()
  nameWithType: IntEnemy.DebugDrawTileVision()
  fullName: IntEnemy.DebugDrawTileVision()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DebugDrawTileVision
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 663
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void DebugDrawTileVision()
    content.vb: Public Sub DebugDrawTileVision()
  overload: Global.IntEnemy.DebugDrawTileVision*
- uid: Global.IntEnemy.GizmosDrawTileVision
  commentId: M:Global.IntEnemy.GizmosDrawTileVision
  id: GizmosDrawTileVision
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: GizmosDrawTileVision()
  nameWithType: IntEnemy.GizmosDrawTileVision()
  fullName: IntEnemy.GizmosDrawTileVision()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GizmosDrawTileVision
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 676
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void GizmosDrawTileVision()
    content.vb: Public Sub GizmosDrawTileVision()
  overload: Global.IntEnemy.GizmosDrawTileVision*
- uid: Global.IntEnemy.GizmosDrawRequiredSpace
  commentId: M:Global.IntEnemy.GizmosDrawRequiredSpace
  id: GizmosDrawRequiredSpace
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: GizmosDrawRequiredSpace()
  nameWithType: IntEnemy.GizmosDrawRequiredSpace()
  fullName: IntEnemy.GizmosDrawRequiredSpace()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GizmosDrawRequiredSpace
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 688
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void GizmosDrawRequiredSpace()
    content.vb: Public Sub GizmosDrawRequiredSpace()
  overload: Global.IntEnemy.GizmosDrawRequiredSpace*
- uid: Global.IntEnemy.OnDrawGizmosSelected
  commentId: M:Global.IntEnemy.OnDrawGizmosSelected
  id: OnDrawGizmosSelected
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: OnDrawGizmosSelected()
  nameWithType: IntEnemy.OnDrawGizmosSelected()
  fullName: IntEnemy.OnDrawGizmosSelected()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnDrawGizmosSelected
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 695
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void OnDrawGizmosSelected()
    content.vb: Protected Overridable Sub OnDrawGizmosSelected()
  overload: Global.IntEnemy.OnDrawGizmosSelected*
- uid: Global.IntEnemy.OnDrawGizmos
  commentId: M:Global.IntEnemy.OnDrawGizmos
  id: OnDrawGizmos
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: OnDrawGizmos()
  nameWithType: IntEnemy.OnDrawGizmos()
  fullName: IntEnemy.OnDrawGizmos()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnDrawGizmos
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 710
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void OnDrawGizmos()
    content.vb: Protected Overridable Sub OnDrawGizmos()
  overload: Global.IntEnemy.OnDrawGizmos*
- uid: Global.IntEnemy.GetSpawnProperties
  commentId: M:Global.IntEnemy.GetSpawnProperties
  id: GetSpawnProperties
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: GetSpawnProperties()
  nameWithType: IntEnemy.GetSpawnProperties()
  fullName: IntEnemy.GetSpawnProperties()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetSpawnProperties
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 720
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public EnemySpawnProperties GetSpawnProperties()
    return:
      type: Global.EnemySpawnProperties
    content.vb: Public Function GetSpawnProperties() As EnemySpawnProperties
  overload: Global.IntEnemy.GetSpawnProperties*
  implements:
  - Global.ISpawnable.GetSpawnProperties
- uid: Global.IntEnemy.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  commentId: M:Global.IntEnemy.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  id: OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: OnLocalSpaceSpawnBoundsSet(Vector2Int, Vector2Int)
  nameWithType: IntEnemy.OnLocalSpaceSpawnBoundsSet(Vector2Int, Vector2Int)
  fullName: IntEnemy.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnLocalSpaceSpawnBoundsSet
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 725
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void OnLocalSpaceSpawnBoundsSet(Vector2Int MinLocalBounds, Vector2Int MaxLocalBounds)
    parameters:
    - id: MinLocalBounds
      type: UnityEngine.Vector2Int
    - id: MaxLocalBounds
      type: UnityEngine.Vector2Int
    content.vb: Public Overridable Sub OnLocalSpaceSpawnBoundsSet(MinLocalBounds As Vector2Int, MaxLocalBounds As Vector2Int)
  overload: Global.IntEnemy.OnLocalSpaceSpawnBoundsSet*
  implements:
  - Global.ISpawnable.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
- uid: Global.IntEnemy.ResolveSpawnLocation
  commentId: M:Global.IntEnemy.ResolveSpawnLocation
  id: ResolveSpawnLocation
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: ResolveSpawnLocation()
  nameWithType: IntEnemy.ResolveSpawnLocation()
  fullName: IntEnemy.ResolveSpawnLocation()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResolveSpawnLocation
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 727
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void ResolveSpawnLocation()
    content.vb: Public Sub ResolveSpawnLocation()
  overload: Global.IntEnemy.ResolveSpawnLocation*
  implements:
  - Global.ISpawnable.ResolveSpawnLocation
- uid: Global.IntEnemy.GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
  commentId: M:Global.IntEnemy.GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
  id: GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
  parent: Global.IntEnemy
  langs:
  - csharp
  - vb
  name: GetSpawnLocationFromBounds(Vector3, Vector3)
  nameWithType: IntEnemy.GetSpawnLocationFromBounds(Vector3, Vector3)
  fullName: IntEnemy.GetSpawnLocationFromBounds(UnityEngine.Vector3, UnityEngine.Vector3)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetSpawnLocationFromBounds
    path: ../Assets/Objects & Components/Entities/Enemies/IntEnemy.cs
    startLine: 737
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector3 GetSpawnLocationFromBounds(Vector3 MinWorldBounds, Vector3 MaxWorldBounds)
    parameters:
    - id: MinWorldBounds
      type: UnityEngine.Vector3
    - id: MaxWorldBounds
      type: UnityEngine.Vector3
    return:
      type: UnityEngine.Vector3
    content.vb: Public Function GetSpawnLocationFromBounds(MinWorldBounds As Vector3, MaxWorldBounds As Vector3) As Vector3
  overload: Global.IntEnemy.GetSpawnLocationFromBounds*
  implements:
  - Global.ISpawnable.GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Global.IntObject
  commentId: T:Global.IntObject
  name: IntObject
  nameWithType: IntObject
  fullName: IntObject
- uid: Global.IntActor
  commentId: T:Global.IntActor
  name: IntActor
  nameWithType: IntActor
  fullName: IntActor
- uid: Global.ISavableObject{IntObjectSaveData}
  commentId: T:Global.ISavableObject{IntObjectSaveData}
  definition: Global.ISavableObject`1
  name: ISavableObject<IntObjectSaveData>
  nameWithType: ISavableObject<IntObjectSaveData>
  fullName: ISavableObject<IntObjectSaveData>
  nameWithType.vb: ISavableObject(Of IntObjectSaveData)
  fullName.vb: ISavableObject(Of IntObjectSaveData)
  name.vb: ISavableObject(Of IntObjectSaveData)
  spec.csharp:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: <
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: '>'
  spec.vb:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
- uid: Global.IEntity
  commentId: T:Global.IEntity
  name: IEntity
  nameWithType: IEntity
  fullName: IEntity
- uid: Global.ICollectableInterface
  commentId: T:Global.ICollectableInterface
  name: ICollectableInterface
  nameWithType: ICollectableInterface
  fullName: ICollectableInterface
- uid: Global.ISpawnable
  commentId: T:Global.ISpawnable
  name: ISpawnable
  nameWithType: ISpawnable
  fullName: ISpawnable
- uid: Global.IntActor.HurtBySpike
  commentId: F:Global.IntActor.HurtBySpike
  parent: Global.IntActor
  name: HurtBySpike
  nameWithType: IntActor.HurtBySpike
  fullName: IntActor.HurtBySpike
- uid: Global.IntActor.aabb
  commentId: F:Global.IntActor.aabb
  parent: Global.IntActor
  name: aabb
  nameWithType: IntActor.aabb
  fullName: IntActor.aabb
- uid: Global.IntActor.Left
  commentId: P:Global.IntActor.Left
  parent: Global.IntActor
  name: Left
  nameWithType: IntActor.Left
  fullName: IntActor.Left
- uid: Global.IntActor.Right
  commentId: P:Global.IntActor.Right
  parent: Global.IntActor
  name: Right
  nameWithType: IntActor.Right
  fullName: IntActor.Right
- uid: Global.IntActor.Top
  commentId: P:Global.IntActor.Top
  parent: Global.IntActor
  name: Top
  nameWithType: IntActor.Top
  fullName: IntActor.Top
- uid: Global.IntActor.Bottom
  commentId: P:Global.IntActor.Bottom
  parent: Global.IntActor
  name: Bottom
  nameWithType: IntActor.Bottom
  fullName: IntActor.Bottom
- uid: Global.IntActor.Size
  commentId: P:Global.IntActor.Size
  parent: Global.IntActor
  name: Size
  nameWithType: IntActor.Size
  fullName: IntActor.Size
- uid: Global.IntActor.WindInfluence
  commentId: F:Global.IntActor.WindInfluence
  parent: Global.IntActor
  name: WindInfluence
  nameWithType: IntActor.WindInfluence
  fullName: IntActor.WindInfluence
- uid: Global.IntActor.OnTakeDamageCallback
  commentId: F:Global.IntActor.OnTakeDamageCallback
  parent: Global.IntActor
  name: OnTakeDamageCallback
  nameWithType: IntActor.OnTakeDamageCallback
  fullName: IntActor.OnTakeDamageCallback
- uid: Global.IntActor.RidingSolid
  commentId: P:Global.IntActor.RidingSolid
  parent: Global.IntActor
  name: RidingSolid
  nameWithType: IntActor.RidingSolid
  fullName: IntActor.RidingSolid
- uid: Global.IntActor.RidingTangent
  commentId: P:Global.IntActor.RidingTangent
  parent: Global.IntActor
  name: RidingTangent
  nameWithType: IntActor.RidingTangent
  fullName: IntActor.RidingTangent
- uid: Global.IntActor.RidingNormal
  commentId: P:Global.IntActor.RidingNormal
  parent: Global.IntActor
  name: RidingNormal
  nameWithType: IntActor.RidingNormal
  fullName: IntActor.RidingNormal
- uid: Global.IntActor.IsRidingFlatSurface
  commentId: P:Global.IntActor.IsRidingFlatSurface
  parent: Global.IntActor
  name: IsRidingFlatSurface
  nameWithType: IntActor.IsRidingFlatSurface
  fullName: IntActor.IsRidingFlatSurface
- uid: Global.IntActor.Awake
  commentId: M:Global.IntActor.Awake
  parent: Global.IntActor
  name: Awake()
  nameWithType: IntActor.Awake()
  fullName: IntActor.Awake()
  spec.csharp:
  - uid: Global.IntActor.Awake
    name: Awake
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.Awake
    name: Awake
  - name: (
  - name: )
- uid: Global.IntActor.ManualInit
  commentId: M:Global.IntActor.ManualInit
  parent: Global.IntActor
  name: ManualInit()
  nameWithType: IntActor.ManualInit()
  fullName: IntActor.ManualInit()
  spec.csharp:
  - uid: Global.IntActor.ManualInit
    name: ManualInit
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.ManualInit
    name: ManualInit
  - name: (
  - name: )
- uid: Global.IntActor.GetAABBIntCollider
  commentId: M:Global.IntActor.GetAABBIntCollider
  parent: Global.IntActor
  name: GetAABBIntCollider()
  nameWithType: IntActor.GetAABBIntCollider()
  fullName: IntActor.GetAABBIntCollider()
  spec.csharp:
  - uid: Global.IntActor.GetAABBIntCollider
    name: GetAABBIntCollider
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetAABBIntCollider
    name: GetAABBIntCollider
  - name: (
  - name: )
- uid: Global.IntActor.EnsureAABBIntColliderSet
  commentId: M:Global.IntActor.EnsureAABBIntColliderSet
  parent: Global.IntActor
  name: EnsureAABBIntColliderSet()
  nameWithType: IntActor.EnsureAABBIntColliderSet()
  fullName: IntActor.EnsureAABBIntColliderSet()
  spec.csharp:
  - uid: Global.IntActor.EnsureAABBIntColliderSet
    name: EnsureAABBIntColliderSet
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.EnsureAABBIntColliderSet
    name: EnsureAABBIntColliderSet
  - name: (
  - name: )
- uid: Global.IntActor.IsRiding(IntSolid)
  commentId: M:Global.IntActor.IsRiding(IntSolid)
  parent: Global.IntActor
  name: IsRiding(IntSolid)
  nameWithType: IntActor.IsRiding(IntSolid)
  fullName: IntActor.IsRiding(IntSolid)
  spec.csharp:
  - uid: Global.IntActor.IsRiding(IntSolid)
    name: IsRiding
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.IntActor.IsRiding(IntSolid)
    name: IsRiding
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
  commentId: M:Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
  parent: Global.IntActor
  isExternal: true
  name: IsWalkingFlatOrUphill(Vector2)
  nameWithType: IntActor.IsWalkingFlatOrUphill(Vector2)
  fullName: IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
    name: IsWalkingFlatOrUphill
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
    name: IsWalkingFlatOrUphill
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
  commentId: M:Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
  parent: Global.IntActor
  isExternal: true
  name: GetEffectiveVelocity(Vector2)
  nameWithType: IntActor.GetEffectiveVelocity(Vector2)
  fullName: IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
    name: GetEffectiveVelocity
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
    name: GetEffectiveVelocity
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntActor.IsTouchingWall(IntSolid)
  commentId: M:Global.IntActor.IsTouchingWall(IntSolid)
  parent: Global.IntActor
  name: IsTouchingWall(IntSolid)
  nameWithType: IntActor.IsTouchingWall(IntSolid)
  fullName: IntActor.IsTouchingWall(IntSolid)
  spec.csharp:
  - uid: Global.IntActor.IsTouchingWall(IntSolid)
    name: IsTouchingWall
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.IntActor.IsTouchingWall(IntSolid)
    name: IsTouchingWall
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
  commentId: M:Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
  parent: Global.IntActor
  isExternal: true
  name: SolidContainsPoint(Vector2Int)
  nameWithType: IntActor.SolidContainsPoint(Vector2Int)
  fullName: IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
    name: SolidContainsPoint
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
    name: SolidContainsPoint
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  commentId: M:Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  parent: Global.IntActor
  name: RegisterOnTakeDamageCallback(Action)
  nameWithType: IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  fullName: IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
    name: RegisterOnTakeDamageCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
    name: RegisterOnTakeDamageCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  commentId: M:Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  parent: Global.IntActor
  name: UnregisterOnTakeDamageCallback(Action)
  nameWithType: IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  fullName: IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
    name: UnregisterOnTakeDamageCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
    name: UnregisterOnTakeDamageCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntActor.OnTakeDamage(System.Int32)
  commentId: M:Global.IntActor.OnTakeDamage(System.Int32)
  parent: Global.IntActor
  isExternal: true
  name: OnTakeDamage(int)
  nameWithType: IntActor.OnTakeDamage(int)
  fullName: IntActor.OnTakeDamage(int)
  nameWithType.vb: IntActor.OnTakeDamage(Integer)
  fullName.vb: IntActor.OnTakeDamage(Integer)
  name.vb: OnTakeDamage(Integer)
  spec.csharp:
  - uid: Global.IntActor.OnTakeDamage(System.Int32)
    name: OnTakeDamage
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnTakeDamage(System.Int32)
    name: OnTakeDamage
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Global.IntActor.ResetAuraCollisionMap
  commentId: M:Global.IntActor.ResetAuraCollisionMap
  parent: Global.IntActor
  name: ResetAuraCollisionMap()
  nameWithType: IntActor.ResetAuraCollisionMap()
  fullName: IntActor.ResetAuraCollisionMap()
  spec.csharp:
  - uid: Global.IntActor.ResetAuraCollisionMap
    name: ResetAuraCollisionMap
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResetAuraCollisionMap
    name: ResetAuraCollisionMap
  - name: (
  - name: )
- uid: Global.IntActor.ResetActorCollisionMap
  commentId: M:Global.IntActor.ResetActorCollisionMap
  parent: Global.IntActor
  name: ResetActorCollisionMap()
  nameWithType: IntActor.ResetActorCollisionMap()
  fullName: IntActor.ResetActorCollisionMap()
  spec.csharp:
  - uid: Global.IntActor.ResetActorCollisionMap
    name: ResetActorCollisionMap
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResetActorCollisionMap
    name: ResetActorCollisionMap
  - name: (
  - name: )
- uid: Global.IntActor.ResetCollisionMap
  commentId: M:Global.IntActor.ResetCollisionMap
  parent: Global.IntActor
  name: ResetCollisionMap()
  nameWithType: IntActor.ResetCollisionMap()
  fullName: IntActor.ResetCollisionMap()
  spec.csharp:
  - uid: Global.IntActor.ResetCollisionMap
    name: ResetCollisionMap
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResetCollisionMap
    name: ResetCollisionMap
  - name: (
  - name: )
- uid: Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
  commentId: M:Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
  parent: Global.IntActor
  isExternal: true
  name: ResetCollisionsAfterTime(IntObject, float)
  nameWithType: IntActor.ResetCollisionsAfterTime(IntObject, float)
  fullName: IntActor.ResetCollisionsAfterTime(IntObject, float)
  nameWithType.vb: IntActor.ResetCollisionsAfterTime(IntObject, Single)
  fullName.vb: IntActor.ResetCollisionsAfterTime(IntObject, Single)
  name.vb: ResetCollisionsAfterTime(IntObject, Single)
  spec.csharp:
  - uid: Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
    name: ResetCollisionsAfterTime
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
    name: ResetCollisionsAfterTime
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
  commentId: M:Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
  parent: Global.IntActor
  isExternal: true
  name: SetCollisionMapValue(IntObject, bool)
  nameWithType: IntActor.SetCollisionMapValue(IntObject, bool)
  fullName: IntActor.SetCollisionMapValue(IntObject, bool)
  nameWithType.vb: IntActor.SetCollisionMapValue(IntObject, Boolean)
  fullName.vb: IntActor.SetCollisionMapValue(IntObject, Boolean)
  name.vb: SetCollisionMapValue(IntObject, Boolean)
  spec.csharp:
  - uid: Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
    name: SetCollisionMapValue
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
    name: SetCollisionMapValue
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntActor.GetCollisionMapValue(IntObject)
  commentId: M:Global.IntActor.GetCollisionMapValue(IntObject)
  parent: Global.IntActor
  name: GetCollisionMapValue(IntObject)
  nameWithType: IntActor.GetCollisionMapValue(IntObject)
  fullName: IntActor.GetCollisionMapValue(IntObject)
  spec.csharp:
  - uid: Global.IntActor.GetCollisionMapValue(IntObject)
    name: GetCollisionMapValue
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetCollisionMapValue(IntObject)
    name: GetCollisionMapValue
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
- uid: Global.IntActor.Squish(IntSolid)
  commentId: M:Global.IntActor.Squish(IntSolid)
  parent: Global.IntActor
  name: Squish(IntSolid)
  nameWithType: IntActor.Squish(IntSolid)
  fullName: IntActor.Squish(IntSolid)
  spec.csharp:
  - uid: Global.IntActor.Squish(IntSolid)
    name: Squish
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.IntActor.Squish(IntSolid)
    name: Squish
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.IntActor.OnTriggerStart(IntTrigger)
  commentId: M:Global.IntActor.OnTriggerStart(IntTrigger)
  parent: Global.IntActor
  name: OnTriggerStart(IntTrigger)
  nameWithType: IntActor.OnTriggerStart(IntTrigger)
  fullName: IntActor.OnTriggerStart(IntTrigger)
  spec.csharp:
  - uid: Global.IntActor.OnTriggerStart(IntTrigger)
    name: OnTriggerStart
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnTriggerStart(IntTrigger)
    name: OnTriggerStart
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
- uid: Global.IntActor.OnTriggerEnd(IntTrigger)
  commentId: M:Global.IntActor.OnTriggerEnd(IntTrigger)
  parent: Global.IntActor
  name: OnTriggerEnd(IntTrigger)
  nameWithType: IntActor.OnTriggerEnd(IntTrigger)
  fullName: IntActor.OnTriggerEnd(IntTrigger)
  spec.csharp:
  - uid: Global.IntActor.OnTriggerEnd(IntTrigger)
    name: OnTriggerEnd
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnTriggerEnd(IntTrigger)
    name: OnTriggerEnd
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
- uid: Global.IntActor.OnActor(IntActor)
  commentId: M:Global.IntActor.OnActor(IntActor)
  parent: Global.IntActor
  name: OnActor(IntActor)
  nameWithType: IntActor.OnActor(IntActor)
  fullName: IntActor.OnActor(IntActor)
  spec.csharp:
  - uid: Global.IntActor.OnActor(IntActor)
    name: OnActor
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnActor(IntActor)
    name: OnActor
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
- uid: Global.IntActor.CheckGrounded
  commentId: M:Global.IntActor.CheckGrounded
  parent: Global.IntActor
  name: CheckGrounded()
  nameWithType: IntActor.CheckGrounded()
  fullName: IntActor.CheckGrounded()
  spec.csharp:
  - uid: Global.IntActor.CheckGrounded
    name: CheckGrounded
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.CheckGrounded
    name: CheckGrounded
  - name: (
  - name: )
- uid: Global.IntActor.GroundActor
  commentId: M:Global.IntActor.GroundActor
  parent: Global.IntActor
  name: GroundActor()
  nameWithType: IntActor.GroundActor()
  fullName: IntActor.GroundActor()
  spec.csharp:
  - uid: Global.IntActor.GroundActor
    name: GroundActor
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.GroundActor
    name: GroundActor
  - name: (
  - name: )
- uid: Global.IntActor.CheckOnWall
  commentId: M:Global.IntActor.CheckOnWall
  parent: Global.IntActor
  name: CheckOnWall()
  nameWithType: IntActor.CheckOnWall()
  fullName: IntActor.CheckOnWall()
  spec.csharp:
  - uid: Global.IntActor.CheckOnWall
    name: CheckOnWall
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.CheckOnWall
    name: CheckOnWall
  - name: (
  - name: )
- uid: Global.IntActor.DropDownOneWay
  commentId: M:Global.IntActor.DropDownOneWay
  parent: Global.IntActor
  name: DropDownOneWay()
  nameWithType: IntActor.DropDownOneWay()
  fullName: IntActor.DropDownOneWay()
  spec.csharp:
  - uid: Global.IntActor.DropDownOneWay
    name: DropDownOneWay
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.DropDownOneWay
    name: DropDownOneWay
  - name: (
  - name: )
- uid: Global.IntActor.activeWater
  commentId: P:Global.IntActor.activeWater
  parent: Global.IntActor
  name: activeWater
  nameWithType: IntActor.activeWater
  fullName: IntActor.activeWater
- uid: Global.IntActor.GetSubmergedPercentage
  commentId: M:Global.IntActor.GetSubmergedPercentage
  parent: Global.IntActor
  name: GetSubmergedPercentage()
  nameWithType: IntActor.GetSubmergedPercentage()
  fullName: IntActor.GetSubmergedPercentage()
  spec.csharp:
  - uid: Global.IntActor.GetSubmergedPercentage
    name: GetSubmergedPercentage
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetSubmergedPercentage
    name: GetSubmergedPercentage
  - name: (
  - name: )
- uid: Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
  commentId: M:Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
  parent: Global.IntActor
  isExternal: true
  name: GetSubmergedPercentage(Vector2Int)
  nameWithType: IntActor.GetSubmergedPercentage(Vector2Int)
  fullName: IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
    name: GetSubmergedPercentage
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
    name: GetSubmergedPercentage
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntActor.IsInWater
  commentId: P:Global.IntActor.IsInWater
  parent: Global.IntActor
  name: IsInWater
  nameWithType: IntActor.IsInWater
  fullName: IntActor.IsInWater
- uid: Global.IntActor.OnEnterWater(WaterComponent,System.Single)
  commentId: M:Global.IntActor.OnEnterWater(WaterComponent,System.Single)
  parent: Global.IntActor
  isExternal: true
  name: OnEnterWater(WaterComponent, float)
  nameWithType: IntActor.OnEnterWater(WaterComponent, float)
  fullName: IntActor.OnEnterWater(WaterComponent, float)
  nameWithType.vb: IntActor.OnEnterWater(WaterComponent, Single)
  fullName.vb: IntActor.OnEnterWater(WaterComponent, Single)
  name.vb: OnEnterWater(WaterComponent, Single)
  spec.csharp:
  - uid: Global.IntActor.OnEnterWater(WaterComponent,System.Single)
    name: OnEnterWater
  - name: (
  - uid: Global.WaterComponent
    name: WaterComponent
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnEnterWater(WaterComponent,System.Single)
    name: OnEnterWater
  - name: (
  - uid: Global.WaterComponent
    name: WaterComponent
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntActor.OnExitWater(WaterComponent)
  commentId: M:Global.IntActor.OnExitWater(WaterComponent)
  parent: Global.IntActor
  name: OnExitWater(WaterComponent)
  nameWithType: IntActor.OnExitWater(WaterComponent)
  fullName: IntActor.OnExitWater(WaterComponent)
  spec.csharp:
  - uid: Global.IntActor.OnExitWater(WaterComponent)
    name: OnExitWater
  - name: (
  - uid: Global.WaterComponent
    name: WaterComponent
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnExitWater(WaterComponent)
    name: OnExitWater
  - name: (
  - uid: Global.WaterComponent
    name: WaterComponent
  - name: )
- uid: Global.IntActor.ApplyWind(UnityEngine.Vector2)
  commentId: M:Global.IntActor.ApplyWind(UnityEngine.Vector2)
  parent: Global.IntActor
  isExternal: true
  name: ApplyWind(Vector2)
  nameWithType: IntActor.ApplyWind(Vector2)
  fullName: IntActor.ApplyWind(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntActor.ApplyWind(UnityEngine.Vector2)
    name: ApplyWind
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.ApplyWind(UnityEngine.Vector2)
    name: ApplyWind
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntActor.RemoveWind
  commentId: M:Global.IntActor.RemoveWind
  parent: Global.IntActor
  name: RemoveWind()
  nameWithType: IntActor.RemoveWind()
  fullName: IntActor.RemoveWind()
  spec.csharp:
  - uid: Global.IntActor.RemoveWind
    name: RemoveWind
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.RemoveWind
    name: RemoveWind
  - name: (
  - name: )
- uid: Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: ResolvePosition(Vector2, float, int, bool, bool, ActorAction, TriggerAction)
  nameWithType: IntActor.ResolvePosition(Vector2, float, int, bool, bool, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.ResolvePosition(UnityEngine.Vector2, float, int, bool, bool, IntObject.ActorAction, IntObject.TriggerAction)
  nameWithType.vb: IntActor.ResolvePosition(Vector2, Single, Integer, Boolean, Boolean, IntObject.ActorAction, IntObject.TriggerAction)
  fullName.vb: IntActor.ResolvePosition(UnityEngine.Vector2, Single, Integer, Boolean, Boolean, IntObject.ActorAction, IntObject.TriggerAction)
  name.vb: ResolvePosition(Vector2, Single, Integer, Boolean, Boolean, ActorAction, TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
    name: ResolvePosition
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
    name: ResolvePosition
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
  commentId: M:Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
  parent: Global.IntActor
  isExternal: true
  name: ResolvePositionNoSlide(Vector2Int)
  nameWithType: IntActor.ResolvePositionNoSlide(Vector2Int)
  fullName: IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
    name: ResolvePositionNoSlide
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
    name: ResolvePositionNoSlide
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
  commentId: M:Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
  parent: Global.IntActor
  isExternal: true
  name: EfficientMove(Vector2, SolidAction, SolidAction)
  nameWithType: IntActor.EfficientMove(Vector2, IntObject.SolidAction, IntObject.SolidAction)
  fullName: IntActor.EfficientMove(UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction)
  spec.csharp:
  - uid: Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
    name: EfficientMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
    name: EfficientMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
- uid: Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: MoveX(float, SolidAction, ActorAction, TriggerAction)
  nameWithType: IntActor.MoveX(float, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.MoveX(float, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  nameWithType.vb: IntActor.MoveX(Single, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName.vb: IntActor.MoveX(Single, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  name.vb: MoveX(Single, SolidAction, ActorAction, TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: MoveX
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: MoveX
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: MoveY(float, SolidAction, ActorAction, TriggerAction)
  nameWithType: IntActor.MoveY(float, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.MoveY(float, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  nameWithType.vb: IntActor.MoveY(Single, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName.vb: IntActor.MoveY(Single, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  name.vb: MoveY(Single, SolidAction, ActorAction, TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: MoveY
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: MoveY
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
  commentId: M:Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
  parent: Global.IntActor
  isExternal: true
  name: getIntersectParameters(int, float, float, float)
  nameWithType: IntActor.getIntersectParameters(int, float, float, float)
  fullName: IntActor.getIntersectParameters(int, float, float, float)
  nameWithType.vb: IntActor.getIntersectParameters(Integer, Single, Single, Single)
  fullName.vb: IntActor.getIntersectParameters(Integer, Single, Single, Single)
  name.vb: getIntersectParameters(Integer, Single, Single, Single)
  spec.csharp:
  - uid: Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
    name: getIntersectParameters
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
    name: getIntersectParameters
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntActor.NotifyObjectKilled(IntObject)
  commentId: M:Global.IntActor.NotifyObjectKilled(IntObject)
  parent: Global.IntActor
  name: NotifyObjectKilled(IntObject)
  nameWithType: IntActor.NotifyObjectKilled(IntObject)
  fullName: IntActor.NotifyObjectKilled(IntObject)
  spec.csharp:
  - uid: Global.IntActor.NotifyObjectKilled(IntObject)
    name: NotifyObjectKilled
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
  spec.vb:
  - uid: Global.IntActor.NotifyObjectKilled(IntObject)
    name: NotifyObjectKilled
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
- uid: Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: SlantMove(Vector2, ActorAction, TriggerAction)
  nameWithType: IntActor.SlantMove(Vector2, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.SlantMove(UnityEngine.Vector2, IntObject.ActorAction, IntObject.TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
    name: SlantMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
    name: SlantMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  name: CheckActorTriggerCollisions(ActorAction, TriggerAction)
  nameWithType: IntActor.CheckActorTriggerCollisions(IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.CheckActorTriggerCollisions(IntObject.ActorAction, IntObject.TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
    name: CheckActorTriggerCollisions
  - name: (
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
    name: CheckActorTriggerCollisions
  - name: (
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.CheckActorInteractableCollisions
  commentId: M:Global.IntActor.CheckActorInteractableCollisions
  parent: Global.IntActor
  name: CheckActorInteractableCollisions()
  nameWithType: IntActor.CheckActorInteractableCollisions()
  fullName: IntActor.CheckActorInteractableCollisions()
  spec.csharp:
  - uid: Global.IntActor.CheckActorInteractableCollisions
    name: CheckActorInteractableCollisions
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.CheckActorInteractableCollisions
    name: CheckActorInteractableCollisions
  - name: (
  - name: )
- uid: Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: SimpleMove(Vector2, SolidAction, SolidAction, ActorAction, TriggerAction)
  nameWithType: IntActor.SimpleMove(Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.SimpleMove(UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: SimpleMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: SimpleMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
  commentId: M:Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
  parent: Global.IntActor
  isExternal: true
  name: ComplexMove(Vector2, SolidAction, SolidAction, ActorAction, TriggerAction, int)
  nameWithType: IntActor.ComplexMove(Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction, int)
  fullName: IntActor.ComplexMove(UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction, int)
  nameWithType.vb: IntActor.ComplexMove(Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction, Integer)
  fullName.vb: IntActor.ComplexMove(UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction, Integer)
  name.vb: ComplexMove(Vector2, SolidAction, SolidAction, ActorAction, TriggerAction, Integer)
  spec.csharp:
  - uid: Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
    name: ComplexMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
    name: ComplexMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Global.IntObject.section
  commentId: P:Global.IntObject.section
  parent: Global.IntObject
  name: section
  nameWithType: IntObject.section
  fullName: IntObject.section
- uid: Global.IntObject.state
  commentId: P:Global.IntObject.state
  parent: Global.IntObject
  name: state
  nameWithType: IntObject.state
  fullName: IntObject.state
- uid: Global.IntObject.int_collider
  commentId: F:Global.IntObject.int_collider
  parent: Global.IntObject
  name: int_collider
  nameWithType: IntObject.int_collider
  fullName: IntObject.int_collider
- uid: Global.IntObject.remainder
  commentId: F:Global.IntObject.remainder
  parent: Global.IntObject
  name: remainder
  nameWithType: IntObject.remainder
  fullName: IntObject.remainder
- uid: Global.IntObject.StartPosition
  commentId: F:Global.IntObject.StartPosition
  parent: Global.IntObject
  name: StartPosition
  nameWithType: IntObject.StartPosition
  fullName: IntObject.StartPosition
- uid: Global.IntObject.AttachedToPlayer
  commentId: F:Global.IntObject.AttachedToPlayer
  parent: Global.IntObject
  name: AttachedToPlayer
  nameWithType: IntObject.AttachedToPlayer
  fullName: IntObject.AttachedToPlayer
- uid: Global.IntObject.IgnoredObjectsMap
  commentId: F:Global.IntObject.IgnoredObjectsMap
  parent: Global.IntObject
  name: IgnoredObjectsMap
  nameWithType: IntObject.IgnoredObjectsMap
  fullName: IntObject.IgnoredObjectsMap
- uid: Global.IntObject.KilledCallback
  commentId: F:Global.IntObject.KilledCallback
  parent: Global.IntObject
  name: KilledCallback
  nameWithType: IntObject.KilledCallback
  fullName: IntObject.KilledCallback
- uid: Global.IntObject.Position
  commentId: P:Global.IntObject.Position
  parent: Global.IntObject
  name: Position
  nameWithType: IntObject.Position
  fullName: IntObject.Position
- uid: Global.IntObject.GetStartWorldPosition
  commentId: P:Global.IntObject.GetStartWorldPosition
  parent: Global.IntObject
  name: GetStartWorldPosition
  nameWithType: IntObject.GetStartWorldPosition
  fullName: IntObject.GetStartWorldPosition
- uid: Global.IntObject.collider_type
  commentId: P:Global.IntObject.collider_type
  parent: Global.IntObject
  name: collider_type
  nameWithType: IntObject.collider_type
  fullName: IntObject.collider_type
- uid: Global.IntObject.MarkedForKill
  commentId: P:Global.IntObject.MarkedForKill
  parent: Global.IntObject
  name: MarkedForKill
  nameWithType: IntObject.MarkedForKill
  fullName: IntObject.MarkedForKill
- uid: Global.IntObject.ObjectID
  commentId: F:Global.IntObject.ObjectID
  parent: Global.IntObject
  name: ObjectID
  nameWithType: IntObject.ObjectID
  fullName: IntObject.ObjectID
- uid: Global.IntObject.DestroyOnKill
  commentId: F:Global.IntObject.DestroyOnKill
  parent: Global.IntObject
  name: DestroyOnKill
  nameWithType: IntObject.DestroyOnKill
  fullName: IntObject.DestroyOnKill
- uid: Global.IntObject.RespawnBehavior
  commentId: F:Global.IntObject.RespawnBehavior
  parent: Global.IntObject
  name: RespawnBehavior
  nameWithType: IntObject.RespawnBehavior
  fullName: IntObject.RespawnBehavior
- uid: Global.IntObject.Status
  commentId: F:Global.IntObject.Status
  parent: Global.IntObject
  name: Status
  nameWithType: IntObject.Status
  fullName: IntObject.Status
- uid: Global.IntObject.InitialStatus
  commentId: F:Global.IntObject.InitialStatus
  parent: Global.IntObject
  name: InitialStatus
  nameWithType: IntObject.InitialStatus
  fullName: IntObject.InitialStatus
- uid: Global.IntObject.SaveObject
  commentId: F:Global.IntObject.SaveObject
  parent: Global.IntObject
  name: SaveObject
  nameWithType: IntObject.SaveObject
  fullName: IntObject.SaveObject
- uid: Global.IntObject.IsInSetPiece
  commentId: P:Global.IntObject.IsInSetPiece
  parent: Global.IntObject
  name: IsInSetPiece
  nameWithType: IntObject.IsInSetPiece
  fullName: IntObject.IsInSetPiece
- uid: Global.IntObject.Init
  commentId: M:Global.IntObject.Init
  parent: Global.IntObject
  name: Init()
  nameWithType: IntObject.Init()
  fullName: IntObject.Init()
  spec.csharp:
  - uid: Global.IntObject.Init
    name: Init
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.Init
    name: Init
  - name: (
  - name: )
- uid: Global.IntObject.FindIntColliderState(System.Int32)
  commentId: M:Global.IntObject.FindIntColliderState(System.Int32)
  parent: Global.IntObject
  isExternal: true
  name: FindIntColliderState(int)
  nameWithType: IntObject.FindIntColliderState(int)
  fullName: IntObject.FindIntColliderState(int)
  nameWithType.vb: IntObject.FindIntColliderState(Integer)
  fullName.vb: IntObject.FindIntColliderState(Integer)
  name.vb: FindIntColliderState(Integer)
  spec.csharp:
  - uid: Global.IntObject.FindIntColliderState(System.Int32)
    name: FindIntColliderState
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.FindIntColliderState(System.Int32)
    name: FindIntColliderState
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Global.IntObject.GetLocalGameStates
  commentId: M:Global.IntObject.GetLocalGameStates
  parent: Global.IntObject
  name: GetLocalGameStates()
  nameWithType: IntObject.GetLocalGameStates()
  fullName: IntObject.GetLocalGameStates()
  spec.csharp:
  - uid: Global.IntObject.GetLocalGameStates
    name: GetLocalGameStates
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetLocalGameStates
    name: GetLocalGameStates
  - name: (
  - name: )
- uid: Global.IntObject.RegisterSelf
  commentId: M:Global.IntObject.RegisterSelf
  parent: Global.IntObject
  name: RegisterSelf()
  nameWithType: IntObject.RegisterSelf()
  fullName: IntObject.RegisterSelf()
  spec.csharp:
  - uid: Global.IntObject.RegisterSelf
    name: RegisterSelf
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.RegisterSelf
    name: RegisterSelf
  - name: (
  - name: )
- uid: Global.IntObject.UnregisterSelf
  commentId: M:Global.IntObject.UnregisterSelf
  parent: Global.IntObject
  name: UnregisterSelf()
  nameWithType: IntObject.UnregisterSelf()
  fullName: IntObject.UnregisterSelf()
  spec.csharp:
  - uid: Global.IntObject.UnregisterSelf
    name: UnregisterSelf
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.UnregisterSelf
    name: UnregisterSelf
  - name: (
  - name: )
- uid: Global.IntObject.RegisterKilledCallback(IntObject.Action)
  commentId: M:Global.IntObject.RegisterKilledCallback(IntObject.Action)
  parent: Global.IntObject
  name: RegisterKilledCallback(Action)
  nameWithType: IntObject.RegisterKilledCallback(IntObject.Action)
  fullName: IntObject.RegisterKilledCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntObject.RegisterKilledCallback(IntObject.Action)
    name: RegisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntObject.RegisterKilledCallback(IntObject.Action)
    name: RegisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  commentId: M:Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  parent: Global.IntObject
  name: UnregisterKilledCallback(Action)
  nameWithType: IntObject.UnregisterKilledCallback(IntObject.Action)
  fullName: IntObject.UnregisterKilledCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntObject.UnregisterKilledCallback(IntObject.Action)
    name: UnregisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntObject.UnregisterKilledCallback(IntObject.Action)
    name: UnregisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  commentId: M:Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  parent: Global.IntObject
  isExternal: true
  name: IsContainedInRect(Rect)
  nameWithType: IntObject.IsContainedInRect(Rect)
  fullName: IntObject.IsContainedInRect(UnityEngine.Rect)
  spec.csharp:
  - uid: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
    name: IsContainedInRect
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
    name: IsContainedInRect
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: )
- uid: Global.IntObject.SetStatus(ObjectStatus)
  commentId: M:Global.IntObject.SetStatus(ObjectStatus)
  parent: Global.IntObject
  name: SetStatus(ObjectStatus)
  nameWithType: IntObject.SetStatus(ObjectStatus)
  fullName: IntObject.SetStatus(ObjectStatus)
  spec.csharp:
  - uid: Global.IntObject.SetStatus(ObjectStatus)
    name: SetStatus
  - name: (
  - uid: Global.ObjectStatus
    name: ObjectStatus
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetStatus(ObjectStatus)
    name: SetStatus
  - name: (
  - uid: Global.ObjectStatus
    name: ObjectStatus
  - name: )
- uid: Global.IntObject.OnKill(System.Boolean)
  commentId: M:Global.IntObject.OnKill(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: OnKill(bool)
  nameWithType: IntObject.OnKill(bool)
  fullName: IntObject.OnKill(bool)
  nameWithType.vb: IntObject.OnKill(Boolean)
  fullName.vb: IntObject.OnKill(Boolean)
  name.vb: OnKill(Boolean)
  spec.csharp:
  - uid: Global.IntObject.OnKill(System.Boolean)
    name: OnKill
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.OnKill(System.Boolean)
    name: OnKill
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.Kill
  commentId: M:Global.IntObject.Kill
  parent: Global.IntObject
  name: Kill()
  nameWithType: IntObject.Kill()
  fullName: IntObject.Kill()
  spec.csharp:
  - uid: Global.IntObject.Kill
    name: Kill
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill
    name: Kill
  - name: (
  - name: )
- uid: Global.IntObject.Kill(System.Boolean)
  commentId: M:Global.IntObject.Kill(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: Kill(bool)
  nameWithType: IntObject.Kill(bool)
  fullName: IntObject.Kill(bool)
  nameWithType.vb: IntObject.Kill(Boolean)
  fullName.vb: IntObject.Kill(Boolean)
  name.vb: Kill(Boolean)
  spec.csharp:
  - uid: Global.IntObject.Kill(System.Boolean)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill(System.Boolean)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.Kill(System.Single)
  commentId: M:Global.IntObject.Kill(System.Single)
  parent: Global.IntObject
  isExternal: true
  name: Kill(float)
  nameWithType: IntObject.Kill(float)
  fullName: IntObject.Kill(float)
  nameWithType.vb: IntObject.Kill(Single)
  fullName.vb: IntObject.Kill(Single)
  name.vb: Kill(Single)
  spec.csharp:
  - uid: Global.IntObject.Kill(System.Single)
    name: Kill
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill(System.Single)
    name: Kill
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntObject.Kill(System.Boolean,System.Single)
  commentId: M:Global.IntObject.Kill(System.Boolean,System.Single)
  parent: Global.IntObject
  isExternal: true
  name: Kill(bool, float)
  nameWithType: IntObject.Kill(bool, float)
  fullName: IntObject.Kill(bool, float)
  nameWithType.vb: IntObject.Kill(Boolean, Single)
  fullName.vb: IntObject.Kill(Boolean, Single)
  name.vb: Kill(Boolean, Single)
  spec.csharp:
  - uid: Global.IntObject.Kill(System.Boolean,System.Single)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill(System.Boolean,System.Single)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  commentId: M:Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  parent: Global.IntObject
  isExternal: true
  name: IgnoreObjectCollisions(IntObject, float)
  nameWithType: IntObject.IgnoreObjectCollisions(IntObject, float)
  fullName: IntObject.IgnoreObjectCollisions(IntObject, float)
  nameWithType.vb: IntObject.IgnoreObjectCollisions(IntObject, Single)
  fullName.vb: IntObject.IgnoreObjectCollisions(IntObject, Single)
  name.vb: IgnoreObjectCollisions(IntObject, Single)
  spec.csharp:
  - uid: Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
    name: IgnoreObjectCollisions
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
    name: IgnoreObjectCollisions
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntObject.SleepObject
  commentId: M:Global.IntObject.SleepObject
  parent: Global.IntObject
  name: SleepObject()
  nameWithType: IntObject.SleepObject()
  fullName: IntObject.SleepObject()
  spec.csharp:
  - uid: Global.IntObject.SleepObject
    name: SleepObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.SleepObject
    name: SleepObject
  - name: (
  - name: )
- uid: Global.IntObject.OptimizeSleepObject
  commentId: M:Global.IntObject.OptimizeSleepObject
  parent: Global.IntObject
  name: OptimizeSleepObject()
  nameWithType: IntObject.OptimizeSleepObject()
  fullName: IntObject.OptimizeSleepObject()
  spec.csharp:
  - uid: Global.IntObject.OptimizeSleepObject
    name: OptimizeSleepObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.OptimizeSleepObject
    name: OptimizeSleepObject
  - name: (
  - name: )
- uid: Global.IntObject.WakeObject
  commentId: M:Global.IntObject.WakeObject
  parent: Global.IntObject
  name: WakeObject()
  nameWithType: IntObject.WakeObject()
  fullName: IntObject.WakeObject()
  spec.csharp:
  - uid: Global.IntObject.WakeObject
    name: WakeObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.WakeObject
    name: WakeObject
  - name: (
  - name: )
- uid: Global.IntObject.EnableObject
  commentId: M:Global.IntObject.EnableObject
  parent: Global.IntObject
  name: EnableObject()
  nameWithType: IntObject.EnableObject()
  fullName: IntObject.EnableObject()
  spec.csharp:
  - uid: Global.IntObject.EnableObject
    name: EnableObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.EnableObject
    name: EnableObject
  - name: (
  - name: )
- uid: Global.IntObject.DisableObject
  commentId: M:Global.IntObject.DisableObject
  parent: Global.IntObject
  name: DisableObject()
  nameWithType: IntObject.DisableObject()
  fullName: IntObject.DisableObject()
  spec.csharp:
  - uid: Global.IntObject.DisableObject
    name: DisableObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.DisableObject
    name: DisableObject
  - name: (
  - name: )
- uid: Global.IntObject.RespawnObject
  commentId: M:Global.IntObject.RespawnObject
  parent: Global.IntObject
  name: RespawnObject()
  nameWithType: IntObject.RespawnObject()
  fullName: IntObject.RespawnObject()
  spec.csharp:
  - uid: Global.IntObject.RespawnObject
    name: RespawnObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.RespawnObject
    name: RespawnObject
  - name: (
  - name: )
- uid: Global.IntObject.RecursiveSetCollidable(System.Boolean)
  commentId: M:Global.IntObject.RecursiveSetCollidable(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: RecursiveSetCollidable(bool)
  nameWithType: IntObject.RecursiveSetCollidable(bool)
  fullName: IntObject.RecursiveSetCollidable(bool)
  nameWithType.vb: IntObject.RecursiveSetCollidable(Boolean)
  fullName.vb: IntObject.RecursiveSetCollidable(Boolean)
  name.vb: RecursiveSetCollidable(Boolean)
  spec.csharp:
  - uid: Global.IntObject.RecursiveSetCollidable(System.Boolean)
    name: RecursiveSetCollidable
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.RecursiveSetCollidable(System.Boolean)
    name: RecursiveSetCollidable
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.SetColliderState(IntColliderState)
  commentId: M:Global.IntObject.SetColliderState(IntColliderState)
  parent: Global.IntObject
  name: SetColliderState(IntColliderState)
  nameWithType: IntObject.SetColliderState(IntColliderState)
  fullName: IntObject.SetColliderState(IntColliderState)
  spec.csharp:
  - uid: Global.IntObject.SetColliderState(IntColliderState)
    name: SetColliderState
  - name: (
  - uid: Global.IntColliderState
    name: IntColliderState
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetColliderState(IntColliderState)
    name: SetColliderState
  - name: (
  - uid: Global.IntColliderState
    name: IntColliderState
  - name: )
- uid: Global.IntObject.Translate(UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.Translate(UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: Translate(Vector2Int)
  nameWithType: IntObject.Translate(Vector2Int)
  fullName: IntObject.Translate(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2Int)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2Int)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.Translate(UnityEngine.Vector2)
  commentId: M:Global.IntObject.Translate(UnityEngine.Vector2)
  parent: Global.IntObject
  isExternal: true
  name: Translate(Vector2)
  nameWithType: IntObject.Translate(Vector2)
  fullName: IntObject.Translate(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: SetPosition(Vector2Int)
  nameWithType: IntObject.SetPosition(Vector2Int)
  fullName: IntObject.SetPosition(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.SetPosition(UnityEngine.Vector2Int)
    name: SetPosition
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetPosition(UnityEngine.Vector2Int)
    name: SetPosition
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.SetCollidable(System.Boolean)
  commentId: M:Global.IntObject.SetCollidable(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: SetCollidable(bool)
  nameWithType: IntObject.SetCollidable(bool)
  fullName: IntObject.SetCollidable(bool)
  nameWithType.vb: IntObject.SetCollidable(Boolean)
  fullName.vb: IntObject.SetCollidable(Boolean)
  name.vb: SetCollidable(Boolean)
  spec.csharp:
  - uid: Global.IntObject.SetCollidable(System.Boolean)
    name: SetCollidable
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetCollidable(System.Boolean)
    name: SetCollidable
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.GetCollidable
  commentId: M:Global.IntObject.GetCollidable
  parent: Global.IntObject
  name: GetCollidable()
  nameWithType: IntObject.GetCollidable()
  fullName: IntObject.GetCollidable()
  spec.csharp:
  - uid: Global.IntObject.GetCollidable
    name: GetCollidable
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetCollidable
    name: GetCollidable
  - name: (
  - name: )
- uid: Global.IntObject.GetCollider
  commentId: M:Global.IntObject.GetCollider
  parent: Global.IntObject
  name: GetCollider()
  nameWithType: IntObject.GetCollider()
  fullName: IntObject.GetCollider()
  spec.csharp:
  - uid: Global.IntObject.GetCollider
    name: GetCollider
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetCollider
    name: GetCollider
  - name: (
  - name: )
- uid: Global.IntObject.GetColliderState
  commentId: M:Global.IntObject.GetColliderState
  parent: Global.IntObject
  name: GetColliderState()
  nameWithType: IntObject.GetColliderState()
  fullName: IntObject.GetColliderState()
  spec.csharp:
  - uid: Global.IntObject.GetColliderState
    name: GetColliderState
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetColliderState
    name: GetColliderState
  - name: (
  - name: )
- uid: Global.IntObject.Overlaps(IntObject)
  commentId: M:Global.IntObject.Overlaps(IntObject)
  parent: Global.IntObject
  name: Overlaps(IntObject)
  nameWithType: IntObject.Overlaps(IntObject)
  fullName: IntObject.Overlaps(IntObject)
  spec.csharp:
  - uid: Global.IntObject.Overlaps(IntObject)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
  spec.vb:
  - uid: Global.IntObject.Overlaps(IntObject)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
- uid: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: Overlaps(IntObject, Vector2Int)
  nameWithType: IntObject.Overlaps(IntObject, Vector2Int)
  fullName: IntObject.Overlaps(IntObject, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.RayCast(IntRay)
  commentId: M:Global.IntObject.RayCast(IntRay)
  parent: Global.IntObject
  name: RayCast(IntRay)
  nameWithType: IntObject.RayCast(IntRay)
  fullName: IntObject.RayCast(IntRay)
  spec.csharp:
  - uid: Global.IntObject.RayCast(IntRay)
    name: RayCast
  - name: (
  - uid: Global.IntRay
    name: IntRay
  - name: )
  spec.vb:
  - uid: Global.IntObject.RayCast(IntRay)
    name: RayCast
  - name: (
  - uid: Global.IntRay
    name: IntRay
  - name: )
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: CollideAt(List<IntSolid>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntSolid>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntSolid>, UnityEngine.Vector2Int)
  nameWithType.vb: IntObject.CollideAt(List(Of IntSolid), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntSolid), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntSolid), Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntSolid
    name: IntSolid
  - name: '>'
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: CollideAt(List<IntActor>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntActor>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntActor>, UnityEngine.Vector2Int)
  nameWithType.vb: IntObject.CollideAt(List(Of IntActor), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntActor), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntActor), Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntActor
    name: IntActor
  - name: '>'
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntActor
    name: IntActor
  - name: )
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: CollideAt(List<IntTrigger>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntTrigger>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntTrigger>, UnityEngine.Vector2Int)
  nameWithType.vb: IntObject.CollideAt(List(Of IntTrigger), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntTrigger), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntTrigger), Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: '>'
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  commentId: M:Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  parent: Global.IntObject
  name: LoadObjectSaveData(IntObjectSaveData)
  nameWithType: IntObject.LoadObjectSaveData(IntObjectSaveData)
  fullName: IntObject.LoadObjectSaveData(IntObjectSaveData)
  spec.csharp:
  - uid: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
    name: LoadObjectSaveData
  - name: (
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
  spec.vb:
  - uid: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
    name: LoadObjectSaveData
  - name: (
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
- uid: Global.IntObject.GetObjectSaveData
  commentId: M:Global.IntObject.GetObjectSaveData
  parent: Global.IntObject
  name: GetObjectSaveData()
  nameWithType: IntObject.GetObjectSaveData()
  fullName: IntObject.GetObjectSaveData()
  spec.csharp:
  - uid: Global.IntObject.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
- uid: Global.IntObject.OnPostLoadSaveFile
  commentId: M:Global.IntObject.OnPostLoadSaveFile
  parent: Global.IntObject
  name: OnPostLoadSaveFile()
  nameWithType: IntObject.OnPostLoadSaveFile()
  fullName: IntObject.OnPostLoadSaveFile()
  spec.csharp:
  - uid: Global.IntObject.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ISavableObject`1
  commentId: T:Global.ISavableObject`1
  name: ISavableObject<T>
  nameWithType: ISavableObject<T>
  fullName: ISavableObject<T>
  nameWithType.vb: ISavableObject(Of T)
  fullName.vb: ISavableObject(Of T)
  name.vb: ISavableObject(Of T)
  spec.csharp:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.IntEnemy.CurrentHealth*
  commentId: Overload:Global.IntEnemy.CurrentHealth
  name: CurrentHealth
  nameWithType: IntEnemy.CurrentHealth
  fullName: IntEnemy.CurrentHealth
- uid: Global.IntEnemy.CurrentShieldHealth*
  commentId: Overload:Global.IntEnemy.CurrentShieldHealth
  name: CurrentShieldHealth
  nameWithType: IntEnemy.CurrentShieldHealth
  fullName: IntEnemy.CurrentShieldHealth
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.IntEnemy.tilemap*
  commentId: Overload:Global.IntEnemy.tilemap
  name: tilemap
  nameWithType: IntEnemy.tilemap
  fullName: IntEnemy.tilemap
- uid: Global.TilemapIntCollider
  commentId: T:Global.TilemapIntCollider
  name: TilemapIntCollider
  nameWithType: TilemapIntCollider
  fullName: TilemapIntCollider
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.IntEnemy.IsGrounded*
  commentId: Overload:Global.IntEnemy.IsGrounded
  name: IsGrounded
  nameWithType: IntEnemy.IsGrounded
  fullName: IntEnemy.IsGrounded
- uid: Global.IntEnemy.IsAlive*
  commentId: Overload:Global.IntEnemy.IsAlive
  name: IsAlive
  nameWithType: IntEnemy.IsAlive
  fullName: IntEnemy.IsAlive
- uid: Global.EnemySpawnProperties
  commentId: T:Global.EnemySpawnProperties
  name: EnemySpawnProperties
  nameWithType: EnemySpawnProperties
  fullName: EnemySpawnProperties
- uid: Global.IntEnemy.Start*
  commentId: Overload:Global.IntEnemy.Start
  name: Start
  nameWithType: IntEnemy.Start
  fullName: IntEnemy.Start
- uid: Global.IntEnemy.CanRepelEnemy*
  commentId: Overload:Global.IntEnemy.CanRepelEnemy
  name: CanRepelEnemy
  nameWithType: IntEnemy.CanRepelEnemy
  fullName: IntEnemy.CanRepelEnemy
- uid: Global.IntEnemy.ComputeJumpInitialVelocityFromTile*
  commentId: Overload:Global.IntEnemy.ComputeJumpInitialVelocityFromTile
  name: ComputeJumpInitialVelocityFromTile
  nameWithType: IntEnemy.ComputeJumpInitialVelocityFromTile
  fullName: IntEnemy.ComputeJumpInitialVelocityFromTile
- uid: Global.IntEnemy.ComputeJumpInitialVelocity*
  commentId: Overload:Global.IntEnemy.ComputeJumpInitialVelocity
  name: ComputeJumpInitialVelocity
  nameWithType: IntEnemy.ComputeJumpInitialVelocity
  fullName: IntEnemy.ComputeJumpInitialVelocity
- uid: Global.IntEnemy.ComputeJumpHangTimeFromVelocity*
  commentId: Overload:Global.IntEnemy.ComputeJumpHangTimeFromVelocity
  name: ComputeJumpHangTimeFromVelocity
  nameWithType: IntEnemy.ComputeJumpHangTimeFromVelocity
  fullName: IntEnemy.ComputeJumpHangTimeFromVelocity
- uid: Global.IntEnemy.ComputeJumpHangTimeFromHeight*
  commentId: Overload:Global.IntEnemy.ComputeJumpHangTimeFromHeight
  name: ComputeJumpHangTimeFromHeight
  nameWithType: IntEnemy.ComputeJumpHangTimeFromHeight
  fullName: IntEnemy.ComputeJumpHangTimeFromHeight
- uid: Global.IntActor.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  commentId: M:Global.IntActor.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  parent: Global.IntActor
  isExternal: true
  name: TakeDamage(int, bool, bool, DamageType)
  nameWithType: IntActor.TakeDamage(int, bool, bool, DamageType)
  fullName: IntActor.TakeDamage(int, bool, bool, DamageType)
  nameWithType.vb: IntActor.TakeDamage(Integer, Boolean, Boolean, DamageType)
  fullName.vb: IntActor.TakeDamage(Integer, Boolean, Boolean, DamageType)
  name.vb: TakeDamage(Integer, Boolean, Boolean, DamageType)
  spec.csharp:
  - uid: Global.IntActor.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
    name: TakeDamage
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.DamageType
    name: DamageType
  - name: )
  spec.vb:
  - uid: Global.IntActor.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
    name: TakeDamage
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.DamageType
    name: DamageType
  - name: )
- uid: Global.IntEnemy.TakeDamage*
  commentId: Overload:Global.IntEnemy.TakeDamage
  name: TakeDamage
  nameWithType: IntEnemy.TakeDamage
  fullName: IntEnemy.TakeDamage
- uid: Global.DamageType
  commentId: T:Global.DamageType
  name: DamageType
  nameWithType: DamageType
  fullName: DamageType
- uid: Global.IntEnemy.SetCurrentShieldHealth*
  commentId: Overload:Global.IntEnemy.SetCurrentShieldHealth
  name: SetCurrentShieldHealth
  nameWithType: IntEnemy.SetCurrentShieldHealth
  fullName: IntEnemy.SetCurrentShieldHealth
- uid: Global.IntEnemy.SetPoisoned*
  commentId: Overload:Global.IntEnemy.SetPoisoned
  name: SetPoisoned
  nameWithType: IntEnemy.SetPoisoned
  fullName: IntEnemy.SetPoisoned
- uid: Global.IntObject.ResetObject
  commentId: M:Global.IntObject.ResetObject
  parent: Global.IntObject
  name: ResetObject()
  nameWithType: IntObject.ResetObject()
  fullName: IntObject.ResetObject()
  spec.csharp:
  - uid: Global.IntObject.ResetObject
    name: ResetObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.ResetObject
    name: ResetObject
  - name: (
  - name: )
- uid: Global.IntEnemy.ResetObject*
  commentId: Overload:Global.IntEnemy.ResetObject
  name: ResetObject
  nameWithType: IntEnemy.ResetObject
  fullName: IntEnemy.ResetObject
- uid: Global.IntEnemy.GetSightRayOrigin*
  commentId: Overload:Global.IntEnemy.GetSightRayOrigin
  name: GetSightRayOrigin
  nameWithType: IntEnemy.GetSightRayOrigin
  fullName: IntEnemy.GetSightRayOrigin
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: Global.IntEnemy.GetForwardSightRayDirection*
  commentId: Overload:Global.IntEnemy.GetForwardSightRayDirection
  name: GetForwardSightRayDirection
  nameWithType: IntEnemy.GetForwardSightRayDirection
  fullName: IntEnemy.GetForwardSightRayDirection
- uid: Global.IntActor.GetVelocity
  commentId: M:Global.IntActor.GetVelocity
  parent: Global.IntActor
  name: GetVelocity()
  nameWithType: IntActor.GetVelocity()
  fullName: IntActor.GetVelocity()
  spec.csharp:
  - uid: Global.IntActor.GetVelocity
    name: GetVelocity
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetVelocity
    name: GetVelocity
  - name: (
  - name: )
- uid: Global.IntEnemy.GetVelocity*
  commentId: Overload:Global.IntEnemy.GetVelocity
  name: GetVelocity
  nameWithType: IntEnemy.GetVelocity
  fullName: IntEnemy.GetVelocity
- uid: Global.IntEnemy.IsCollected*
  commentId: Overload:Global.IntEnemy.IsCollected
  name: IsCollected
  nameWithType: IntEnemy.IsCollected
  fullName: IntEnemy.IsCollected
- uid: Global.ICollectableInterface.IsCollected
  commentId: M:Global.ICollectableInterface.IsCollected
  parent: Global.ICollectableInterface
  name: IsCollected()
  nameWithType: ICollectableInterface.IsCollected()
  fullName: ICollectableInterface.IsCollected()
  spec.csharp:
  - uid: Global.ICollectableInterface.IsCollected
    name: IsCollected
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ICollectableInterface.IsCollected
    name: IsCollected
  - name: (
  - name: )
- uid: Global.IntEnemy.StaticMoveUpdate*
  commentId: Overload:Global.IntEnemy.StaticMoveUpdate
  name: StaticMoveUpdate
  nameWithType: IntEnemy.StaticMoveUpdate
  fullName: IntEnemy.StaticMoveUpdate
- uid: Global.IntEnemy.GetSpriteFlip*
  commentId: Overload:Global.IntEnemy.GetSpriteFlip
  name: GetSpriteFlip
  nameWithType: IntEnemy.GetSpriteFlip
  fullName: IntEnemy.GetSpriteFlip
- uid: Global.IntEnemy.GetLookAtFlipX*
  commentId: Overload:Global.IntEnemy.GetLookAtFlipX
  name: GetLookAtFlipX
  nameWithType: IntEnemy.GetLookAtFlipX
  fullName: IntEnemy.GetLookAtFlipX
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: Global.IntEnemy.JumpTiles*
  commentId: Overload:Global.IntEnemy.JumpTiles
  name: JumpTiles
  nameWithType: IntEnemy.JumpTiles
  fullName: IntEnemy.JumpTiles
- uid: Global.IntEnemy.JumpHeight*
  commentId: Overload:Global.IntEnemy.JumpHeight
  name: JumpHeight
  nameWithType: IntEnemy.JumpHeight
  fullName: IntEnemy.JumpHeight
- uid: Global.IntEnemy.Jump*
  commentId: Overload:Global.IntEnemy.Jump
  name: Jump
  nameWithType: IntEnemy.Jump
  fullName: IntEnemy.Jump
- uid: Global.IntEnemy.ApplyGravity*
  commentId: Overload:Global.IntEnemy.ApplyGravity
  name: ApplyGravity
  nameWithType: IntEnemy.ApplyGravity
  fullName: IntEnemy.ApplyGravity
- uid: Global.IntEnemy.AIMove*
  commentId: Overload:Global.IntEnemy.AIMove
  name: AIMove
  nameWithType: IntEnemy.AIMove
  fullName: IntEnemy.AIMove
- uid: Global.IntObject.SolidAction
  commentId: T:Global.IntObject.SolidAction
  name: IntObject.SolidAction
  nameWithType: IntObject.SolidAction
  fullName: IntObject.SolidAction
  spec.csharp:
  - uid: Global.IntObject
    name: IntObject
  - name: .
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  spec.vb:
  - uid: Global.IntObject
    name: IntObject
  - name: .
  - uid: Global.IntObject.SolidAction
    name: SolidAction
- uid: Global.IntObject.Action
  commentId: T:Global.IntObject.Action
  name: IntObject.Action
  nameWithType: IntObject.Action
  fullName: IntObject.Action
  spec.csharp:
  - uid: Global.IntObject
    name: IntObject
  - name: .
  - uid: Global.IntObject.Action
    name: Action
  spec.vb:
  - uid: Global.IntObject
    name: IntObject
  - name: .
  - uid: Global.IntObject.Action
    name: Action
- uid: Global.IntObject.ActorAction
  commentId: T:Global.IntObject.ActorAction
  name: IntObject.ActorAction
  nameWithType: IntObject.ActorAction
  fullName: IntObject.ActorAction
  spec.csharp:
  - uid: Global.IntObject
    name: IntObject
  - name: .
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  spec.vb:
  - uid: Global.IntObject
    name: IntObject
  - name: .
  - uid: Global.IntObject.ActorAction
    name: ActorAction
- uid: Global.IntObject.TriggerAction
  commentId: T:Global.IntObject.TriggerAction
  name: IntObject.TriggerAction
  nameWithType: IntObject.TriggerAction
  fullName: IntObject.TriggerAction
  spec.csharp:
  - uid: Global.IntObject
    name: IntObject
  - name: .
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  spec.vb:
  - uid: Global.IntObject
    name: IntObject
  - name: .
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
- uid: Global.IntEnemy.AIMoveWithJump*
  commentId: Overload:Global.IntEnemy.AIMoveWithJump
  name: AIMoveWithJump
  nameWithType: IntEnemy.AIMoveWithJump
  fullName: IntEnemy.AIMoveWithJump
- uid: Global.IntEnemy.Charge*
  commentId: Overload:Global.IntEnemy.Charge
  name: Charge
  nameWithType: IntEnemy.Charge
  fullName: IntEnemy.Charge
- uid: Global.IntEnemy.ChargeProps
  commentId: T:Global.IntEnemy.ChargeProps
  name: IntEnemy.ChargeProps
  nameWithType: IntEnemy.ChargeProps
  fullName: IntEnemy.ChargeProps
  spec.csharp:
  - uid: Global.IntEnemy
    name: IntEnemy
  - name: .
  - uid: Global.IntEnemy.ChargeProps
    name: ChargeProps
  spec.vb:
  - uid: Global.IntEnemy
    name: IntEnemy
  - name: .
  - uid: Global.IntEnemy.ChargeProps
    name: ChargeProps
- uid: Global.IntEnemy.CastForwardSightRay*
  commentId: Overload:Global.IntEnemy.CastForwardSightRay
  name: CastForwardSightRay
  nameWithType: IntEnemy.CastForwardSightRay
  fullName: IntEnemy.CastForwardSightRay
- uid: Global.Intersection
  commentId: T:Global.Intersection
  name: Intersection
  nameWithType: Intersection
  fullName: Intersection
- uid: Global.IntColliderState.RayCastFilter
  commentId: T:Global.IntColliderState.RayCastFilter
  name: IntColliderState.RayCastFilter
  nameWithType: IntColliderState.RayCastFilter
  fullName: IntColliderState.RayCastFilter
  spec.csharp:
  - uid: Global.IntColliderState
    name: IntColliderState
  - name: .
  - uid: Global.IntColliderState.RayCastFilter
    name: RayCastFilter
  spec.vb:
  - uid: Global.IntColliderState
    name: IntColliderState
  - name: .
  - uid: Global.IntColliderState.RayCastFilter
    name: RayCastFilter
- uid: Global.IntEnemy.GetJumpInfo*
  commentId: Overload:Global.IntEnemy.GetJumpInfo
  name: GetJumpInfo
  nameWithType: IntEnemy.GetJumpInfo
  fullName: IntEnemy.GetJumpInfo
- uid: Global.IntEnemy.JumpInfo
  commentId: T:Global.IntEnemy.JumpInfo
  name: IntEnemy.JumpInfo
  nameWithType: IntEnemy.JumpInfo
  fullName: IntEnemy.JumpInfo
  spec.csharp:
  - uid: Global.IntEnemy
    name: IntEnemy
  - name: .
  - uid: Global.IntEnemy.JumpInfo
    name: JumpInfo
  spec.vb:
  - uid: Global.IntEnemy
    name: IntEnemy
  - name: .
  - uid: Global.IntEnemy.JumpInfo
    name: JumpInfo
- uid: Global.IntEnemy.CanContinueForward*
  commentId: Overload:Global.IntEnemy.CanContinueForward
  name: CanContinueForward
  nameWithType: IntEnemy.CanContinueForward
  fullName: IntEnemy.CanContinueForward
- uid: Global.IntEnemy.Update*
  commentId: Overload:Global.IntEnemy.Update
  name: Update
  nameWithType: IntEnemy.Update
  fullName: IntEnemy.Update
- uid: Global.IntEnemy.Initialize*
  commentId: Overload:Global.IntEnemy.Initialize
  name: Initialize
  nameWithType: IntEnemy.Initialize
  fullName: IntEnemy.Initialize
- uid: Global.IEntity.Initialize
  commentId: M:Global.IEntity.Initialize
  parent: Global.IEntity
  name: Initialize()
  nameWithType: IEntity.Initialize()
  fullName: IEntity.Initialize()
  spec.csharp:
  - uid: Global.IEntity.Initialize
    name: Initialize
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IEntity.Initialize
    name: Initialize
  - name: (
  - name: )
- uid: Global.IntEnemy.OnFirstFrame*
  commentId: Overload:Global.IntEnemy.OnFirstFrame
  name: OnFirstFrame
  nameWithType: IntEnemy.OnFirstFrame
  fullName: IntEnemy.OnFirstFrame
- uid: Global.IEntity.OnFirstFrame
  commentId: M:Global.IEntity.OnFirstFrame
  parent: Global.IEntity
  name: OnFirstFrame()
  nameWithType: IEntity.OnFirstFrame()
  fullName: IEntity.OnFirstFrame()
  spec.csharp:
  - uid: Global.IEntity.OnFirstFrame
    name: OnFirstFrame
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IEntity.OnFirstFrame
    name: OnFirstFrame
  - name: (
  - name: )
- uid: Global.IntActor.OnSpike(IntSolid)
  commentId: M:Global.IntActor.OnSpike(IntSolid)
  parent: Global.IntActor
  name: OnSpike(IntSolid)
  nameWithType: IntActor.OnSpike(IntSolid)
  fullName: IntActor.OnSpike(IntSolid)
  spec.csharp:
  - uid: Global.IntActor.OnSpike(IntSolid)
    name: OnSpike
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnSpike(IntSolid)
    name: OnSpike
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.IntEnemy.OnSpike*
  commentId: Overload:Global.IntEnemy.OnSpike
  name: OnSpike
  nameWithType: IntEnemy.OnSpike
  fullName: IntEnemy.OnSpike
- uid: Global.IntSolid
  commentId: T:Global.IntSolid
  name: IntSolid
  nameWithType: IntSolid
  fullName: IntSolid
- uid: Global.IntEnemy.SpawnAura*
  commentId: Overload:Global.IntEnemy.SpawnAura
  name: SpawnAura
  nameWithType: IntEnemy.SpawnAura
  fullName: IntEnemy.SpawnAura
- uid: Global.IEntity.SpawnAura
  commentId: M:Global.IEntity.SpawnAura
  parent: Global.IEntity
  name: SpawnAura()
  nameWithType: IEntity.SpawnAura()
  fullName: IEntity.SpawnAura()
  spec.csharp:
  - uid: Global.IEntity.SpawnAura
    name: SpawnAura
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IEntity.SpawnAura
    name: SpawnAura
  - name: (
  - name: )
- uid: Global.IntEnemy.PreInputUpdate*
  commentId: Overload:Global.IntEnemy.PreInputUpdate
  name: PreInputUpdate
  nameWithType: IntEnemy.PreInputUpdate
  fullName: IntEnemy.PreInputUpdate
- uid: Global.IEntity.PreInputUpdate
  commentId: M:Global.IEntity.PreInputUpdate
  parent: Global.IEntity
  name: PreInputUpdate()
  nameWithType: IEntity.PreInputUpdate()
  fullName: IEntity.PreInputUpdate()
  spec.csharp:
  - uid: Global.IEntity.PreInputUpdate
    name: PreInputUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IEntity.PreInputUpdate
    name: PreInputUpdate
  - name: (
  - name: )
- uid: Global.IntEnemy.UpdateInput*
  commentId: Overload:Global.IntEnemy.UpdateInput
  name: UpdateInput
  nameWithType: IntEnemy.UpdateInput
  fullName: IntEnemy.UpdateInput
- uid: Global.IEntity.UpdateInput
  commentId: M:Global.IEntity.UpdateInput
  parent: Global.IEntity
  name: UpdateInput()
  nameWithType: IEntity.UpdateInput()
  fullName: IEntity.UpdateInput()
  spec.csharp:
  - uid: Global.IEntity.UpdateInput
    name: UpdateInput
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IEntity.UpdateInput
    name: UpdateInput
  - name: (
  - name: )
- uid: Global.IntEnemy.PostInputUpdate*
  commentId: Overload:Global.IntEnemy.PostInputUpdate
  name: PostInputUpdate
  nameWithType: IntEnemy.PostInputUpdate
  fullName: IntEnemy.PostInputUpdate
- uid: Global.IEntity.PostInputUpdate
  commentId: M:Global.IEntity.PostInputUpdate
  parent: Global.IEntity
  name: PostInputUpdate()
  nameWithType: IEntity.PostInputUpdate()
  fullName: IEntity.PostInputUpdate()
  spec.csharp:
  - uid: Global.IEntity.PostInputUpdate
    name: PostInputUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IEntity.PostInputUpdate
    name: PostInputUpdate
  - name: (
  - name: )
- uid: Global.IntEnemy.Animate*
  commentId: Overload:Global.IntEnemy.Animate
  name: Animate
  nameWithType: IntEnemy.Animate
  fullName: IntEnemy.Animate
- uid: Global.IEntity.Animate
  commentId: M:Global.IEntity.Animate
  parent: Global.IEntity
  name: Animate()
  nameWithType: IEntity.Animate()
  fullName: IEntity.Animate()
  spec.csharp:
  - uid: Global.IEntity.Animate
    name: Animate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IEntity.Animate
    name: Animate
  - name: (
  - name: )
- uid: Global.IntEnemy.OnDrawDebugGizmos*
  commentId: Overload:Global.IntEnemy.OnDrawDebugGizmos
  name: OnDrawDebugGizmos
  nameWithType: IntEnemy.OnDrawDebugGizmos
  fullName: IntEnemy.OnDrawDebugGizmos
- uid: Global.IEntity.OnDrawDebugGizmos
  commentId: M:Global.IEntity.OnDrawDebugGizmos
  parent: Global.IEntity
  name: OnDrawDebugGizmos()
  nameWithType: IEntity.OnDrawDebugGizmos()
  fullName: IEntity.OnDrawDebugGizmos()
  spec.csharp:
  - uid: Global.IEntity.OnDrawDebugGizmos
    name: OnDrawDebugGizmos
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IEntity.OnDrawDebugGizmos
    name: OnDrawDebugGizmos
  - name: (
  - name: )
- uid: Global.IntEnemy.DebugDrawTileVision*
  commentId: Overload:Global.IntEnemy.DebugDrawTileVision
  name: DebugDrawTileVision
  nameWithType: IntEnemy.DebugDrawTileVision
  fullName: IntEnemy.DebugDrawTileVision
- uid: Global.IntEnemy.GizmosDrawTileVision*
  commentId: Overload:Global.IntEnemy.GizmosDrawTileVision
  name: GizmosDrawTileVision
  nameWithType: IntEnemy.GizmosDrawTileVision
  fullName: IntEnemy.GizmosDrawTileVision
- uid: Global.IntEnemy.GizmosDrawRequiredSpace*
  commentId: Overload:Global.IntEnemy.GizmosDrawRequiredSpace
  name: GizmosDrawRequiredSpace
  nameWithType: IntEnemy.GizmosDrawRequiredSpace
  fullName: IntEnemy.GizmosDrawRequiredSpace
- uid: Global.IntEnemy.OnDrawGizmosSelected*
  commentId: Overload:Global.IntEnemy.OnDrawGizmosSelected
  name: OnDrawGizmosSelected
  nameWithType: IntEnemy.OnDrawGizmosSelected
  fullName: IntEnemy.OnDrawGizmosSelected
- uid: Global.IntEnemy.OnDrawGizmos*
  commentId: Overload:Global.IntEnemy.OnDrawGizmos
  name: OnDrawGizmos
  nameWithType: IntEnemy.OnDrawGizmos
  fullName: IntEnemy.OnDrawGizmos
- uid: Global.IntEnemy.GetSpawnProperties*
  commentId: Overload:Global.IntEnemy.GetSpawnProperties
  name: GetSpawnProperties
  nameWithType: IntEnemy.GetSpawnProperties
  fullName: IntEnemy.GetSpawnProperties
- uid: Global.ISpawnable.GetSpawnProperties
  commentId: M:Global.ISpawnable.GetSpawnProperties
  parent: Global.ISpawnable
  name: GetSpawnProperties()
  nameWithType: ISpawnable.GetSpawnProperties()
  fullName: ISpawnable.GetSpawnProperties()
  spec.csharp:
  - uid: Global.ISpawnable.GetSpawnProperties
    name: GetSpawnProperties
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ISpawnable.GetSpawnProperties
    name: GetSpawnProperties
  - name: (
  - name: )
- uid: Global.IntEnemy.OnLocalSpaceSpawnBoundsSet*
  commentId: Overload:Global.IntEnemy.OnLocalSpaceSpawnBoundsSet
  name: OnLocalSpaceSpawnBoundsSet
  nameWithType: IntEnemy.OnLocalSpaceSpawnBoundsSet
  fullName: IntEnemy.OnLocalSpaceSpawnBoundsSet
- uid: Global.ISpawnable.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  commentId: M:Global.ISpawnable.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  parent: Global.ISpawnable
  isExternal: true
  name: OnLocalSpaceSpawnBoundsSet(Vector2Int, Vector2Int)
  nameWithType: ISpawnable.OnLocalSpaceSpawnBoundsSet(Vector2Int, Vector2Int)
  fullName: ISpawnable.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.ISpawnable.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
    name: OnLocalSpaceSpawnBoundsSet
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ISpawnable.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
    name: OnLocalSpaceSpawnBoundsSet
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntEnemy.ResolveSpawnLocation*
  commentId: Overload:Global.IntEnemy.ResolveSpawnLocation
  name: ResolveSpawnLocation
  nameWithType: IntEnemy.ResolveSpawnLocation
  fullName: IntEnemy.ResolveSpawnLocation
- uid: Global.ISpawnable.ResolveSpawnLocation
  commentId: M:Global.ISpawnable.ResolveSpawnLocation
  parent: Global.ISpawnable
  name: ResolveSpawnLocation()
  nameWithType: ISpawnable.ResolveSpawnLocation()
  fullName: ISpawnable.ResolveSpawnLocation()
  spec.csharp:
  - uid: Global.ISpawnable.ResolveSpawnLocation
    name: ResolveSpawnLocation
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ISpawnable.ResolveSpawnLocation
    name: ResolveSpawnLocation
  - name: (
  - name: )
- uid: Global.IntEnemy.GetSpawnLocationFromBounds*
  commentId: Overload:Global.IntEnemy.GetSpawnLocationFromBounds
  name: GetSpawnLocationFromBounds
  nameWithType: IntEnemy.GetSpawnLocationFromBounds
  fullName: IntEnemy.GetSpawnLocationFromBounds
- uid: Global.ISpawnable.GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
  commentId: M:Global.ISpawnable.GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
  parent: Global.ISpawnable
  isExternal: true
  name: GetSpawnLocationFromBounds(Vector3, Vector3)
  nameWithType: ISpawnable.GetSpawnLocationFromBounds(Vector3, Vector3)
  fullName: ISpawnable.GetSpawnLocationFromBounds(UnityEngine.Vector3, UnityEngine.Vector3)
  spec.csharp:
  - uid: Global.ISpawnable.GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
    name: GetSpawnLocationFromBounds
  - name: (
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ISpawnable.GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
    name: GetSpawnLocationFromBounds
  - name: (
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: )
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
