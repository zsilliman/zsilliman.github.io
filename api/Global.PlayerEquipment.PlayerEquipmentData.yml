### YamlMime:ManagedReference
items:
- uid: Global.PlayerEquipment.PlayerEquipmentData
  commentId: T:Global.PlayerEquipment.PlayerEquipmentData
  id: PlayerEquipment.PlayerEquipmentData
  parent: Global
  children:
  - Global.PlayerEquipment.PlayerEquipmentData.AbilityAuraLifetime
  - Global.PlayerEquipment.PlayerEquipmentData.CollectedBossTrophies
  - Global.PlayerEquipment.PlayerEquipmentData.GlimpsesOfThePast
  - Global.PlayerEquipment.PlayerEquipmentData.LifeShardContainers
  - Global.PlayerEquipment.PlayerEquipmentData.LifeShardCount
  - Global.PlayerEquipment.PlayerEquipmentData.MaxAbilityAuraCount
  - Global.PlayerEquipment.PlayerEquipmentData.MemoryFragmentCount
  - Global.PlayerEquipment.PlayerEquipmentData.SpiritShardContainers
  - Global.PlayerEquipment.PlayerEquipmentData.SpiritShardCount
  - Global.PlayerEquipment.PlayerEquipmentData.WolfsClawsLevel
  langs:
  - csharp
  - vb
  name: PlayerEquipment.PlayerEquipmentData
  nameWithType: PlayerEquipment.PlayerEquipmentData
  fullName: PlayerEquipment.PlayerEquipmentData
  type: Struct
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/PlayerEquipment.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PlayerEquipmentData
    path: ../Assets/Objects & Components/Entities/Player/PlayerEquipment.cs
    startLine: 30
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public struct PlayerEquipment.PlayerEquipmentData
    content.vb: >-
      <Serializable>

      Public Structure PlayerEquipment.PlayerEquipmentData
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.PlayerEquipment.PlayerEquipmentData.LifeShardCount
  commentId: F:Global.PlayerEquipment.PlayerEquipmentData.LifeShardCount
  id: LifeShardCount
  parent: Global.PlayerEquipment.PlayerEquipmentData
  langs:
  - csharp
  - vb
  name: LifeShardCount
  nameWithType: PlayerEquipment.PlayerEquipmentData.LifeShardCount
  fullName: PlayerEquipment.PlayerEquipmentData.LifeShardCount
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/PlayerEquipment.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LifeShardCount
    path: ../Assets/Objects & Components/Entities/Player/PlayerEquipment.cs
    startLine: 35
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Shards and Containers")]

      [SerializeField]

      public uint LifeShardCount
    return:
      type: System.UInt32
    content.vb: >-
      <Header("Shards and Containers")>

      <SerializeField>

      Public LifeShardCount As UInteger
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Shards and Containers
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.PlayerEquipment.PlayerEquipmentData.LifeShardContainers
  commentId: F:Global.PlayerEquipment.PlayerEquipmentData.LifeShardContainers
  id: LifeShardContainers
  parent: Global.PlayerEquipment.PlayerEquipmentData
  langs:
  - csharp
  - vb
  name: LifeShardContainers
  nameWithType: PlayerEquipment.PlayerEquipmentData.LifeShardContainers
  fullName: PlayerEquipment.PlayerEquipmentData.LifeShardContainers
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/PlayerEquipment.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LifeShardContainers
    path: ../Assets/Objects & Components/Entities/Player/PlayerEquipment.cs
    startLine: 37
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public uint LifeShardContainers
    return:
      type: System.UInt32
    content.vb: >-
      <SerializeField>

      Public LifeShardContainers As UInteger
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.PlayerEquipment.PlayerEquipmentData.SpiritShardCount
  commentId: F:Global.PlayerEquipment.PlayerEquipmentData.SpiritShardCount
  id: SpiritShardCount
  parent: Global.PlayerEquipment.PlayerEquipmentData
  langs:
  - csharp
  - vb
  name: SpiritShardCount
  nameWithType: PlayerEquipment.PlayerEquipmentData.SpiritShardCount
  fullName: PlayerEquipment.PlayerEquipmentData.SpiritShardCount
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/PlayerEquipment.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SpiritShardCount
    path: ../Assets/Objects & Components/Entities/Player/PlayerEquipment.cs
    startLine: 39
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public uint SpiritShardCount
    return:
      type: System.UInt32
    content.vb: >-
      <SerializeField>

      Public SpiritShardCount As UInteger
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.PlayerEquipment.PlayerEquipmentData.SpiritShardContainers
  commentId: F:Global.PlayerEquipment.PlayerEquipmentData.SpiritShardContainers
  id: SpiritShardContainers
  parent: Global.PlayerEquipment.PlayerEquipmentData
  langs:
  - csharp
  - vb
  name: SpiritShardContainers
  nameWithType: PlayerEquipment.PlayerEquipmentData.SpiritShardContainers
  fullName: PlayerEquipment.PlayerEquipmentData.SpiritShardContainers
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/PlayerEquipment.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SpiritShardContainers
    path: ../Assets/Objects & Components/Entities/Player/PlayerEquipment.cs
    startLine: 41
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public uint SpiritShardContainers
    return:
      type: System.UInt32
    content.vb: >-
      <SerializeField>

      Public SpiritShardContainers As UInteger
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.PlayerEquipment.PlayerEquipmentData.WolfsClawsLevel
  commentId: F:Global.PlayerEquipment.PlayerEquipmentData.WolfsClawsLevel
  id: WolfsClawsLevel
  parent: Global.PlayerEquipment.PlayerEquipmentData
  langs:
  - csharp
  - vb
  name: WolfsClawsLevel
  nameWithType: PlayerEquipment.PlayerEquipmentData.WolfsClawsLevel
  fullName: PlayerEquipment.PlayerEquipmentData.WolfsClawsLevel
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/PlayerEquipment.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WolfsClawsLevel
    path: ../Assets/Objects & Components/Entities/Player/PlayerEquipment.cs
    startLine: 45
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Movement Resources")]

      [SerializeField]

      public WolfsClaws WolfsClawsLevel
    return:
      type: Global.WolfsClaws
    content.vb: >-
      <Header("Movement Resources")>

      <SerializeField>

      Public WolfsClawsLevel As WolfsClaws
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Movement Resources
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.PlayerEquipment.PlayerEquipmentData.MaxAbilityAuraCount
  commentId: F:Global.PlayerEquipment.PlayerEquipmentData.MaxAbilityAuraCount
  id: MaxAbilityAuraCount
  parent: Global.PlayerEquipment.PlayerEquipmentData
  langs:
  - csharp
  - vb
  name: MaxAbilityAuraCount
  nameWithType: PlayerEquipment.PlayerEquipmentData.MaxAbilityAuraCount
  fullName: PlayerEquipment.PlayerEquipmentData.MaxAbilityAuraCount
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/PlayerEquipment.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxAbilityAuraCount
    path: ../Assets/Objects & Components/Entities/Player/PlayerEquipment.cs
    startLine: 49
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Abilities")]

      [SerializeField]

      public int MaxAbilityAuraCount
    return:
      type: System.Int32
    content.vb: >-
      <Header("Abilities")>

      <SerializeField>

      Public MaxAbilityAuraCount As Integer
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Abilities
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.PlayerEquipment.PlayerEquipmentData.AbilityAuraLifetime
  commentId: F:Global.PlayerEquipment.PlayerEquipmentData.AbilityAuraLifetime
  id: AbilityAuraLifetime
  parent: Global.PlayerEquipment.PlayerEquipmentData
  langs:
  - csharp
  - vb
  name: AbilityAuraLifetime
  nameWithType: PlayerEquipment.PlayerEquipmentData.AbilityAuraLifetime
  fullName: PlayerEquipment.PlayerEquipmentData.AbilityAuraLifetime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/PlayerEquipment.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AbilityAuraLifetime
    path: ../Assets/Objects & Components/Entities/Player/PlayerEquipment.cs
    startLine: 51
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public float AbilityAuraLifetime
    return:
      type: System.Single
    content.vb: >-
      <SerializeField>

      Public AbilityAuraLifetime As Single
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.PlayerEquipment.PlayerEquipmentData.MemoryFragmentCount
  commentId: F:Global.PlayerEquipment.PlayerEquipmentData.MemoryFragmentCount
  id: MemoryFragmentCount
  parent: Global.PlayerEquipment.PlayerEquipmentData
  langs:
  - csharp
  - vb
  name: MemoryFragmentCount
  nameWithType: PlayerEquipment.PlayerEquipmentData.MemoryFragmentCount
  fullName: PlayerEquipment.PlayerEquipmentData.MemoryFragmentCount
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/PlayerEquipment.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MemoryFragmentCount
    path: ../Assets/Objects & Components/Entities/Player/PlayerEquipment.cs
    startLine: 55
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Other Collectables")]

      [SerializeField]

      public uint MemoryFragmentCount
    return:
      type: System.UInt32
    content.vb: >-
      <Header("Other Collectables")>

      <SerializeField>

      Public MemoryFragmentCount As UInteger
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Other Collectables
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.PlayerEquipment.PlayerEquipmentData.GlimpsesOfThePast
  commentId: F:Global.PlayerEquipment.PlayerEquipmentData.GlimpsesOfThePast
  id: GlimpsesOfThePast
  parent: Global.PlayerEquipment.PlayerEquipmentData
  langs:
  - csharp
  - vb
  name: GlimpsesOfThePast
  nameWithType: PlayerEquipment.PlayerEquipmentData.GlimpsesOfThePast
  fullName: PlayerEquipment.PlayerEquipmentData.GlimpsesOfThePast
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/PlayerEquipment.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GlimpsesOfThePast
    path: ../Assets/Objects & Components/Entities/Player/PlayerEquipment.cs
    startLine: 57
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public uint GlimpsesOfThePast
    return:
      type: System.UInt32
    content.vb: >-
      <SerializeField>

      Public GlimpsesOfThePast As UInteger
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.PlayerEquipment.PlayerEquipmentData.CollectedBossTrophies
  commentId: F:Global.PlayerEquipment.PlayerEquipmentData.CollectedBossTrophies
  id: CollectedBossTrophies
  parent: Global.PlayerEquipment.PlayerEquipmentData
  langs:
  - csharp
  - vb
  name: CollectedBossTrophies
  nameWithType: PlayerEquipment.PlayerEquipmentData.CollectedBossTrophies
  fullName: PlayerEquipment.PlayerEquipmentData.CollectedBossTrophies
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/PlayerEquipment.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CollectedBossTrophies
    path: ../Assets/Objects & Components/Entities/Player/PlayerEquipment.cs
    startLine: 59
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public List<BossTrophy> CollectedBossTrophies
    return:
      type: System.Collections.Generic.List{BossTrophy}
    content.vb: >-
      <SerializeField>

      Public CollectedBossTrophies As List(Of BossTrophy)
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
references:
- uid: Global
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.WolfsClaws
  commentId: T:Global.WolfsClaws
  name: WolfsClaws
  nameWithType: WolfsClaws
  fullName: WolfsClaws
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Collections.Generic.List{BossTrophy}
  commentId: T:System.Collections.Generic.List{BossTrophy}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<BossTrophy>
  nameWithType: List<BossTrophy>
  fullName: System.Collections.Generic.List<BossTrophy>
  nameWithType.vb: List(Of BossTrophy)
  fullName.vb: System.Collections.Generic.List(Of BossTrophy)
  name.vb: List(Of BossTrophy)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.BossTrophy
    name: BossTrophy
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.BossTrophy
    name: BossTrophy
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
