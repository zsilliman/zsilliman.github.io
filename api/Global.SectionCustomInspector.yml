### YamlMime:ManagedReference
items:
- uid: Global.SectionCustomInspector
  commentId: T:Global.SectionCustomInspector
  id: SectionCustomInspector
  parent: Global
  children:
  - Global.SectionCustomInspector.AddNewSectionInInspector(Section,IntMath.Direction,System.Boolean)
  - Global.SectionCustomInspector.OnInspectorGUI
  langs:
  - csharp
  - vb
  name: SectionCustomInspector
  nameWithType: SectionCustomInspector
  fullName: SectionCustomInspector
  type: Class
  source:
    remote:
      path: Assets/Editor/CustomInspectors/SectionCustomInspector.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SectionCustomInspector
    path: ../Assets/Editor/CustomInspectors/SectionCustomInspector.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp-Editor
  namespace: Global
  syntax:
    content: >-
      [CustomEditor(typeof(Section))]

      public class SectionCustomInspector : Editor
    content.vb: >-
      <CustomEditor(GetType(Section))>

      Public Class SectionCustomInspector Inherits Editor
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  - UnityEditor.Editor
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: UnityEditor.CustomEditor
    ctor: UnityEditor.CustomEditor.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Global.Section
- uid: Global.SectionCustomInspector.OnInspectorGUI
  commentId: M:Global.SectionCustomInspector.OnInspectorGUI
  id: OnInspectorGUI
  parent: Global.SectionCustomInspector
  langs:
  - csharp
  - vb
  name: OnInspectorGUI()
  nameWithType: SectionCustomInspector.OnInspectorGUI()
  fullName: SectionCustomInspector.OnInspectorGUI()
  type: Method
  source:
    remote:
      path: Assets/Editor/CustomInspectors/SectionCustomInspector.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnInspectorGUI
    path: ../Assets/Editor/CustomInspectors/SectionCustomInspector.cs
    startLine: 48
  assemblies:
  - Assembly-CSharp-Editor
  namespace: Global
  syntax:
    content: public override void OnInspectorGUI()
    content.vb: Public Overrides Sub OnInspectorGUI()
  overridden: UnityEditor.Editor.OnInspectorGUI
  overload: Global.SectionCustomInspector.OnInspectorGUI*
- uid: Global.SectionCustomInspector.AddNewSectionInInspector(Section,IntMath.Direction,System.Boolean)
  commentId: M:Global.SectionCustomInspector.AddNewSectionInInspector(Section,IntMath.Direction,System.Boolean)
  id: AddNewSectionInInspector(Section,IntMath.Direction,System.Boolean)
  parent: Global.SectionCustomInspector
  langs:
  - csharp
  - vb
  name: AddNewSectionInInspector(Section, Direction, bool)
  nameWithType: SectionCustomInspector.AddNewSectionInInspector(Section, IntMath.Direction, bool)
  fullName: SectionCustomInspector.AddNewSectionInInspector(Section, IntMath.Direction, bool)
  type: Method
  source:
    remote:
      path: Assets/Editor/CustomInspectors/SectionCustomInspector.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AddNewSectionInInspector
    path: ../Assets/Editor/CustomInspectors/SectionCustomInspector.cs
    startLine: 153
  assemblies:
  - Assembly-CSharp-Editor
  namespace: Global
  syntax:
    content: public static void AddNewSectionInInspector(Section section, IntMath.Direction dir, bool select = true)
    parameters:
    - id: section
      type: Global.Section
    - id: dir
      type: Global.IntMath.Direction
    - id: select
      type: System.Boolean
    content.vb: Public Shared Sub AddNewSectionInInspector(section As Section, dir As IntMath.Direction, [select] As Boolean = True)
  overload: Global.SectionCustomInspector.AddNewSectionInInspector*
  nameWithType.vb: SectionCustomInspector.AddNewSectionInInspector(Section, IntMath.Direction, Boolean)
  fullName.vb: SectionCustomInspector.AddNewSectionInInspector(Section, IntMath.Direction, Boolean)
  name.vb: AddNewSectionInInspector(Section, Direction, Boolean)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: UnityEditor.Editor
  commentId: T:UnityEditor.Editor
  parent: UnityEditor
  isExternal: true
  name: Editor
  nameWithType: Editor
  fullName: UnityEditor.Editor
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEditor
  commentId: N:UnityEditor
  isExternal: true
  name: UnityEditor
  nameWithType: UnityEditor
  fullName: UnityEditor
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: UnityEditor.Editor.OnInspectorGUI
  commentId: M:UnityEditor.Editor.OnInspectorGUI
  parent: UnityEditor.Editor
  isExternal: true
  name: OnInspectorGUI()
  nameWithType: Editor.OnInspectorGUI()
  fullName: UnityEditor.Editor.OnInspectorGUI()
  spec.csharp:
  - uid: UnityEditor.Editor.OnInspectorGUI
    name: OnInspectorGUI
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEditor.Editor.OnInspectorGUI
    name: OnInspectorGUI
    isExternal: true
  - name: (
  - name: )
- uid: Global.SectionCustomInspector.OnInspectorGUI*
  commentId: Overload:Global.SectionCustomInspector.OnInspectorGUI
  name: OnInspectorGUI
  nameWithType: SectionCustomInspector.OnInspectorGUI
  fullName: SectionCustomInspector.OnInspectorGUI
- uid: Global.SectionCustomInspector.AddNewSectionInInspector*
  commentId: Overload:Global.SectionCustomInspector.AddNewSectionInInspector
  name: AddNewSectionInInspector
  nameWithType: SectionCustomInspector.AddNewSectionInInspector
  fullName: SectionCustomInspector.AddNewSectionInInspector
- uid: Global.Section
  commentId: T:Global.Section
  name: Section
  nameWithType: Section
  fullName: Section
- uid: Global.IntMath.Direction
  commentId: T:Global.IntMath.Direction
  name: IntMath.Direction
  nameWithType: IntMath.Direction
  fullName: IntMath.Direction
  spec.csharp:
  - uid: Global.IntMath
    name: IntMath
  - name: .
  - uid: Global.IntMath.Direction
    name: Direction
  spec.vb:
  - uid: Global.IntMath
    name: IntMath
  - name: .
  - uid: Global.IntMath.Direction
    name: Direction
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
