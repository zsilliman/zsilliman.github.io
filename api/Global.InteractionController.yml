### YamlMime:ManagedReference
items:
- uid: Global.InteractionController
  commentId: T:Global.InteractionController
  id: InteractionController
  parent: Global
  children:
  - Global.InteractionController.interactable
  - Global.InteractionController.IsInteractionActive
  - Global.InteractionController.IsInteractionFinished
  - Global.InteractionController.OnAllInteractionsCompleted
  - Global.InteractionController.OnInteract
  - Global.InteractionController.OnInteractionTriggerEnter(Player)
  - Global.InteractionController.OnInteractionTriggerExit(Player)
  - Global.InteractionController.OnResetObject
  - Global.InteractionController.OnTriggerEnterCallback(IntActor)
  - Global.InteractionController.OnTriggerExitCallback(IntActor)
  - Global.InteractionController.Start
  - Global.InteractionController.WaitForOtherControllers
  langs:
  - csharp
  - vb
  name: InteractionController
  nameWithType: InteractionController
  fullName: InteractionController
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/InteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: InteractionController
    path: ../Assets/Objects & Components/World/Interactable/InteractionController.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public abstract class InteractionController : MonoBehaviour'
    content.vb: Public MustInherit Class InteractionController Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  derivedClasses:
  - Global.AnimationInteractionController
  - Global.AutoFloatingDialogueController
  - Global.BinocularInteractionController
  - Global.ChestInteractionController
  - Global.DialogueAssetInteractionController
  - Global.DialogueInteractionController
  - Global.LockableDoorController
  - Global.MajorCheckpoint
  - Global.PlayerResourceController
  - Global.PortalInteractionController
  - Global.SignInteractionController
  - Global.SpawnerInteractionController
  - Global.SwitchSceneController
  - Global.TimelineInteractableController
  - Global.WakeInteractionController
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.InteractionController.interactable
  commentId: F:Global.InteractionController.interactable
  id: interactable
  parent: Global.InteractionController
  langs:
  - csharp
  - vb
  name: interactable
  nameWithType: InteractionController.interactable
  fullName: InteractionController.interactable
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/InteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: interactable
    path: ../Assets/Objects & Components/World/Interactable/InteractionController.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Interactable interactable
    return:
      type: Global.Interactable
    content.vb: Protected interactable As Interactable
- uid: Global.InteractionController.WaitForOtherControllers
  commentId: F:Global.InteractionController.WaitForOtherControllers
  id: WaitForOtherControllers
  parent: Global.InteractionController
  langs:
  - csharp
  - vb
  name: WaitForOtherControllers
  nameWithType: InteractionController.WaitForOtherControllers
  fullName: InteractionController.WaitForOtherControllers
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/InteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WaitForOtherControllers
    path: ../Assets/Objects & Components/World/Interactable/InteractionController.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [HideInInspector]

      public bool WaitForOtherControllers
    return:
      type: System.Boolean
    content.vb: >-
      <HideInInspector>

      Public WaitForOtherControllers As Boolean
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.InteractionController.Start
  commentId: M:Global.InteractionController.Start
  id: Start
  parent: Global.InteractionController
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: InteractionController.Start()
  fullName: InteractionController.Start()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/InteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Start
    path: ../Assets/Objects & Components/World/Interactable/InteractionController.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Start()
    content.vb: Protected Sub Start()
  overload: Global.InteractionController.Start*
- uid: Global.InteractionController.OnInteract
  commentId: M:Global.InteractionController.OnInteract
  id: OnInteract
  parent: Global.InteractionController
  langs:
  - csharp
  - vb
  name: OnInteract()
  nameWithType: InteractionController.OnInteract()
  fullName: InteractionController.OnInteract()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/InteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnInteract
    path: ../Assets/Objects & Components/World/Interactable/InteractionController.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public abstract void OnInteract()
    content.vb: Public MustOverride Sub OnInteract()
  overload: Global.InteractionController.OnInteract*
- uid: Global.InteractionController.OnInteractionTriggerEnter(Player)
  commentId: M:Global.InteractionController.OnInteractionTriggerEnter(Player)
  id: OnInteractionTriggerEnter(Player)
  parent: Global.InteractionController
  langs:
  - csharp
  - vb
  name: OnInteractionTriggerEnter(Player)
  nameWithType: InteractionController.OnInteractionTriggerEnter(Player)
  fullName: InteractionController.OnInteractionTriggerEnter(Player)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/InteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnInteractionTriggerEnter
    path: ../Assets/Objects & Components/World/Interactable/InteractionController.cs
    startLine: 26
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public abstract void OnInteractionTriggerEnter(Player player)
    parameters:
    - id: player
      type: Global.Player
    content.vb: Public MustOverride Sub OnInteractionTriggerEnter(player As Player)
  overload: Global.InteractionController.OnInteractionTriggerEnter*
- uid: Global.InteractionController.OnInteractionTriggerExit(Player)
  commentId: M:Global.InteractionController.OnInteractionTriggerExit(Player)
  id: OnInteractionTriggerExit(Player)
  parent: Global.InteractionController
  langs:
  - csharp
  - vb
  name: OnInteractionTriggerExit(Player)
  nameWithType: InteractionController.OnInteractionTriggerExit(Player)
  fullName: InteractionController.OnInteractionTriggerExit(Player)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/InteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnInteractionTriggerExit
    path: ../Assets/Objects & Components/World/Interactable/InteractionController.cs
    startLine: 28
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public abstract void OnInteractionTriggerExit(Player player)
    parameters:
    - id: player
      type: Global.Player
    content.vb: Public MustOverride Sub OnInteractionTriggerExit(player As Player)
  overload: Global.InteractionController.OnInteractionTriggerExit*
- uid: Global.InteractionController.OnResetObject
  commentId: M:Global.InteractionController.OnResetObject
  id: OnResetObject
  parent: Global.InteractionController
  langs:
  - csharp
  - vb
  name: OnResetObject()
  nameWithType: InteractionController.OnResetObject()
  fullName: InteractionController.OnResetObject()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/InteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnResetObject
    path: ../Assets/Objects & Components/World/Interactable/InteractionController.cs
    startLine: 30
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public abstract void OnResetObject()
    content.vb: Public MustOverride Sub OnResetObject()
  overload: Global.InteractionController.OnResetObject*
- uid: Global.InteractionController.IsInteractionFinished
  commentId: M:Global.InteractionController.IsInteractionFinished
  id: IsInteractionFinished
  parent: Global.InteractionController
  langs:
  - csharp
  - vb
  name: IsInteractionFinished()
  nameWithType: InteractionController.IsInteractionFinished()
  fullName: InteractionController.IsInteractionFinished()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/InteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsInteractionFinished
    path: ../Assets/Objects & Components/World/Interactable/InteractionController.cs
    startLine: 32
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public abstract bool IsInteractionFinished()
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function IsInteractionFinished() As Boolean
  overload: Global.InteractionController.IsInteractionFinished*
- uid: Global.InteractionController.IsInteractionActive
  commentId: M:Global.InteractionController.IsInteractionActive
  id: IsInteractionActive
  parent: Global.InteractionController
  langs:
  - csharp
  - vb
  name: IsInteractionActive()
  nameWithType: InteractionController.IsInteractionActive()
  fullName: InteractionController.IsInteractionActive()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/InteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsInteractionActive
    path: ../Assets/Objects & Components/World/Interactable/InteractionController.cs
    startLine: 34
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public abstract bool IsInteractionActive()
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function IsInteractionActive() As Boolean
  overload: Global.InteractionController.IsInteractionActive*
- uid: Global.InteractionController.OnAllInteractionsCompleted
  commentId: M:Global.InteractionController.OnAllInteractionsCompleted
  id: OnAllInteractionsCompleted
  parent: Global.InteractionController
  langs:
  - csharp
  - vb
  name: OnAllInteractionsCompleted()
  nameWithType: InteractionController.OnAllInteractionsCompleted()
  fullName: InteractionController.OnAllInteractionsCompleted()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/InteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnAllInteractionsCompleted
    path: ../Assets/Objects & Components/World/Interactable/InteractionController.cs
    startLine: 36
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void OnAllInteractionsCompleted()
    content.vb: Public Overridable Sub OnAllInteractionsCompleted()
  overload: Global.InteractionController.OnAllInteractionsCompleted*
- uid: Global.InteractionController.OnTriggerEnterCallback(IntActor)
  commentId: M:Global.InteractionController.OnTriggerEnterCallback(IntActor)
  id: OnTriggerEnterCallback(IntActor)
  parent: Global.InteractionController
  langs:
  - csharp
  - vb
  name: OnTriggerEnterCallback(IntActor)
  nameWithType: InteractionController.OnTriggerEnterCallback(IntActor)
  fullName: InteractionController.OnTriggerEnterCallback(IntActor)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/InteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnTriggerEnterCallback
    path: ../Assets/Objects & Components/World/Interactable/InteractionController.cs
    startLine: 38
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void OnTriggerEnterCallback(IntActor actor)
    parameters:
    - id: actor
      type: Global.IntActor
    content.vb: Protected Sub OnTriggerEnterCallback(actor As IntActor)
  overload: Global.InteractionController.OnTriggerEnterCallback*
- uid: Global.InteractionController.OnTriggerExitCallback(IntActor)
  commentId: M:Global.InteractionController.OnTriggerExitCallback(IntActor)
  id: OnTriggerExitCallback(IntActor)
  parent: Global.InteractionController
  langs:
  - csharp
  - vb
  name: OnTriggerExitCallback(IntActor)
  nameWithType: InteractionController.OnTriggerExitCallback(IntActor)
  fullName: InteractionController.OnTriggerExitCallback(IntActor)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/InteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnTriggerExitCallback
    path: ../Assets/Objects & Components/World/Interactable/InteractionController.cs
    startLine: 46
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void OnTriggerExitCallback(IntActor actor)
    parameters:
    - id: actor
      type: Global.IntActor
    content.vb: Protected Sub OnTriggerExitCallback(actor As IntActor)
  overload: Global.InteractionController.OnTriggerExitCallback*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.Interactable
  commentId: T:Global.Interactable
  name: Interactable
  nameWithType: Interactable
  fullName: Interactable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.InteractionController.Start*
  commentId: Overload:Global.InteractionController.Start
  name: Start
  nameWithType: InteractionController.Start
  fullName: InteractionController.Start
- uid: Global.InteractionController.OnInteract*
  commentId: Overload:Global.InteractionController.OnInteract
  name: OnInteract
  nameWithType: InteractionController.OnInteract
  fullName: InteractionController.OnInteract
- uid: Global.InteractionController.OnInteractionTriggerEnter*
  commentId: Overload:Global.InteractionController.OnInteractionTriggerEnter
  name: OnInteractionTriggerEnter
  nameWithType: InteractionController.OnInteractionTriggerEnter
  fullName: InteractionController.OnInteractionTriggerEnter
- uid: Global.Player
  commentId: T:Global.Player
  name: Player
  nameWithType: Player
  fullName: Player
- uid: Global.InteractionController.OnInteractionTriggerExit*
  commentId: Overload:Global.InteractionController.OnInteractionTriggerExit
  name: OnInteractionTriggerExit
  nameWithType: InteractionController.OnInteractionTriggerExit
  fullName: InteractionController.OnInteractionTriggerExit
- uid: Global.InteractionController.OnResetObject*
  commentId: Overload:Global.InteractionController.OnResetObject
  name: OnResetObject
  nameWithType: InteractionController.OnResetObject
  fullName: InteractionController.OnResetObject
- uid: Global.InteractionController.IsInteractionFinished*
  commentId: Overload:Global.InteractionController.IsInteractionFinished
  name: IsInteractionFinished
  nameWithType: InteractionController.IsInteractionFinished
  fullName: InteractionController.IsInteractionFinished
- uid: Global.InteractionController.IsInteractionActive*
  commentId: Overload:Global.InteractionController.IsInteractionActive
  name: IsInteractionActive
  nameWithType: InteractionController.IsInteractionActive
  fullName: InteractionController.IsInteractionActive
- uid: Global.InteractionController.OnAllInteractionsCompleted*
  commentId: Overload:Global.InteractionController.OnAllInteractionsCompleted
  name: OnAllInteractionsCompleted
  nameWithType: InteractionController.OnAllInteractionsCompleted
  fullName: InteractionController.OnAllInteractionsCompleted
- uid: Global.InteractionController.OnTriggerEnterCallback*
  commentId: Overload:Global.InteractionController.OnTriggerEnterCallback
  name: OnTriggerEnterCallback
  nameWithType: InteractionController.OnTriggerEnterCallback
  fullName: InteractionController.OnTriggerEnterCallback
- uid: Global.IntActor
  commentId: T:Global.IntActor
  name: IntActor
  nameWithType: IntActor
  fullName: IntActor
- uid: Global.InteractionController.OnTriggerExitCallback*
  commentId: Overload:Global.InteractionController.OnTriggerExitCallback
  name: OnTriggerExitCallback
  nameWithType: InteractionController.OnTriggerExitCallback
  fullName: InteractionController.OnTriggerExitCallback
