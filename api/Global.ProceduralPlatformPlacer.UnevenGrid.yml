### YamlMime:ManagedReference
items:
- uid: Global.ProceduralPlatformPlacer.UnevenGrid
  commentId: T:Global.ProceduralPlatformPlacer.UnevenGrid
  id: ProceduralPlatformPlacer.UnevenGrid
  parent: Global
  children:
  - Global.ProceduralPlatformPlacer.UnevenGrid.CellToTilemapIndices(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  - Global.ProceduralPlatformPlacer.UnevenGrid.CellToWorldRect(UnityEngine.Vector2,UnityEngine.Vector2Int,System.Single)
  - Global.ProceduralPlatformPlacer.UnevenGrid.ColWidths
  - Global.ProceduralPlatformPlacer.UnevenGrid.RowHeights
  langs:
  - csharp
  - vb
  name: ProceduralPlatformPlacer.UnevenGrid
  nameWithType: ProceduralPlatformPlacer.UnevenGrid
  fullName: ProceduralPlatformPlacer.UnevenGrid
  type: Class
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UnevenGrid
    path: ../Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
    startLine: 96
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class ProceduralPlatformPlacer.UnevenGrid : ProceduralPlatformPlacer.GridBase'
    content.vb: Public Class ProceduralPlatformPlacer.UnevenGrid Inherits ProceduralPlatformPlacer.GridBase
  inheritance:
  - System.Object
  - Global.ProceduralPlatformPlacer.GridBase
  inheritedMembers:
  - Global.ProceduralPlatformPlacer.GridBase.CellValues
  - Global.ProceduralPlatformPlacer.GridBase.ColumnCount
  - Global.ProceduralPlatformPlacer.GridBase.RowCount
  - Global.ProceduralPlatformPlacer.GridBase.IsCellInBounds(UnityEngine.Vector2Int)
  - Global.ProceduralPlatformPlacer.GridBase.IsCellEmpty(UnityEngine.Vector2Int)
  - Global.ProceduralPlatformPlacer.GridBase.IsCellSolid(UnityEngine.Vector2Int)
  - Global.ProceduralPlatformPlacer.GridBase.GetCellValue(UnityEngine.Vector2Int)
  - Global.ProceduralPlatformPlacer.GridBase.IsCellValueNegative(UnityEngine.Vector2Int)
  - Global.ProceduralPlatformPlacer.GridBase.SetCellValue(UnityEngine.Vector2Int,System.Int32)
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.ProceduralPlatformPlacer.UnevenGrid.RowHeights
  commentId: F:Global.ProceduralPlatformPlacer.UnevenGrid.RowHeights
  id: RowHeights
  parent: Global.ProceduralPlatformPlacer.UnevenGrid
  langs:
  - csharp
  - vb
  name: RowHeights
  nameWithType: ProceduralPlatformPlacer.UnevenGrid.RowHeights
  fullName: ProceduralPlatformPlacer.UnevenGrid.RowHeights
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RowHeights
    path: ../Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
    startLine: 98
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public List<int> RowHeights
    return:
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Public RowHeights As List(Of Integer)
- uid: Global.ProceduralPlatformPlacer.UnevenGrid.ColWidths
  commentId: F:Global.ProceduralPlatformPlacer.UnevenGrid.ColWidths
  id: ColWidths
  parent: Global.ProceduralPlatformPlacer.UnevenGrid
  langs:
  - csharp
  - vb
  name: ColWidths
  nameWithType: ProceduralPlatformPlacer.UnevenGrid.ColWidths
  fullName: ProceduralPlatformPlacer.UnevenGrid.ColWidths
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ColWidths
    path: ../Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
    startLine: 99
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public List<int> ColWidths
    return:
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Public ColWidths As List(Of Integer)
- uid: Global.ProceduralPlatformPlacer.UnevenGrid.CellToTilemapIndices(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  commentId: M:Global.ProceduralPlatformPlacer.UnevenGrid.CellToTilemapIndices(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  id: CellToTilemapIndices(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  parent: Global.ProceduralPlatformPlacer.UnevenGrid
  langs:
  - csharp
  - vb
  name: CellToTilemapIndices(Vector2Int, Vector2Int)
  nameWithType: ProceduralPlatformPlacer.UnevenGrid.CellToTilemapIndices(Vector2Int, Vector2Int)
  fullName: ProceduralPlatformPlacer.UnevenGrid.CellToTilemapIndices(UnityEngine.Vector2Int, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CellToTilemapIndices
    path: ../Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
    startLine: 101
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override RectInt CellToTilemapIndices(Vector2Int tilemap_tile_offset, Vector2Int index)
    parameters:
    - id: tilemap_tile_offset
      type: UnityEngine.Vector2Int
    - id: index
      type: UnityEngine.Vector2Int
    return:
      type: UnityEngine.RectInt
    content.vb: Public Overrides Function CellToTilemapIndices(tilemap_tile_offset As Vector2Int, index As Vector2Int) As RectInt
  overridden: Global.ProceduralPlatformPlacer.GridBase.CellToTilemapIndices(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  overload: Global.ProceduralPlatformPlacer.UnevenGrid.CellToTilemapIndices*
- uid: Global.ProceduralPlatformPlacer.UnevenGrid.CellToWorldRect(UnityEngine.Vector2,UnityEngine.Vector2Int,System.Single)
  commentId: M:Global.ProceduralPlatformPlacer.UnevenGrid.CellToWorldRect(UnityEngine.Vector2,UnityEngine.Vector2Int,System.Single)
  id: CellToWorldRect(UnityEngine.Vector2,UnityEngine.Vector2Int,System.Single)
  parent: Global.ProceduralPlatformPlacer.UnevenGrid
  langs:
  - csharp
  - vb
  name: CellToWorldRect(Vector2, Vector2Int, float)
  nameWithType: ProceduralPlatformPlacer.UnevenGrid.CellToWorldRect(Vector2, Vector2Int, float)
  fullName: ProceduralPlatformPlacer.UnevenGrid.CellToWorldRect(UnityEngine.Vector2, UnityEngine.Vector2Int, float)
  type: Method
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CellToWorldRect
    path: ../Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
    startLine: 123
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override Rect CellToWorldRect(Vector2 origin, Vector2Int index, float cellsize = 32)
    parameters:
    - id: origin
      type: UnityEngine.Vector2
    - id: index
      type: UnityEngine.Vector2Int
    - id: cellsize
      type: System.Single
    return:
      type: UnityEngine.Rect
    content.vb: Public Overrides Function CellToWorldRect(origin As Vector2, index As Vector2Int, cellsize As Single = 32) As Rect
  overridden: Global.ProceduralPlatformPlacer.GridBase.CellToWorldRect(UnityEngine.Vector2,UnityEngine.Vector2Int,System.Single)
  overload: Global.ProceduralPlatformPlacer.UnevenGrid.CellToWorldRect*
  nameWithType.vb: ProceduralPlatformPlacer.UnevenGrid.CellToWorldRect(Vector2, Vector2Int, Single)
  fullName.vb: ProceduralPlatformPlacer.UnevenGrid.CellToWorldRect(UnityEngine.Vector2, UnityEngine.Vector2Int, Single)
  name.vb: CellToWorldRect(Vector2, Vector2Int, Single)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.ProceduralPlatformPlacer.GridBase
  commentId: T:Global.ProceduralPlatformPlacer.GridBase
  name: ProceduralPlatformPlacer.GridBase
  nameWithType: ProceduralPlatformPlacer.GridBase
  fullName: ProceduralPlatformPlacer.GridBase
  spec.csharp:
  - uid: Global.ProceduralPlatformPlacer
    name: ProceduralPlatformPlacer
  - name: .
  - uid: Global.ProceduralPlatformPlacer.GridBase
    name: GridBase
  spec.vb:
  - uid: Global.ProceduralPlatformPlacer
    name: ProceduralPlatformPlacer
  - name: .
  - uid: Global.ProceduralPlatformPlacer.GridBase
    name: GridBase
- uid: Global.ProceduralPlatformPlacer.GridBase.CellValues
  commentId: F:Global.ProceduralPlatformPlacer.GridBase.CellValues
  parent: Global.ProceduralPlatformPlacer.GridBase
  name: CellValues
  nameWithType: ProceduralPlatformPlacer.GridBase.CellValues
  fullName: ProceduralPlatformPlacer.GridBase.CellValues
- uid: Global.ProceduralPlatformPlacer.GridBase.ColumnCount
  commentId: P:Global.ProceduralPlatformPlacer.GridBase.ColumnCount
  parent: Global.ProceduralPlatformPlacer.GridBase
  name: ColumnCount
  nameWithType: ProceduralPlatformPlacer.GridBase.ColumnCount
  fullName: ProceduralPlatformPlacer.GridBase.ColumnCount
- uid: Global.ProceduralPlatformPlacer.GridBase.RowCount
  commentId: P:Global.ProceduralPlatformPlacer.GridBase.RowCount
  parent: Global.ProceduralPlatformPlacer.GridBase
  name: RowCount
  nameWithType: ProceduralPlatformPlacer.GridBase.RowCount
  fullName: ProceduralPlatformPlacer.GridBase.RowCount
- uid: Global.ProceduralPlatformPlacer.GridBase.IsCellInBounds(UnityEngine.Vector2Int)
  commentId: M:Global.ProceduralPlatformPlacer.GridBase.IsCellInBounds(UnityEngine.Vector2Int)
  parent: Global.ProceduralPlatformPlacer.GridBase
  isExternal: true
  name: IsCellInBounds(Vector2Int)
  nameWithType: ProceduralPlatformPlacer.GridBase.IsCellInBounds(Vector2Int)
  fullName: ProceduralPlatformPlacer.GridBase.IsCellInBounds(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.ProceduralPlatformPlacer.GridBase.IsCellInBounds(UnityEngine.Vector2Int)
    name: IsCellInBounds
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ProceduralPlatformPlacer.GridBase.IsCellInBounds(UnityEngine.Vector2Int)
    name: IsCellInBounds
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.ProceduralPlatformPlacer.GridBase.IsCellEmpty(UnityEngine.Vector2Int)
  commentId: M:Global.ProceduralPlatformPlacer.GridBase.IsCellEmpty(UnityEngine.Vector2Int)
  parent: Global.ProceduralPlatformPlacer.GridBase
  isExternal: true
  name: IsCellEmpty(Vector2Int)
  nameWithType: ProceduralPlatformPlacer.GridBase.IsCellEmpty(Vector2Int)
  fullName: ProceduralPlatformPlacer.GridBase.IsCellEmpty(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.ProceduralPlatformPlacer.GridBase.IsCellEmpty(UnityEngine.Vector2Int)
    name: IsCellEmpty
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ProceduralPlatformPlacer.GridBase.IsCellEmpty(UnityEngine.Vector2Int)
    name: IsCellEmpty
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.ProceduralPlatformPlacer.GridBase.IsCellSolid(UnityEngine.Vector2Int)
  commentId: M:Global.ProceduralPlatformPlacer.GridBase.IsCellSolid(UnityEngine.Vector2Int)
  parent: Global.ProceduralPlatformPlacer.GridBase
  isExternal: true
  name: IsCellSolid(Vector2Int)
  nameWithType: ProceduralPlatformPlacer.GridBase.IsCellSolid(Vector2Int)
  fullName: ProceduralPlatformPlacer.GridBase.IsCellSolid(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.ProceduralPlatformPlacer.GridBase.IsCellSolid(UnityEngine.Vector2Int)
    name: IsCellSolid
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ProceduralPlatformPlacer.GridBase.IsCellSolid(UnityEngine.Vector2Int)
    name: IsCellSolid
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.ProceduralPlatformPlacer.GridBase.GetCellValue(UnityEngine.Vector2Int)
  commentId: M:Global.ProceduralPlatformPlacer.GridBase.GetCellValue(UnityEngine.Vector2Int)
  parent: Global.ProceduralPlatformPlacer.GridBase
  isExternal: true
  name: GetCellValue(Vector2Int)
  nameWithType: ProceduralPlatformPlacer.GridBase.GetCellValue(Vector2Int)
  fullName: ProceduralPlatformPlacer.GridBase.GetCellValue(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.ProceduralPlatformPlacer.GridBase.GetCellValue(UnityEngine.Vector2Int)
    name: GetCellValue
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ProceduralPlatformPlacer.GridBase.GetCellValue(UnityEngine.Vector2Int)
    name: GetCellValue
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.ProceduralPlatformPlacer.GridBase.IsCellValueNegative(UnityEngine.Vector2Int)
  commentId: M:Global.ProceduralPlatformPlacer.GridBase.IsCellValueNegative(UnityEngine.Vector2Int)
  parent: Global.ProceduralPlatformPlacer.GridBase
  isExternal: true
  name: IsCellValueNegative(Vector2Int)
  nameWithType: ProceduralPlatformPlacer.GridBase.IsCellValueNegative(Vector2Int)
  fullName: ProceduralPlatformPlacer.GridBase.IsCellValueNegative(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.ProceduralPlatformPlacer.GridBase.IsCellValueNegative(UnityEngine.Vector2Int)
    name: IsCellValueNegative
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ProceduralPlatformPlacer.GridBase.IsCellValueNegative(UnityEngine.Vector2Int)
    name: IsCellValueNegative
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.ProceduralPlatformPlacer.GridBase.SetCellValue(UnityEngine.Vector2Int,System.Int32)
  commentId: M:Global.ProceduralPlatformPlacer.GridBase.SetCellValue(UnityEngine.Vector2Int,System.Int32)
  parent: Global.ProceduralPlatformPlacer.GridBase
  isExternal: true
  name: SetCellValue(Vector2Int, int)
  nameWithType: ProceduralPlatformPlacer.GridBase.SetCellValue(Vector2Int, int)
  fullName: ProceduralPlatformPlacer.GridBase.SetCellValue(UnityEngine.Vector2Int, int)
  nameWithType.vb: ProceduralPlatformPlacer.GridBase.SetCellValue(Vector2Int, Integer)
  fullName.vb: ProceduralPlatformPlacer.GridBase.SetCellValue(UnityEngine.Vector2Int, Integer)
  name.vb: SetCellValue(Vector2Int, Integer)
  spec.csharp:
  - uid: Global.ProceduralPlatformPlacer.GridBase.SetCellValue(UnityEngine.Vector2Int,System.Int32)
    name: SetCellValue
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ProceduralPlatformPlacer.GridBase.SetCellValue(UnityEngine.Vector2Int,System.Int32)
    name: SetCellValue
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<int>
  nameWithType: List<int>
  fullName: System.Collections.Generic.List<int>
  nameWithType.vb: List(Of Integer)
  fullName.vb: System.Collections.Generic.List(Of Integer)
  name.vb: List(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: Global.ProceduralPlatformPlacer.GridBase.CellToTilemapIndices(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  commentId: M:Global.ProceduralPlatformPlacer.GridBase.CellToTilemapIndices(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  parent: Global.ProceduralPlatformPlacer.GridBase
  isExternal: true
  name: CellToTilemapIndices(Vector2Int, Vector2Int)
  nameWithType: ProceduralPlatformPlacer.GridBase.CellToTilemapIndices(Vector2Int, Vector2Int)
  fullName: ProceduralPlatformPlacer.GridBase.CellToTilemapIndices(UnityEngine.Vector2Int, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.ProceduralPlatformPlacer.GridBase.CellToTilemapIndices(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
    name: CellToTilemapIndices
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ProceduralPlatformPlacer.GridBase.CellToTilemapIndices(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
    name: CellToTilemapIndices
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.ProceduralPlatformPlacer.UnevenGrid.CellToTilemapIndices*
  commentId: Overload:Global.ProceduralPlatformPlacer.UnevenGrid.CellToTilemapIndices
  name: CellToTilemapIndices
  nameWithType: ProceduralPlatformPlacer.UnevenGrid.CellToTilemapIndices
  fullName: ProceduralPlatformPlacer.UnevenGrid.CellToTilemapIndices
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: UnityEngine.RectInt
  commentId: T:UnityEngine.RectInt
  parent: UnityEngine
  isExternal: true
  name: RectInt
  nameWithType: RectInt
  fullName: UnityEngine.RectInt
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ProceduralPlatformPlacer.GridBase.CellToWorldRect(UnityEngine.Vector2,UnityEngine.Vector2Int,System.Single)
  commentId: M:Global.ProceduralPlatformPlacer.GridBase.CellToWorldRect(UnityEngine.Vector2,UnityEngine.Vector2Int,System.Single)
  parent: Global.ProceduralPlatformPlacer.GridBase
  isExternal: true
  name: CellToWorldRect(Vector2, Vector2Int, float)
  nameWithType: ProceduralPlatformPlacer.GridBase.CellToWorldRect(Vector2, Vector2Int, float)
  fullName: ProceduralPlatformPlacer.GridBase.CellToWorldRect(UnityEngine.Vector2, UnityEngine.Vector2Int, float)
  nameWithType.vb: ProceduralPlatformPlacer.GridBase.CellToWorldRect(Vector2, Vector2Int, Single)
  fullName.vb: ProceduralPlatformPlacer.GridBase.CellToWorldRect(UnityEngine.Vector2, UnityEngine.Vector2Int, Single)
  name.vb: CellToWorldRect(Vector2, Vector2Int, Single)
  spec.csharp:
  - uid: Global.ProceduralPlatformPlacer.GridBase.CellToWorldRect(UnityEngine.Vector2,UnityEngine.Vector2Int,System.Single)
    name: CellToWorldRect
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ProceduralPlatformPlacer.GridBase.CellToWorldRect(UnityEngine.Vector2,UnityEngine.Vector2Int,System.Single)
    name: CellToWorldRect
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.ProceduralPlatformPlacer.UnevenGrid.CellToWorldRect*
  commentId: Overload:Global.ProceduralPlatformPlacer.UnevenGrid.CellToWorldRect
  name: CellToWorldRect
  nameWithType: ProceduralPlatformPlacer.UnevenGrid.CellToWorldRect
  fullName: ProceduralPlatformPlacer.UnevenGrid.CellToWorldRect
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Rect
  commentId: T:UnityEngine.Rect
  parent: UnityEngine
  isExternal: true
  name: Rect
  nameWithType: Rect
  fullName: UnityEngine.Rect
