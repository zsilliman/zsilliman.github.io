### YamlMime:ManagedReference
items:
- uid: Global.VillageGenerator.VillageProperties
  commentId: T:Global.VillageGenerator.VillageProperties
  id: VillageGenerator.VillageProperties
  parent: Global
  children:
  - Global.VillageGenerator.VillageProperties.BoxGridColRowCount
  - Global.VillageGenerator.VillageProperties.BridgeTile
  - Global.VillageGenerator.VillageProperties.CameraOrthographicSize
  - Global.VillageGenerator.VillageProperties.GroundEnemies
  - Global.VillageGenerator.VillageProperties.GroundEnemyDensity
  - Global.VillageGenerator.VillageProperties.PlatformSizeMax
  - Global.VillageGenerator.VillageProperties.PlatformSizeMin
  - Global.VillageGenerator.VillageProperties.PlatformTile
  - Global.VillageGenerator.VillageProperties.PlayerSpawnRegionSizeInTiles
  - Global.VillageGenerator.VillageProperties.SetPieces
  - Global.VillageGenerator.VillageProperties.VillageBoxCount
  - Global.VillageGenerator.VillageProperties.VillageBoxDimensions
  - Global.VillageGenerator.VillageProperties.VillageBridgeHeightMax
  - Global.VillageGenerator.VillageProperties.VillageBridgeHeightMin
  - Global.VillageGenerator.VillageProperties.VillagePaddingMaxCorner
  - Global.VillageGenerator.VillageProperties.VillagePaddingMinCorner
  - Global.VillageGenerator.VillageProperties.VillageSpacingRange
  langs:
  - csharp
  - vb
  name: VillageGenerator.VillageProperties
  nameWithType: VillageGenerator.VillageProperties
  fullName: VillageGenerator.VillageProperties
  type: Struct
  source:
    remote:
      path: Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: VillageProperties
    path: ../Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public struct VillageGenerator.VillageProperties
    content.vb: >-
      <Serializable>

      Public Structure VillageGenerator.VillageProperties
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.VillageGenerator.VillageProperties.CameraOrthographicSize
  commentId: F:Global.VillageGenerator.VillageProperties.CameraOrthographicSize
  id: CameraOrthographicSize
  parent: Global.VillageGenerator.VillageProperties
  langs:
  - csharp
  - vb
  name: CameraOrthographicSize
  nameWithType: VillageGenerator.VillageProperties.CameraOrthographicSize
  fullName: VillageGenerator.VillageProperties.CameraOrthographicSize
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CameraOrthographicSize
    path: ../Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Camera zoom level")]

      public int CameraOrthographicSize
    return:
      type: System.Int32
    content.vb: >-
      <Tooltip("Camera zoom level")>

      Public CameraOrthographicSize As Integer
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Camera zoom level
- uid: Global.VillageGenerator.VillageProperties.VillagePaddingMinCorner
  commentId: F:Global.VillageGenerator.VillageProperties.VillagePaddingMinCorner
  id: VillagePaddingMinCorner
  parent: Global.VillageGenerator.VillageProperties
  langs:
  - csharp
  - vb
  name: VillagePaddingMinCorner
  nameWithType: VillageGenerator.VillageProperties.VillagePaddingMinCorner
  fullName: VillageGenerator.VillageProperties.VillagePaddingMinCorner
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: VillagePaddingMinCorner
    path: ../Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("How far from the bottom left corner of the section should the village start")]

      public Vector2Int VillagePaddingMinCorner
    return:
      type: UnityEngine.Vector2Int
    content.vb: >-
      <Tooltip("How far from the bottom left corner of the section should the village start")>

      Public VillagePaddingMinCorner As Vector2Int
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: How far from the bottom left corner of the section should the village start
- uid: Global.VillageGenerator.VillageProperties.VillagePaddingMaxCorner
  commentId: F:Global.VillageGenerator.VillageProperties.VillagePaddingMaxCorner
  id: VillagePaddingMaxCorner
  parent: Global.VillageGenerator.VillageProperties
  langs:
  - csharp
  - vb
  name: VillagePaddingMaxCorner
  nameWithType: VillageGenerator.VillageProperties.VillagePaddingMaxCorner
  fullName: VillageGenerator.VillageProperties.VillagePaddingMaxCorner
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: VillagePaddingMaxCorner
    path: ../Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("How far from the top right corner of the section should the village end")]

      public Vector2Int VillagePaddingMaxCorner
    return:
      type: UnityEngine.Vector2Int
    content.vb: >-
      <Tooltip("How far from the top right corner of the section should the village end")>

      Public VillagePaddingMaxCorner As Vector2Int
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: How far from the top right corner of the section should the village end
- uid: Global.VillageGenerator.VillageProperties.VillageBoxDimensions
  commentId: F:Global.VillageGenerator.VillageProperties.VillageBoxDimensions
  id: VillageBoxDimensions
  parent: Global.VillageGenerator.VillageProperties
  langs:
  - csharp
  - vb
  name: VillageBoxDimensions
  nameWithType: VillageGenerator.VillageProperties.VillageBoxDimensions
  fullName: VillageGenerator.VillageProperties.VillageBoxDimensions
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: VillageBoxDimensions
    path: ../Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Village box dimensions in tile space")]

      public Vector2Int VillageBoxDimensions
    return:
      type: UnityEngine.Vector2Int
    content.vb: >-
      <Tooltip("Village box dimensions in tile space")>

      Public VillageBoxDimensions As Vector2Int
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Village box dimensions in tile space
- uid: Global.VillageGenerator.VillageProperties.BoxGridColRowCount
  commentId: F:Global.VillageGenerator.VillageProperties.BoxGridColRowCount
  id: BoxGridColRowCount
  parent: Global.VillageGenerator.VillageProperties
  langs:
  - csharp
  - vb
  name: BoxGridColRowCount
  nameWithType: VillageGenerator.VillageProperties.BoxGridColRowCount
  fullName: VillageGenerator.VillageProperties.BoxGridColRowCount
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BoxGridColRowCount
    path: ../Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
    startLine: 21
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Village box is subdivided into large cells where platforms are generated. How many rows and columns should it have. Note that it should cleanly divide VillageBoxDimensions.")]

      public Vector2Int BoxGridColRowCount
    return:
      type: UnityEngine.Vector2Int
    content.vb: >-
      <Tooltip("Village box is subdivided into large cells where platforms are generated. How many rows and columns should it have. Note that it should cleanly divide VillageBoxDimensions.")>

      Public BoxGridColRowCount As Vector2Int
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Village box is subdivided into large cells where platforms are generated. How many rows and columns should it have. Note that it should cleanly divide VillageBoxDimensions.
- uid: Global.VillageGenerator.VillageProperties.VillageBridgeHeightMin
  commentId: F:Global.VillageGenerator.VillageProperties.VillageBridgeHeightMin
  id: VillageBridgeHeightMin
  parent: Global.VillageGenerator.VillageProperties
  langs:
  - csharp
  - vb
  name: VillageBridgeHeightMin
  nameWithType: VillageGenerator.VillageProperties.VillageBridgeHeightMin
  fullName: VillageGenerator.VillageProperties.VillageBridgeHeightMin
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: VillageBridgeHeightMin
    path: ../Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Minimum village bridge height in tile space")]

      public int VillageBridgeHeightMin
    return:
      type: System.Int32
    content.vb: >-
      <Tooltip("Minimum village bridge height in tile space")>

      Public VillageBridgeHeightMin As Integer
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Minimum village bridge height in tile space
- uid: Global.VillageGenerator.VillageProperties.VillageBridgeHeightMax
  commentId: F:Global.VillageGenerator.VillageProperties.VillageBridgeHeightMax
  id: VillageBridgeHeightMax
  parent: Global.VillageGenerator.VillageProperties
  langs:
  - csharp
  - vb
  name: VillageBridgeHeightMax
  nameWithType: VillageGenerator.VillageProperties.VillageBridgeHeightMax
  fullName: VillageGenerator.VillageProperties.VillageBridgeHeightMax
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: VillageBridgeHeightMax
    path: ../Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Maximum village bridge height in tile space")]

      public int VillageBridgeHeightMax
    return:
      type: System.Int32
    content.vb: >-
      <Tooltip("Maximum village bridge height in tile space")>

      Public VillageBridgeHeightMax As Integer
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Maximum village bridge height in tile space
- uid: Global.VillageGenerator.VillageProperties.VillageSpacingRange
  commentId: F:Global.VillageGenerator.VillageProperties.VillageSpacingRange
  id: VillageSpacingRange
  parent: Global.VillageGenerator.VillageProperties
  langs:
  - csharp
  - vb
  name: VillageSpacingRange
  nameWithType: VillageGenerator.VillageProperties.VillageSpacingRange
  fullName: VillageGenerator.VillageProperties.VillageSpacingRange
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: VillageSpacingRange
    path: ../Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Range of how much space can be between two villages. (length of bridge)")]

      public Vector2Int VillageSpacingRange
    return:
      type: UnityEngine.Vector2Int
    content.vb: >-
      <Tooltip("Range of how much space can be between two villages. (length of bridge)")>

      Public VillageSpacingRange As Vector2Int
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Range of how much space can be between two villages. (length of bridge)
- uid: Global.VillageGenerator.VillageProperties.VillageBoxCount
  commentId: F:Global.VillageGenerator.VillageProperties.VillageBoxCount
  id: VillageBoxCount
  parent: Global.VillageGenerator.VillageProperties
  langs:
  - csharp
  - vb
  name: VillageBoxCount
  nameWithType: VillageGenerator.VillageProperties.VillageBoxCount
  fullName: VillageGenerator.VillageProperties.VillageBoxCount
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: VillageBoxCount
    path: ../Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("How many villages should be generated")]

      public int VillageBoxCount
    return:
      type: System.Int32
    content.vb: >-
      <Tooltip("How many villages should be generated")>

      Public VillageBoxCount As Integer
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: How many villages should be generated
- uid: Global.VillageGenerator.VillageProperties.PlatformSizeMin
  commentId: F:Global.VillageGenerator.VillageProperties.PlatformSizeMin
  id: PlatformSizeMin
  parent: Global.VillageGenerator.VillageProperties
  langs:
  - csharp
  - vb
  name: PlatformSizeMin
  nameWithType: VillageGenerator.VillageProperties.PlatformSizeMin
  fullName: VillageGenerator.VillageProperties.PlatformSizeMin
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PlatformSizeMin
    path: ../Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
    startLine: 31
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Minimum platform cell size (usually 1) (note that this is not tilemap tile size, but larger cell size)")]

      public Vector2Int PlatformSizeMin
    return:
      type: UnityEngine.Vector2Int
    content.vb: >-
      <Tooltip("Minimum platform cell size (usually 1) (note that this is not tilemap tile size, but larger cell size)")>

      Public PlatformSizeMin As Vector2Int
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Minimum platform cell size (usually 1) (note that this is not tilemap tile size, but larger cell size)
- uid: Global.VillageGenerator.VillageProperties.PlatformSizeMax
  commentId: F:Global.VillageGenerator.VillageProperties.PlatformSizeMax
  id: PlatformSizeMax
  parent: Global.VillageGenerator.VillageProperties
  langs:
  - csharp
  - vb
  name: PlatformSizeMax
  nameWithType: VillageGenerator.VillageProperties.PlatformSizeMax
  fullName: VillageGenerator.VillageProperties.PlatformSizeMax
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PlatformSizeMax
    path: ../Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
    startLine: 33
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Maximum platform cell size (usually 1) (note that this is not tilemap tile size, but larger cell size)")]

      public Vector2Int PlatformSizeMax
    return:
      type: UnityEngine.Vector2Int
    content.vb: >-
      <Tooltip("Maximum platform cell size (usually 1) (note that this is not tilemap tile size, but larger cell size)")>

      Public PlatformSizeMax As Vector2Int
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Maximum platform cell size (usually 1) (note that this is not tilemap tile size, but larger cell size)
- uid: Global.VillageGenerator.VillageProperties.PlatformTile
  commentId: F:Global.VillageGenerator.VillageProperties.PlatformTile
  id: PlatformTile
  parent: Global.VillageGenerator.VillageProperties
  langs:
  - csharp
  - vb
  name: PlatformTile
  nameWithType: VillageGenerator.VillageProperties.PlatformTile
  fullName: VillageGenerator.VillageProperties.PlatformTile
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PlatformTile
    path: ../Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
    startLine: 35
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Which tile to draw the village platforms with. (This will be replaced later)")]

      public TileBase PlatformTile
    return:
      type: UnityEngine.Tilemaps.TileBase
    content.vb: >-
      <Tooltip("Which tile to draw the village platforms with. (This will be replaced later)")>

      Public PlatformTile As TileBase
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Which tile to draw the village platforms with. (This will be replaced later)
- uid: Global.VillageGenerator.VillageProperties.BridgeTile
  commentId: F:Global.VillageGenerator.VillageProperties.BridgeTile
  id: BridgeTile
  parent: Global.VillageGenerator.VillageProperties
  langs:
  - csharp
  - vb
  name: BridgeTile
  nameWithType: VillageGenerator.VillageProperties.BridgeTile
  fullName: VillageGenerator.VillageProperties.BridgeTile
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BridgeTile
    path: ../Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
    startLine: 37
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Which tile to draw the village bridges with. (This will be replaced later)")]

      public TileBase BridgeTile
    return:
      type: UnityEngine.Tilemaps.TileBase
    content.vb: >-
      <Tooltip("Which tile to draw the village bridges with. (This will be replaced later)")>

      Public BridgeTile As TileBase
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Which tile to draw the village bridges with. (This will be replaced later)
- uid: Global.VillageGenerator.VillageProperties.PlayerSpawnRegionSizeInTiles
  commentId: F:Global.VillageGenerator.VillageProperties.PlayerSpawnRegionSizeInTiles
  id: PlayerSpawnRegionSizeInTiles
  parent: Global.VillageGenerator.VillageProperties
  langs:
  - csharp
  - vb
  name: PlayerSpawnRegionSizeInTiles
  nameWithType: VillageGenerator.VillageProperties.PlayerSpawnRegionSizeInTiles
  fullName: VillageGenerator.VillageProperties.PlayerSpawnRegionSizeInTiles
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PlayerSpawnRegionSizeInTiles
    path: ../Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
    startLine: 39
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("How far away from the player spawn enemies are allowed to spawn in tile-space")]

      public Vector2Int PlayerSpawnRegionSizeInTiles
    return:
      type: UnityEngine.Vector2Int
    content.vb: >-
      <Tooltip("How far away from the player spawn enemies are allowed to spawn in tile-space")>

      Public PlayerSpawnRegionSizeInTiles As Vector2Int
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: How far away from the player spawn enemies are allowed to spawn in tile-space
- uid: Global.VillageGenerator.VillageProperties.GroundEnemies
  commentId: F:Global.VillageGenerator.VillageProperties.GroundEnemies
  id: GroundEnemies
  parent: Global.VillageGenerator.VillageProperties
  langs:
  - csharp
  - vb
  name: GroundEnemies
  nameWithType: VillageGenerator.VillageProperties.GroundEnemies
  fullName: VillageGenerator.VillageProperties.GroundEnemies
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GroundEnemies
    path: ../Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
    startLine: 41
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Village Enemies to spawn")]

      public List<SpawnableListElement> GroundEnemies
    return:
      type: System.Collections.Generic.List{SpawnableListElement}
    content.vb: >-
      <Tooltip("Village Enemies to spawn")>

      Public GroundEnemies As List(Of SpawnableListElement)
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Village Enemies to spawn
- uid: Global.VillageGenerator.VillageProperties.GroundEnemyDensity
  commentId: F:Global.VillageGenerator.VillageProperties.GroundEnemyDensity
  id: GroundEnemyDensity
  parent: Global.VillageGenerator.VillageProperties
  langs:
  - csharp
  - vb
  name: GroundEnemyDensity
  nameWithType: VillageGenerator.VillageProperties.GroundEnemyDensity
  fullName: VillageGenerator.VillageProperties.GroundEnemyDensity
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GroundEnemyDensity
    path: ../Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
    startLine: 43
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("How much to fill the space with ground enemies")]

      [Range(0, 1)]

      public float GroundEnemyDensity
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("How much to fill the space with ground enemies")>

      <Range(0, 1)>

      Public GroundEnemyDensity As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: How much to fill the space with ground enemies
  - type: UnityEngine.RangeAttribute
    ctor: UnityEngine.RangeAttribute.#ctor(System.Single,System.Single)
    arguments:
    - type: System.Single
      value: 0
    - type: System.Single
      value: 1
- uid: Global.VillageGenerator.VillageProperties.SetPieces
  commentId: F:Global.VillageGenerator.VillageProperties.SetPieces
  id: SetPieces
  parent: Global.VillageGenerator.VillageProperties
  langs:
  - csharp
  - vb
  name: SetPieces
  nameWithType: VillageGenerator.VillageProperties.SetPieces
  fullName: VillageGenerator.VillageProperties.SetPieces
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetPieces
    path: ../Assets/Framework/Procedural Generation/TerrainTypes/VillageGenerator.cs
    startLine: 45
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("List of set pieces for the village")]

      public GameObject SetPieces
    return:
      type: UnityEngine.GameObject
    content.vb: >-
      <Tooltip("List of set pieces for the village")>

      Public SetPieces As GameObject
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: List of set pieces for the village
references:
- uid: Global
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.Tilemaps.TileBase
  commentId: T:UnityEngine.Tilemaps.TileBase
  parent: UnityEngine.Tilemaps
  isExternal: true
  name: TileBase
  nameWithType: TileBase
  fullName: UnityEngine.Tilemaps.TileBase
- uid: UnityEngine.Tilemaps
  commentId: N:UnityEngine.Tilemaps
  isExternal: true
  name: UnityEngine.Tilemaps
  nameWithType: UnityEngine.Tilemaps
  fullName: UnityEngine.Tilemaps
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Tilemaps
    name: Tilemaps
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Tilemaps
    name: Tilemaps
    isExternal: true
- uid: System.Collections.Generic.List{SpawnableListElement}
  commentId: T:System.Collections.Generic.List{SpawnableListElement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SpawnableListElement>
  nameWithType: List<SpawnableListElement>
  fullName: System.Collections.Generic.List<SpawnableListElement>
  nameWithType.vb: List(Of SpawnableListElement)
  fullName.vb: System.Collections.Generic.List(Of SpawnableListElement)
  name.vb: List(Of SpawnableListElement)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.SpawnableListElement
    name: SpawnableListElement
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.SpawnableListElement
    name: SpawnableListElement
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
