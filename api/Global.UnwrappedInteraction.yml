### YamlMime:ManagedReference
items:
- uid: Global.UnwrappedInteraction
  commentId: T:Global.UnwrappedInteraction
  id: UnwrappedInteraction
  parent: Global
  children:
  - Global.UnwrappedInteraction.#ctor(Interaction,UnityEngine.UI.Text,System.Int32,UnityEngine.UI.Text,System.Int32,UnityEngine.UI.Text,System.Int32)
  - Global.UnwrappedInteraction.End
  - Global.UnwrappedInteraction.GetCurrent
  - Global.UnwrappedInteraction.GetCurrentDuration
  - Global.UnwrappedInteraction.HasNext
  - Global.UnwrappedInteraction.Hide
  - Global.UnwrappedInteraction.index
  - Global.UnwrappedInteraction.IsPaused
  - Global.UnwrappedInteraction.Next
  - Global.UnwrappedInteraction.Pause
  - Global.UnwrappedInteraction.Reset
  - Global.UnwrappedInteraction.Resume
  - Global.UnwrappedInteraction.ShowRelevant
  - Global.UnwrappedInteraction.Start
  - Global.UnwrappedInteraction.subinteractions
  - Global.UnwrappedInteraction.UpdateQuotePosition
  langs:
  - csharp
  - vb
  name: UnwrappedInteraction
  nameWithType: UnwrappedInteraction
  fullName: UnwrappedInteraction
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UnwrappedInteraction
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 120
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public class UnwrappedInteraction
    content.vb: Public Class UnwrappedInteraction
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.UnwrappedInteraction.subinteractions
  commentId: F:Global.UnwrappedInteraction.subinteractions
  id: subinteractions
  parent: Global.UnwrappedInteraction
  langs:
  - csharp
  - vb
  name: subinteractions
  nameWithType: UnwrappedInteraction.subinteractions
  fullName: UnwrappedInteraction.subinteractions
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: subinteractions
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 122
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public List<UnwrappedSubInteraction> subinteractions
    return:
      type: System.Collections.Generic.List{UnwrappedSubInteraction}
    content.vb: Public subinteractions As List(Of UnwrappedSubInteraction)
- uid: Global.UnwrappedInteraction.index
  commentId: P:Global.UnwrappedInteraction.index
  id: index
  parent: Global.UnwrappedInteraction
  langs:
  - csharp
  - vb
  name: index
  nameWithType: UnwrappedInteraction.index
  fullName: UnwrappedInteraction.index
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: index
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 123
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int index { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property index As Integer
  overload: Global.UnwrappedInteraction.index*
- uid: Global.UnwrappedInteraction.IsPaused
  commentId: P:Global.UnwrappedInteraction.IsPaused
  id: IsPaused
  parent: Global.UnwrappedInteraction
  langs:
  - csharp
  - vb
  name: IsPaused
  nameWithType: UnwrappedInteraction.IsPaused
  fullName: UnwrappedInteraction.IsPaused
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsPaused
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 125
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsPaused { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsPaused As Boolean
  overload: Global.UnwrappedInteraction.IsPaused*
- uid: Global.UnwrappedInteraction.#ctor(Interaction,UnityEngine.UI.Text,System.Int32,UnityEngine.UI.Text,System.Int32,UnityEngine.UI.Text,System.Int32)
  commentId: M:Global.UnwrappedInteraction.#ctor(Interaction,UnityEngine.UI.Text,System.Int32,UnityEngine.UI.Text,System.Int32,UnityEngine.UI.Text,System.Int32)
  id: '#ctor(Interaction,UnityEngine.UI.Text,System.Int32,UnityEngine.UI.Text,System.Int32,UnityEngine.UI.Text,System.Int32)'
  parent: Global.UnwrappedInteraction
  langs:
  - csharp
  - vb
  name: UnwrappedInteraction(Interaction, Text, int, Text, int, Text, int)
  nameWithType: UnwrappedInteraction.UnwrappedInteraction(Interaction, Text, int, Text, int, Text, int)
  fullName: UnwrappedInteraction.UnwrappedInteraction(Interaction, UnityEngine.UI.Text, int, UnityEngine.UI.Text, int, UnityEngine.UI.Text, int)
  type: Constructor
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: .ctor
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 127
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public UnwrappedInteraction(Interaction i, Text upper, int uppermaxlen, Text middle, int middlemaxlen, Text quote, int quotemaxlen)
    parameters:
    - id: i
      type: Global.Interaction
    - id: upper
      type: UnityEngine.UI.Text
    - id: uppermaxlen
      type: System.Int32
    - id: middle
      type: UnityEngine.UI.Text
    - id: middlemaxlen
      type: System.Int32
    - id: quote
      type: UnityEngine.UI.Text
    - id: quotemaxlen
      type: System.Int32
    content.vb: Public Sub New(i As Interaction, upper As Text, uppermaxlen As Integer, middle As Text, middlemaxlen As Integer, quote As Text, quotemaxlen As Integer)
  overload: Global.UnwrappedInteraction.#ctor*
  nameWithType.vb: UnwrappedInteraction.New(Interaction, Text, Integer, Text, Integer, Text, Integer)
  fullName.vb: UnwrappedInteraction.New(Interaction, UnityEngine.UI.Text, Integer, UnityEngine.UI.Text, Integer, UnityEngine.UI.Text, Integer)
  name.vb: New(Interaction, Text, Integer, Text, Integer, Text, Integer)
- uid: Global.UnwrappedInteraction.GetCurrent
  commentId: M:Global.UnwrappedInteraction.GetCurrent
  id: GetCurrent
  parent: Global.UnwrappedInteraction
  langs:
  - csharp
  - vb
  name: GetCurrent()
  nameWithType: UnwrappedInteraction.GetCurrent()
  fullName: UnwrappedInteraction.GetCurrent()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetCurrent
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 152
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public UnwrappedSubInteraction GetCurrent()
    return:
      type: Global.UnwrappedSubInteraction
    content.vb: Public Function GetCurrent() As UnwrappedSubInteraction
  overload: Global.UnwrappedInteraction.GetCurrent*
- uid: Global.UnwrappedInteraction.GetCurrentDuration
  commentId: M:Global.UnwrappedInteraction.GetCurrentDuration
  id: GetCurrentDuration
  parent: Global.UnwrappedInteraction
  langs:
  - csharp
  - vb
  name: GetCurrentDuration()
  nameWithType: UnwrappedInteraction.GetCurrentDuration()
  fullName: UnwrappedInteraction.GetCurrentDuration()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetCurrentDuration
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 159
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float GetCurrentDuration()
    return:
      type: System.Single
    content.vb: Public Function GetCurrentDuration() As Single
  overload: Global.UnwrappedInteraction.GetCurrentDuration*
- uid: Global.UnwrappedInteraction.Start
  commentId: M:Global.UnwrappedInteraction.Start
  id: Start
  parent: Global.UnwrappedInteraction
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: UnwrappedInteraction.Start()
  fullName: UnwrappedInteraction.Start()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Start
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 169
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Start()
    content.vb: Public Sub Start()
  overload: Global.UnwrappedInteraction.Start*
- uid: Global.UnwrappedInteraction.Resume
  commentId: M:Global.UnwrappedInteraction.Resume
  id: Resume
  parent: Global.UnwrappedInteraction
  langs:
  - csharp
  - vb
  name: Resume()
  nameWithType: UnwrappedInteraction.Resume()
  fullName: UnwrappedInteraction.Resume()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Resume
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 178
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Resume()
    content.vb: Public Sub [Resume]()
  overload: Global.UnwrappedInteraction.Resume*
- uid: Global.UnwrappedInteraction.Pause
  commentId: M:Global.UnwrappedInteraction.Pause
  id: Pause
  parent: Global.UnwrappedInteraction
  langs:
  - csharp
  - vb
  name: Pause()
  nameWithType: UnwrappedInteraction.Pause()
  fullName: UnwrappedInteraction.Pause()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Pause
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 184
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Pause()
    content.vb: Public Sub Pause()
  overload: Global.UnwrappedInteraction.Pause*
- uid: Global.UnwrappedInteraction.Next
  commentId: M:Global.UnwrappedInteraction.Next
  id: Next
  parent: Global.UnwrappedInteraction
  langs:
  - csharp
  - vb
  name: Next()
  nameWithType: UnwrappedInteraction.Next()
  fullName: UnwrappedInteraction.Next()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Next
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 190
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Next()
    content.vb: Public Sub [Next]()
  overload: Global.UnwrappedInteraction.Next*
- uid: Global.UnwrappedInteraction.ShowRelevant
  commentId: M:Global.UnwrappedInteraction.ShowRelevant
  id: ShowRelevant
  parent: Global.UnwrappedInteraction
  langs:
  - csharp
  - vb
  name: ShowRelevant()
  nameWithType: UnwrappedInteraction.ShowRelevant()
  fullName: UnwrappedInteraction.ShowRelevant()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ShowRelevant
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 213
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void ShowRelevant()
    content.vb: Public Sub ShowRelevant()
  overload: Global.UnwrappedInteraction.ShowRelevant*
- uid: Global.UnwrappedInteraction.Hide
  commentId: M:Global.UnwrappedInteraction.Hide
  id: Hide
  parent: Global.UnwrappedInteraction
  langs:
  - csharp
  - vb
  name: Hide()
  nameWithType: UnwrappedInteraction.Hide()
  fullName: UnwrappedInteraction.Hide()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Hide
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 220
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Hide()
    content.vb: Public Sub Hide()
  overload: Global.UnwrappedInteraction.Hide*
- uid: Global.UnwrappedInteraction.UpdateQuotePosition
  commentId: M:Global.UnwrappedInteraction.UpdateQuotePosition
  id: UpdateQuotePosition
  parent: Global.UnwrappedInteraction
  langs:
  - csharp
  - vb
  name: UpdateQuotePosition()
  nameWithType: UnwrappedInteraction.UpdateQuotePosition()
  fullName: UnwrappedInteraction.UpdateQuotePosition()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UpdateQuotePosition
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 227
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UpdateQuotePosition()
    content.vb: Public Sub UpdateQuotePosition()
  overload: Global.UnwrappedInteraction.UpdateQuotePosition*
- uid: Global.UnwrappedInteraction.End
  commentId: M:Global.UnwrappedInteraction.End
  id: End
  parent: Global.UnwrappedInteraction
  langs:
  - csharp
  - vb
  name: End()
  nameWithType: UnwrappedInteraction.End()
  fullName: UnwrappedInteraction.End()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: End
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 236
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void End()
    content.vb: Public Sub [End]()
  overload: Global.UnwrappedInteraction.End*
- uid: Global.UnwrappedInteraction.HasNext
  commentId: M:Global.UnwrappedInteraction.HasNext
  id: HasNext
  parent: Global.UnwrappedInteraction
  langs:
  - csharp
  - vb
  name: HasNext()
  nameWithType: UnwrappedInteraction.HasNext()
  fullName: UnwrappedInteraction.HasNext()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: HasNext
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 241
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool HasNext()
    return:
      type: System.Boolean
    content.vb: Public Function HasNext() As Boolean
  overload: Global.UnwrappedInteraction.HasNext*
- uid: Global.UnwrappedInteraction.Reset
  commentId: M:Global.UnwrappedInteraction.Reset
  id: Reset
  parent: Global.UnwrappedInteraction
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: UnwrappedInteraction.Reset()
  fullName: UnwrappedInteraction.Reset()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Reset
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 248
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset()
  overload: Global.UnwrappedInteraction.Reset*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.Collections.Generic.List{UnwrappedSubInteraction}
  commentId: T:System.Collections.Generic.List{UnwrappedSubInteraction}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<UnwrappedSubInteraction>
  nameWithType: List<UnwrappedSubInteraction>
  fullName: System.Collections.Generic.List<UnwrappedSubInteraction>
  nameWithType.vb: List(Of UnwrappedSubInteraction)
  fullName.vb: System.Collections.Generic.List(Of UnwrappedSubInteraction)
  name.vb: List(Of UnwrappedSubInteraction)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.UnwrappedSubInteraction
    name: UnwrappedSubInteraction
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.UnwrappedSubInteraction
    name: UnwrappedSubInteraction
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: Global.UnwrappedInteraction.index*
  commentId: Overload:Global.UnwrappedInteraction.index
  name: index
  nameWithType: UnwrappedInteraction.index
  fullName: UnwrappedInteraction.index
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.UnwrappedInteraction.IsPaused*
  commentId: Overload:Global.UnwrappedInteraction.IsPaused
  name: IsPaused
  nameWithType: UnwrappedInteraction.IsPaused
  fullName: UnwrappedInteraction.IsPaused
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.UnwrappedInteraction.#ctor*
  commentId: Overload:Global.UnwrappedInteraction.#ctor
  name: UnwrappedInteraction
  nameWithType: UnwrappedInteraction.UnwrappedInteraction
  fullName: UnwrappedInteraction.UnwrappedInteraction
  nameWithType.vb: UnwrappedInteraction.New
  fullName.vb: UnwrappedInteraction.New
  name.vb: New
- uid: Global.Interaction
  commentId: T:Global.Interaction
  name: Interaction
  nameWithType: Interaction
  fullName: Interaction
- uid: UnityEngine.UI.Text
  commentId: T:UnityEngine.UI.Text
  parent: UnityEngine.UI
  isExternal: true
  name: Text
  nameWithType: Text
  fullName: UnityEngine.UI.Text
- uid: UnityEngine.UI
  commentId: N:UnityEngine.UI
  isExternal: true
  name: UnityEngine.UI
  nameWithType: UnityEngine.UI
  fullName: UnityEngine.UI
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.UI
    name: UI
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.UI
    name: UI
    isExternal: true
- uid: Global.UnwrappedInteraction.GetCurrent*
  commentId: Overload:Global.UnwrappedInteraction.GetCurrent
  name: GetCurrent
  nameWithType: UnwrappedInteraction.GetCurrent
  fullName: UnwrappedInteraction.GetCurrent
- uid: Global.UnwrappedSubInteraction
  commentId: T:Global.UnwrappedSubInteraction
  name: UnwrappedSubInteraction
  nameWithType: UnwrappedSubInteraction
  fullName: UnwrappedSubInteraction
- uid: Global.UnwrappedInteraction.GetCurrentDuration*
  commentId: Overload:Global.UnwrappedInteraction.GetCurrentDuration
  name: GetCurrentDuration
  nameWithType: UnwrappedInteraction.GetCurrentDuration
  fullName: UnwrappedInteraction.GetCurrentDuration
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.UnwrappedInteraction.Start*
  commentId: Overload:Global.UnwrappedInteraction.Start
  name: Start
  nameWithType: UnwrappedInteraction.Start
  fullName: UnwrappedInteraction.Start
- uid: Global.UnwrappedInteraction.Resume*
  commentId: Overload:Global.UnwrappedInteraction.Resume
  name: Resume
  nameWithType: UnwrappedInteraction.Resume
  fullName: UnwrappedInteraction.Resume
- uid: Global.UnwrappedInteraction.Pause*
  commentId: Overload:Global.UnwrappedInteraction.Pause
  name: Pause
  nameWithType: UnwrappedInteraction.Pause
  fullName: UnwrappedInteraction.Pause
- uid: Global.UnwrappedInteraction.Next*
  commentId: Overload:Global.UnwrappedInteraction.Next
  name: Next
  nameWithType: UnwrappedInteraction.Next
  fullName: UnwrappedInteraction.Next
- uid: Global.UnwrappedInteraction.ShowRelevant*
  commentId: Overload:Global.UnwrappedInteraction.ShowRelevant
  name: ShowRelevant
  nameWithType: UnwrappedInteraction.ShowRelevant
  fullName: UnwrappedInteraction.ShowRelevant
- uid: Global.UnwrappedInteraction.Hide*
  commentId: Overload:Global.UnwrappedInteraction.Hide
  name: Hide
  nameWithType: UnwrappedInteraction.Hide
  fullName: UnwrappedInteraction.Hide
- uid: Global.UnwrappedInteraction.UpdateQuotePosition*
  commentId: Overload:Global.UnwrappedInteraction.UpdateQuotePosition
  name: UpdateQuotePosition
  nameWithType: UnwrappedInteraction.UpdateQuotePosition
  fullName: UnwrappedInteraction.UpdateQuotePosition
- uid: Global.UnwrappedInteraction.End*
  commentId: Overload:Global.UnwrappedInteraction.End
  name: End
  nameWithType: UnwrappedInteraction.End
  fullName: UnwrappedInteraction.End
- uid: Global.UnwrappedInteraction.HasNext*
  commentId: Overload:Global.UnwrappedInteraction.HasNext
  name: HasNext
  nameWithType: UnwrappedInteraction.HasNext
  fullName: UnwrappedInteraction.HasNext
- uid: Global.UnwrappedInteraction.Reset*
  commentId: Overload:Global.UnwrappedInteraction.Reset
  name: Reset
  nameWithType: UnwrappedInteraction.Reset
  fullName: UnwrappedInteraction.Reset
