### YamlMime:ManagedReference
items:
- uid: Global.LTSeq
  commentId: T:Global.LTSeq
  id: LTSeq
  parent: Global
  children:
  - Global.LTSeq.append(LTDescr)
  - Global.LTSeq.append(System.Action)
  - Global.LTSeq.append(System.Action{System.Object},System.Object)
  - Global.LTSeq.append(System.Single)
  - Global.LTSeq.append(UnityEngine.GameObject,System.Action)
  - Global.LTSeq.append(UnityEngine.GameObject,System.Action{System.Object},System.Object)
  - Global.LTSeq.counter
  - Global.LTSeq.current
  - Global.LTSeq.id
  - Global.LTSeq.init(System.UInt32,System.UInt32)
  - Global.LTSeq.insert(LTDescr)
  - Global.LTSeq.previous
  - Global.LTSeq.reset
  - Global.LTSeq.reverse
  - Global.LTSeq.setScale(System.Single)
  - Global.LTSeq.timeScale
  - Global.LTSeq.toggle
  - Global.LTSeq.totalDelay
  - Global.LTSeq.tween
  langs:
  - csharp
  - vb
  name: LTSeq
  nameWithType: LTSeq
  fullName: LTSeq
  type: Class
  source:
    remote:
      path: Assets/LeanTween/Framework/LTSeq.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LTSeq
    path: ../Assets/LeanTween/Framework/LTSeq.cs
    startLine: 21
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public class LTSeq
    content.vb: Public Class LTSeq
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.LTSeq.previous
  commentId: F:Global.LTSeq.previous
  id: previous
  parent: Global.LTSeq
  langs:
  - csharp
  - vb
  name: previous
  nameWithType: LTSeq.previous
  fullName: LTSeq.previous
  type: Field
  source:
    remote:
      path: Assets/LeanTween/Framework/LTSeq.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: previous
    path: ../Assets/LeanTween/Framework/LTSeq.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public LTSeq previous
    return:
      type: Global.LTSeq
    content.vb: Public previous As LTSeq
- uid: Global.LTSeq.current
  commentId: F:Global.LTSeq.current
  id: current
  parent: Global.LTSeq
  langs:
  - csharp
  - vb
  name: current
  nameWithType: LTSeq.current
  fullName: LTSeq.current
  type: Field
  source:
    remote:
      path: Assets/LeanTween/Framework/LTSeq.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: current
    path: ../Assets/LeanTween/Framework/LTSeq.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public LTSeq current
    return:
      type: Global.LTSeq
    content.vb: Public current As LTSeq
- uid: Global.LTSeq.tween
  commentId: F:Global.LTSeq.tween
  id: tween
  parent: Global.LTSeq
  langs:
  - csharp
  - vb
  name: tween
  nameWithType: LTSeq.tween
  fullName: LTSeq.tween
  type: Field
  source:
    remote:
      path: Assets/LeanTween/Framework/LTSeq.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: tween
    path: ../Assets/LeanTween/Framework/LTSeq.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public LTDescr tween
    return:
      type: Global.LTDescr
    content.vb: Public tween As LTDescr
- uid: Global.LTSeq.totalDelay
  commentId: F:Global.LTSeq.totalDelay
  id: totalDelay
  parent: Global.LTSeq
  langs:
  - csharp
  - vb
  name: totalDelay
  nameWithType: LTSeq.totalDelay
  fullName: LTSeq.totalDelay
  type: Field
  source:
    remote:
      path: Assets/LeanTween/Framework/LTSeq.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: totalDelay
    path: ../Assets/LeanTween/Framework/LTSeq.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float totalDelay
    return:
      type: System.Single
    content.vb: Public totalDelay As Single
- uid: Global.LTSeq.timeScale
  commentId: F:Global.LTSeq.timeScale
  id: timeScale
  parent: Global.LTSeq
  langs:
  - csharp
  - vb
  name: timeScale
  nameWithType: LTSeq.timeScale
  fullName: LTSeq.timeScale
  type: Field
  source:
    remote:
      path: Assets/LeanTween/Framework/LTSeq.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: timeScale
    path: ../Assets/LeanTween/Framework/LTSeq.cs
    startLine: 31
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float timeScale
    return:
      type: System.Single
    content.vb: Public timeScale As Single
- uid: Global.LTSeq.counter
  commentId: F:Global.LTSeq.counter
  id: counter
  parent: Global.LTSeq
  langs:
  - csharp
  - vb
  name: counter
  nameWithType: LTSeq.counter
  fullName: LTSeq.counter
  type: Field
  source:
    remote:
      path: Assets/LeanTween/Framework/LTSeq.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: counter
    path: ../Assets/LeanTween/Framework/LTSeq.cs
    startLine: 35
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public uint counter
    return:
      type: System.UInt32
    content.vb: Public counter As UInteger
- uid: Global.LTSeq.toggle
  commentId: F:Global.LTSeq.toggle
  id: toggle
  parent: Global.LTSeq
  langs:
  - csharp
  - vb
  name: toggle
  nameWithType: LTSeq.toggle
  fullName: LTSeq.toggle
  type: Field
  source:
    remote:
      path: Assets/LeanTween/Framework/LTSeq.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: toggle
    path: ../Assets/LeanTween/Framework/LTSeq.cs
    startLine: 37
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool toggle
    return:
      type: System.Boolean
    content.vb: Public toggle As Boolean
- uid: Global.LTSeq.id
  commentId: P:Global.LTSeq.id
  id: id
  parent: Global.LTSeq
  langs:
  - csharp
  - vb
  name: id
  nameWithType: LTSeq.id
  fullName: LTSeq.id
  type: Property
  source:
    remote:
      path: Assets/LeanTween/Framework/LTSeq.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: id
    path: ../Assets/LeanTween/Framework/LTSeq.cs
    startLine: 41
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int id { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property id As Integer
  overload: Global.LTSeq.id*
- uid: Global.LTSeq.reset
  commentId: M:Global.LTSeq.reset
  id: reset
  parent: Global.LTSeq
  langs:
  - csharp
  - vb
  name: reset()
  nameWithType: LTSeq.reset()
  fullName: LTSeq.reset()
  type: Method
  source:
    remote:
      path: Assets/LeanTween/Framework/LTSeq.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: reset
    path: ../Assets/LeanTween/Framework/LTSeq.cs
    startLine: 55
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void reset()
    content.vb: Public Sub reset()
  overload: Global.LTSeq.reset*
- uid: Global.LTSeq.init(System.UInt32,System.UInt32)
  commentId: M:Global.LTSeq.init(System.UInt32,System.UInt32)
  id: init(System.UInt32,System.UInt32)
  parent: Global.LTSeq
  langs:
  - csharp
  - vb
  name: init(uint, uint)
  nameWithType: LTSeq.init(uint, uint)
  fullName: LTSeq.init(uint, uint)
  type: Method
  source:
    remote:
      path: Assets/LeanTween/Framework/LTSeq.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: init
    path: ../Assets/LeanTween/Framework/LTSeq.cs
    startLine: 61
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void init(uint id, uint global_counter)
    parameters:
    - id: id
      type: System.UInt32
    - id: global_counter
      type: System.UInt32
    content.vb: Public Sub init(id As UInteger, global_counter As UInteger)
  overload: Global.LTSeq.init*
  nameWithType.vb: LTSeq.init(UInteger, UInteger)
  fullName.vb: LTSeq.init(UInteger, UInteger)
  name.vb: init(UInteger, UInteger)
- uid: Global.LTSeq.append(System.Single)
  commentId: M:Global.LTSeq.append(System.Single)
  id: append(System.Single)
  parent: Global.LTSeq
  langs:
  - csharp
  - vb
  name: append(float)
  nameWithType: LTSeq.append(float)
  fullName: LTSeq.append(float)
  type: Method
  source:
    remote:
      path: Assets/LeanTween/Framework/LTSeq.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: append
    path: ../Assets/LeanTween/Framework/LTSeq.cs
    startLine: 102
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public LTSeq append(float delay)
    parameters:
    - id: delay
      type: System.Single
    return:
      type: Global.LTSeq
    content.vb: Public Function append(delay As Single) As LTSeq
  overload: Global.LTSeq.append*
  nameWithType.vb: LTSeq.append(Single)
  fullName.vb: LTSeq.append(Single)
  name.vb: append(Single)
- uid: Global.LTSeq.append(System.Action)
  commentId: M:Global.LTSeq.append(System.Action)
  id: append(System.Action)
  parent: Global.LTSeq
  langs:
  - csharp
  - vb
  name: append(Action)
  nameWithType: LTSeq.append(Action)
  fullName: LTSeq.append(System.Action)
  type: Method
  source:
    remote:
      path: Assets/LeanTween/Framework/LTSeq.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: append
    path: ../Assets/LeanTween/Framework/LTSeq.cs
    startLine: 123
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public LTSeq append(Action callback)
    parameters:
    - id: callback
      type: System.Action
    return:
      type: Global.LTSeq
    content.vb: Public Function append(callback As Action) As LTSeq
  overload: Global.LTSeq.append*
- uid: Global.LTSeq.append(System.Action{System.Object},System.Object)
  commentId: M:Global.LTSeq.append(System.Action{System.Object},System.Object)
  id: append(System.Action{System.Object},System.Object)
  parent: Global.LTSeq
  langs:
  - csharp
  - vb
  name: append(Action<object>, object)
  nameWithType: LTSeq.append(Action<object>, object)
  fullName: LTSeq.append(System.Action<object>, object)
  type: Method
  source:
    remote:
      path: Assets/LeanTween/Framework/LTSeq.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: append
    path: ../Assets/LeanTween/Framework/LTSeq.cs
    startLine: 145
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public LTSeq append(Action<object> callback, object obj)
    parameters:
    - id: callback
      type: System.Action{System.Object}
    - id: obj
      type: System.Object
    return:
      type: Global.LTSeq
    content.vb: Public Function append(callback As Action(Of Object), obj As Object) As LTSeq
  overload: Global.LTSeq.append*
  nameWithType.vb: LTSeq.append(Action(Of Object), Object)
  fullName.vb: LTSeq.append(System.Action(Of Object), Object)
  name.vb: append(Action(Of Object), Object)
- uid: Global.LTSeq.append(UnityEngine.GameObject,System.Action)
  commentId: M:Global.LTSeq.append(UnityEngine.GameObject,System.Action)
  id: append(UnityEngine.GameObject,System.Action)
  parent: Global.LTSeq
  langs:
  - csharp
  - vb
  name: append(GameObject, Action)
  nameWithType: LTSeq.append(GameObject, Action)
  fullName: LTSeq.append(UnityEngine.GameObject, System.Action)
  type: Method
  source:
    remote:
      path: Assets/LeanTween/Framework/LTSeq.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: append
    path: ../Assets/LeanTween/Framework/LTSeq.cs
    startLine: 151
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public LTSeq append(GameObject gameObject, Action callback)
    parameters:
    - id: gameObject
      type: UnityEngine.GameObject
    - id: callback
      type: System.Action
    return:
      type: Global.LTSeq
    content.vb: Public Function append(gameObject As GameObject, callback As Action) As LTSeq
  overload: Global.LTSeq.append*
- uid: Global.LTSeq.append(UnityEngine.GameObject,System.Action{System.Object},System.Object)
  commentId: M:Global.LTSeq.append(UnityEngine.GameObject,System.Action{System.Object},System.Object)
  id: append(UnityEngine.GameObject,System.Action{System.Object},System.Object)
  parent: Global.LTSeq
  langs:
  - csharp
  - vb
  name: append(GameObject, Action<object>, object)
  nameWithType: LTSeq.append(GameObject, Action<object>, object)
  fullName: LTSeq.append(UnityEngine.GameObject, System.Action<object>, object)
  type: Method
  source:
    remote:
      path: Assets/LeanTween/Framework/LTSeq.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: append
    path: ../Assets/LeanTween/Framework/LTSeq.cs
    startLine: 157
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public LTSeq append(GameObject gameObject, Action<object> callback, object obj)
    parameters:
    - id: gameObject
      type: UnityEngine.GameObject
    - id: callback
      type: System.Action{System.Object}
    - id: obj
      type: System.Object
    return:
      type: Global.LTSeq
    content.vb: Public Function append(gameObject As GameObject, callback As Action(Of Object), obj As Object) As LTSeq
  overload: Global.LTSeq.append*
  nameWithType.vb: LTSeq.append(GameObject, Action(Of Object), Object)
  fullName.vb: LTSeq.append(UnityEngine.GameObject, System.Action(Of Object), Object)
  name.vb: append(GameObject, Action(Of Object), Object)
- uid: Global.LTSeq.append(LTDescr)
  commentId: M:Global.LTSeq.append(LTDescr)
  id: append(LTDescr)
  parent: Global.LTSeq
  langs:
  - csharp
  - vb
  name: append(LTDescr)
  nameWithType: LTSeq.append(LTDescr)
  fullName: LTSeq.append(LTDescr)
  type: Method
  source:
    remote:
      path: Assets/LeanTween/Framework/LTSeq.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: append
    path: ../Assets/LeanTween/Framework/LTSeq.cs
    startLine: 173
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public LTSeq append(LTDescr tween)
    parameters:
    - id: tween
      type: Global.LTDescr
    return:
      type: Global.LTSeq
    content.vb: Public Function append(tween As LTDescr) As LTSeq
  overload: Global.LTSeq.append*
- uid: Global.LTSeq.insert(LTDescr)
  commentId: M:Global.LTSeq.insert(LTDescr)
  id: insert(LTDescr)
  parent: Global.LTSeq
  langs:
  - csharp
  - vb
  name: insert(LTDescr)
  nameWithType: LTSeq.insert(LTDescr)
  fullName: LTSeq.insert(LTDescr)
  type: Method
  source:
    remote:
      path: Assets/LeanTween/Framework/LTSeq.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: insert
    path: ../Assets/LeanTween/Framework/LTSeq.cs
    startLine: 185
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public LTSeq insert(LTDescr tween)
    parameters:
    - id: tween
      type: Global.LTDescr
    return:
      type: Global.LTSeq
    content.vb: Public Function insert(tween As LTDescr) As LTSeq
  overload: Global.LTSeq.insert*
- uid: Global.LTSeq.setScale(System.Single)
  commentId: M:Global.LTSeq.setScale(System.Single)
  id: setScale(System.Single)
  parent: Global.LTSeq
  langs:
  - csharp
  - vb
  name: setScale(float)
  nameWithType: LTSeq.setScale(float)
  fullName: LTSeq.setScale(float)
  type: Method
  source:
    remote:
      path: Assets/LeanTween/Framework/LTSeq.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: setScale
    path: ../Assets/LeanTween/Framework/LTSeq.cs
    startLine: 194
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public LTSeq setScale(float timeScale)
    parameters:
    - id: timeScale
      type: System.Single
    return:
      type: Global.LTSeq
    content.vb: Public Function setScale(timeScale As Single) As LTSeq
  overload: Global.LTSeq.setScale*
  nameWithType.vb: LTSeq.setScale(Single)
  fullName.vb: LTSeq.setScale(Single)
  name.vb: setScale(Single)
- uid: Global.LTSeq.reverse
  commentId: M:Global.LTSeq.reverse
  id: reverse
  parent: Global.LTSeq
  langs:
  - csharp
  - vb
  name: reverse()
  nameWithType: LTSeq.reverse()
  fullName: LTSeq.reverse()
  type: Method
  source:
    remote:
      path: Assets/LeanTween/Framework/LTSeq.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: reverse
    path: ../Assets/LeanTween/Framework/LTSeq.cs
    startLine: 219
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public LTSeq reverse()
    return:
      type: Global.LTSeq
    content.vb: Public Function reverse() As LTSeq
  overload: Global.LTSeq.reverse*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.LTSeq
  commentId: T:Global.LTSeq
  name: LTSeq
  nameWithType: LTSeq
  fullName: LTSeq
- uid: Global.LTDescr
  commentId: T:Global.LTDescr
  name: LTDescr
  nameWithType: LTDescr
  fullName: LTDescr
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.LTSeq.id*
  commentId: Overload:Global.LTSeq.id
  name: id
  nameWithType: LTSeq.id
  fullName: LTSeq.id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.LTSeq.reset*
  commentId: Overload:Global.LTSeq.reset
  name: reset
  nameWithType: LTSeq.reset
  fullName: LTSeq.reset
- uid: Global.LTSeq.init*
  commentId: Overload:Global.LTSeq.init
  name: init
  nameWithType: LTSeq.init
  fullName: LTSeq.init
- uid: Global.LTSeq.append*
  commentId: Overload:Global.LTSeq.append
  name: append
  nameWithType: LTSeq.append
  fullName: LTSeq.append
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Action{System.Object}
  commentId: T:System.Action{System.Object}
  parent: System
  definition: System.Action`1
  name: Action<object>
  nameWithType: Action<object>
  fullName: System.Action<object>
  nameWithType.vb: Action(Of Object)
  fullName.vb: System.Action(Of Object)
  name.vb: Action(Of Object)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.LTSeq.insert*
  commentId: Overload:Global.LTSeq.insert
  name: insert
  nameWithType: LTSeq.insert
  fullName: LTSeq.insert
- uid: Global.LTSeq.setScale*
  commentId: Overload:Global.LTSeq.setScale
  name: setScale
  nameWithType: LTSeq.setScale
  fullName: LTSeq.setScale
- uid: Global.LTSeq.reverse*
  commentId: Overload:Global.LTSeq.reverse
  name: reverse
  nameWithType: LTSeq.reverse
  fullName: LTSeq.reverse
