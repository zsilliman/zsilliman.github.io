### YamlMime:ManagedReference
items:
- uid: Global.DialogueInteractionController.AscendStateDependenciesWrapper
  commentId: T:Global.DialogueInteractionController.AscendStateDependenciesWrapper
  id: DialogueInteractionController.AscendStateDependenciesWrapper
  parent: Global
  children:
  - Global.DialogueInteractionController.AscendStateDependenciesWrapper.Dependencies
  langs:
  - csharp
  - vb
  name: DialogueInteractionController.AscendStateDependenciesWrapper
  nameWithType: DialogueInteractionController.AscendStateDependenciesWrapper
  fullName: DialogueInteractionController.AscendStateDependenciesWrapper
  type: Struct
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Controllers/DialogueInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AscendStateDependenciesWrapper
    path: ../Assets/Objects & Components/World/Interactable/Controllers/DialogueInteractionController.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public struct DialogueInteractionController.AscendStateDependenciesWrapper
    content.vb: >-
      <Serializable>

      Public Structure DialogueInteractionController.AscendStateDependenciesWrapper
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.DialogueInteractionController.AscendStateDependenciesWrapper.Dependencies
  commentId: F:Global.DialogueInteractionController.AscendStateDependenciesWrapper.Dependencies
  id: Dependencies
  parent: Global.DialogueInteractionController.AscendStateDependenciesWrapper
  langs:
  - csharp
  - vb
  name: Dependencies
  nameWithType: DialogueInteractionController.AscendStateDependenciesWrapper.Dependencies
  fullName: DialogueInteractionController.AscendStateDependenciesWrapper.Dependencies
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Controllers/DialogueInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Dependencies
    path: ../Assets/Objects & Components/World/Interactable/Controllers/DialogueInteractionController.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public List<AscendStateDependency> Dependencies
    return:
      type: System.Collections.Generic.List{AscendStateDependency}
    content.vb: >-
      <SerializeField>

      Public Dependencies As List(Of AscendStateDependency)
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
references:
- uid: Global
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.Collections.Generic.List{AscendStateDependency}
  commentId: T:System.Collections.Generic.List{AscendStateDependency}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<AscendStateDependency>
  nameWithType: List<AscendStateDependency>
  fullName: System.Collections.Generic.List<AscendStateDependency>
  nameWithType.vb: List(Of AscendStateDependency)
  fullName.vb: System.Collections.Generic.List(Of AscendStateDependency)
  name.vb: List(Of AscendStateDependency)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.AscendStateDependency
    name: AscendStateDependency
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.AscendStateDependency
    name: AscendStateDependency
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
