### YamlMime:ManagedReference
items:
- uid: Global.SaveData
  commentId: T:Global.SaveData
  id: SaveData
  parent: Global
  children:
  - Global.SaveData.AddSceneSaveData(SceneSaveData)
  - Global.SaveData.GameStateSave
  - Global.SaveData.GetSceneSaveData(System.String)
  - Global.SaveData.GetSceneSaveIndex(System.String)
  - Global.SaveData.PlayerData
  - Global.SaveData.save
  - Global.SaveData.SceneSaves
  - Global.SaveData.ScenesToDebugString
  - Global.SaveData.SetSaveData(SaveData)
  - Global.SaveData.ToDebugString
  langs:
  - csharp
  - vb
  name: SaveData
  nameWithType: SaveData
  fullName: SaveData
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/SaveGame/SaveData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SaveData
    path: ../Assets/Objects & Components/SaveGame/SaveData.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nA struct that holds all the information in a save-game file\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class SaveData
    content.vb: >-
      <Serializable>

      Public Class SaveData
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.SaveData.save
  commentId: P:Global.SaveData.save
  id: save
  parent: Global.SaveData
  langs:
  - csharp
  - vb
  name: save
  nameWithType: SaveData.save
  fullName: SaveData.save
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/SaveGame/SaveData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: save
    path: ../Assets/Objects & Components/SaveGame/SaveData.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static SaveData save { get; }
    parameters: []
    return:
      type: Global.SaveData
    content.vb: Public Shared ReadOnly Property save As SaveData
  overload: Global.SaveData.save*
- uid: Global.SaveData.PlayerData
  commentId: F:Global.SaveData.PlayerData
  id: PlayerData
  parent: Global.SaveData
  langs:
  - csharp
  - vb
  name: PlayerData
  nameWithType: SaveData.PlayerData
  fullName: SaveData.PlayerData
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/SaveGame/SaveData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PlayerData
    path: ../Assets/Objects & Components/SaveGame/SaveData.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public Player.PlayerSaveData PlayerData
    return:
      type: Global.Player.PlayerSaveData
    content.vb: >-
      <SerializeField>

      Public PlayerData As Player.PlayerSaveData
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.SaveData.SceneSaves
  commentId: F:Global.SaveData.SceneSaves
  id: SceneSaves
  parent: Global.SaveData
  langs:
  - csharp
  - vb
  name: SceneSaves
  nameWithType: SaveData.SceneSaves
  fullName: SaveData.SceneSaves
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/SaveGame/SaveData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SceneSaves
    path: ../Assets/Objects & Components/SaveGame/SaveData.cs
    startLine: 31
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public List<SceneSaveData> SceneSaves
    return:
      type: System.Collections.Generic.List{SceneSaveData}
    content.vb: >-
      <SerializeField>

      Public SceneSaves As List(Of SceneSaveData)
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.SaveData.GameStateSave
  commentId: F:Global.SaveData.GameStateSave
  id: GameStateSave
  parent: Global.SaveData
  langs:
  - csharp
  - vb
  name: GameStateSave
  nameWithType: SaveData.GameStateSave
  fullName: SaveData.GameStateSave
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/SaveGame/SaveData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GameStateSave
    path: ../Assets/Objects & Components/SaveGame/SaveData.cs
    startLine: 33
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public StateManager.StateManagerSaveData GameStateSave
    return:
      type: Global.StateManager.StateManagerSaveData
    content.vb: >-
      <SerializeField>

      Public GameStateSave As StateManager.StateManagerSaveData
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.SaveData.GetSceneSaveIndex(System.String)
  commentId: M:Global.SaveData.GetSceneSaveIndex(System.String)
  id: GetSceneSaveIndex(System.String)
  parent: Global.SaveData
  langs:
  - csharp
  - vb
  name: GetSceneSaveIndex(string)
  nameWithType: SaveData.GetSceneSaveIndex(string)
  fullName: SaveData.GetSceneSaveIndex(string)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/SaveGame/SaveData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetSceneSaveIndex
    path: ../Assets/Objects & Components/SaveGame/SaveData.cs
    startLine: 42
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nIndexOf operation for the scene save data given the scene&apos;s path\n"
  example: []
  syntax:
    content: public int GetSceneSaveIndex(string scenePath)
    parameters:
    - id: scenePath
      type: System.String
      description: path to scene asset
    return:
      type: System.Int32
      description: -1 if not found, or the index of the found scene save data
    content.vb: Public Function GetSceneSaveIndex(scenePath As String) As Integer
  overload: Global.SaveData.GetSceneSaveIndex*
  nameWithType.vb: SaveData.GetSceneSaveIndex(String)
  fullName.vb: SaveData.GetSceneSaveIndex(String)
  name.vb: GetSceneSaveIndex(String)
- uid: Global.SaveData.AddSceneSaveData(SceneSaveData)
  commentId: M:Global.SaveData.AddSceneSaveData(SceneSaveData)
  id: AddSceneSaveData(SceneSaveData)
  parent: Global.SaveData
  langs:
  - csharp
  - vb
  name: AddSceneSaveData(SceneSaveData)
  nameWithType: SaveData.AddSceneSaveData(SceneSaveData)
  fullName: SaveData.AddSceneSaveData(SceneSaveData)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/SaveGame/SaveData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AddSceneSaveData
    path: ../Assets/Objects & Components/SaveGame/SaveData.cs
    startLine: 52
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void AddSceneSaveData(SceneSaveData data)
    parameters:
    - id: data
      type: Global.SceneSaveData
    content.vb: Public Sub AddSceneSaveData(data As SceneSaveData)
  overload: Global.SaveData.AddSceneSaveData*
- uid: Global.SaveData.GetSceneSaveData(System.String)
  commentId: M:Global.SaveData.GetSceneSaveData(System.String)
  id: GetSceneSaveData(System.String)
  parent: Global.SaveData
  langs:
  - csharp
  - vb
  name: GetSceneSaveData(string)
  nameWithType: SaveData.GetSceneSaveData(string)
  fullName: SaveData.GetSceneSaveData(string)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/SaveGame/SaveData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetSceneSaveData
    path: ../Assets/Objects & Components/SaveGame/SaveData.cs
    startLine: 69
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public SceneSaveData GetSceneSaveData(string scenePath)
    parameters:
    - id: scenePath
      type: System.String
    return:
      type: Global.SceneSaveData
    content.vb: Public Function GetSceneSaveData(scenePath As String) As SceneSaveData
  overload: Global.SaveData.GetSceneSaveData*
  nameWithType.vb: SaveData.GetSceneSaveData(String)
  fullName.vb: SaveData.GetSceneSaveData(String)
  name.vb: GetSceneSaveData(String)
- uid: Global.SaveData.ScenesToDebugString
  commentId: M:Global.SaveData.ScenesToDebugString
  id: ScenesToDebugString
  parent: Global.SaveData
  langs:
  - csharp
  - vb
  name: ScenesToDebugString()
  nameWithType: SaveData.ScenesToDebugString()
  fullName: SaveData.ScenesToDebugString()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/SaveGame/SaveData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ScenesToDebugString
    path: ../Assets/Objects & Components/SaveGame/SaveData.cs
    startLine: 77
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public string ScenesToDebugString()
    return:
      type: System.String
    content.vb: Public Function ScenesToDebugString() As String
  overload: Global.SaveData.ScenesToDebugString*
- uid: Global.SaveData.ToDebugString
  commentId: M:Global.SaveData.ToDebugString
  id: ToDebugString
  parent: Global.SaveData
  langs:
  - csharp
  - vb
  name: ToDebugString()
  nameWithType: SaveData.ToDebugString()
  fullName: SaveData.ToDebugString()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/SaveGame/SaveData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ToDebugString
    path: ../Assets/Objects & Components/SaveGame/SaveData.cs
    startLine: 87
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public string ToDebugString()
    return:
      type: System.String
    content.vb: Public Function ToDebugString() As String
  overload: Global.SaveData.ToDebugString*
- uid: Global.SaveData.SetSaveData(SaveData)
  commentId: M:Global.SaveData.SetSaveData(SaveData)
  id: SetSaveData(SaveData)
  parent: Global.SaveData
  langs:
  - csharp
  - vb
  name: SetSaveData(SaveData)
  nameWithType: SaveData.SetSaveData(SaveData)
  fullName: SaveData.SetSaveData(SaveData)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/SaveGame/SaveData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetSaveData
    path: ../Assets/Objects & Components/SaveGame/SaveData.cs
    startLine: 97
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nSets the save data static references. Used when loading a save from file.\n"
  example: []
  syntax:
    content: public static void SetSaveData(SaveData saveData)
    parameters:
    - id: saveData
      type: Global.SaveData
      description: ''
    content.vb: Public Shared Sub SetSaveData(saveData As SaveData)
  overload: Global.SaveData.SetSaveData*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.SaveData.save*
  commentId: Overload:Global.SaveData.save
  name: save
  nameWithType: SaveData.save
  fullName: SaveData.save
- uid: Global.SaveData
  commentId: T:Global.SaveData
  name: SaveData
  nameWithType: SaveData
  fullName: SaveData
- uid: Global.Player.PlayerSaveData
  commentId: T:Global.Player.PlayerSaveData
  name: Player.PlayerSaveData
  nameWithType: Player.PlayerSaveData
  fullName: Player.PlayerSaveData
  spec.csharp:
  - uid: Global.Player
    name: Player
  - name: .
  - uid: Global.Player.PlayerSaveData
    name: PlayerSaveData
  spec.vb:
  - uid: Global.Player
    name: Player
  - name: .
  - uid: Global.Player.PlayerSaveData
    name: PlayerSaveData
- uid: System.Collections.Generic.List{SceneSaveData}
  commentId: T:System.Collections.Generic.List{SceneSaveData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SceneSaveData>
  nameWithType: List<SceneSaveData>
  fullName: System.Collections.Generic.List<SceneSaveData>
  nameWithType.vb: List(Of SceneSaveData)
  fullName.vb: System.Collections.Generic.List(Of SceneSaveData)
  name.vb: List(Of SceneSaveData)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.SceneSaveData
    name: SceneSaveData
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.SceneSaveData
    name: SceneSaveData
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: Global.StateManager.StateManagerSaveData
  commentId: T:Global.StateManager.StateManagerSaveData
  name: StateManager.StateManagerSaveData
  nameWithType: StateManager.StateManagerSaveData
  fullName: StateManager.StateManagerSaveData
  spec.csharp:
  - uid: Global.StateManager
    name: StateManager
  - name: .
  - uid: Global.StateManager.StateManagerSaveData
    name: StateManagerSaveData
  spec.vb:
  - uid: Global.StateManager
    name: StateManager
  - name: .
  - uid: Global.StateManager.StateManagerSaveData
    name: StateManagerSaveData
- uid: Global.SaveData.GetSceneSaveIndex*
  commentId: Overload:Global.SaveData.GetSceneSaveIndex
  name: GetSceneSaveIndex
  nameWithType: SaveData.GetSceneSaveIndex
  fullName: SaveData.GetSceneSaveIndex
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.SaveData.AddSceneSaveData*
  commentId: Overload:Global.SaveData.AddSceneSaveData
  name: AddSceneSaveData
  nameWithType: SaveData.AddSceneSaveData
  fullName: SaveData.AddSceneSaveData
- uid: Global.SceneSaveData
  commentId: T:Global.SceneSaveData
  name: SceneSaveData
  nameWithType: SceneSaveData
  fullName: SceneSaveData
- uid: Global.SaveData.GetSceneSaveData*
  commentId: Overload:Global.SaveData.GetSceneSaveData
  name: GetSceneSaveData
  nameWithType: SaveData.GetSceneSaveData
  fullName: SaveData.GetSceneSaveData
- uid: Global.SaveData.ScenesToDebugString*
  commentId: Overload:Global.SaveData.ScenesToDebugString
  name: ScenesToDebugString
  nameWithType: SaveData.ScenesToDebugString
  fullName: SaveData.ScenesToDebugString
- uid: Global.SaveData.ToDebugString*
  commentId: Overload:Global.SaveData.ToDebugString
  name: ToDebugString
  nameWithType: SaveData.ToDebugString
  fullName: SaveData.ToDebugString
- uid: Global.SaveData.SetSaveData*
  commentId: Overload:Global.SaveData.SetSaveData
  name: SetSaveData
  nameWithType: SaveData.SetSaveData
  fullName: SaveData.SetSaveData
