### YamlMime:ManagedReference
items:
- uid: Global.AuraTailMovementController.TailMovementProperties
  commentId: T:Global.AuraTailMovementController.TailMovementProperties
  id: AuraTailMovementController.TailMovementProperties
  parent: Global
  children:
  - Global.AuraTailMovementController.TailMovementProperties.MaxLength
  - Global.AuraTailMovementController.TailMovementProperties.MaxNodeCount
  - Global.AuraTailMovementController.TailMovementProperties.MinTravelDistance
  - Global.AuraTailMovementController.TailMovementProperties.MinVertexSpacing
  - Global.AuraTailMovementController.TailMovementProperties.TailLifetime
  - Global.AuraTailMovementController.TailMovementProperties.useMaxTailLength
  - Global.AuraTailMovementController.TailMovementProperties.useTailLifetime
  langs:
  - csharp
  - vb
  name: AuraTailMovementController.TailMovementProperties
  nameWithType: AuraTailMovementController.TailMovementProperties
  fullName: AuraTailMovementController.TailMovementProperties
  type: Struct
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraTailMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TailMovementProperties
    path: ../Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraTailMovementController.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public struct AuraTailMovementController.TailMovementProperties
    content.vb: >-
      <Serializable>

      Public Structure AuraTailMovementController.TailMovementProperties
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.AuraTailMovementController.TailMovementProperties.MinTravelDistance
  commentId: F:Global.AuraTailMovementController.TailMovementProperties.MinTravelDistance
  id: MinTravelDistance
  parent: Global.AuraTailMovementController.TailMovementProperties
  langs:
  - csharp
  - vb
  name: MinTravelDistance
  nameWithType: AuraTailMovementController.TailMovementProperties.MinTravelDistance
  fullName: AuraTailMovementController.TailMovementProperties.MinTravelDistance
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraTailMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MinTravelDistance
    path: ../Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraTailMovementController.cs
    startLine: 20
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Object must travel this distance (in squiggles) before a new vertex can be placed")]

      public float MinTravelDistance
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("Object must travel this distance (in squiggles) before a new vertex can be placed")>

      Public MinTravelDistance As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Object must travel this distance (in squiggles) before a new vertex can be placed
- uid: Global.AuraTailMovementController.TailMovementProperties.MinVertexSpacing
  commentId: F:Global.AuraTailMovementController.TailMovementProperties.MinVertexSpacing
  id: MinVertexSpacing
  parent: Global.AuraTailMovementController.TailMovementProperties
  langs:
  - csharp
  - vb
  name: MinVertexSpacing
  nameWithType: AuraTailMovementController.TailMovementProperties.MinVertexSpacing
  fullName: AuraTailMovementController.TailMovementProperties.MinVertexSpacing
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraTailMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MinVertexSpacing
    path: ../Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraTailMovementController.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Do not spawn vertices that are within this distance of the previous vertex")]

      public float MinVertexSpacing
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("Do not spawn vertices that are within this distance of the previous vertex")>

      Public MinVertexSpacing As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Do not spawn vertices that are within this distance of the previous vertex
- uid: Global.AuraTailMovementController.TailMovementProperties.MaxNodeCount
  commentId: F:Global.AuraTailMovementController.TailMovementProperties.MaxNodeCount
  id: MaxNodeCount
  parent: Global.AuraTailMovementController.TailMovementProperties
  langs:
  - csharp
  - vb
  name: MaxNodeCount
  nameWithType: AuraTailMovementController.TailMovementProperties.MaxNodeCount
  fullName: AuraTailMovementController.TailMovementProperties.MaxNodeCount
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraTailMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxNodeCount
    path: ../Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraTailMovementController.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Maximum number of allowed vertices to ensure this aura does not consume too much CPU")]

      public int MaxNodeCount
    return:
      type: System.Int32
    content.vb: >-
      <Tooltip("Maximum number of allowed vertices to ensure this aura does not consume too much CPU")>

      Public MaxNodeCount As Integer
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Maximum number of allowed vertices to ensure this aura does not consume too much CPU
- uid: Global.AuraTailMovementController.TailMovementProperties.useMaxTailLength
  commentId: F:Global.AuraTailMovementController.TailMovementProperties.useMaxTailLength
  id: useMaxTailLength
  parent: Global.AuraTailMovementController.TailMovementProperties
  langs:
  - csharp
  - vb
  name: useMaxTailLength
  nameWithType: AuraTailMovementController.TailMovementProperties.useMaxTailLength
  fullName: AuraTailMovementController.TailMovementProperties.useMaxTailLength
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraTailMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: useMaxTailLength
    path: ../Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraTailMovementController.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Should max tail length")]

      public bool useMaxTailLength
    return:
      type: System.Boolean
    content.vb: >-
      <Tooltip("Should max tail length")>

      Public useMaxTailLength As Boolean
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Should max tail length
- uid: Global.AuraTailMovementController.TailMovementProperties.MaxLength
  commentId: F:Global.AuraTailMovementController.TailMovementProperties.MaxLength
  id: MaxLength
  parent: Global.AuraTailMovementController.TailMovementProperties
  langs:
  - csharp
  - vb
  name: MaxLength
  nameWithType: AuraTailMovementController.TailMovementProperties.MaxLength
  fullName: AuraTailMovementController.TailMovementProperties.MaxLength
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraTailMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxLength
    path: ../Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraTailMovementController.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("useMaxTailLength", 1)]

      [Tooltip("Ensures the tail does not exceed a particular distance")]

      public float MaxLength
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("useMaxTailLength", 1)>

      <Tooltip("Ensures the tail does not exceed a particular distance")>

      Public MaxLength As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: useMaxTailLength
    - type: System.Int32
      value: 1
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Ensures the tail does not exceed a particular distance
- uid: Global.AuraTailMovementController.TailMovementProperties.useTailLifetime
  commentId: F:Global.AuraTailMovementController.TailMovementProperties.useTailLifetime
  id: useTailLifetime
  parent: Global.AuraTailMovementController.TailMovementProperties
  langs:
  - csharp
  - vb
  name: useTailLifetime
  nameWithType: AuraTailMovementController.TailMovementProperties.useTailLifetime
  fullName: AuraTailMovementController.TailMovementProperties.useTailLifetime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraTailMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: useTailLifetime
    path: ../Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraTailMovementController.cs
    startLine: 32
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Should tail fade over time")]

      public bool useTailLifetime
    return:
      type: System.Boolean
    content.vb: >-
      <Tooltip("Should tail fade over time")>

      Public useTailLifetime As Boolean
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Should tail fade over time
- uid: Global.AuraTailMovementController.TailMovementProperties.TailLifetime
  commentId: F:Global.AuraTailMovementController.TailMovementProperties.TailLifetime
  id: TailLifetime
  parent: Global.AuraTailMovementController.TailMovementProperties
  langs:
  - csharp
  - vb
  name: TailLifetime
  nameWithType: AuraTailMovementController.TailMovementProperties.TailLifetime
  fullName: AuraTailMovementController.TailMovementProperties.TailLifetime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraTailMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TailLifetime
    path: ../Assets/Objects & Components/Entities/Auras/AuraMerging/AuraMovement/AuraTailMovementController.cs
    startLine: 34
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("useTailLifetime", 1)]

      [Tooltip("How long a particular location along the tail should exist")]

      public float TailLifetime
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("useTailLifetime", 1)>

      <Tooltip("How long a particular location along the tail should exist")>

      Public TailLifetime As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: useTailLifetime
    - type: System.Int32
      value: 1
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: How long a particular location along the tail should exist
references:
- uid: Global
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
