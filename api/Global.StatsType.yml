### YamlMime:ManagedReference
items:
- uid: Global.StatsType
  commentId: T:Global.StatsType
  id: StatsType
  parent: Global
  children:
  - Global.StatsType.Damage
  - Global.StatsType.Health
  - Global.StatsType.None
  - Global.StatsType.Stamina
  langs:
  - csharp
  - vb
  name: StatsType
  nameWithType: StatsType
  fullName: StatsType
  type: Enum
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: StatsType
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 57
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public enum StatsType
    content.vb: Public Enum StatsType
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.StatsType.None
  commentId: F:Global.StatsType.None
  id: None
  parent: Global.StatsType
  langs:
  - csharp
  - vb
  name: None
  nameWithType: StatsType.None
  fullName: StatsType.None
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: None
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 58
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: None = 0
    return:
      type: Global.StatsType
- uid: Global.StatsType.Health
  commentId: F:Global.StatsType.Health
  id: Health
  parent: Global.StatsType
  langs:
  - csharp
  - vb
  name: Health
  nameWithType: StatsType.Health
  fullName: StatsType.Health
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Health
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 59
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: Health = 1
    return:
      type: Global.StatsType
- uid: Global.StatsType.Stamina
  commentId: F:Global.StatsType.Stamina
  id: Stamina
  parent: Global.StatsType
  langs:
  - csharp
  - vb
  name: Stamina
  nameWithType: StatsType.Stamina
  fullName: StatsType.Stamina
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Stamina
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 60
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: Stamina = 2
    return:
      type: Global.StatsType
- uid: Global.StatsType.Damage
  commentId: F:Global.StatsType.Damage
  id: Damage
  parent: Global.StatsType
  langs:
  - csharp
  - vb
  name: Damage
  nameWithType: StatsType.Damage
  fullName: StatsType.Damage
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Damage
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 61
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: Damage = 3
    return:
      type: Global.StatsType
references:
- uid: Global
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.StatsType
  commentId: T:Global.StatsType
  name: StatsType
  nameWithType: StatsType
  fullName: StatsType
