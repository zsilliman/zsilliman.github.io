### YamlMime:ManagedReference
items:
- uid: Global.ParallaxLayerFitRule
  commentId: T:Global.ParallaxLayerFitRule
  id: ParallaxLayerFitRule
  parent: Global
  children:
  - Global.ParallaxLayerFitRule.#ctor(ParallaxWrapMode,ParallaxFitMode,System.Single,System.Single)
  - Global.ParallaxLayerFitRule.fitMode
  - Global.ParallaxLayerFitRule.offsetPosition
  - Global.ParallaxLayerFitRule.preferredDimension
  - Global.ParallaxLayerFitRule.wrapMode
  langs:
  - csharp
  - vb
  name: ParallaxLayerFitRule
  nameWithType: ParallaxLayerFitRule
  fullName: ParallaxLayerFitRule
  type: Struct
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Parallax/SectionParallax.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ParallaxLayerFitRule
    path: ../Assets/Objects & Components/World/Section/Parallax/SectionParallax.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public struct ParallaxLayerFitRule
    content.vb: >-
      <Serializable>

      Public Structure ParallaxLayerFitRule
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.ParallaxLayerFitRule.wrapMode
  commentId: F:Global.ParallaxLayerFitRule.wrapMode
  id: wrapMode
  parent: Global.ParallaxLayerFitRule
  langs:
  - csharp
  - vb
  name: wrapMode
  nameWithType: ParallaxLayerFitRule.wrapMode
  fullName: ParallaxLayerFitRule.wrapMode
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Parallax/SectionParallax.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: wrapMode
    path: ../Assets/Objects & Components/World/Section/Parallax/SectionParallax.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public ParallaxWrapMode wrapMode
    return:
      type: Global.ParallaxWrapMode
    content.vb: >-
      <SerializeField>

      Public wrapMode As ParallaxWrapMode
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.ParallaxLayerFitRule.fitMode
  commentId: F:Global.ParallaxLayerFitRule.fitMode
  id: fitMode
  parent: Global.ParallaxLayerFitRule
  langs:
  - csharp
  - vb
  name: fitMode
  nameWithType: ParallaxLayerFitRule.fitMode
  fullName: ParallaxLayerFitRule.fitMode
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Parallax/SectionParallax.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: fitMode
    path: ../Assets/Objects & Components/World/Section/Parallax/SectionParallax.cs
    startLine: 21
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public ParallaxFitMode fitMode
    return:
      type: Global.ParallaxFitMode
    content.vb: >-
      <SerializeField>

      Public fitMode As ParallaxFitMode
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.ParallaxLayerFitRule.preferredDimension
  commentId: F:Global.ParallaxLayerFitRule.preferredDimension
  id: preferredDimension
  parent: Global.ParallaxLayerFitRule
  langs:
  - csharp
  - vb
  name: preferredDimension
  nameWithType: ParallaxLayerFitRule.preferredDimension
  fullName: ParallaxLayerFitRule.preferredDimension
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Parallax/SectionParallax.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: preferredDimension
    path: ../Assets/Objects & Components/World/Section/Parallax/SectionParallax.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("fitMode", 0)]

      public float preferredDimension
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("fitMode", 0)>

      Public preferredDimension As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: fitMode
    - type: System.Int32
      value: 0
- uid: Global.ParallaxLayerFitRule.offsetPosition
  commentId: F:Global.ParallaxLayerFitRule.offsetPosition
  id: offsetPosition
  parent: Global.ParallaxLayerFitRule
  langs:
  - csharp
  - vb
  name: offsetPosition
  nameWithType: ParallaxLayerFitRule.offsetPosition
  fullName: ParallaxLayerFitRule.offsetPosition
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Parallax/SectionParallax.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: offsetPosition
    path: ../Assets/Objects & Components/World/Section/Parallax/SectionParallax.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float offsetPosition
    return:
      type: System.Single
    content.vb: Public offsetPosition As Single
- uid: Global.ParallaxLayerFitRule.#ctor(ParallaxWrapMode,ParallaxFitMode,System.Single,System.Single)
  commentId: M:Global.ParallaxLayerFitRule.#ctor(ParallaxWrapMode,ParallaxFitMode,System.Single,System.Single)
  id: '#ctor(ParallaxWrapMode,ParallaxFitMode,System.Single,System.Single)'
  parent: Global.ParallaxLayerFitRule
  langs:
  - csharp
  - vb
  name: ParallaxLayerFitRule(ParallaxWrapMode, ParallaxFitMode, float, float)
  nameWithType: ParallaxLayerFitRule.ParallaxLayerFitRule(ParallaxWrapMode, ParallaxFitMode, float, float)
  fullName: ParallaxLayerFitRule.ParallaxLayerFitRule(ParallaxWrapMode, ParallaxFitMode, float, float)
  type: Constructor
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Parallax/SectionParallax.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: .ctor
    path: ../Assets/Objects & Components/World/Section/Parallax/SectionParallax.cs
    startLine: 26
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public ParallaxLayerFitRule(ParallaxWrapMode wrap, ParallaxFitMode fit, float dim, float offset)
    parameters:
    - id: wrap
      type: Global.ParallaxWrapMode
    - id: fit
      type: Global.ParallaxFitMode
    - id: dim
      type: System.Single
    - id: offset
      type: System.Single
    content.vb: Public Sub New(wrap As ParallaxWrapMode, fit As ParallaxFitMode, [dim] As Single, offset As Single)
  overload: Global.ParallaxLayerFitRule.#ctor*
  nameWithType.vb: ParallaxLayerFitRule.New(ParallaxWrapMode, ParallaxFitMode, Single, Single)
  fullName.vb: ParallaxLayerFitRule.New(ParallaxWrapMode, ParallaxFitMode, Single, Single)
  name.vb: New(ParallaxWrapMode, ParallaxFitMode, Single, Single)
references:
- uid: Global
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.ParallaxWrapMode
  commentId: T:Global.ParallaxWrapMode
  name: ParallaxWrapMode
  nameWithType: ParallaxWrapMode
  fullName: ParallaxWrapMode
- uid: Global.ParallaxFitMode
  commentId: T:Global.ParallaxFitMode
  name: ParallaxFitMode
  nameWithType: ParallaxFitMode
  fullName: ParallaxFitMode
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ParallaxLayerFitRule.#ctor*
  commentId: Overload:Global.ParallaxLayerFitRule.#ctor
  name: ParallaxLayerFitRule
  nameWithType: ParallaxLayerFitRule.ParallaxLayerFitRule
  fullName: ParallaxLayerFitRule.ParallaxLayerFitRule
  nameWithType.vb: ParallaxLayerFitRule.New
  fullName.vb: ParallaxLayerFitRule.New
  name.vb: New
