### YamlMime:ManagedReference
items:
- uid: Global.ChargeBehavior
  commentId: T:Global.ChargeBehavior
  id: ChargeBehavior
  parent: Global
  children:
  - Global.ChargeBehavior.AccelPoint
  - Global.ChargeBehavior.CanChargeBounce
  - Global.ChargeBehavior.Charge(System.Single,System.Single,System.Single,System.Single)
  - Global.ChargeBehavior.ChargeDestinationOffset
  - Global.ChargeBehavior.ChargeDistance
  - Global.ChargeBehavior.ChargeLeap(System.Single,System.Single,System.Single,System.Int32)
  - Global.ChargeBehavior.ChargeSpeed
  - Global.ChargeBehavior.ChargeTowardsPlayer
  - Global.ChargeBehavior.Deceleration
  - Global.ChargeBehavior.DecelPoint
  - Global.ChargeBehavior.DrawGizmos(ModularEnemy)
  - Global.ChargeBehavior.JumpHeight
  - Global.ChargeBehavior.OnCollideX(IntSolid)
  - Global.ChargeBehavior.OnCollideY(IntSolid)
  - Global.ChargeBehavior.OnRestart
  - Global.ChargeBehavior.Start(ModularEnemy)
  - Global.ChargeBehavior.Swoop(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)
  - Global.ChargeBehavior.type
  - Global.ChargeBehavior.Update
  langs:
  - csharp
  - vb
  name: ChargeBehavior
  nameWithType: ChargeBehavior
  fullName: ChargeBehavior
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ChargeBehavior
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class ChargeBehavior : ModularEnemy.EnemyBehaviorInterface
    content.vb: >-
      <Serializable>

      Public Class ChargeBehavior Inherits ModularEnemy.EnemyBehaviorInterface
  inheritance:
  - System.Object
  - Global.ModularEnemy.EnemyBehaviorInterface
  inheritedMembers:
  - Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  - Global.ModularEnemy.EnemyBehaviorInterface.self
  - Global.ModularEnemy.EnemyBehaviorInterface.Started
  - Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
  - Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.ChargeBehavior.type
  commentId: F:Global.ChargeBehavior.type
  id: type
  parent: Global.ChargeBehavior
  langs:
  - csharp
  - vb
  name: type
  nameWithType: ChargeBehavior.type
  fullName: ChargeBehavior.type
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: type
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public ChargeBehavior.ChargeType type
    return:
      type: Global.ChargeBehavior.ChargeType
    content.vb: Public type As ChargeBehavior.ChargeType
- uid: Global.ChargeBehavior.ChargeDistance
  commentId: F:Global.ChargeBehavior.ChargeDistance
  id: ChargeDistance
  parent: Global.ChargeBehavior
  langs:
  - csharp
  - vb
  name: ChargeDistance
  nameWithType: ChargeBehavior.ChargeDistance
  fullName: ChargeBehavior.ChargeDistance
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ChargeDistance
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("type", new int[] { 0, 2 })]

      public float ChargeDistance
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("type", New Integer() { 0, 2 })>

      Public ChargeDistance As Single
- uid: Global.ChargeBehavior.ChargeSpeed
  commentId: F:Global.ChargeBehavior.ChargeSpeed
  id: ChargeSpeed
  parent: Global.ChargeBehavior
  langs:
  - csharp
  - vb
  name: ChargeSpeed
  nameWithType: ChargeBehavior.ChargeSpeed
  fullName: ChargeBehavior.ChargeSpeed
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ChargeSpeed
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float ChargeSpeed
    return:
      type: System.Single
    content.vb: Public ChargeSpeed As Single
- uid: Global.ChargeBehavior.CanChargeBounce
  commentId: F:Global.ChargeBehavior.CanChargeBounce
  id: CanChargeBounce
  parent: Global.ChargeBehavior
  langs:
  - csharp
  - vb
  name: CanChargeBounce
  nameWithType: ChargeBehavior.CanChargeBounce
  fullName: ChargeBehavior.CanChargeBounce
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CanChargeBounce
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
    startLine: 20
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("type", 0)]

      public bool CanChargeBounce
    return:
      type: System.Boolean
    content.vb: >-
      <ConditionalShow("type", 0)>

      Public CanChargeBounce As Boolean
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: type
    - type: System.Int32
      value: 0
- uid: Global.ChargeBehavior.Deceleration
  commentId: F:Global.ChargeBehavior.Deceleration
  id: Deceleration
  parent: Global.ChargeBehavior
  langs:
  - csharp
  - vb
  name: Deceleration
  nameWithType: ChargeBehavior.Deceleration
  fullName: ChargeBehavior.Deceleration
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Deceleration
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("type", 1)]

      public float Deceleration
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("type", 1)>

      Public Deceleration As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: type
    - type: System.Int32
      value: 1
- uid: Global.ChargeBehavior.JumpHeight
  commentId: F:Global.ChargeBehavior.JumpHeight
  id: JumpHeight
  parent: Global.ChargeBehavior
  langs:
  - csharp
  - vb
  name: JumpHeight
  nameWithType: ChargeBehavior.JumpHeight
  fullName: ChargeBehavior.JumpHeight
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: JumpHeight
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
    startLine: 28
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("type", 2)]

      public float JumpHeight
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("type", 2)>

      Public JumpHeight As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: type
    - type: System.Int32
      value: 2
- uid: Global.ChargeBehavior.ChargeDestinationOffset
  commentId: F:Global.ChargeBehavior.ChargeDestinationOffset
  id: ChargeDestinationOffset
  parent: Global.ChargeBehavior
  langs:
  - csharp
  - vb
  name: ChargeDestinationOffset
  nameWithType: ChargeBehavior.ChargeDestinationOffset
  fullName: ChargeBehavior.ChargeDestinationOffset
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ChargeDestinationOffset
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
    startLine: 32
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("type", 3)]

      public Vector2Int ChargeDestinationOffset
    return:
      type: UnityEngine.Vector2Int
    content.vb: >-
      <ConditionalShow("type", 3)>

      Public ChargeDestinationOffset As Vector2Int
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: type
    - type: System.Int32
      value: 3
- uid: Global.ChargeBehavior.ChargeTowardsPlayer
  commentId: F:Global.ChargeBehavior.ChargeTowardsPlayer
  id: ChargeTowardsPlayer
  parent: Global.ChargeBehavior
  langs:
  - csharp
  - vb
  name: ChargeTowardsPlayer
  nameWithType: ChargeBehavior.ChargeTowardsPlayer
  fullName: ChargeBehavior.ChargeTowardsPlayer
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ChargeTowardsPlayer
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
    startLine: 34
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("type", 3)]

      public bool ChargeTowardsPlayer
    return:
      type: System.Boolean
    content.vb: >-
      <ConditionalShow("type", 3)>

      Public ChargeTowardsPlayer As Boolean
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: type
    - type: System.Int32
      value: 3
- uid: Global.ChargeBehavior.AccelPoint
  commentId: F:Global.ChargeBehavior.AccelPoint
  id: AccelPoint
  parent: Global.ChargeBehavior
  langs:
  - csharp
  - vb
  name: AccelPoint
  nameWithType: ChargeBehavior.AccelPoint
  fullName: ChargeBehavior.AccelPoint
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AccelPoint
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
    startLine: 38
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Range(0, 1)]

      [ConditionalShow("type", new int[] { 3, 0 })]

      public float AccelPoint
    return:
      type: System.Single
    content.vb: >-
      <Range(0, 1)>

      <ConditionalShow("type", New Integer() { 3, 0 })>

      Public AccelPoint As Single
  attributes:
  - type: UnityEngine.RangeAttribute
    ctor: UnityEngine.RangeAttribute.#ctor(System.Single,System.Single)
    arguments:
    - type: System.Single
      value: 0
    - type: System.Single
      value: 1
- uid: Global.ChargeBehavior.DecelPoint
  commentId: F:Global.ChargeBehavior.DecelPoint
  id: DecelPoint
  parent: Global.ChargeBehavior
  langs:
  - csharp
  - vb
  name: DecelPoint
  nameWithType: ChargeBehavior.DecelPoint
  fullName: ChargeBehavior.DecelPoint
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DecelPoint
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
    startLine: 40
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Range(0, 1)]

      [ConditionalShow("type", new int[] { 3, 0 })]

      public float DecelPoint
    return:
      type: System.Single
    content.vb: >-
      <Range(0, 1)>

      <ConditionalShow("type", New Integer() { 3, 0 })>

      Public DecelPoint As Single
  attributes:
  - type: UnityEngine.RangeAttribute
    ctor: UnityEngine.RangeAttribute.#ctor(System.Single,System.Single)
    arguments:
    - type: System.Single
      value: 0
    - type: System.Single
      value: 1
- uid: Global.ChargeBehavior.Start(ModularEnemy)
  commentId: M:Global.ChargeBehavior.Start(ModularEnemy)
  id: Start(ModularEnemy)
  parent: Global.ChargeBehavior
  langs:
  - csharp
  - vb
  name: Start(ModularEnemy)
  nameWithType: ChargeBehavior.Start(ModularEnemy)
  fullName: ChargeBehavior.Start(ModularEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Start
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
    startLine: 48
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void Start(ModularEnemy enemy)
    parameters:
    - id: enemy
      type: Global.ModularEnemy
    content.vb: Public Overrides Sub Start(enemy As ModularEnemy)
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  overload: Global.ChargeBehavior.Start*
- uid: Global.ChargeBehavior.DrawGizmos(ModularEnemy)
  commentId: M:Global.ChargeBehavior.DrawGizmos(ModularEnemy)
  id: DrawGizmos(ModularEnemy)
  parent: Global.ChargeBehavior
  langs:
  - csharp
  - vb
  name: DrawGizmos(ModularEnemy)
  nameWithType: ChargeBehavior.DrawGizmos(ModularEnemy)
  fullName: ChargeBehavior.DrawGizmos(ModularEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DrawGizmos
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
    startLine: 56
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void DrawGizmos(ModularEnemy enemy)
    parameters:
    - id: enemy
      type: Global.ModularEnemy
    content.vb: Public Overrides Sub DrawGizmos(enemy As ModularEnemy)
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  overload: Global.ChargeBehavior.DrawGizmos*
- uid: Global.ChargeBehavior.OnRestart
  commentId: M:Global.ChargeBehavior.OnRestart
  id: OnRestart
  parent: Global.ChargeBehavior
  langs:
  - csharp
  - vb
  name: OnRestart()
  nameWithType: ChargeBehavior.OnRestart()
  fullName: ChargeBehavior.OnRestart()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnRestart
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
    startLine: 79
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnRestart()
    content.vb: Public Overrides Sub OnRestart()
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
  overload: Global.ChargeBehavior.OnRestart*
- uid: Global.ChargeBehavior.Update
  commentId: M:Global.ChargeBehavior.Update
  id: Update
  parent: Global.ChargeBehavior
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: ChargeBehavior.Update()
  fullName: ChargeBehavior.Update()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Update
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
    startLine: 87
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.Update
  overload: Global.ChargeBehavior.Update*
- uid: Global.ChargeBehavior.Charge(System.Single,System.Single,System.Single,System.Single)
  commentId: M:Global.ChargeBehavior.Charge(System.Single,System.Single,System.Single,System.Single)
  id: Charge(System.Single,System.Single,System.Single,System.Single)
  parent: Global.ChargeBehavior
  langs:
  - csharp
  - vb
  name: Charge(float, float, float, float)
  nameWithType: ChargeBehavior.Charge(float, float, float, float)
  fullName: ChargeBehavior.Charge(float, float, float, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Charge
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
    startLine: 148
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Charge(float distance, float speed, float accelTime = 0.1, float decelTime = 0.8)
    parameters:
    - id: distance
      type: System.Single
    - id: speed
      type: System.Single
    - id: accelTime
      type: System.Single
    - id: decelTime
      type: System.Single
    content.vb: Public Sub Charge(distance As Single, speed As Single, accelTime As Single = 0.1, decelTime As Single = 0.8)
  overload: Global.ChargeBehavior.Charge*
  nameWithType.vb: ChargeBehavior.Charge(Single, Single, Single, Single)
  fullName.vb: ChargeBehavior.Charge(Single, Single, Single, Single)
  name.vb: Charge(Single, Single, Single, Single)
- uid: Global.ChargeBehavior.Swoop(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)
  commentId: M:Global.ChargeBehavior.Swoop(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)
  id: Swoop(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)
  parent: Global.ChargeBehavior
  langs:
  - csharp
  - vb
  name: Swoop(Vector2, Vector2, float)
  nameWithType: ChargeBehavior.Swoop(Vector2, Vector2, float)
  fullName: ChargeBehavior.Swoop(UnityEngine.Vector2, UnityEngine.Vector2, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Swoop
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
    startLine: 167
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Swoop(Vector2 swoop_start, Vector2 swoop_end, float speed)
    parameters:
    - id: swoop_start
      type: UnityEngine.Vector2
    - id: swoop_end
      type: UnityEngine.Vector2
    - id: speed
      type: System.Single
    content.vb: Protected Sub Swoop(swoop_start As Vector2, swoop_end As Vector2, speed As Single)
  overload: Global.ChargeBehavior.Swoop*
  nameWithType.vb: ChargeBehavior.Swoop(Vector2, Vector2, Single)
  fullName.vb: ChargeBehavior.Swoop(UnityEngine.Vector2, UnityEngine.Vector2, Single)
  name.vb: Swoop(Vector2, Vector2, Single)
- uid: Global.ChargeBehavior.ChargeLeap(System.Single,System.Single,System.Single,System.Int32)
  commentId: M:Global.ChargeBehavior.ChargeLeap(System.Single,System.Single,System.Single,System.Int32)
  id: ChargeLeap(System.Single,System.Single,System.Single,System.Int32)
  parent: Global.ChargeBehavior
  langs:
  - csharp
  - vb
  name: ChargeLeap(float, float, float, int)
  nameWithType: ChargeBehavior.ChargeLeap(float, float, float, int)
  fullName: ChargeBehavior.ChargeLeap(float, float, float, int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ChargeLeap
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
    startLine: 212
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void ChargeLeap(float distance, float speed, float jumpHeight, int direction)
    parameters:
    - id: distance
      type: System.Single
    - id: speed
      type: System.Single
    - id: jumpHeight
      type: System.Single
    - id: direction
      type: System.Int32
    content.vb: Protected Sub ChargeLeap(distance As Single, speed As Single, jumpHeight As Single, direction As Integer)
  overload: Global.ChargeBehavior.ChargeLeap*
  nameWithType.vb: ChargeBehavior.ChargeLeap(Single, Single, Single, Integer)
  fullName.vb: ChargeBehavior.ChargeLeap(Single, Single, Single, Integer)
  name.vb: ChargeLeap(Single, Single, Single, Integer)
- uid: Global.ChargeBehavior.OnCollideX(IntSolid)
  commentId: M:Global.ChargeBehavior.OnCollideX(IntSolid)
  id: OnCollideX(IntSolid)
  parent: Global.ChargeBehavior
  langs:
  - csharp
  - vb
  name: OnCollideX(IntSolid)
  nameWithType: ChargeBehavior.OnCollideX(IntSolid)
  fullName: ChargeBehavior.OnCollideX(IntSolid)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnCollideX
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
    startLine: 236
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void OnCollideX(IntSolid solid)
    parameters:
    - id: solid
      type: Global.IntSolid
    content.vb: Protected Overridable Sub OnCollideX(solid As IntSolid)
  overload: Global.ChargeBehavior.OnCollideX*
- uid: Global.ChargeBehavior.OnCollideY(IntSolid)
  commentId: M:Global.ChargeBehavior.OnCollideY(IntSolid)
  id: OnCollideY(IntSolid)
  parent: Global.ChargeBehavior
  langs:
  - csharp
  - vb
  name: OnCollideY(IntSolid)
  nameWithType: ChargeBehavior.OnCollideY(IntSolid)
  fullName: ChargeBehavior.OnCollideY(IntSolid)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnCollideY
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ChargeBehavior.cs
    startLine: 244
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void OnCollideY(IntSolid solid)
    parameters:
    - id: solid
      type: Global.IntSolid
    content.vb: Protected Overridable Sub OnCollideY(solid As IntSolid)
  overload: Global.ChargeBehavior.OnCollideY*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.ModularEnemy.EnemyBehaviorInterface
  commentId: T:Global.ModularEnemy.EnemyBehaviorInterface
  name: ModularEnemy.EnemyBehaviorInterface
  nameWithType: ModularEnemy.EnemyBehaviorInterface
  fullName: ModularEnemy.EnemyBehaviorInterface
  spec.csharp:
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: .
  - uid: Global.ModularEnemy.EnemyBehaviorInterface
    name: EnemyBehaviorInterface
  spec.vb:
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: .
  - uid: Global.ModularEnemy.EnemyBehaviorInterface
    name: EnemyBehaviorInterface
- uid: Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  commentId: F:Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: ShowGizmos
  nameWithType: ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  fullName: ModularEnemy.EnemyBehaviorInterface.ShowGizmos
- uid: Global.ModularEnemy.EnemyBehaviorInterface.self
  commentId: F:Global.ModularEnemy.EnemyBehaviorInterface.self
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: self
  nameWithType: ModularEnemy.EnemyBehaviorInterface.self
  fullName: ModularEnemy.EnemyBehaviorInterface.self
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Started
  commentId: P:Global.ModularEnemy.EnemyBehaviorInterface.Started
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: Started
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Started
  fullName: ModularEnemy.EnemyBehaviorInterface.Started
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  isExternal: true
  name: OnKill(ModularEnemy, bool)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, bool)
  fullName: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, bool)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, Boolean)
  fullName.vb: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, Boolean)
  name.vb: OnKill(ModularEnemy, Boolean)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
    name: OnKill
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
    name: OnKill
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: OnResetObject(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
    name: OnResetObject
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
    name: OnResetObject
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.ChargeBehavior.ChargeType
  commentId: T:Global.ChargeBehavior.ChargeType
  name: ChargeBehavior.ChargeType
  nameWithType: ChargeBehavior.ChargeType
  fullName: ChargeBehavior.ChargeType
  spec.csharp:
  - uid: Global.ChargeBehavior
    name: ChargeBehavior
  - name: .
  - uid: Global.ChargeBehavior.ChargeType
    name: ChargeType
  spec.vb:
  - uid: Global.ChargeBehavior
    name: ChargeBehavior
  - name: .
  - uid: Global.ChargeBehavior.ChargeType
    name: ChargeType
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: Start(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
    name: Start
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
    name: Start
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.ChargeBehavior.Start*
  commentId: Overload:Global.ChargeBehavior.Start
  name: Start
  nameWithType: ChargeBehavior.Start
  fullName: ChargeBehavior.Start
- uid: Global.ModularEnemy
  commentId: T:Global.ModularEnemy
  name: ModularEnemy
  nameWithType: ModularEnemy
  fullName: ModularEnemy
- uid: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: DrawGizmos(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
    name: DrawGizmos
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
    name: DrawGizmos
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.ChargeBehavior.DrawGizmos*
  commentId: Overload:Global.ChargeBehavior.DrawGizmos
  name: DrawGizmos
  nameWithType: ChargeBehavior.DrawGizmos
  fullName: ChargeBehavior.DrawGizmos
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: OnRestart()
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnRestart()
  fullName: ModularEnemy.EnemyBehaviorInterface.OnRestart()
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
    name: OnRestart
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
    name: OnRestart
  - name: (
  - name: )
- uid: Global.ChargeBehavior.OnRestart*
  commentId: Overload:Global.ChargeBehavior.OnRestart
  name: OnRestart
  nameWithType: ChargeBehavior.OnRestart
  fullName: ChargeBehavior.OnRestart
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Update
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.Update
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: Update()
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Update()
  fullName: ModularEnemy.EnemyBehaviorInterface.Update()
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Update
    name: Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Update
    name: Update
  - name: (
  - name: )
- uid: Global.ChargeBehavior.Update*
  commentId: Overload:Global.ChargeBehavior.Update
  name: Update
  nameWithType: ChargeBehavior.Update
  fullName: ChargeBehavior.Update
- uid: Global.ChargeBehavior.Charge*
  commentId: Overload:Global.ChargeBehavior.Charge
  name: Charge
  nameWithType: ChargeBehavior.Charge
  fullName: ChargeBehavior.Charge
- uid: Global.ChargeBehavior.Swoop*
  commentId: Overload:Global.ChargeBehavior.Swoop
  name: Swoop
  nameWithType: ChargeBehavior.Swoop
  fullName: ChargeBehavior.Swoop
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.ChargeBehavior.ChargeLeap*
  commentId: Overload:Global.ChargeBehavior.ChargeLeap
  name: ChargeLeap
  nameWithType: ChargeBehavior.ChargeLeap
  fullName: ChargeBehavior.ChargeLeap
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.ChargeBehavior.OnCollideX*
  commentId: Overload:Global.ChargeBehavior.OnCollideX
  name: OnCollideX
  nameWithType: ChargeBehavior.OnCollideX
  fullName: ChargeBehavior.OnCollideX
- uid: Global.IntSolid
  commentId: T:Global.IntSolid
  name: IntSolid
  nameWithType: IntSolid
  fullName: IntSolid
- uid: Global.ChargeBehavior.OnCollideY*
  commentId: Overload:Global.ChargeBehavior.OnCollideY
  name: OnCollideY
  nameWithType: ChargeBehavior.OnCollideY
  fullName: ChargeBehavior.OnCollideY
