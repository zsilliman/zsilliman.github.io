### YamlMime:ManagedReference
items:
- uid: Global.UnwrappedSubInteraction
  commentId: T:Global.UnwrappedSubInteraction
  id: UnwrappedSubInteraction
  parent: Global
  children:
  - Global.UnwrappedSubInteraction.#ctor(SubInteraction,UnityEngine.UI.Text,System.Int32)
  - Global.UnwrappedSubInteraction.duration
  - Global.UnwrappedSubInteraction.GetCurrentIndex
  - Global.UnwrappedSubInteraction.HasNext
  - Global.UnwrappedSubInteraction.narration
  - Global.UnwrappedSubInteraction.Next
  - Global.UnwrappedSubInteraction.objectname
  - Global.UnwrappedSubInteraction.qAnchor
  - Global.UnwrappedSubInteraction.Reset
  - Global.UnwrappedSubInteraction.type
  - Global.UnwrappedSubInteraction.Validate
  - Global.UnwrappedSubInteraction.who
  langs:
  - csharp
  - vb
  name: UnwrappedSubInteraction
  nameWithType: UnwrappedSubInteraction
  fullName: UnwrappedSubInteraction
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UnwrappedSubInteraction
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public class UnwrappedSubInteraction
    content.vb: Public Class UnwrappedSubInteraction
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.UnwrappedSubInteraction.who
  commentId: F:Global.UnwrappedSubInteraction.who
  id: who
  parent: Global.UnwrappedSubInteraction
  langs:
  - csharp
  - vb
  name: who
  nameWithType: UnwrappedSubInteraction.who
  fullName: UnwrappedSubInteraction.who
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: who
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 30
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public string who
    return:
      type: System.String
    content.vb: Public who As String
- uid: Global.UnwrappedSubInteraction.objectname
  commentId: F:Global.UnwrappedSubInteraction.objectname
  id: objectname
  parent: Global.UnwrappedSubInteraction
  langs:
  - csharp
  - vb
  name: objectname
  nameWithType: UnwrappedSubInteraction.objectname
  fullName: UnwrappedSubInteraction.objectname
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: objectname
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 31
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public string objectname
    return:
      type: System.String
    content.vb: Public objectname As String
- uid: Global.UnwrappedSubInteraction.duration
  commentId: F:Global.UnwrappedSubInteraction.duration
  id: duration
  parent: Global.UnwrappedSubInteraction
  langs:
  - csharp
  - vb
  name: duration
  nameWithType: UnwrappedSubInteraction.duration
  fullName: UnwrappedSubInteraction.duration
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: duration
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 32
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public List<float> duration
    return:
      type: System.Collections.Generic.List{System.Single}
    content.vb: Public duration As List(Of Single)
- uid: Global.UnwrappedSubInteraction.type
  commentId: F:Global.UnwrappedSubInteraction.type
  id: type
  parent: Global.UnwrappedSubInteraction
  langs:
  - csharp
  - vb
  name: type
  nameWithType: UnwrappedSubInteraction.type
  fullName: UnwrappedSubInteraction.type
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: type
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 33
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public InteractionTextType type
    return:
      type: Global.InteractionTextType
    content.vb: Public type As InteractionTextType
- uid: Global.UnwrappedSubInteraction.narration
  commentId: F:Global.UnwrappedSubInteraction.narration
  id: narration
  parent: Global.UnwrappedSubInteraction
  langs:
  - csharp
  - vb
  name: narration
  nameWithType: UnwrappedSubInteraction.narration
  fullName: UnwrappedSubInteraction.narration
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: narration
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 34
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public List<string> narration
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public narration As List(Of String)
- uid: Global.UnwrappedSubInteraction.qAnchor
  commentId: F:Global.UnwrappedSubInteraction.qAnchor
  id: qAnchor
  parent: Global.UnwrappedSubInteraction
  langs:
  - csharp
  - vb
  name: qAnchor
  nameWithType: UnwrappedSubInteraction.qAnchor
  fullName: UnwrappedSubInteraction.qAnchor
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: qAnchor
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 35
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public QuoteAnchor qAnchor
    return:
      type: Global.QuoteAnchor
    content.vb: Public qAnchor As QuoteAnchor
- uid: Global.UnwrappedSubInteraction.#ctor(SubInteraction,UnityEngine.UI.Text,System.Int32)
  commentId: M:Global.UnwrappedSubInteraction.#ctor(SubInteraction,UnityEngine.UI.Text,System.Int32)
  id: '#ctor(SubInteraction,UnityEngine.UI.Text,System.Int32)'
  parent: Global.UnwrappedSubInteraction
  langs:
  - csharp
  - vb
  name: UnwrappedSubInteraction(SubInteraction, Text, int)
  nameWithType: UnwrappedSubInteraction.UnwrappedSubInteraction(SubInteraction, Text, int)
  fullName: UnwrappedSubInteraction.UnwrappedSubInteraction(SubInteraction, UnityEngine.UI.Text, int)
  type: Constructor
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: .ctor
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 38
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public UnwrappedSubInteraction(SubInteraction si, Text text, int maxcharlength)
    parameters:
    - id: si
      type: Global.SubInteraction
    - id: text
      type: UnityEngine.UI.Text
    - id: maxcharlength
      type: System.Int32
    content.vb: Public Sub New(si As SubInteraction, text As Text, maxcharlength As Integer)
  overload: Global.UnwrappedSubInteraction.#ctor*
  nameWithType.vb: UnwrappedSubInteraction.New(SubInteraction, Text, Integer)
  fullName.vb: UnwrappedSubInteraction.New(SubInteraction, UnityEngine.UI.Text, Integer)
  name.vb: New(SubInteraction, Text, Integer)
- uid: Global.UnwrappedSubInteraction.GetCurrentIndex
  commentId: M:Global.UnwrappedSubInteraction.GetCurrentIndex
  id: GetCurrentIndex
  parent: Global.UnwrappedSubInteraction
  langs:
  - csharp
  - vb
  name: GetCurrentIndex()
  nameWithType: UnwrappedSubInteraction.GetCurrentIndex()
  fullName: UnwrappedSubInteraction.GetCurrentIndex()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetCurrentIndex
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 50
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int GetCurrentIndex()
    return:
      type: System.Int32
    content.vb: Public Function GetCurrentIndex() As Integer
  overload: Global.UnwrappedSubInteraction.GetCurrentIndex*
- uid: Global.UnwrappedSubInteraction.Validate
  commentId: M:Global.UnwrappedSubInteraction.Validate
  id: Validate
  parent: Global.UnwrappedSubInteraction
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: UnwrappedSubInteraction.Validate()
  fullName: UnwrappedSubInteraction.Validate()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Validate
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 55
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Validate()
    content.vb: Public Sub Validate()
  overload: Global.UnwrappedSubInteraction.Validate*
- uid: Global.UnwrappedSubInteraction.HasNext
  commentId: M:Global.UnwrappedSubInteraction.HasNext
  id: HasNext
  parent: Global.UnwrappedSubInteraction
  langs:
  - csharp
  - vb
  name: HasNext()
  nameWithType: UnwrappedSubInteraction.HasNext()
  fullName: UnwrappedSubInteraction.HasNext()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: HasNext
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 63
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool HasNext()
    return:
      type: System.Boolean
    content.vb: Public Function HasNext() As Boolean
  overload: Global.UnwrappedSubInteraction.HasNext*
- uid: Global.UnwrappedSubInteraction.Next
  commentId: M:Global.UnwrappedSubInteraction.Next
  id: Next
  parent: Global.UnwrappedSubInteraction
  langs:
  - csharp
  - vb
  name: Next()
  nameWithType: UnwrappedSubInteraction.Next()
  fullName: UnwrappedSubInteraction.Next()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Next
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 70
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Next()
    content.vb: Public Sub [Next]()
  overload: Global.UnwrappedSubInteraction.Next*
- uid: Global.UnwrappedSubInteraction.Reset
  commentId: M:Global.UnwrappedSubInteraction.Reset
  id: Reset
  parent: Global.UnwrappedSubInteraction
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: UnwrappedSubInteraction.Reset()
  fullName: UnwrappedSubInteraction.Reset()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Reset
    path: ../Assets/Objects & Components/UI/Ingame/OLD/Narrative Text/Interaction.cs
    startLine: 80
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset()
  overload: Global.UnwrappedSubInteraction.Reset*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.List{System.Single}
  commentId: T:System.Collections.Generic.List{System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<float>
  nameWithType: List<float>
  fullName: System.Collections.Generic.List<float>
  nameWithType.vb: List(Of Single)
  fullName.vb: System.Collections.Generic.List(Of Single)
  name.vb: List(Of Single)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: Global.InteractionTextType
  commentId: T:Global.InteractionTextType
  name: InteractionTextType
  nameWithType: InteractionTextType
  fullName: InteractionTextType
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Global.QuoteAnchor
  commentId: T:Global.QuoteAnchor
  name: QuoteAnchor
  nameWithType: QuoteAnchor
  fullName: QuoteAnchor
- uid: Global.UnwrappedSubInteraction.#ctor*
  commentId: Overload:Global.UnwrappedSubInteraction.#ctor
  name: UnwrappedSubInteraction
  nameWithType: UnwrappedSubInteraction.UnwrappedSubInteraction
  fullName: UnwrappedSubInteraction.UnwrappedSubInteraction
  nameWithType.vb: UnwrappedSubInteraction.New
  fullName.vb: UnwrappedSubInteraction.New
  name.vb: New
- uid: Global.SubInteraction
  commentId: T:Global.SubInteraction
  name: SubInteraction
  nameWithType: SubInteraction
  fullName: SubInteraction
- uid: UnityEngine.UI.Text
  commentId: T:UnityEngine.UI.Text
  parent: UnityEngine.UI
  isExternal: true
  name: Text
  nameWithType: Text
  fullName: UnityEngine.UI.Text
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UnityEngine.UI
  commentId: N:UnityEngine.UI
  isExternal: true
  name: UnityEngine.UI
  nameWithType: UnityEngine.UI
  fullName: UnityEngine.UI
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.UI
    name: UI
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.UI
    name: UI
    isExternal: true
- uid: Global.UnwrappedSubInteraction.GetCurrentIndex*
  commentId: Overload:Global.UnwrappedSubInteraction.GetCurrentIndex
  name: GetCurrentIndex
  nameWithType: UnwrappedSubInteraction.GetCurrentIndex
  fullName: UnwrappedSubInteraction.GetCurrentIndex
- uid: Global.UnwrappedSubInteraction.Validate*
  commentId: Overload:Global.UnwrappedSubInteraction.Validate
  name: Validate
  nameWithType: UnwrappedSubInteraction.Validate
  fullName: UnwrappedSubInteraction.Validate
- uid: Global.UnwrappedSubInteraction.HasNext*
  commentId: Overload:Global.UnwrappedSubInteraction.HasNext
  name: HasNext
  nameWithType: UnwrappedSubInteraction.HasNext
  fullName: UnwrappedSubInteraction.HasNext
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.UnwrappedSubInteraction.Next*
  commentId: Overload:Global.UnwrappedSubInteraction.Next
  name: Next
  nameWithType: UnwrappedSubInteraction.Next
  fullName: UnwrappedSubInteraction.Next
- uid: Global.UnwrappedSubInteraction.Reset*
  commentId: Overload:Global.UnwrappedSubInteraction.Reset
  name: Reset
  nameWithType: UnwrappedSubInteraction.Reset
  fullName: UnwrappedSubInteraction.Reset
