### YamlMime:ManagedReference
items:
- uid: Global.PortalInteractionController
  commentId: T:Global.PortalInteractionController
  id: PortalInteractionController
  parent: Global
  children:
  - Global.PortalInteractionController.DestinationSection
  - Global.PortalInteractionController.DestroySectionOnEnter
  - Global.PortalInteractionController.IsInteractionActive
  - Global.PortalInteractionController.IsInteractionFinished
  - Global.PortalInteractionController.IsRandom
  - Global.PortalInteractionController.OnInteract
  - Global.PortalInteractionController.OnInteractionTriggerEnter(Player)
  - Global.PortalInteractionController.OnInteractionTriggerExit(Player)
  - Global.PortalInteractionController.OnResetObject
  - Global.PortalInteractionController.PortalType
  - Global.PortalInteractionController.TerrainType
  langs:
  - csharp
  - vb
  name: PortalInteractionController
  nameWithType: PortalInteractionController
  fullName: PortalInteractionController
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/World/Portal/PortalInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PortalInteractionController
    path: ../Assets/Objects & Components/World/Portal/PortalInteractionController.cs
    startLine: 3
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class PortalInteractionController : InteractionController'
    content.vb: Public Class PortalInteractionController Inherits InteractionController
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - Global.InteractionController
  inheritedMembers:
  - Global.InteractionController.interactable
  - Global.InteractionController.WaitForOtherControllers
  - Global.InteractionController.Start
  - Global.InteractionController.OnAllInteractionsCompleted
  - Global.InteractionController.OnTriggerEnterCallback(IntActor)
  - Global.InteractionController.OnTriggerExitCallback(IntActor)
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.PortalInteractionController.PortalType
  commentId: F:Global.PortalInteractionController.PortalType
  id: PortalType
  parent: Global.PortalInteractionController
  langs:
  - csharp
  - vb
  name: PortalType
  nameWithType: PortalInteractionController.PortalType
  fullName: PortalInteractionController.PortalType
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Portal/PortalInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PortalType
    path: ../Assets/Objects & Components/World/Portal/PortalInteractionController.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public PortalInteractionController.PortalDestinationType PortalType
    return:
      type: Global.PortalInteractionController.PortalDestinationType
    content.vb: Public PortalType As PortalInteractionController.PortalDestinationType
- uid: Global.PortalInteractionController.IsRandom
  commentId: F:Global.PortalInteractionController.IsRandom
  id: IsRandom
  parent: Global.PortalInteractionController
  langs:
  - csharp
  - vb
  name: IsRandom
  nameWithType: PortalInteractionController.IsRandom
  fullName: PortalInteractionController.IsRandom
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Portal/PortalInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsRandom
    path: ../Assets/Objects & Components/World/Portal/PortalInteractionController.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("PortalType", 0)]

      public bool IsRandom
    return:
      type: System.Boolean
    content.vb: >-
      <ConditionalShow("PortalType", 0)>

      Public IsRandom As Boolean
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: PortalType
    - type: System.Int32
      value: 0
- uid: Global.PortalInteractionController.TerrainType
  commentId: F:Global.PortalInteractionController.TerrainType
  id: TerrainType
  parent: Global.PortalInteractionController
  langs:
  - csharp
  - vb
  name: TerrainType
  nameWithType: PortalInteractionController.TerrainType
  fullName: PortalInteractionController.TerrainType
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Portal/PortalInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TerrainType
    path: ../Assets/Objects & Components/World/Portal/PortalInteractionController.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShowComplex(new string[] { "PortalType", "IsRandom" }, ConditionalShowComplexAttribute.LogicalOperator.AND, new int[] { 0, 0 })]

      public ProceduralSectionGenerator.SectionTerrainType TerrainType
    return:
      type: Global.ProceduralSectionGenerator.SectionTerrainType
    content.vb: >-
      <ConditionalShowComplex(New String() { "PortalType", "IsRandom" }, ConditionalShowComplexAttribute.LogicalOperator.AND, New Integer() { 0, 0 })>

      Public TerrainType As ProceduralSectionGenerator.SectionTerrainType
- uid: Global.PortalInteractionController.DestinationSection
  commentId: F:Global.PortalInteractionController.DestinationSection
  id: DestinationSection
  parent: Global.PortalInteractionController
  langs:
  - csharp
  - vb
  name: DestinationSection
  nameWithType: PortalInteractionController.DestinationSection
  fullName: PortalInteractionController.DestinationSection
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Portal/PortalInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DestinationSection
    path: ../Assets/Objects & Components/World/Portal/PortalInteractionController.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("PortalType", 1)]

      public Section DestinationSection
    return:
      type: Global.Section
    content.vb: >-
      <ConditionalShow("PortalType", 1)>

      Public DestinationSection As Section
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: PortalType
    - type: System.Int32
      value: 1
- uid: Global.PortalInteractionController.DestroySectionOnEnter
  commentId: F:Global.PortalInteractionController.DestroySectionOnEnter
  id: DestroySectionOnEnter
  parent: Global.PortalInteractionController
  langs:
  - csharp
  - vb
  name: DestroySectionOnEnter
  nameWithType: PortalInteractionController.DestroySectionOnEnter
  fullName: PortalInteractionController.DestroySectionOnEnter
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Portal/PortalInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DestroySectionOnEnter
    path: ../Assets/Objects & Components/World/Portal/PortalInteractionController.cs
    startLine: 20
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Whether the owning section should be deleted after passing through this portal")]

      public bool DestroySectionOnEnter
    return:
      type: System.Boolean
    content.vb: >-
      <Tooltip("Whether the owning section should be deleted after passing through this portal")>

      Public DestroySectionOnEnter As Boolean
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Whether the owning section should be deleted after passing through this portal
- uid: Global.PortalInteractionController.IsInteractionActive
  commentId: M:Global.PortalInteractionController.IsInteractionActive
  id: IsInteractionActive
  parent: Global.PortalInteractionController
  langs:
  - csharp
  - vb
  name: IsInteractionActive()
  nameWithType: PortalInteractionController.IsInteractionActive()
  fullName: PortalInteractionController.IsInteractionActive()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Portal/PortalInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsInteractionActive
    path: ../Assets/Objects & Components/World/Portal/PortalInteractionController.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override bool IsInteractionActive()
    return:
      type: System.Boolean
    content.vb: Public Overrides Function IsInteractionActive() As Boolean
  overridden: Global.InteractionController.IsInteractionActive
  overload: Global.PortalInteractionController.IsInteractionActive*
- uid: Global.PortalInteractionController.IsInteractionFinished
  commentId: M:Global.PortalInteractionController.IsInteractionFinished
  id: IsInteractionFinished
  parent: Global.PortalInteractionController
  langs:
  - csharp
  - vb
  name: IsInteractionFinished()
  nameWithType: PortalInteractionController.IsInteractionFinished()
  fullName: PortalInteractionController.IsInteractionFinished()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Portal/PortalInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsInteractionFinished
    path: ../Assets/Objects & Components/World/Portal/PortalInteractionController.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override bool IsInteractionFinished()
    return:
      type: System.Boolean
    content.vb: Public Overrides Function IsInteractionFinished() As Boolean
  overridden: Global.InteractionController.IsInteractionFinished
  overload: Global.PortalInteractionController.IsInteractionFinished*
- uid: Global.PortalInteractionController.OnInteract
  commentId: M:Global.PortalInteractionController.OnInteract
  id: OnInteract
  parent: Global.PortalInteractionController
  langs:
  - csharp
  - vb
  name: OnInteract()
  nameWithType: PortalInteractionController.OnInteract()
  fullName: PortalInteractionController.OnInteract()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Portal/PortalInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnInteract
    path: ../Assets/Objects & Components/World/Portal/PortalInteractionController.cs
    startLine: 96
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnInteract()
    content.vb: Public Overrides Sub OnInteract()
  overridden: Global.InteractionController.OnInteract
  overload: Global.PortalInteractionController.OnInteract*
- uid: Global.PortalInteractionController.OnInteractionTriggerEnter(Player)
  commentId: M:Global.PortalInteractionController.OnInteractionTriggerEnter(Player)
  id: OnInteractionTriggerEnter(Player)
  parent: Global.PortalInteractionController
  langs:
  - csharp
  - vb
  name: OnInteractionTriggerEnter(Player)
  nameWithType: PortalInteractionController.OnInteractionTriggerEnter(Player)
  fullName: PortalInteractionController.OnInteractionTriggerEnter(Player)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Portal/PortalInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnInteractionTriggerEnter
    path: ../Assets/Objects & Components/World/Portal/PortalInteractionController.cs
    startLine: 107
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnInteractionTriggerEnter(Player player)
    parameters:
    - id: player
      type: Global.Player
    content.vb: Public Overrides Sub OnInteractionTriggerEnter(player As Player)
  overridden: Global.InteractionController.OnInteractionTriggerEnter(Player)
  overload: Global.PortalInteractionController.OnInteractionTriggerEnter*
- uid: Global.PortalInteractionController.OnInteractionTriggerExit(Player)
  commentId: M:Global.PortalInteractionController.OnInteractionTriggerExit(Player)
  id: OnInteractionTriggerExit(Player)
  parent: Global.PortalInteractionController
  langs:
  - csharp
  - vb
  name: OnInteractionTriggerExit(Player)
  nameWithType: PortalInteractionController.OnInteractionTriggerExit(Player)
  fullName: PortalInteractionController.OnInteractionTriggerExit(Player)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Portal/PortalInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnInteractionTriggerExit
    path: ../Assets/Objects & Components/World/Portal/PortalInteractionController.cs
    startLine: 112
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnInteractionTriggerExit(Player player)
    parameters:
    - id: player
      type: Global.Player
    content.vb: Public Overrides Sub OnInteractionTriggerExit(player As Player)
  overridden: Global.InteractionController.OnInteractionTriggerExit(Player)
  overload: Global.PortalInteractionController.OnInteractionTriggerExit*
- uid: Global.PortalInteractionController.OnResetObject
  commentId: M:Global.PortalInteractionController.OnResetObject
  id: OnResetObject
  parent: Global.PortalInteractionController
  langs:
  - csharp
  - vb
  name: OnResetObject()
  nameWithType: PortalInteractionController.OnResetObject()
  fullName: PortalInteractionController.OnResetObject()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Portal/PortalInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnResetObject
    path: ../Assets/Objects & Components/World/Portal/PortalInteractionController.cs
    startLine: 117
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnResetObject()
    content.vb: Public Overrides Sub OnResetObject()
  overridden: Global.InteractionController.OnResetObject
  overload: Global.PortalInteractionController.OnResetObject*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Global.InteractionController
  commentId: T:Global.InteractionController
  name: InteractionController
  nameWithType: InteractionController
  fullName: InteractionController
- uid: Global.InteractionController.interactable
  commentId: F:Global.InteractionController.interactable
  parent: Global.InteractionController
  name: interactable
  nameWithType: InteractionController.interactable
  fullName: InteractionController.interactable
- uid: Global.InteractionController.WaitForOtherControllers
  commentId: F:Global.InteractionController.WaitForOtherControllers
  parent: Global.InteractionController
  name: WaitForOtherControllers
  nameWithType: InteractionController.WaitForOtherControllers
  fullName: InteractionController.WaitForOtherControllers
- uid: Global.InteractionController.Start
  commentId: M:Global.InteractionController.Start
  parent: Global.InteractionController
  name: Start()
  nameWithType: InteractionController.Start()
  fullName: InteractionController.Start()
  spec.csharp:
  - uid: Global.InteractionController.Start
    name: Start
  - name: (
  - name: )
  spec.vb:
  - uid: Global.InteractionController.Start
    name: Start
  - name: (
  - name: )
- uid: Global.InteractionController.OnAllInteractionsCompleted
  commentId: M:Global.InteractionController.OnAllInteractionsCompleted
  parent: Global.InteractionController
  name: OnAllInteractionsCompleted()
  nameWithType: InteractionController.OnAllInteractionsCompleted()
  fullName: InteractionController.OnAllInteractionsCompleted()
  spec.csharp:
  - uid: Global.InteractionController.OnAllInteractionsCompleted
    name: OnAllInteractionsCompleted
  - name: (
  - name: )
  spec.vb:
  - uid: Global.InteractionController.OnAllInteractionsCompleted
    name: OnAllInteractionsCompleted
  - name: (
  - name: )
- uid: Global.InteractionController.OnTriggerEnterCallback(IntActor)
  commentId: M:Global.InteractionController.OnTriggerEnterCallback(IntActor)
  parent: Global.InteractionController
  name: OnTriggerEnterCallback(IntActor)
  nameWithType: InteractionController.OnTriggerEnterCallback(IntActor)
  fullName: InteractionController.OnTriggerEnterCallback(IntActor)
  spec.csharp:
  - uid: Global.InteractionController.OnTriggerEnterCallback(IntActor)
    name: OnTriggerEnterCallback
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
  spec.vb:
  - uid: Global.InteractionController.OnTriggerEnterCallback(IntActor)
    name: OnTriggerEnterCallback
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
- uid: Global.InteractionController.OnTriggerExitCallback(IntActor)
  commentId: M:Global.InteractionController.OnTriggerExitCallback(IntActor)
  parent: Global.InteractionController
  name: OnTriggerExitCallback(IntActor)
  nameWithType: InteractionController.OnTriggerExitCallback(IntActor)
  fullName: InteractionController.OnTriggerExitCallback(IntActor)
  spec.csharp:
  - uid: Global.InteractionController.OnTriggerExitCallback(IntActor)
    name: OnTriggerExitCallback
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
  spec.vb:
  - uid: Global.InteractionController.OnTriggerExitCallback(IntActor)
    name: OnTriggerExitCallback
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.PortalInteractionController.PortalDestinationType
  commentId: T:Global.PortalInteractionController.PortalDestinationType
  name: PortalInteractionController.PortalDestinationType
  nameWithType: PortalInteractionController.PortalDestinationType
  fullName: PortalInteractionController.PortalDestinationType
  spec.csharp:
  - uid: Global.PortalInteractionController
    name: PortalInteractionController
  - name: .
  - uid: Global.PortalInteractionController.PortalDestinationType
    name: PortalDestinationType
  spec.vb:
  - uid: Global.PortalInteractionController
    name: PortalInteractionController
  - name: .
  - uid: Global.PortalInteractionController.PortalDestinationType
    name: PortalDestinationType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.ProceduralSectionGenerator.SectionTerrainType
  commentId: T:Global.ProceduralSectionGenerator.SectionTerrainType
  name: ProceduralSectionGenerator.SectionTerrainType
  nameWithType: ProceduralSectionGenerator.SectionTerrainType
  fullName: ProceduralSectionGenerator.SectionTerrainType
  spec.csharp:
  - uid: Global.ProceduralSectionGenerator
    name: ProceduralSectionGenerator
  - name: .
  - uid: Global.ProceduralSectionGenerator.SectionTerrainType
    name: SectionTerrainType
  spec.vb:
  - uid: Global.ProceduralSectionGenerator
    name: ProceduralSectionGenerator
  - name: .
  - uid: Global.ProceduralSectionGenerator.SectionTerrainType
    name: SectionTerrainType
- uid: Global.Section
  commentId: T:Global.Section
  name: Section
  nameWithType: Section
  fullName: Section
- uid: Global.InteractionController.IsInteractionActive
  commentId: M:Global.InteractionController.IsInteractionActive
  parent: Global.InteractionController
  name: IsInteractionActive()
  nameWithType: InteractionController.IsInteractionActive()
  fullName: InteractionController.IsInteractionActive()
  spec.csharp:
  - uid: Global.InteractionController.IsInteractionActive
    name: IsInteractionActive
  - name: (
  - name: )
  spec.vb:
  - uid: Global.InteractionController.IsInteractionActive
    name: IsInteractionActive
  - name: (
  - name: )
- uid: Global.PortalInteractionController.IsInteractionActive*
  commentId: Overload:Global.PortalInteractionController.IsInteractionActive
  name: IsInteractionActive
  nameWithType: PortalInteractionController.IsInteractionActive
  fullName: PortalInteractionController.IsInteractionActive
- uid: Global.InteractionController.IsInteractionFinished
  commentId: M:Global.InteractionController.IsInteractionFinished
  parent: Global.InteractionController
  name: IsInteractionFinished()
  nameWithType: InteractionController.IsInteractionFinished()
  fullName: InteractionController.IsInteractionFinished()
  spec.csharp:
  - uid: Global.InteractionController.IsInteractionFinished
    name: IsInteractionFinished
  - name: (
  - name: )
  spec.vb:
  - uid: Global.InteractionController.IsInteractionFinished
    name: IsInteractionFinished
  - name: (
  - name: )
- uid: Global.PortalInteractionController.IsInteractionFinished*
  commentId: Overload:Global.PortalInteractionController.IsInteractionFinished
  name: IsInteractionFinished
  nameWithType: PortalInteractionController.IsInteractionFinished
  fullName: PortalInteractionController.IsInteractionFinished
- uid: Global.InteractionController.OnInteract
  commentId: M:Global.InteractionController.OnInteract
  parent: Global.InteractionController
  name: OnInteract()
  nameWithType: InteractionController.OnInteract()
  fullName: InteractionController.OnInteract()
  spec.csharp:
  - uid: Global.InteractionController.OnInteract
    name: OnInteract
  - name: (
  - name: )
  spec.vb:
  - uid: Global.InteractionController.OnInteract
    name: OnInteract
  - name: (
  - name: )
- uid: Global.PortalInteractionController.OnInteract*
  commentId: Overload:Global.PortalInteractionController.OnInteract
  name: OnInteract
  nameWithType: PortalInteractionController.OnInteract
  fullName: PortalInteractionController.OnInteract
- uid: Global.InteractionController.OnInteractionTriggerEnter(Player)
  commentId: M:Global.InteractionController.OnInteractionTriggerEnter(Player)
  parent: Global.InteractionController
  name: OnInteractionTriggerEnter(Player)
  nameWithType: InteractionController.OnInteractionTriggerEnter(Player)
  fullName: InteractionController.OnInteractionTriggerEnter(Player)
  spec.csharp:
  - uid: Global.InteractionController.OnInteractionTriggerEnter(Player)
    name: OnInteractionTriggerEnter
  - name: (
  - uid: Global.Player
    name: Player
  - name: )
  spec.vb:
  - uid: Global.InteractionController.OnInteractionTriggerEnter(Player)
    name: OnInteractionTriggerEnter
  - name: (
  - uid: Global.Player
    name: Player
  - name: )
- uid: Global.PortalInteractionController.OnInteractionTriggerEnter*
  commentId: Overload:Global.PortalInteractionController.OnInteractionTriggerEnter
  name: OnInteractionTriggerEnter
  nameWithType: PortalInteractionController.OnInteractionTriggerEnter
  fullName: PortalInteractionController.OnInteractionTriggerEnter
- uid: Global.Player
  commentId: T:Global.Player
  name: Player
  nameWithType: Player
  fullName: Player
- uid: Global.InteractionController.OnInteractionTriggerExit(Player)
  commentId: M:Global.InteractionController.OnInteractionTriggerExit(Player)
  parent: Global.InteractionController
  name: OnInteractionTriggerExit(Player)
  nameWithType: InteractionController.OnInteractionTriggerExit(Player)
  fullName: InteractionController.OnInteractionTriggerExit(Player)
  spec.csharp:
  - uid: Global.InteractionController.OnInteractionTriggerExit(Player)
    name: OnInteractionTriggerExit
  - name: (
  - uid: Global.Player
    name: Player
  - name: )
  spec.vb:
  - uid: Global.InteractionController.OnInteractionTriggerExit(Player)
    name: OnInteractionTriggerExit
  - name: (
  - uid: Global.Player
    name: Player
  - name: )
- uid: Global.PortalInteractionController.OnInteractionTriggerExit*
  commentId: Overload:Global.PortalInteractionController.OnInteractionTriggerExit
  name: OnInteractionTriggerExit
  nameWithType: PortalInteractionController.OnInteractionTriggerExit
  fullName: PortalInteractionController.OnInteractionTriggerExit
- uid: Global.InteractionController.OnResetObject
  commentId: M:Global.InteractionController.OnResetObject
  parent: Global.InteractionController
  name: OnResetObject()
  nameWithType: InteractionController.OnResetObject()
  fullName: InteractionController.OnResetObject()
  spec.csharp:
  - uid: Global.InteractionController.OnResetObject
    name: OnResetObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.InteractionController.OnResetObject
    name: OnResetObject
  - name: (
  - name: )
- uid: Global.PortalInteractionController.OnResetObject*
  commentId: Overload:Global.PortalInteractionController.OnResetObject
  name: OnResetObject
  nameWithType: PortalInteractionController.OnResetObject
  fullName: PortalInteractionController.OnResetObject
