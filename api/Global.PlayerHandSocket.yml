### YamlMime:ManagedReference
items:
- uid: Global.PlayerHandSocket
  commentId: T:Global.PlayerHandSocket
  id: PlayerHandSocket
  parent: Global
  children:
  - Global.PlayerHandSocket.attachedObjects
  - Global.PlayerHandSocket.GetHandUV(System.Boolean)
  - Global.PlayerHandSocket.GetIgnoreFlip
  - Global.PlayerHandSocket.GetLeftHandLocalPosition
  - Global.PlayerHandSocket.GetLeftHandWorldPosition
  - Global.PlayerHandSocket.GetRightHandLocalPosition
  - Global.PlayerHandSocket.GetRightHandWorldPosition
  - Global.PlayerHandSocket.IsHandEnabled(System.Boolean)
  - Global.PlayerHandSocket.IsHandHidden(System.Boolean)
  - Global.PlayerHandSocket.IsHandInFrontOfPlayer(System.Boolean)
  - Global.PlayerHandSocket.LocalPositionFromUV(UnityEngine.Vector2,System.Boolean)
  - Global.PlayerHandSocket.WorldPositionFromUV(UnityEngine.Vector2,System.Boolean)
  langs:
  - csharp
  - vb
  name: PlayerHandSocket
  nameWithType: PlayerHandSocket
  fullName: PlayerHandSocket
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PlayerHandSocket
    path: ../Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class PlayerHandSocket : MonoBehaviour'
    content.vb: Public Class PlayerHandSocket Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.PlayerHandSocket.attachedObjects
  commentId: F:Global.PlayerHandSocket.attachedObjects
  id: attachedObjects
  parent: Global.PlayerHandSocket
  langs:
  - csharp
  - vb
  name: attachedObjects
  nameWithType: PlayerHandSocket.attachedObjects
  fullName: PlayerHandSocket.attachedObjects
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: attachedObjects
    path: ../Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
    startLine: 46
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public List<PlayerHandSocket.HeldObject> attachedObjects
    return:
      type: System.Collections.Generic.List{PlayerHandSocket.HeldObject}
    content.vb: Public attachedObjects As List(Of PlayerHandSocket.HeldObject)
- uid: Global.PlayerHandSocket.GetHandUV(System.Boolean)
  commentId: M:Global.PlayerHandSocket.GetHandUV(System.Boolean)
  id: GetHandUV(System.Boolean)
  parent: Global.PlayerHandSocket
  langs:
  - csharp
  - vb
  name: GetHandUV(bool)
  nameWithType: PlayerHandSocket.GetHandUV(bool)
  fullName: PlayerHandSocket.GetHandUV(bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetHandUV
    path: ../Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
    startLine: 333
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2 GetHandUV(bool left = true)
    parameters:
    - id: left
      type: System.Boolean
    return:
      type: UnityEngine.Vector2
    content.vb: Public Function GetHandUV(left As Boolean = True) As Vector2
  overload: Global.PlayerHandSocket.GetHandUV*
  nameWithType.vb: PlayerHandSocket.GetHandUV(Boolean)
  fullName.vb: PlayerHandSocket.GetHandUV(Boolean)
  name.vb: GetHandUV(Boolean)
- uid: Global.PlayerHandSocket.IsHandInFrontOfPlayer(System.Boolean)
  commentId: M:Global.PlayerHandSocket.IsHandInFrontOfPlayer(System.Boolean)
  id: IsHandInFrontOfPlayer(System.Boolean)
  parent: Global.PlayerHandSocket
  langs:
  - csharp
  - vb
  name: IsHandInFrontOfPlayer(bool)
  nameWithType: PlayerHandSocket.IsHandInFrontOfPlayer(bool)
  fullName: PlayerHandSocket.IsHandInFrontOfPlayer(bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsHandInFrontOfPlayer
    path: ../Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
    startLine: 350
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsHandInFrontOfPlayer(bool left = true)
    parameters:
    - id: left
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function IsHandInFrontOfPlayer(left As Boolean = True) As Boolean
  overload: Global.PlayerHandSocket.IsHandInFrontOfPlayer*
  nameWithType.vb: PlayerHandSocket.IsHandInFrontOfPlayer(Boolean)
  fullName.vb: PlayerHandSocket.IsHandInFrontOfPlayer(Boolean)
  name.vb: IsHandInFrontOfPlayer(Boolean)
- uid: Global.PlayerHandSocket.IsHandHidden(System.Boolean)
  commentId: M:Global.PlayerHandSocket.IsHandHidden(System.Boolean)
  id: IsHandHidden(System.Boolean)
  parent: Global.PlayerHandSocket
  langs:
  - csharp
  - vb
  name: IsHandHidden(bool)
  nameWithType: PlayerHandSocket.IsHandHidden(bool)
  fullName: PlayerHandSocket.IsHandHidden(bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsHandHidden
    path: ../Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
    startLine: 366
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsHandHidden(bool left = true)
    parameters:
    - id: left
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function IsHandHidden(left As Boolean = True) As Boolean
  overload: Global.PlayerHandSocket.IsHandHidden*
  nameWithType.vb: PlayerHandSocket.IsHandHidden(Boolean)
  fullName.vb: PlayerHandSocket.IsHandHidden(Boolean)
  name.vb: IsHandHidden(Boolean)
- uid: Global.PlayerHandSocket.IsHandEnabled(System.Boolean)
  commentId: M:Global.PlayerHandSocket.IsHandEnabled(System.Boolean)
  id: IsHandEnabled(System.Boolean)
  parent: Global.PlayerHandSocket
  langs:
  - csharp
  - vb
  name: IsHandEnabled(bool)
  nameWithType: PlayerHandSocket.IsHandEnabled(bool)
  fullName: PlayerHandSocket.IsHandEnabled(bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsHandEnabled
    path: ../Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
    startLine: 383
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsHandEnabled(bool left = true)
    parameters:
    - id: left
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Function IsHandEnabled(left As Boolean = True) As Boolean
  overload: Global.PlayerHandSocket.IsHandEnabled*
  nameWithType.vb: PlayerHandSocket.IsHandEnabled(Boolean)
  fullName.vb: PlayerHandSocket.IsHandEnabled(Boolean)
  name.vb: IsHandEnabled(Boolean)
- uid: Global.PlayerHandSocket.GetIgnoreFlip
  commentId: M:Global.PlayerHandSocket.GetIgnoreFlip
  id: GetIgnoreFlip
  parent: Global.PlayerHandSocket
  langs:
  - csharp
  - vb
  name: GetIgnoreFlip()
  nameWithType: PlayerHandSocket.GetIgnoreFlip()
  fullName: PlayerHandSocket.GetIgnoreFlip()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetIgnoreFlip
    path: ../Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
    startLine: 399
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool GetIgnoreFlip()
    return:
      type: System.Boolean
    content.vb: Public Function GetIgnoreFlip() As Boolean
  overload: Global.PlayerHandSocket.GetIgnoreFlip*
- uid: Global.PlayerHandSocket.GetLeftHandWorldPosition
  commentId: M:Global.PlayerHandSocket.GetLeftHandWorldPosition
  id: GetLeftHandWorldPosition
  parent: Global.PlayerHandSocket
  langs:
  - csharp
  - vb
  name: GetLeftHandWorldPosition()
  nameWithType: PlayerHandSocket.GetLeftHandWorldPosition()
  fullName: PlayerHandSocket.GetLeftHandWorldPosition()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetLeftHandWorldPosition
    path: ../Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
    startLine: 412
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2 GetLeftHandWorldPosition()
    return:
      type: UnityEngine.Vector2
    content.vb: Public Function GetLeftHandWorldPosition() As Vector2
  overload: Global.PlayerHandSocket.GetLeftHandWorldPosition*
- uid: Global.PlayerHandSocket.GetLeftHandLocalPosition
  commentId: M:Global.PlayerHandSocket.GetLeftHandLocalPosition
  id: GetLeftHandLocalPosition
  parent: Global.PlayerHandSocket
  langs:
  - csharp
  - vb
  name: GetLeftHandLocalPosition()
  nameWithType: PlayerHandSocket.GetLeftHandLocalPosition()
  fullName: PlayerHandSocket.GetLeftHandLocalPosition()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetLeftHandLocalPosition
    path: ../Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
    startLine: 417
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2 GetLeftHandLocalPosition()
    return:
      type: UnityEngine.Vector2
    content.vb: Public Function GetLeftHandLocalPosition() As Vector2
  overload: Global.PlayerHandSocket.GetLeftHandLocalPosition*
- uid: Global.PlayerHandSocket.GetRightHandWorldPosition
  commentId: M:Global.PlayerHandSocket.GetRightHandWorldPosition
  id: GetRightHandWorldPosition
  parent: Global.PlayerHandSocket
  langs:
  - csharp
  - vb
  name: GetRightHandWorldPosition()
  nameWithType: PlayerHandSocket.GetRightHandWorldPosition()
  fullName: PlayerHandSocket.GetRightHandWorldPosition()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetRightHandWorldPosition
    path: ../Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
    startLine: 422
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2 GetRightHandWorldPosition()
    return:
      type: UnityEngine.Vector2
    content.vb: Public Function GetRightHandWorldPosition() As Vector2
  overload: Global.PlayerHandSocket.GetRightHandWorldPosition*
- uid: Global.PlayerHandSocket.GetRightHandLocalPosition
  commentId: M:Global.PlayerHandSocket.GetRightHandLocalPosition
  id: GetRightHandLocalPosition
  parent: Global.PlayerHandSocket
  langs:
  - csharp
  - vb
  name: GetRightHandLocalPosition()
  nameWithType: PlayerHandSocket.GetRightHandLocalPosition()
  fullName: PlayerHandSocket.GetRightHandLocalPosition()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetRightHandLocalPosition
    path: ../Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
    startLine: 427
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2 GetRightHandLocalPosition()
    return:
      type: UnityEngine.Vector2
    content.vb: Public Function GetRightHandLocalPosition() As Vector2
  overload: Global.PlayerHandSocket.GetRightHandLocalPosition*
- uid: Global.PlayerHandSocket.WorldPositionFromUV(UnityEngine.Vector2,System.Boolean)
  commentId: M:Global.PlayerHandSocket.WorldPositionFromUV(UnityEngine.Vector2,System.Boolean)
  id: WorldPositionFromUV(UnityEngine.Vector2,System.Boolean)
  parent: Global.PlayerHandSocket
  langs:
  - csharp
  - vb
  name: WorldPositionFromUV(Vector2, bool)
  nameWithType: PlayerHandSocket.WorldPositionFromUV(Vector2, bool)
  fullName: PlayerHandSocket.WorldPositionFromUV(UnityEngine.Vector2, bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WorldPositionFromUV
    path: ../Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
    startLine: 432
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Vector2 WorldPositionFromUV(Vector2 uv, bool ignore_flip)
    parameters:
    - id: uv
      type: UnityEngine.Vector2
    - id: ignore_flip
      type: System.Boolean
    return:
      type: UnityEngine.Vector2
    content.vb: Protected Function WorldPositionFromUV(uv As Vector2, ignore_flip As Boolean) As Vector2
  overload: Global.PlayerHandSocket.WorldPositionFromUV*
  nameWithType.vb: PlayerHandSocket.WorldPositionFromUV(Vector2, Boolean)
  fullName.vb: PlayerHandSocket.WorldPositionFromUV(UnityEngine.Vector2, Boolean)
  name.vb: WorldPositionFromUV(Vector2, Boolean)
- uid: Global.PlayerHandSocket.LocalPositionFromUV(UnityEngine.Vector2,System.Boolean)
  commentId: M:Global.PlayerHandSocket.LocalPositionFromUV(UnityEngine.Vector2,System.Boolean)
  id: LocalPositionFromUV(UnityEngine.Vector2,System.Boolean)
  parent: Global.PlayerHandSocket
  langs:
  - csharp
  - vb
  name: LocalPositionFromUV(Vector2, bool)
  nameWithType: PlayerHandSocket.LocalPositionFromUV(Vector2, bool)
  fullName: PlayerHandSocket.LocalPositionFromUV(UnityEngine.Vector2, bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LocalPositionFromUV
    path: ../Assets/Objects & Components/Entities/Player/Animations/PlayerHandSocket.cs
    startLine: 438
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Vector2 LocalPositionFromUV(Vector2 uv, bool ignore_flip)
    parameters:
    - id: uv
      type: UnityEngine.Vector2
    - id: ignore_flip
      type: System.Boolean
    return:
      type: UnityEngine.Vector2
    content.vb: Protected Function LocalPositionFromUV(uv As Vector2, ignore_flip As Boolean) As Vector2
  overload: Global.PlayerHandSocket.LocalPositionFromUV*
  nameWithType.vb: PlayerHandSocket.LocalPositionFromUV(Vector2, Boolean)
  fullName.vb: PlayerHandSocket.LocalPositionFromUV(UnityEngine.Vector2, Boolean)
  name.vb: LocalPositionFromUV(Vector2, Boolean)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.Collections.Generic.List{PlayerHandSocket.HeldObject}
  commentId: T:System.Collections.Generic.List{PlayerHandSocket.HeldObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<PlayerHandSocket.HeldObject>
  nameWithType: List<PlayerHandSocket.HeldObject>
  fullName: System.Collections.Generic.List<PlayerHandSocket.HeldObject>
  nameWithType.vb: List(Of PlayerHandSocket.HeldObject)
  fullName.vb: System.Collections.Generic.List(Of PlayerHandSocket.HeldObject)
  name.vb: List(Of PlayerHandSocket.HeldObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.PlayerHandSocket
    name: PlayerHandSocket
  - name: .
  - uid: Global.PlayerHandSocket.HeldObject
    name: HeldObject
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.PlayerHandSocket
    name: PlayerHandSocket
  - name: .
  - uid: Global.PlayerHandSocket.HeldObject
    name: HeldObject
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: Global.PlayerHandSocket.GetHandUV*
  commentId: Overload:Global.PlayerHandSocket.GetHandUV
  name: GetHandUV
  nameWithType: PlayerHandSocket.GetHandUV
  fullName: PlayerHandSocket.GetHandUV
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.PlayerHandSocket.IsHandInFrontOfPlayer*
  commentId: Overload:Global.PlayerHandSocket.IsHandInFrontOfPlayer
  name: IsHandInFrontOfPlayer
  nameWithType: PlayerHandSocket.IsHandInFrontOfPlayer
  fullName: PlayerHandSocket.IsHandInFrontOfPlayer
- uid: Global.PlayerHandSocket.IsHandHidden*
  commentId: Overload:Global.PlayerHandSocket.IsHandHidden
  name: IsHandHidden
  nameWithType: PlayerHandSocket.IsHandHidden
  fullName: PlayerHandSocket.IsHandHidden
- uid: Global.PlayerHandSocket.IsHandEnabled*
  commentId: Overload:Global.PlayerHandSocket.IsHandEnabled
  name: IsHandEnabled
  nameWithType: PlayerHandSocket.IsHandEnabled
  fullName: PlayerHandSocket.IsHandEnabled
- uid: Global.PlayerHandSocket.GetIgnoreFlip*
  commentId: Overload:Global.PlayerHandSocket.GetIgnoreFlip
  name: GetIgnoreFlip
  nameWithType: PlayerHandSocket.GetIgnoreFlip
  fullName: PlayerHandSocket.GetIgnoreFlip
- uid: Global.PlayerHandSocket.GetLeftHandWorldPosition*
  commentId: Overload:Global.PlayerHandSocket.GetLeftHandWorldPosition
  name: GetLeftHandWorldPosition
  nameWithType: PlayerHandSocket.GetLeftHandWorldPosition
  fullName: PlayerHandSocket.GetLeftHandWorldPosition
- uid: Global.PlayerHandSocket.GetLeftHandLocalPosition*
  commentId: Overload:Global.PlayerHandSocket.GetLeftHandLocalPosition
  name: GetLeftHandLocalPosition
  nameWithType: PlayerHandSocket.GetLeftHandLocalPosition
  fullName: PlayerHandSocket.GetLeftHandLocalPosition
- uid: Global.PlayerHandSocket.GetRightHandWorldPosition*
  commentId: Overload:Global.PlayerHandSocket.GetRightHandWorldPosition
  name: GetRightHandWorldPosition
  nameWithType: PlayerHandSocket.GetRightHandWorldPosition
  fullName: PlayerHandSocket.GetRightHandWorldPosition
- uid: Global.PlayerHandSocket.GetRightHandLocalPosition*
  commentId: Overload:Global.PlayerHandSocket.GetRightHandLocalPosition
  name: GetRightHandLocalPosition
  nameWithType: PlayerHandSocket.GetRightHandLocalPosition
  fullName: PlayerHandSocket.GetRightHandLocalPosition
- uid: Global.PlayerHandSocket.WorldPositionFromUV*
  commentId: Overload:Global.PlayerHandSocket.WorldPositionFromUV
  name: WorldPositionFromUV
  nameWithType: PlayerHandSocket.WorldPositionFromUV
  fullName: PlayerHandSocket.WorldPositionFromUV
- uid: Global.PlayerHandSocket.LocalPositionFromUV*
  commentId: Overload:Global.PlayerHandSocket.LocalPositionFromUV
  name: LocalPositionFromUV
  nameWithType: PlayerHandSocket.LocalPositionFromUV
  fullName: PlayerHandSocket.LocalPositionFromUV
