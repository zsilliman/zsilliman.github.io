### YamlMime:ManagedReference
items:
- uid: Global.ScreamerAuraController
  commentId: T:Global.ScreamerAuraController
  id: ScreamerAuraController
  parent: Global
  children:
  - Global.ScreamerAuraController.actor
  - Global.ScreamerAuraController.Notify(ScreamerAuraController.ScreamerNotifications)
  - Global.ScreamerAuraController.Start
  langs:
  - csharp
  - vb
  name: ScreamerAuraController
  nameWithType: ScreamerAuraController
  fullName: ScreamerAuraController
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Shared Enemies/Screamer/ScreamerAuraController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ScreamerAuraController
    path: ../Assets/Objects & Components/Entities/Enemies/Shared Enemies/Screamer/ScreamerAuraController.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class ScreamerAuraController : AuraController<ScreamerAuraController.ScreamerNotifications>'
    content.vb: Public Class ScreamerAuraController Inherits AuraController(Of ScreamerAuraController.ScreamerNotifications)
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - Global.AuraController{ScreamerAuraController.ScreamerNotifications}
  inheritedMembers:
  - Global.AuraController{ScreamerAuraController.ScreamerNotifications}.auraCreator
  - Global.AuraController{ScreamerAuraController.ScreamerNotifications}.auraComponent
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.ScreamerAuraController.actor
  commentId: F:Global.ScreamerAuraController.actor
  id: actor
  parent: Global.ScreamerAuraController
  langs:
  - csharp
  - vb
  name: actor
  nameWithType: ScreamerAuraController.actor
  fullName: ScreamerAuraController.actor
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Shared Enemies/Screamer/ScreamerAuraController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: actor
    path: ../Assets/Objects & Components/Entities/Enemies/Shared Enemies/Screamer/ScreamerAuraController.cs
    startLine: 6
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Screamer actor
    return:
      type: Global.Screamer
    content.vb: Protected actor As Screamer
- uid: Global.ScreamerAuraController.Start
  commentId: M:Global.ScreamerAuraController.Start
  id: Start
  parent: Global.ScreamerAuraController
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: ScreamerAuraController.Start()
  fullName: ScreamerAuraController.Start()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Shared Enemies/Screamer/ScreamerAuraController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Start
    path: ../Assets/Objects & Components/Entities/Enemies/Shared Enemies/Screamer/ScreamerAuraController.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Start()
    content.vb: Protected Sub Start()
  overload: Global.ScreamerAuraController.Start*
- uid: Global.ScreamerAuraController.Notify(ScreamerAuraController.ScreamerNotifications)
  commentId: M:Global.ScreamerAuraController.Notify(ScreamerAuraController.ScreamerNotifications)
  id: Notify(ScreamerAuraController.ScreamerNotifications)
  parent: Global.ScreamerAuraController
  langs:
  - csharp
  - vb
  name: Notify(ScreamerNotifications)
  nameWithType: ScreamerAuraController.Notify(ScreamerAuraController.ScreamerNotifications)
  fullName: ScreamerAuraController.Notify(ScreamerAuraController.ScreamerNotifications)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Shared Enemies/Screamer/ScreamerAuraController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Notify
    path: ../Assets/Objects & Components/Entities/Enemies/Shared Enemies/Screamer/ScreamerAuraController.cs
    startLine: 39
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nHandle any state changes in the aura creator\n"
  example: []
  syntax:
    content: public override void Notify(ScreamerAuraController.ScreamerNotifications notification)
    parameters:
    - id: notification
      type: Global.ScreamerAuraController.ScreamerNotifications
      description: State change notification
    content.vb: Public Overrides Sub Notify(notification As ScreamerAuraController.ScreamerNotifications)
  overridden: Global.AuraController{ScreamerAuraController.ScreamerNotifications}.Notify(ScreamerAuraController.ScreamerNotifications)
  overload: Global.ScreamerAuraController.Notify*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Global.AuraController{ScreamerAuraController.ScreamerNotifications}
  commentId: T:Global.AuraController{ScreamerAuraController.ScreamerNotifications}
  definition: Global.AuraController`1
  name: AuraController<ScreamerAuraController.ScreamerNotifications>
  nameWithType: AuraController<ScreamerAuraController.ScreamerNotifications>
  fullName: AuraController<ScreamerAuraController.ScreamerNotifications>
  nameWithType.vb: AuraController(Of ScreamerAuraController.ScreamerNotifications)
  fullName.vb: AuraController(Of ScreamerAuraController.ScreamerNotifications)
  name.vb: AuraController(Of ScreamerAuraController.ScreamerNotifications)
  spec.csharp:
  - uid: Global.AuraController`1
    name: AuraController
  - name: <
  - uid: Global.ScreamerAuraController
    name: ScreamerAuraController
  - name: .
  - uid: Global.ScreamerAuraController.ScreamerNotifications
    name: ScreamerNotifications
  - name: '>'
  spec.vb:
  - uid: Global.AuraController`1
    name: AuraController
  - name: (
  - name: Of
  - name: " "
  - uid: Global.ScreamerAuraController
    name: ScreamerAuraController
  - name: .
  - uid: Global.ScreamerAuraController.ScreamerNotifications
    name: ScreamerNotifications
  - name: )
- uid: Global.AuraController{ScreamerAuraController.ScreamerNotifications}.auraCreator
  commentId: F:Global.AuraController{ScreamerAuraController.ScreamerNotifications}.auraCreator
  parent: Global.AuraController{ScreamerAuraController.ScreamerNotifications}
  definition: Global.AuraController`1.auraCreator
  name: auraCreator
  nameWithType: AuraController<ScreamerAuraController.ScreamerNotifications>.auraCreator
  fullName: AuraController<ScreamerAuraController.ScreamerNotifications>.auraCreator
  nameWithType.vb: AuraController(Of ScreamerAuraController.ScreamerNotifications).auraCreator
  fullName.vb: AuraController(Of ScreamerAuraController.ScreamerNotifications).auraCreator
- uid: Global.AuraController{ScreamerAuraController.ScreamerNotifications}.auraComponent
  commentId: F:Global.AuraController{ScreamerAuraController.ScreamerNotifications}.auraComponent
  parent: Global.AuraController{ScreamerAuraController.ScreamerNotifications}
  definition: Global.AuraController`1.auraComponent
  name: auraComponent
  nameWithType: AuraController<ScreamerAuraController.ScreamerNotifications>.auraComponent
  fullName: AuraController<ScreamerAuraController.ScreamerNotifications>.auraComponent
  nameWithType.vb: AuraController(Of ScreamerAuraController.ScreamerNotifications).auraComponent
  fullName.vb: AuraController(Of ScreamerAuraController.ScreamerNotifications).auraComponent
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.AuraController`1
  commentId: T:Global.AuraController`1
  name: AuraController<T>
  nameWithType: AuraController<T>
  fullName: AuraController<T>
  nameWithType.vb: AuraController(Of T)
  fullName.vb: AuraController(Of T)
  name.vb: AuraController(Of T)
  spec.csharp:
  - uid: Global.AuraController`1
    name: AuraController
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.AuraController`1
    name: AuraController
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.AuraController`1.auraCreator
  commentId: F:Global.AuraController`1.auraCreator
  name: auraCreator
  nameWithType: AuraController<T>.auraCreator
  fullName: AuraController<T>.auraCreator
  nameWithType.vb: AuraController(Of T).auraCreator
  fullName.vb: AuraController(Of T).auraCreator
- uid: Global.AuraController`1.auraComponent
  commentId: F:Global.AuraController`1.auraComponent
  name: auraComponent
  nameWithType: AuraController<T>.auraComponent
  fullName: AuraController<T>.auraComponent
  nameWithType.vb: AuraController(Of T).auraComponent
  fullName.vb: AuraController(Of T).auraComponent
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.Screamer
  commentId: T:Global.Screamer
  name: Screamer
  nameWithType: Screamer
  fullName: Screamer
- uid: Global.ScreamerAuraController.Start*
  commentId: Overload:Global.ScreamerAuraController.Start
  name: Start
  nameWithType: ScreamerAuraController.Start
  fullName: ScreamerAuraController.Start
- uid: Global.AuraController{ScreamerAuraController.ScreamerNotifications}.Notify(ScreamerAuraController.ScreamerNotifications)
  commentId: M:Global.AuraController{ScreamerAuraController.ScreamerNotifications}.Notify(ScreamerAuraController.ScreamerNotifications)
  parent: Global.AuraController{ScreamerAuraController.ScreamerNotifications}
  definition: Global.AuraController`1.Notify(`0)
  name: Notify(ScreamerNotifications)
  nameWithType: AuraController<ScreamerAuraController.ScreamerNotifications>.Notify(ScreamerAuraController.ScreamerNotifications)
  fullName: AuraController<ScreamerAuraController.ScreamerNotifications>.Notify(ScreamerAuraController.ScreamerNotifications)
  nameWithType.vb: AuraController(Of ScreamerAuraController.ScreamerNotifications).Notify(ScreamerAuraController.ScreamerNotifications)
  fullName.vb: AuraController(Of ScreamerAuraController.ScreamerNotifications).Notify(ScreamerAuraController.ScreamerNotifications)
  spec.csharp:
  - uid: Global.AuraController{ScreamerAuraController.ScreamerNotifications}.Notify(ScreamerAuraController.ScreamerNotifications)
    name: Notify
  - name: (
  - uid: Global.ScreamerAuraController.ScreamerNotifications
    name: ScreamerNotifications
  - name: )
  spec.vb:
  - uid: Global.AuraController{ScreamerAuraController.ScreamerNotifications}.Notify(ScreamerAuraController.ScreamerNotifications)
    name: Notify
  - name: (
  - uid: Global.ScreamerAuraController.ScreamerNotifications
    name: ScreamerNotifications
  - name: )
- uid: Global.ScreamerAuraController.Notify*
  commentId: Overload:Global.ScreamerAuraController.Notify
  name: Notify
  nameWithType: ScreamerAuraController.Notify
  fullName: ScreamerAuraController.Notify
- uid: Global.ScreamerAuraController.ScreamerNotifications
  commentId: T:Global.ScreamerAuraController.ScreamerNotifications
  name: ScreamerAuraController.ScreamerNotifications
  nameWithType: ScreamerAuraController.ScreamerNotifications
  fullName: ScreamerAuraController.ScreamerNotifications
  spec.csharp:
  - uid: Global.ScreamerAuraController
    name: ScreamerAuraController
  - name: .
  - uid: Global.ScreamerAuraController.ScreamerNotifications
    name: ScreamerNotifications
  spec.vb:
  - uid: Global.ScreamerAuraController
    name: ScreamerAuraController
  - name: .
  - uid: Global.ScreamerAuraController.ScreamerNotifications
    name: ScreamerNotifications
- uid: Global.AuraController`1.Notify(`0)
  commentId: M:Global.AuraController`1.Notify(`0)
  name: Notify(T)
  nameWithType: AuraController<T>.Notify(T)
  fullName: AuraController<T>.Notify(T)
  nameWithType.vb: AuraController(Of T).Notify(T)
  fullName.vb: AuraController(Of T).Notify(T)
  spec.csharp:
  - uid: Global.AuraController`1.Notify(`0)
    name: Notify
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Global.AuraController`1.Notify(`0)
    name: Notify
  - name: (
  - name: T
  - name: )
