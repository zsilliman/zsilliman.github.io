### YamlMime:ManagedReference
items:
- uid: Global.ReflectionSystem
  commentId: T:Global.ReflectionSystem
  id: ReflectionSystem
  parent: Global
  children:
  - Global.ReflectionSystem.arrowSymbol
  - Global.ReflectionSystem.DebugMode
  - Global.ReflectionSystem.DebugModeEnd
  - Global.ReflectionSystem.DebugModeStart
  - Global.ReflectionSystem.DisableDebugMode
  - Global.ReflectionSystem.EnableDebugMode
  - Global.ReflectionSystem.GetValue(System.Object,System.Object,System.String)
  - Global.ReflectionSystem.GetValue(System.Object,System.String)
  langs:
  - csharp
  - vb
  name: ReflectionSystem
  nameWithType: ReflectionSystem
  fullName: ReflectionSystem
  type: Class
  source:
    remote:
      path: Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionSystem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ReflectionSystem
    path: ../Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionSystem.cs
    startLine: 6
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public class ReflectionSystem
    content.vb: Public Class ReflectionSystem
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.ReflectionSystem.arrowSymbol
  commentId: F:Global.ReflectionSystem.arrowSymbol
  id: arrowSymbol
  parent: Global.ReflectionSystem
  langs:
  - csharp
  - vb
  name: arrowSymbol
  nameWithType: ReflectionSystem.arrowSymbol
  fullName: ReflectionSystem.arrowSymbol
  type: Field
  source:
    remote:
      path: Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionSystem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: arrowSymbol
    path: ../Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionSystem.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static string arrowSymbol
    return:
      type: System.String
    content.vb: Public Shared arrowSymbol As String
- uid: Global.ReflectionSystem.DebugMode
  commentId: F:Global.ReflectionSystem.DebugMode
  id: DebugMode
  parent: Global.ReflectionSystem
  langs:
  - csharp
  - vb
  name: DebugMode
  nameWithType: ReflectionSystem.DebugMode
  fullName: ReflectionSystem.DebugMode
  type: Field
  source:
    remote:
      path: Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionSystem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DebugMode
    path: ../Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionSystem.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static bool DebugMode
    return:
      type: System.Boolean
    content.vb: Public Shared DebugMode As Boolean
- uid: Global.ReflectionSystem.DebugModeStart
  commentId: M:Global.ReflectionSystem.DebugModeStart
  id: DebugModeStart
  parent: Global.ReflectionSystem
  langs:
  - csharp
  - vb
  name: DebugModeStart()
  nameWithType: ReflectionSystem.DebugModeStart()
  fullName: ReflectionSystem.DebugModeStart()
  type: Method
  source:
    remote:
      path: Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionSystem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DebugModeStart
    path: ../Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionSystem.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static void DebugModeStart()
    content.vb: Public Shared Sub DebugModeStart()
  overload: Global.ReflectionSystem.DebugModeStart*
- uid: Global.ReflectionSystem.DebugModeEnd
  commentId: M:Global.ReflectionSystem.DebugModeEnd
  id: DebugModeEnd
  parent: Global.ReflectionSystem
  langs:
  - csharp
  - vb
  name: DebugModeEnd()
  nameWithType: ReflectionSystem.DebugModeEnd()
  fullName: ReflectionSystem.DebugModeEnd()
  type: Method
  source:
    remote:
      path: Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionSystem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DebugModeEnd
    path: ../Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionSystem.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static void DebugModeEnd()
    content.vb: Public Shared Sub DebugModeEnd()
  overload: Global.ReflectionSystem.DebugModeEnd*
- uid: Global.ReflectionSystem.EnableDebugMode
  commentId: M:Global.ReflectionSystem.EnableDebugMode
  id: EnableDebugMode
  parent: Global.ReflectionSystem
  langs:
  - csharp
  - vb
  name: EnableDebugMode()
  nameWithType: ReflectionSystem.EnableDebugMode()
  fullName: ReflectionSystem.EnableDebugMode()
  type: Method
  source:
    remote:
      path: Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionSystem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EnableDebugMode
    path: ../Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionSystem.cs
    startLine: 20
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static void EnableDebugMode()
    content.vb: Public Shared Sub EnableDebugMode()
  overload: Global.ReflectionSystem.EnableDebugMode*
- uid: Global.ReflectionSystem.DisableDebugMode
  commentId: M:Global.ReflectionSystem.DisableDebugMode
  id: DisableDebugMode
  parent: Global.ReflectionSystem
  langs:
  - csharp
  - vb
  name: DisableDebugMode()
  nameWithType: ReflectionSystem.DisableDebugMode()
  fullName: ReflectionSystem.DisableDebugMode()
  type: Method
  source:
    remote:
      path: Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionSystem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DisableDebugMode
    path: ../Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionSystem.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static void DisableDebugMode()
    content.vb: Public Shared Sub DisableDebugMode()
  overload: Global.ReflectionSystem.DisableDebugMode*
- uid: Global.ReflectionSystem.GetValue(System.Object,System.Object,System.String)
  commentId: M:Global.ReflectionSystem.GetValue(System.Object,System.Object,System.String)
  id: GetValue(System.Object,System.Object,System.String)
  parent: Global.ReflectionSystem
  langs:
  - csharp
  - vb
  name: GetValue(object, object, string)
  nameWithType: ReflectionSystem.GetValue(object, object, string)
  fullName: ReflectionSystem.GetValue(object, object, string)
  type: Method
  source:
    remote:
      path: Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionSystem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetValue
    path: ../Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionSystem.cs
    startLine: 36
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static object GetValue(object baseMaster, object currentMaster, string path)
    parameters:
    - id: baseMaster
      type: System.Object
    - id: currentMaster
      type: System.Object
    - id: path
      type: System.String
    return:
      type: System.Object
    content.vb: Public Shared Function GetValue(baseMaster As Object, currentMaster As Object, path As String) As Object
  overload: Global.ReflectionSystem.GetValue*
  nameWithType.vb: ReflectionSystem.GetValue(Object, Object, String)
  fullName.vb: ReflectionSystem.GetValue(Object, Object, String)
  name.vb: GetValue(Object, Object, String)
- uid: Global.ReflectionSystem.GetValue(System.Object,System.String)
  commentId: M:Global.ReflectionSystem.GetValue(System.Object,System.String)
  id: GetValue(System.Object,System.String)
  parent: Global.ReflectionSystem
  langs:
  - csharp
  - vb
  name: GetValue(object, string)
  nameWithType: ReflectionSystem.GetValue(object, string)
  fullName: ReflectionSystem.GetValue(object, string)
  type: Method
  source:
    remote:
      path: Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionSystem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetValue
    path: ../Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionSystem.cs
    startLine: 41
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static object GetValue(object baseMaster, string path)
    parameters:
    - id: baseMaster
      type: System.Object
    - id: path
      type: System.String
    return:
      type: System.Object
    content.vb: Public Shared Function GetValue(baseMaster As Object, path As String) As Object
  overload: Global.ReflectionSystem.GetValue*
  nameWithType.vb: ReflectionSystem.GetValue(Object, String)
  fullName.vb: ReflectionSystem.GetValue(Object, String)
  name.vb: GetValue(Object, String)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.ReflectionSystem.DebugModeStart*
  commentId: Overload:Global.ReflectionSystem.DebugModeStart
  name: DebugModeStart
  nameWithType: ReflectionSystem.DebugModeStart
  fullName: ReflectionSystem.DebugModeStart
- uid: Global.ReflectionSystem.DebugModeEnd*
  commentId: Overload:Global.ReflectionSystem.DebugModeEnd
  name: DebugModeEnd
  nameWithType: ReflectionSystem.DebugModeEnd
  fullName: ReflectionSystem.DebugModeEnd
- uid: Global.ReflectionSystem.EnableDebugMode*
  commentId: Overload:Global.ReflectionSystem.EnableDebugMode
  name: EnableDebugMode
  nameWithType: ReflectionSystem.EnableDebugMode
  fullName: ReflectionSystem.EnableDebugMode
- uid: Global.ReflectionSystem.DisableDebugMode*
  commentId: Overload:Global.ReflectionSystem.DisableDebugMode
  name: DisableDebugMode
  nameWithType: ReflectionSystem.DisableDebugMode
  fullName: ReflectionSystem.DisableDebugMode
- uid: Global.ReflectionSystem.GetValue*
  commentId: Overload:Global.ReflectionSystem.GetValue
  name: GetValue
  nameWithType: ReflectionSystem.GetValue
  fullName: ReflectionSystem.GetValue
