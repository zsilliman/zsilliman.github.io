### YamlMime:ManagedReference
items:
- uid: Global.Item
  commentId: T:Global.Item
  id: Item
  parent: Global
  children:
  - Global.Item.classRequirement
  - Global.Item.codeName
  - Global.Item.description
  - Global.Item.effect
  - Global.Item.Equals(System.Object)
  - Global.Item.GetHashCode
  - Global.Item.image
  - Global.Item.itemName
  - Global.Item.levelRequirement
  - Global.Item.lowerBound
  - Global.Item.rarity
  - Global.Item.SetStatsChange(System.Int32)
  - Global.Item.stackable
  - Global.Item.statsChange
  - Global.Item.statsType
  - Global.Item.tags
  - Global.Item.type
  - Global.Item.upperBound
  - Global.Item.variableStats
  langs:
  - csharp
  - vb
  name: Item
  nameWithType: Item
  fullName: Item
  type: Class
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Item
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [CreateAssetMenu(menuName = "Scriptable Object: Item")]

      public class Item : ScriptableObject
    content.vb: >-
      <CreateAssetMenu(menuName:="Scriptable Object: Item")>

      Public Class Item Inherits ScriptableObject
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: UnityEngine.CreateAssetMenuAttribute
    ctor: UnityEngine.CreateAssetMenuAttribute.#ctor
    arguments: []
    namedArguments:
    - name: menuName
      type: System.String
      value: 'Scriptable Object: Item'
- uid: Global.Item.itemName
  commentId: F:Global.Item.itemName
  id: itemName
  parent: Global.Item
  langs:
  - csharp
  - vb
  name: itemName
  nameWithType: Item.itemName
  fullName: Item.itemName
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: itemName
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public string itemName
    return:
      type: System.String
    content.vb: Public itemName As String
- uid: Global.Item.codeName
  commentId: F:Global.Item.codeName
  id: codeName
  parent: Global.Item
  langs:
  - csharp
  - vb
  name: codeName
  nameWithType: Item.codeName
  fullName: Item.codeName
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: codeName
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public string codeName
    return:
      type: System.String
    content.vb: Public codeName As String
- uid: Global.Item.type
  commentId: F:Global.Item.type
  id: type
  parent: Global.Item
  langs:
  - csharp
  - vb
  name: type
  nameWithType: Item.type
  fullName: Item.type
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: type
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Itemtype type
    return:
      type: Global.Itemtype
    content.vb: Public type As Itemtype
- uid: Global.Item.rarity
  commentId: F:Global.Item.rarity
  id: rarity
  parent: Global.Item
  langs:
  - csharp
  - vb
  name: rarity
  nameWithType: Item.rarity
  fullName: Item.rarity
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: rarity
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Rarity rarity
    return:
      type: Global.Rarity
    content.vb: Public rarity As Rarity
- uid: Global.Item.image
  commentId: F:Global.Item.image
  id: image
  parent: Global.Item
  langs:
  - csharp
  - vb
  name: image
  nameWithType: Item.image
  fullName: Item.image
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: image
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Sprite image
    return:
      type: UnityEngine.Sprite
    content.vb: Public image As Sprite
- uid: Global.Item.statsType
  commentId: F:Global.Item.statsType
  id: statsType
  parent: Global.Item
  langs:
  - csharp
  - vb
  name: statsType
  nameWithType: Item.statsType
  fullName: Item.statsType
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: statsType
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public StatsType statsType
    return:
      type: Global.StatsType
    content.vb: Public statsType As StatsType
- uid: Global.Item.statsChange
  commentId: F:Global.Item.statsChange
  id: statsChange
  parent: Global.Item
  langs:
  - csharp
  - vb
  name: statsChange
  nameWithType: Item.statsChange
  fullName: Item.statsChange
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: statsChange
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int statsChange
    return:
      type: System.Int32
    content.vb: Public statsChange As Integer
- uid: Global.Item.variableStats
  commentId: F:Global.Item.variableStats
  id: variableStats
  parent: Global.Item
  langs:
  - csharp
  - vb
  name: variableStats
  nameWithType: Item.variableStats
  fullName: Item.variableStats
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: variableStats
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool variableStats
    return:
      type: System.Boolean
    content.vb: Public variableStats As Boolean
- uid: Global.Item.lowerBound
  commentId: F:Global.Item.lowerBound
  id: lowerBound
  parent: Global.Item
  langs:
  - csharp
  - vb
  name: lowerBound
  nameWithType: Item.lowerBound
  fullName: Item.lowerBound
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: lowerBound
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int lowerBound
    return:
      type: System.Int32
    content.vb: Public lowerBound As Integer
- uid: Global.Item.upperBound
  commentId: F:Global.Item.upperBound
  id: upperBound
  parent: Global.Item
  langs:
  - csharp
  - vb
  name: upperBound
  nameWithType: Item.upperBound
  fullName: Item.upperBound
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: upperBound
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int upperBound
    return:
      type: System.Int32
    content.vb: Public upperBound As Integer
- uid: Global.Item.description
  commentId: F:Global.Item.description
  id: description
  parent: Global.Item
  langs:
  - csharp
  - vb
  name: description
  nameWithType: Item.description
  fullName: Item.description
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: description
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [TextArea(3, 10)]

      public string description
    return:
      type: System.String
    content.vb: >-
      <TextArea(3, 10)>

      Public description As String
  attributes:
  - type: UnityEngine.TextAreaAttribute
    ctor: UnityEngine.TextAreaAttribute.#ctor(System.Int32,System.Int32)
    arguments:
    - type: System.Int32
      value: 3
    - type: System.Int32
      value: 10
- uid: Global.Item.effect
  commentId: F:Global.Item.effect
  id: effect
  parent: Global.Item
  langs:
  - csharp
  - vb
  name: effect
  nameWithType: Item.effect
  fullName: Item.effect
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: effect
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [TextArea(3, 10)]

      public string effect
    return:
      type: System.String
    content.vb: >-
      <TextArea(3, 10)>

      Public effect As String
  attributes:
  - type: UnityEngine.TextAreaAttribute
    ctor: UnityEngine.TextAreaAttribute.#ctor(System.Int32,System.Int32)
    arguments:
    - type: System.Int32
      value: 3
    - type: System.Int32
      value: 10
- uid: Global.Item.stackable
  commentId: F:Global.Item.stackable
  id: stackable
  parent: Global.Item
  langs:
  - csharp
  - vb
  name: stackable
  nameWithType: Item.stackable
  fullName: Item.stackable
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: stackable
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool stackable
    return:
      type: System.Boolean
    content.vb: Public stackable As Boolean
- uid: Global.Item.tags
  commentId: F:Global.Item.tags
  id: tags
  parent: Global.Item
  langs:
  - csharp
  - vb
  name: tags
  nameWithType: Item.tags
  fullName: Item.tags
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: tags
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Tags[] tags
    return:
      type: Global.Tags[]
    content.vb: Public tags As Tags()
- uid: Global.Item.levelRequirement
  commentId: F:Global.Item.levelRequirement
  id: levelRequirement
  parent: Global.Item
  langs:
  - csharp
  - vb
  name: levelRequirement
  nameWithType: Item.levelRequirement
  fullName: Item.levelRequirement
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: levelRequirement
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 20
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int levelRequirement
    return:
      type: System.Int32
    content.vb: Public levelRequirement As Integer
- uid: Global.Item.classRequirement
  commentId: F:Global.Item.classRequirement
  id: classRequirement
  parent: Global.Item
  langs:
  - csharp
  - vb
  name: classRequirement
  nameWithType: Item.classRequirement
  fullName: Item.classRequirement
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: classRequirement
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 21
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public ClassRequirement classRequirement
    return:
      type: Global.ClassRequirement
    content.vb: Public classRequirement As ClassRequirement
- uid: Global.Item.Equals(System.Object)
  commentId: M:Global.Item.Equals(System.Object)
  id: Equals(System.Object)
  parent: Global.Item
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Item.Equals(object)
  fullName: Item.Equals(object)
  type: Method
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Equals
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: UnityEngine.Object.Equals(System.Object)
  overload: Global.Item.Equals*
  nameWithType.vb: Item.Equals(Object)
  fullName.vb: Item.Equals(Object)
  name.vb: Equals(Object)
- uid: Global.Item.GetHashCode
  commentId: M:Global.Item.GetHashCode
  id: GetHashCode
  parent: Global.Item
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Item.GetHashCode()
  fullName: Item.GetHashCode()
  type: Method
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetHashCode
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 33
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: UnityEngine.Object.GetHashCode
  overload: Global.Item.GetHashCode*
- uid: Global.Item.SetStatsChange(System.Int32)
  commentId: M:Global.Item.SetStatsChange(System.Int32)
  id: SetStatsChange(System.Int32)
  parent: Global.Item
  langs:
  - csharp
  - vb
  name: SetStatsChange(int)
  nameWithType: Item.SetStatsChange(int)
  fullName: Item.SetStatsChange(int)
  type: Method
  source:
    remote:
      path: Assets/User Interface/Inventory/Item.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetStatsChange
    path: ../Assets/User Interface/Inventory/Item.cs
    startLine: 38
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetStatsChange(int statsChange)
    parameters:
    - id: statsChange
      type: System.Int32
    content.vb: Public Sub SetStatsChange(statsChange As Integer)
  overload: Global.Item.SetStatsChange*
  nameWithType.vb: Item.SetStatsChange(Integer)
  fullName.vb: Item.SetStatsChange(Integer)
  name.vb: SetStatsChange(Integer)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.Itemtype
  commentId: T:Global.Itemtype
  name: Itemtype
  nameWithType: Itemtype
  fullName: Itemtype
- uid: Global.Rarity
  commentId: T:Global.Rarity
  name: Rarity
  nameWithType: Rarity
  fullName: Rarity
- uid: UnityEngine.Sprite
  commentId: T:UnityEngine.Sprite
  parent: UnityEngine
  isExternal: true
  name: Sprite
  nameWithType: Sprite
  fullName: UnityEngine.Sprite
- uid: Global.StatsType
  commentId: T:Global.StatsType
  name: StatsType
  nameWithType: StatsType
  fullName: StatsType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.Tags[]
  isExternal: true
  name: Tags[]
  nameWithType: Tags[]
  fullName: Tags[]
  nameWithType.vb: Tags()
  fullName.vb: Tags()
  name.vb: Tags()
  spec.csharp:
  - uid: Global.Tags
    name: Tags
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.Tags
    name: Tags
  - name: (
  - name: )
- uid: Global.ClassRequirement
  commentId: T:Global.ClassRequirement
  name: ClassRequirement
  nameWithType: ClassRequirement
  fullName: ClassRequirement
- uid: UnityEngine.Object.Equals(System.Object)
  commentId: M:UnityEngine.Object.Equals(System.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: Equals(object)
  nameWithType: Object.Equals(object)
  fullName: UnityEngine.Object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: UnityEngine.Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: UnityEngine.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.Item.Equals*
  commentId: Overload:Global.Item.Equals
  name: Equals
  nameWithType: Item.Equals
  fullName: Item.Equals
- uid: UnityEngine.Object.GetHashCode
  commentId: M:UnityEngine.Object.GetHashCode
  parent: UnityEngine.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: UnityEngine.Object.GetHashCode()
  spec.csharp:
  - uid: UnityEngine.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: UnityEngine.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: Global.Item.GetHashCode*
  commentId: Overload:Global.Item.GetHashCode
  name: GetHashCode
  nameWithType: Item.GetHashCode
  fullName: Item.GetHashCode
- uid: Global.Item.SetStatsChange*
  commentId: Overload:Global.Item.SetStatsChange
  name: SetStatsChange
  nameWithType: Item.SetStatsChange
  fullName: Item.SetStatsChange
