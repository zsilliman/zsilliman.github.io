### YamlMime:ManagedReference
items:
- uid: Global.AbilityController
  commentId: T:Global.AbilityController
  id: AbilityController
  parent: Global
  children:
  - Global.AbilityController.CanCast(PlayerStats,AbilityController.AbilityType)
  - Global.AbilityController.CanSwapAbility
  - Global.AbilityController.CastAbility(PlayerStats,AbilityController.AbilityType,UnityEngine.Vector2)
  - Global.AbilityController.CurrentAbility
  - Global.AbilityController.CurrentAbilityType
  - Global.AbilityController.IsUsingPrimary
  - Global.AbilityController.onCurrentAbilityChanged
  - Global.AbilityController.primaryAbility
  - Global.AbilityController.primaryAbilityType
  - Global.AbilityController.secondaryAbility
  - Global.AbilityController.secondaryAbilityType
  - Global.AbilityController.SetPrimaryAbility(AbilityController.AbilityType)
  - Global.AbilityController.SetSecondaryAbility(AbilityController.AbilityType)
  - Global.AbilityController.SwitchAbilities
  - Global.AbilityController.UpdateAuraLifetime(System.Single)
  - Global.AbilityController.UpdateMaxAuraCount(System.Int32)
  langs:
  - csharp
  - vb
  name: AbilityController
  nameWithType: AbilityController
  fullName: AbilityController
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AbilityController
    path: ../Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
    startLine: 5
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class AbilityController : MonoBehaviour'
    content.vb: Public Class AbilityController Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.AbilityController.primaryAbility
  commentId: F:Global.AbilityController.primaryAbility
  id: primaryAbility
  parent: Global.AbilityController
  langs:
  - csharp
  - vb
  name: primaryAbility
  nameWithType: AbilityController.primaryAbility
  fullName: AbilityController.primaryAbility
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: primaryAbility
    path: ../Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [HideInInspector]

      public Ability primaryAbility
    return:
      type: Global.Ability
    content.vb: >-
      <HideInInspector>

      Public primaryAbility As Ability
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.AbilityController.secondaryAbility
  commentId: F:Global.AbilityController.secondaryAbility
  id: secondaryAbility
  parent: Global.AbilityController
  langs:
  - csharp
  - vb
  name: secondaryAbility
  nameWithType: AbilityController.secondaryAbility
  fullName: AbilityController.secondaryAbility
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: secondaryAbility
    path: ../Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Ability secondaryAbility
    return:
      type: Global.Ability
    content.vb: Public secondaryAbility As Ability
- uid: Global.AbilityController.primaryAbilityType
  commentId: F:Global.AbilityController.primaryAbilityType
  id: primaryAbilityType
  parent: Global.AbilityController
  langs:
  - csharp
  - vb
  name: primaryAbilityType
  nameWithType: AbilityController.primaryAbilityType
  fullName: AbilityController.primaryAbilityType
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: primaryAbilityType
    path: ../Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public AbilityController.AbilityType primaryAbilityType
    return:
      type: Global.AbilityController.AbilityType
    content.vb: Public primaryAbilityType As AbilityController.AbilityType
- uid: Global.AbilityController.secondaryAbilityType
  commentId: F:Global.AbilityController.secondaryAbilityType
  id: secondaryAbilityType
  parent: Global.AbilityController
  langs:
  - csharp
  - vb
  name: secondaryAbilityType
  nameWithType: AbilityController.secondaryAbilityType
  fullName: AbilityController.secondaryAbilityType
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: secondaryAbilityType
    path: ../Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public AbilityController.AbilityType secondaryAbilityType
    return:
      type: Global.AbilityController.AbilityType
    content.vb: Public secondaryAbilityType As AbilityController.AbilityType
- uid: Global.AbilityController.IsUsingPrimary
  commentId: P:Global.AbilityController.IsUsingPrimary
  id: IsUsingPrimary
  parent: Global.AbilityController
  langs:
  - csharp
  - vb
  name: IsUsingPrimary
  nameWithType: AbilityController.IsUsingPrimary
  fullName: AbilityController.IsUsingPrimary
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsUsingPrimary
    path: ../Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsUsingPrimary { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsUsingPrimary As Boolean
  overload: Global.AbilityController.IsUsingPrimary*
- uid: Global.AbilityController.CurrentAbility
  commentId: P:Global.AbilityController.CurrentAbility
  id: CurrentAbility
  parent: Global.AbilityController
  langs:
  - csharp
  - vb
  name: CurrentAbility
  nameWithType: AbilityController.CurrentAbility
  fullName: AbilityController.CurrentAbility
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CurrentAbility
    path: ../Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Ability CurrentAbility { get; }
    parameters: []
    return:
      type: Global.Ability
    content.vb: Public ReadOnly Property CurrentAbility As Ability
  overload: Global.AbilityController.CurrentAbility*
- uid: Global.AbilityController.CurrentAbilityType
  commentId: P:Global.AbilityController.CurrentAbilityType
  id: CurrentAbilityType
  parent: Global.AbilityController
  langs:
  - csharp
  - vb
  name: CurrentAbilityType
  nameWithType: AbilityController.CurrentAbilityType
  fullName: AbilityController.CurrentAbilityType
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CurrentAbilityType
    path: ../Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public AbilityController.AbilityType CurrentAbilityType { get; }
    parameters: []
    return:
      type: Global.AbilityController.AbilityType
    content.vb: Public ReadOnly Property CurrentAbilityType As AbilityController.AbilityType
  overload: Global.AbilityController.CurrentAbilityType*
- uid: Global.AbilityController.onCurrentAbilityChanged
  commentId: F:Global.AbilityController.onCurrentAbilityChanged
  id: onCurrentAbilityChanged
  parent: Global.AbilityController
  langs:
  - csharp
  - vb
  name: onCurrentAbilityChanged
  nameWithType: AbilityController.onCurrentAbilityChanged
  fullName: AbilityController.onCurrentAbilityChanged
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: onCurrentAbilityChanged
    path: ../Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public UnityEvent onCurrentAbilityChanged
    return:
      type: UnityEngine.Events.UnityEvent
    content.vb: Public onCurrentAbilityChanged As UnityEvent
- uid: Global.AbilityController.UpdateAuraLifetime(System.Single)
  commentId: M:Global.AbilityController.UpdateAuraLifetime(System.Single)
  id: UpdateAuraLifetime(System.Single)
  parent: Global.AbilityController
  langs:
  - csharp
  - vb
  name: UpdateAuraLifetime(float)
  nameWithType: AbilityController.UpdateAuraLifetime(float)
  fullName: AbilityController.UpdateAuraLifetime(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UpdateAuraLifetime
    path: ../Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
    startLine: 61
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UpdateAuraLifetime(float new_aura_lifetime)
    parameters:
    - id: new_aura_lifetime
      type: System.Single
    content.vb: Public Sub UpdateAuraLifetime(new_aura_lifetime As Single)
  overload: Global.AbilityController.UpdateAuraLifetime*
  nameWithType.vb: AbilityController.UpdateAuraLifetime(Single)
  fullName.vb: AbilityController.UpdateAuraLifetime(Single)
  name.vb: UpdateAuraLifetime(Single)
- uid: Global.AbilityController.UpdateMaxAuraCount(System.Int32)
  commentId: M:Global.AbilityController.UpdateMaxAuraCount(System.Int32)
  id: UpdateMaxAuraCount(System.Int32)
  parent: Global.AbilityController
  langs:
  - csharp
  - vb
  name: UpdateMaxAuraCount(int)
  nameWithType: AbilityController.UpdateMaxAuraCount(int)
  fullName: AbilityController.UpdateMaxAuraCount(int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UpdateMaxAuraCount
    path: ../Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
    startLine: 69
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UpdateMaxAuraCount(int new_max_count)
    parameters:
    - id: new_max_count
      type: System.Int32
    content.vb: Public Sub UpdateMaxAuraCount(new_max_count As Integer)
  overload: Global.AbilityController.UpdateMaxAuraCount*
  nameWithType.vb: AbilityController.UpdateMaxAuraCount(Integer)
  fullName.vb: AbilityController.UpdateMaxAuraCount(Integer)
  name.vb: UpdateMaxAuraCount(Integer)
- uid: Global.AbilityController.CastAbility(PlayerStats,AbilityController.AbilityType,UnityEngine.Vector2)
  commentId: M:Global.AbilityController.CastAbility(PlayerStats,AbilityController.AbilityType,UnityEngine.Vector2)
  id: CastAbility(PlayerStats,AbilityController.AbilityType,UnityEngine.Vector2)
  parent: Global.AbilityController
  langs:
  - csharp
  - vb
  name: CastAbility(PlayerStats, AbilityType, Vector2)
  nameWithType: AbilityController.CastAbility(PlayerStats, AbilityController.AbilityType, Vector2)
  fullName: AbilityController.CastAbility(PlayerStats, AbilityController.AbilityType, UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CastAbility
    path: ../Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
    startLine: 77
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void CastAbility(PlayerStats stats, AbilityController.AbilityType ability, Vector2 direction)
    parameters:
    - id: stats
      type: Global.PlayerStats
    - id: ability
      type: Global.AbilityController.AbilityType
    - id: direction
      type: UnityEngine.Vector2
    content.vb: Public Sub CastAbility(stats As PlayerStats, ability As AbilityController.AbilityType, direction As Vector2)
  overload: Global.AbilityController.CastAbility*
- uid: Global.AbilityController.CanCast(PlayerStats,AbilityController.AbilityType)
  commentId: M:Global.AbilityController.CanCast(PlayerStats,AbilityController.AbilityType)
  id: CanCast(PlayerStats,AbilityController.AbilityType)
  parent: Global.AbilityController
  langs:
  - csharp
  - vb
  name: CanCast(PlayerStats, AbilityType)
  nameWithType: AbilityController.CanCast(PlayerStats, AbilityController.AbilityType)
  fullName: AbilityController.CanCast(PlayerStats, AbilityController.AbilityType)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CanCast
    path: ../Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
    startLine: 89
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool CanCast(PlayerStats stats, AbilityController.AbilityType ability)
    parameters:
    - id: stats
      type: Global.PlayerStats
    - id: ability
      type: Global.AbilityController.AbilityType
    return:
      type: System.Boolean
    content.vb: Public Function CanCast(stats As PlayerStats, ability As AbilityController.AbilityType) As Boolean
  overload: Global.AbilityController.CanCast*
- uid: Global.AbilityController.CanSwapAbility
  commentId: M:Global.AbilityController.CanSwapAbility
  id: CanSwapAbility
  parent: Global.AbilityController
  langs:
  - csharp
  - vb
  name: CanSwapAbility()
  nameWithType: AbilityController.CanSwapAbility()
  fullName: AbilityController.CanSwapAbility()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CanSwapAbility
    path: ../Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
    startLine: 95
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool CanSwapAbility()
    return:
      type: System.Boolean
    content.vb: Public Function CanSwapAbility() As Boolean
  overload: Global.AbilityController.CanSwapAbility*
- uid: Global.AbilityController.SetPrimaryAbility(AbilityController.AbilityType)
  commentId: M:Global.AbilityController.SetPrimaryAbility(AbilityController.AbilityType)
  id: SetPrimaryAbility(AbilityController.AbilityType)
  parent: Global.AbilityController
  langs:
  - csharp
  - vb
  name: SetPrimaryAbility(AbilityType)
  nameWithType: AbilityController.SetPrimaryAbility(AbilityController.AbilityType)
  fullName: AbilityController.SetPrimaryAbility(AbilityController.AbilityType)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetPrimaryAbility
    path: ../Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
    startLine: 102
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetPrimaryAbility(AbilityController.AbilityType abilityType)
    parameters:
    - id: abilityType
      type: Global.AbilityController.AbilityType
    content.vb: Public Sub SetPrimaryAbility(abilityType As AbilityController.AbilityType)
  overload: Global.AbilityController.SetPrimaryAbility*
- uid: Global.AbilityController.SetSecondaryAbility(AbilityController.AbilityType)
  commentId: M:Global.AbilityController.SetSecondaryAbility(AbilityController.AbilityType)
  id: SetSecondaryAbility(AbilityController.AbilityType)
  parent: Global.AbilityController
  langs:
  - csharp
  - vb
  name: SetSecondaryAbility(AbilityType)
  nameWithType: AbilityController.SetSecondaryAbility(AbilityController.AbilityType)
  fullName: AbilityController.SetSecondaryAbility(AbilityController.AbilityType)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetSecondaryAbility
    path: ../Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
    startLine: 111
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetSecondaryAbility(AbilityController.AbilityType abilityType)
    parameters:
    - id: abilityType
      type: Global.AbilityController.AbilityType
    content.vb: Public Sub SetSecondaryAbility(abilityType As AbilityController.AbilityType)
  overload: Global.AbilityController.SetSecondaryAbility*
- uid: Global.AbilityController.SwitchAbilities
  commentId: M:Global.AbilityController.SwitchAbilities
  id: SwitchAbilities
  parent: Global.AbilityController
  langs:
  - csharp
  - vb
  name: SwitchAbilities()
  nameWithType: AbilityController.SwitchAbilities()
  fullName: AbilityController.SwitchAbilities()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SwitchAbilities
    path: ../Assets/Objects & Components/Entities/Player/Abilities/AbilityController.cs
    startLine: 120
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SwitchAbilities()
    content.vb: Public Sub SwitchAbilities()
  overload: Global.AbilityController.SwitchAbilities*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.Ability
  commentId: T:Global.Ability
  name: Ability
  nameWithType: Ability
  fullName: Ability
- uid: Global.AbilityController.AbilityType
  commentId: T:Global.AbilityController.AbilityType
  name: AbilityController.AbilityType
  nameWithType: AbilityController.AbilityType
  fullName: AbilityController.AbilityType
  spec.csharp:
  - uid: Global.AbilityController
    name: AbilityController
  - name: .
  - uid: Global.AbilityController.AbilityType
    name: AbilityType
  spec.vb:
  - uid: Global.AbilityController
    name: AbilityController
  - name: .
  - uid: Global.AbilityController.AbilityType
    name: AbilityType
- uid: Global.AbilityController.IsUsingPrimary*
  commentId: Overload:Global.AbilityController.IsUsingPrimary
  name: IsUsingPrimary
  nameWithType: AbilityController.IsUsingPrimary
  fullName: AbilityController.IsUsingPrimary
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.AbilityController.CurrentAbility*
  commentId: Overload:Global.AbilityController.CurrentAbility
  name: CurrentAbility
  nameWithType: AbilityController.CurrentAbility
  fullName: AbilityController.CurrentAbility
- uid: Global.AbilityController.CurrentAbilityType*
  commentId: Overload:Global.AbilityController.CurrentAbilityType
  name: CurrentAbilityType
  nameWithType: AbilityController.CurrentAbilityType
  fullName: AbilityController.CurrentAbilityType
- uid: UnityEngine.Events.UnityEvent
  commentId: T:UnityEngine.Events.UnityEvent
  parent: UnityEngine.Events
  isExternal: true
  name: UnityEvent
  nameWithType: UnityEvent
  fullName: UnityEngine.Events.UnityEvent
- uid: UnityEngine.Events
  commentId: N:UnityEngine.Events
  isExternal: true
  name: UnityEngine.Events
  nameWithType: UnityEngine.Events
  fullName: UnityEngine.Events
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Events
    name: Events
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Events
    name: Events
    isExternal: true
- uid: Global.AbilityController.UpdateAuraLifetime*
  commentId: Overload:Global.AbilityController.UpdateAuraLifetime
  name: UpdateAuraLifetime
  nameWithType: AbilityController.UpdateAuraLifetime
  fullName: AbilityController.UpdateAuraLifetime
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.AbilityController.UpdateMaxAuraCount*
  commentId: Overload:Global.AbilityController.UpdateMaxAuraCount
  name: UpdateMaxAuraCount
  nameWithType: AbilityController.UpdateMaxAuraCount
  fullName: AbilityController.UpdateMaxAuraCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.AbilityController.CastAbility*
  commentId: Overload:Global.AbilityController.CastAbility
  name: CastAbility
  nameWithType: AbilityController.CastAbility
  fullName: AbilityController.CastAbility
- uid: Global.PlayerStats
  commentId: T:Global.PlayerStats
  name: PlayerStats
  nameWithType: PlayerStats
  fullName: PlayerStats
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.AbilityController.CanCast*
  commentId: Overload:Global.AbilityController.CanCast
  name: CanCast
  nameWithType: AbilityController.CanCast
  fullName: AbilityController.CanCast
- uid: Global.AbilityController.CanSwapAbility*
  commentId: Overload:Global.AbilityController.CanSwapAbility
  name: CanSwapAbility
  nameWithType: AbilityController.CanSwapAbility
  fullName: AbilityController.CanSwapAbility
- uid: Global.AbilityController.SetPrimaryAbility*
  commentId: Overload:Global.AbilityController.SetPrimaryAbility
  name: SetPrimaryAbility
  nameWithType: AbilityController.SetPrimaryAbility
  fullName: AbilityController.SetPrimaryAbility
- uid: Global.AbilityController.SetSecondaryAbility*
  commentId: Overload:Global.AbilityController.SetSecondaryAbility
  name: SetSecondaryAbility
  nameWithType: AbilityController.SetSecondaryAbility
  fullName: AbilityController.SetSecondaryAbility
- uid: Global.AbilityController.SwitchAbilities*
  commentId: Overload:Global.AbilityController.SwitchAbilities
  name: SwitchAbilities
  nameWithType: AbilityController.SwitchAbilities
  fullName: AbilityController.SwitchAbilities
