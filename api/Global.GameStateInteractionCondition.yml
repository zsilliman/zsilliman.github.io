### YamlMime:ManagedReference
items:
- uid: Global.GameStateInteractionCondition
  commentId: T:Global.GameStateInteractionCondition
  id: GameStateInteractionCondition
  parent: Global
  children:
  - Global.GameStateInteractionCondition.ConditionState
  - Global.GameStateInteractionCondition.OnGameStateCondition(AscendState)
  - Global.GameStateInteractionCondition.SetupCondition(Interactable)
  langs:
  - csharp
  - vb
  name: GameStateInteractionCondition
  nameWithType: GameStateInteractionCondition
  fullName: GameStateInteractionCondition
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Conditions/GameStateInteractionCondition.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GameStateInteractionCondition
    path: ../Assets/Objects & Components/World/Interactable/Conditions/GameStateInteractionCondition.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class GameStateInteractionCondition : Interactable.InteractionCondition
    content.vb: >-
      <Serializable>

      Public Class GameStateInteractionCondition Inherits Interactable.InteractionCondition
  inheritance:
  - System.Object
  - Global.Interactable.InteractionCondition
  inheritedMembers:
  - Global.Interactable.InteractionCondition.interactable
  - Global.Interactable.InteractionCondition.InvokeOnConditionMet
  - Global.Interactable.InteractionCondition.UpdateCondition
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.GameStateInteractionCondition.ConditionState
  commentId: F:Global.GameStateInteractionCondition.ConditionState
  id: ConditionState
  parent: Global.GameStateInteractionCondition
  langs:
  - csharp
  - vb
  name: ConditionState
  nameWithType: GameStateInteractionCondition.ConditionState
  fullName: GameStateInteractionCondition.ConditionState
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Conditions/GameStateInteractionCondition.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ConditionState
    path: ../Assets/Objects & Components/World/Interactable/Conditions/GameStateInteractionCondition.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public AscendState ConditionState
    return:
      type: Global.AscendState
    content.vb: >-
      <SerializeField>

      Public ConditionState As AscendState
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.GameStateInteractionCondition.SetupCondition(Interactable)
  commentId: M:Global.GameStateInteractionCondition.SetupCondition(Interactable)
  id: SetupCondition(Interactable)
  parent: Global.GameStateInteractionCondition
  langs:
  - csharp
  - vb
  name: SetupCondition(Interactable)
  nameWithType: GameStateInteractionCondition.SetupCondition(Interactable)
  fullName: GameStateInteractionCondition.SetupCondition(Interactable)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Conditions/GameStateInteractionCondition.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetupCondition
    path: ../Assets/Objects & Components/World/Interactable/Conditions/GameStateInteractionCondition.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void SetupCondition(Interactable interactable)
    parameters:
    - id: interactable
      type: Global.Interactable
    content.vb: Public Overrides Sub SetupCondition(interactable As Interactable)
  overridden: Global.Interactable.InteractionCondition.SetupCondition(Interactable)
  overload: Global.GameStateInteractionCondition.SetupCondition*
- uid: Global.GameStateInteractionCondition.OnGameStateCondition(AscendState)
  commentId: M:Global.GameStateInteractionCondition.OnGameStateCondition(AscendState)
  id: OnGameStateCondition(AscendState)
  parent: Global.GameStateInteractionCondition
  langs:
  - csharp
  - vb
  name: OnGameStateCondition(AscendState)
  nameWithType: GameStateInteractionCondition.OnGameStateCondition(AscendState)
  fullName: GameStateInteractionCondition.OnGameStateCondition(AscendState)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Conditions/GameStateInteractionCondition.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnGameStateCondition
    path: ../Assets/Objects & Components/World/Interactable/Conditions/GameStateInteractionCondition.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void OnGameStateCondition(AscendState state)
    parameters:
    - id: state
      type: Global.AscendState
    content.vb: Public Sub OnGameStateCondition(state As AscendState)
  overload: Global.GameStateInteractionCondition.OnGameStateCondition*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.Interactable.InteractionCondition
  commentId: T:Global.Interactable.InteractionCondition
  name: Interactable.InteractionCondition
  nameWithType: Interactable.InteractionCondition
  fullName: Interactable.InteractionCondition
  spec.csharp:
  - uid: Global.Interactable
    name: Interactable
  - name: .
  - uid: Global.Interactable.InteractionCondition
    name: InteractionCondition
  spec.vb:
  - uid: Global.Interactable
    name: Interactable
  - name: .
  - uid: Global.Interactable.InteractionCondition
    name: InteractionCondition
- uid: Global.Interactable.InteractionCondition.interactable
  commentId: F:Global.Interactable.InteractionCondition.interactable
  parent: Global.Interactable.InteractionCondition
  name: interactable
  nameWithType: Interactable.InteractionCondition.interactable
  fullName: Interactable.InteractionCondition.interactable
- uid: Global.Interactable.InteractionCondition.InvokeOnConditionMet
  commentId: M:Global.Interactable.InteractionCondition.InvokeOnConditionMet
  parent: Global.Interactable.InteractionCondition
  name: InvokeOnConditionMet()
  nameWithType: Interactable.InteractionCondition.InvokeOnConditionMet()
  fullName: Interactable.InteractionCondition.InvokeOnConditionMet()
  spec.csharp:
  - uid: Global.Interactable.InteractionCondition.InvokeOnConditionMet
    name: InvokeOnConditionMet
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Interactable.InteractionCondition.InvokeOnConditionMet
    name: InvokeOnConditionMet
  - name: (
  - name: )
- uid: Global.Interactable.InteractionCondition.UpdateCondition
  commentId: M:Global.Interactable.InteractionCondition.UpdateCondition
  parent: Global.Interactable.InteractionCondition
  name: UpdateCondition()
  nameWithType: Interactable.InteractionCondition.UpdateCondition()
  fullName: Interactable.InteractionCondition.UpdateCondition()
  spec.csharp:
  - uid: Global.Interactable.InteractionCondition.UpdateCondition
    name: UpdateCondition
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Interactable.InteractionCondition.UpdateCondition
    name: UpdateCondition
  - name: (
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.AscendState
  commentId: T:Global.AscendState
  name: AscendState
  nameWithType: AscendState
  fullName: AscendState
- uid: Global.Interactable.InteractionCondition.SetupCondition(Interactable)
  commentId: M:Global.Interactable.InteractionCondition.SetupCondition(Interactable)
  parent: Global.Interactable.InteractionCondition
  name: SetupCondition(Interactable)
  nameWithType: Interactable.InteractionCondition.SetupCondition(Interactable)
  fullName: Interactable.InteractionCondition.SetupCondition(Interactable)
  spec.csharp:
  - uid: Global.Interactable.InteractionCondition.SetupCondition(Interactable)
    name: SetupCondition
  - name: (
  - uid: Global.Interactable
    name: Interactable
  - name: )
  spec.vb:
  - uid: Global.Interactable.InteractionCondition.SetupCondition(Interactable)
    name: SetupCondition
  - name: (
  - uid: Global.Interactable
    name: Interactable
  - name: )
- uid: Global.GameStateInteractionCondition.SetupCondition*
  commentId: Overload:Global.GameStateInteractionCondition.SetupCondition
  name: SetupCondition
  nameWithType: GameStateInteractionCondition.SetupCondition
  fullName: GameStateInteractionCondition.SetupCondition
- uid: Global.Interactable
  commentId: T:Global.Interactable
  name: Interactable
  nameWithType: Interactable
  fullName: Interactable
- uid: Global.GameStateInteractionCondition.OnGameStateCondition*
  commentId: Overload:Global.GameStateInteractionCondition.OnGameStateCondition
  name: OnGameStateCondition
  nameWithType: GameStateInteractionCondition.OnGameStateCondition
  fullName: GameStateInteractionCondition.OnGameStateCondition
