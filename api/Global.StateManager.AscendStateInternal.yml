### YamlMime:ManagedReference
items:
- uid: Global.StateManager.AscendStateInternal
  commentId: T:Global.StateManager.AscendStateInternal
  id: StateManager.AscendStateInternal
  parent: Global
  children:
  - Global.StateManager.AscendStateInternal.Equals(System.Object)
  - Global.StateManager.AscendStateInternal.GetHashCode
  - Global.StateManager.AscendStateInternal.ID
  - Global.StateManager.AscendStateInternal.Name
  - Global.StateManager.AscendStateInternal.Owner
  langs:
  - csharp
  - vb
  name: StateManager.AscendStateInternal
  nameWithType: StateManager.AscendStateInternal
  fullName: StateManager.AscendStateInternal
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AscendStateInternal
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 47
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class StateManager.AscendStateInternal
    content.vb: >-
      <Serializable>

      Public Class StateManager.AscendStateInternal
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.StateManager.AscendStateInternal.Name
  commentId: F:Global.StateManager.AscendStateInternal.Name
  id: Name
  parent: Global.StateManager.AscendStateInternal
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: StateManager.AscendStateInternal.Name
  fullName: StateManager.AscendStateInternal.Name
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Name
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 52
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public string Name
    return:
      type: System.String
    content.vb: >-
      <SerializeField>

      Public Name As String
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.StateManager.AscendStateInternal.ID
  commentId: F:Global.StateManager.AscendStateInternal.ID
  id: ID
  parent: Global.StateManager.AscendStateInternal
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: StateManager.AscendStateInternal.ID
  fullName: StateManager.AscendStateInternal.ID
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ID
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 54
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public int ID
    return:
      type: System.Int32
    content.vb: >-
      <SerializeField>

      Public ID As Integer
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.StateManager.AscendStateInternal.Owner
  commentId: F:Global.StateManager.AscendStateInternal.Owner
  id: Owner
  parent: Global.StateManager.AscendStateInternal
  langs:
  - csharp
  - vb
  name: Owner
  nameWithType: StateManager.AscendStateInternal.Owner
  fullName: StateManager.AscendStateInternal.Owner
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Owner
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 56
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public string Owner
    return:
      type: System.String
    content.vb: >-
      <SerializeField>

      Public Owner As String
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.StateManager.AscendStateInternal.Equals(System.Object)
  commentId: M:Global.StateManager.AscendStateInternal.Equals(System.Object)
  id: Equals(System.Object)
  parent: Global.StateManager.AscendStateInternal
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: StateManager.AscendStateInternal.Equals(object)
  fullName: StateManager.AscendStateInternal.Equals(object)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Equals
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 58
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Global.StateManager.AscendStateInternal.Equals*
  nameWithType.vb: StateManager.AscendStateInternal.Equals(Object)
  fullName.vb: StateManager.AscendStateInternal.Equals(Object)
  name.vb: Equals(Object)
- uid: Global.StateManager.AscendStateInternal.GetHashCode
  commentId: M:Global.StateManager.AscendStateInternal.GetHashCode
  id: GetHashCode
  parent: Global.StateManager.AscendStateInternal
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: StateManager.AscendStateInternal.GetHashCode()
  fullName: StateManager.AscendStateInternal.GetHashCode()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetHashCode
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 68
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: Global.StateManager.AscendStateInternal.GetHashCode*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.StateManager.AscendStateInternal.Equals*
  commentId: Overload:Global.StateManager.AscendStateInternal.Equals
  name: Equals
  nameWithType: StateManager.AscendStateInternal.Equals
  fullName: StateManager.AscendStateInternal.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: Global.StateManager.AscendStateInternal.GetHashCode*
  commentId: Overload:Global.StateManager.AscendStateInternal.GetHashCode
  name: GetHashCode
  nameWithType: StateManager.AscendStateInternal.GetHashCode
  fullName: StateManager.AscendStateInternal.GetHashCode
