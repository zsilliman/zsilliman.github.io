### YamlMime:ManagedReference
items:
- uid: Global.SceneSaveData
  commentId: T:Global.SceneSaveData
  id: SceneSaveData
  parent: Global
  children:
  - Global.SceneSaveData.#ctor
  - Global.SceneSaveData.ScenePath
  - Global.SceneSaveData.SceneStateSave
  - Global.SceneSaveData.Sections
  - Global.SceneSaveData.ToDebugString
  langs:
  - csharp
  - vb
  name: SceneSaveData
  nameWithType: SceneSaveData
  fullName: SceneSaveData
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/SaveGame/SceneSaveData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SceneSaveData
    path: ../Assets/Objects & Components/SaveGame/SceneSaveData.cs
    startLine: 5
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class SceneSaveData
    content.vb: >-
      <Serializable>

      Public Class SceneSaveData
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.SceneSaveData.ScenePath
  commentId: F:Global.SceneSaveData.ScenePath
  id: ScenePath
  parent: Global.SceneSaveData
  langs:
  - csharp
  - vb
  name: ScenePath
  nameWithType: SceneSaveData.ScenePath
  fullName: SceneSaveData.ScenePath
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/SaveGame/SceneSaveData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ScenePath
    path: ../Assets/Objects & Components/SaveGame/SceneSaveData.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public string ScenePath
    return:
      type: System.String
    content.vb: >-
      <SerializeField>

      Public ScenePath As String
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.SceneSaveData.Sections
  commentId: F:Global.SceneSaveData.Sections
  id: Sections
  parent: Global.SceneSaveData
  langs:
  - csharp
  - vb
  name: Sections
  nameWithType: SceneSaveData.Sections
  fullName: SceneSaveData.Sections
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/SaveGame/SceneSaveData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Sections
    path: ../Assets/Objects & Components/SaveGame/SceneSaveData.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public List<SectionSaveData> Sections
    return:
      type: System.Collections.Generic.List{SectionSaveData}
    content.vb: >-
      <SerializeField>

      Public Sections As List(Of SectionSaveData)
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.SceneSaveData.SceneStateSave
  commentId: F:Global.SceneSaveData.SceneStateSave
  id: SceneStateSave
  parent: Global.SceneSaveData
  langs:
  - csharp
  - vb
  name: SceneStateSave
  nameWithType: SceneSaveData.SceneStateSave
  fullName: SceneSaveData.SceneStateSave
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/SaveGame/SceneSaveData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SceneStateSave
    path: ../Assets/Objects & Components/SaveGame/SceneSaveData.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public StateManager.StateManagerSaveData SceneStateSave
    return:
      type: Global.StateManager.StateManagerSaveData
    content.vb: >-
      <SerializeField>

      Public SceneStateSave As StateManager.StateManagerSaveData
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.SceneSaveData.#ctor
  commentId: M:Global.SceneSaveData.#ctor
  id: '#ctor'
  parent: Global.SceneSaveData
  langs:
  - csharp
  - vb
  name: SceneSaveData()
  nameWithType: SceneSaveData.SceneSaveData()
  fullName: SceneSaveData.SceneSaveData()
  type: Constructor
  source:
    remote:
      path: Assets/Objects & Components/SaveGame/SceneSaveData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: .ctor
    path: ../Assets/Objects & Components/SaveGame/SceneSaveData.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nCreates a \n"
  example: []
  syntax:
    content: public SceneSaveData()
    content.vb: Public Sub New()
  overload: Global.SceneSaveData.#ctor*
  nameWithType.vb: SceneSaveData.New()
  fullName.vb: SceneSaveData.New()
  name.vb: New()
- uid: Global.SceneSaveData.ToDebugString
  commentId: M:Global.SceneSaveData.ToDebugString
  id: ToDebugString
  parent: Global.SceneSaveData
  langs:
  - csharp
  - vb
  name: ToDebugString()
  nameWithType: SceneSaveData.ToDebugString()
  fullName: SceneSaveData.ToDebugString()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/SaveGame/SceneSaveData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ToDebugString
    path: ../Assets/Objects & Components/SaveGame/SceneSaveData.cs
    startLine: 38
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public string ToDebugString()
    return:
      type: System.String
    content.vb: Public Function ToDebugString() As String
  overload: Global.SceneSaveData.ToDebugString*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.List{SectionSaveData}
  commentId: T:System.Collections.Generic.List{SectionSaveData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SectionSaveData>
  nameWithType: List<SectionSaveData>
  fullName: System.Collections.Generic.List<SectionSaveData>
  nameWithType.vb: List(Of SectionSaveData)
  fullName.vb: System.Collections.Generic.List(Of SectionSaveData)
  name.vb: List(Of SectionSaveData)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.SectionSaveData
    name: SectionSaveData
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.SectionSaveData
    name: SectionSaveData
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: Global.StateManager.StateManagerSaveData
  commentId: T:Global.StateManager.StateManagerSaveData
  name: StateManager.StateManagerSaveData
  nameWithType: StateManager.StateManagerSaveData
  fullName: StateManager.StateManagerSaveData
  spec.csharp:
  - uid: Global.StateManager
    name: StateManager
  - name: .
  - uid: Global.StateManager.StateManagerSaveData
    name: StateManagerSaveData
  spec.vb:
  - uid: Global.StateManager
    name: StateManager
  - name: .
  - uid: Global.StateManager.StateManagerSaveData
    name: StateManagerSaveData
- uid: Global.SceneSaveData.#ctor*
  commentId: Overload:Global.SceneSaveData.#ctor
  name: SceneSaveData
  nameWithType: SceneSaveData.SceneSaveData
  fullName: SceneSaveData.SceneSaveData
  nameWithType.vb: SceneSaveData.New
  fullName.vb: SceneSaveData.New
  name.vb: New
- uid: Global.SceneSaveData.ToDebugString*
  commentId: Overload:Global.SceneSaveData.ToDebugString
  name: ToDebugString
  nameWithType: SceneSaveData.ToDebugString
  fullName: SceneSaveData.ToDebugString
