### YamlMime:ManagedReference
items:
- uid: Global.EnemyMovementController`2
  commentId: T:Global.EnemyMovementController`2
  id: EnemyMovementController`2
  parent: Global
  children:
  - Global.EnemyMovementController`2.#ctor
  - Global.EnemyMovementController`2.CollideX
  - Global.EnemyMovementController`2.CollideY
  - Global.EnemyMovementController`2.CurrentState
  - Global.EnemyMovementController`2.EndCharge
  - Global.EnemyMovementController`2.Enemy
  - Global.EnemyMovementController`2.GetCollideXCallback
  - Global.EnemyMovementController`2.GetCollideYCallback
  - Global.EnemyMovementController`2.GetOverlapActorCallback
  - Global.EnemyMovementController`2.GetOverlapTriggerCallback
  - Global.EnemyMovementController`2.GetTimeInState
  - Global.EnemyMovementController`2.Initialize(IntEnemy)
  - Global.EnemyMovementController`2.MovementProperties
  - Global.EnemyMovementController`2.OnCollideX(IntSolid)
  - Global.EnemyMovementController`2.OnCollideY(IntSolid)
  - Global.EnemyMovementController`2.OnOverlapActor(IntActor)
  - Global.EnemyMovementController`2.OnOverlapTrigger(IntTrigger)
  - Global.EnemyMovementController`2.osm
  - Global.EnemyMovementController`2.OverlapActor
  - Global.EnemyMovementController`2.OverlapTrigger
  - Global.EnemyMovementController`2.RegisterCollideXCallback(IntObject.SolidAction)
  - Global.EnemyMovementController`2.RegisterCollideYCallback(IntObject.SolidAction)
  - Global.EnemyMovementController`2.RegisterForStateEnter(`1,OptionStateMachine{`1}.TransitionAction)
  - Global.EnemyMovementController`2.RegisterForStateExit(`1,OptionStateMachine{`1}.TransitionAction)
  - Global.EnemyMovementController`2.RegisterOverlapActorCallback(IntObject.ActorAction)
  - Global.EnemyMovementController`2.RegisterOverlapTriggerCallback(IntObject.TriggerAction)
  - Global.EnemyMovementController`2.Reset
  - Global.EnemyMovementController`2.StartCharge
  - Global.EnemyMovementController`2.UnregisterCollideXCallback(IntObject.SolidAction)
  - Global.EnemyMovementController`2.UnregisterCollideYCallback(IntObject.SolidAction)
  - Global.EnemyMovementController`2.UnregisterForStateEnter(`1,OptionStateMachine{`1}.TransitionAction)
  - Global.EnemyMovementController`2.UnregisterForStateExit(`1,OptionStateMachine{`1}.TransitionAction)
  - Global.EnemyMovementController`2.UnregisterOverlapActorCallback(IntObject.ActorAction)
  - Global.EnemyMovementController`2.UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
  - Global.EnemyMovementController`2.Update
  langs:
  - csharp
  - vb
  name: EnemyMovementController<T, U>
  nameWithType: EnemyMovementController<T, U>
  fullName: EnemyMovementController<T, U>
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EnemyMovementController
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public abstract class EnemyMovementController<T, U> where T : class
    typeParameters:
    - id: T
    - id: U
    content.vb: >-
      <Serializable>

      Public MustInherit Class EnemyMovementController(Of T As Class, U)
  inheritance:
  - System.Object
  derivedClasses:
  - Global.FlyingMovementController
  - Global.HopMovementController
  - Global.MiniChargeMovementController
  - Global.SwimMovementController
  - Global.WalkMovementController
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  nameWithType.vb: EnemyMovementController(Of T, U)
  fullName.vb: EnemyMovementController(Of T, U)
  name.vb: EnemyMovementController(Of T, U)
- uid: Global.EnemyMovementController`2.MovementProperties
  commentId: F:Global.EnemyMovementController`2.MovementProperties
  id: MovementProperties
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: MovementProperties
  nameWithType: EnemyMovementController<T, U>.MovementProperties
  fullName: EnemyMovementController<T, U>.MovementProperties
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MovementProperties
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public T MovementProperties
    return:
      type: '{T}'
    content.vb: Public MovementProperties As T
  nameWithType.vb: EnemyMovementController(Of T, U).MovementProperties
  fullName.vb: EnemyMovementController(Of T, U).MovementProperties
- uid: Global.EnemyMovementController`2.Enemy
  commentId: F:Global.EnemyMovementController`2.Enemy
  id: Enemy
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: Enemy
  nameWithType: EnemyMovementController<T, U>.Enemy
  fullName: EnemyMovementController<T, U>.Enemy
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Enemy
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntEnemy Enemy
    return:
      type: Global.IntEnemy
    content.vb: Protected Enemy As IntEnemy
  nameWithType.vb: EnemyMovementController(Of T, U).Enemy
  fullName.vb: EnemyMovementController(Of T, U).Enemy
- uid: Global.EnemyMovementController`2.osm
  commentId: F:Global.EnemyMovementController`2.osm
  id: osm
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: osm
  nameWithType: EnemyMovementController<T, U>.osm
  fullName: EnemyMovementController<T, U>.osm
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: osm
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected OptionStateMachine<U> osm
    return:
      type: Global.OptionStateMachine{{U}}
    content.vb: Protected osm As OptionStateMachine(Of U)
  nameWithType.vb: EnemyMovementController(Of T, U).osm
  fullName.vb: EnemyMovementController(Of T, U).osm
- uid: Global.EnemyMovementController`2.CollideX
  commentId: F:Global.EnemyMovementController`2.CollideX
  id: CollideX
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: CollideX
  nameWithType: EnemyMovementController<T, U>.CollideX
  fullName: EnemyMovementController<T, U>.CollideX
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CollideX
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntObject.SolidAction CollideX
    return:
      type: Global.IntObject.SolidAction
    content.vb: Protected CollideX As IntObject.SolidAction
  nameWithType.vb: EnemyMovementController(Of T, U).CollideX
  fullName.vb: EnemyMovementController(Of T, U).CollideX
- uid: Global.EnemyMovementController`2.CollideY
  commentId: F:Global.EnemyMovementController`2.CollideY
  id: CollideY
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: CollideY
  nameWithType: EnemyMovementController<T, U>.CollideY
  fullName: EnemyMovementController<T, U>.CollideY
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CollideY
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntObject.SolidAction CollideY
    return:
      type: Global.IntObject.SolidAction
    content.vb: Protected CollideY As IntObject.SolidAction
  nameWithType.vb: EnemyMovementController(Of T, U).CollideY
  fullName.vb: EnemyMovementController(Of T, U).CollideY
- uid: Global.EnemyMovementController`2.OverlapActor
  commentId: F:Global.EnemyMovementController`2.OverlapActor
  id: OverlapActor
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: OverlapActor
  nameWithType: EnemyMovementController<T, U>.OverlapActor
  fullName: EnemyMovementController<T, U>.OverlapActor
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OverlapActor
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntObject.ActorAction OverlapActor
    return:
      type: Global.IntObject.ActorAction
    content.vb: Protected OverlapActor As IntObject.ActorAction
  nameWithType.vb: EnemyMovementController(Of T, U).OverlapActor
  fullName.vb: EnemyMovementController(Of T, U).OverlapActor
- uid: Global.EnemyMovementController`2.OverlapTrigger
  commentId: F:Global.EnemyMovementController`2.OverlapTrigger
  id: OverlapTrigger
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: OverlapTrigger
  nameWithType: EnemyMovementController<T, U>.OverlapTrigger
  fullName: EnemyMovementController<T, U>.OverlapTrigger
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OverlapTrigger
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntObject.TriggerAction OverlapTrigger
    return:
      type: Global.IntObject.TriggerAction
    content.vb: Protected OverlapTrigger As IntObject.TriggerAction
  nameWithType.vb: EnemyMovementController(Of T, U).OverlapTrigger
  fullName.vb: EnemyMovementController(Of T, U).OverlapTrigger
- uid: Global.EnemyMovementController`2.StartCharge
  commentId: F:Global.EnemyMovementController`2.StartCharge
  id: StartCharge
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: StartCharge
  nameWithType: EnemyMovementController<T, U>.StartCharge
  fullName: EnemyMovementController<T, U>.StartCharge
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: StartCharge
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntObject.Action StartCharge
    return:
      type: Global.IntObject.Action
    content.vb: Protected StartCharge As IntObject.Action
  nameWithType.vb: EnemyMovementController(Of T, U).StartCharge
  fullName.vb: EnemyMovementController(Of T, U).StartCharge
- uid: Global.EnemyMovementController`2.EndCharge
  commentId: F:Global.EnemyMovementController`2.EndCharge
  id: EndCharge
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: EndCharge
  nameWithType: EnemyMovementController<T, U>.EndCharge
  fullName: EnemyMovementController<T, U>.EndCharge
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EndCharge
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntObject.Action EndCharge
    return:
      type: Global.IntObject.Action
    content.vb: Protected EndCharge As IntObject.Action
  nameWithType.vb: EnemyMovementController(Of T, U).EndCharge
  fullName.vb: EnemyMovementController(Of T, U).EndCharge
- uid: Global.EnemyMovementController`2.CurrentState
  commentId: P:Global.EnemyMovementController`2.CurrentState
  id: CurrentState
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: CurrentState
  nameWithType: EnemyMovementController<T, U>.CurrentState
  fullName: EnemyMovementController<T, U>.CurrentState
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CurrentState
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public U CurrentState { get; }
    parameters: []
    return:
      type: '{U}'
    content.vb: Public ReadOnly Property CurrentState As U
  overload: Global.EnemyMovementController`2.CurrentState*
  nameWithType.vb: EnemyMovementController(Of T, U).CurrentState
  fullName.vb: EnemyMovementController(Of T, U).CurrentState
- uid: Global.EnemyMovementController`2.#ctor
  commentId: M:Global.EnemyMovementController`2.#ctor
  id: '#ctor'
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: EnemyMovementController()
  nameWithType: EnemyMovementController<T, U>.EnemyMovementController()
  fullName: EnemyMovementController<T, U>.EnemyMovementController()
  type: Constructor
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: .ctor
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 21
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public EnemyMovementController()
    content.vb: Public Sub New()
  overload: Global.EnemyMovementController`2.#ctor*
  nameWithType.vb: EnemyMovementController(Of T, U).New()
  fullName.vb: EnemyMovementController(Of T, U).New()
  name.vb: New()
- uid: Global.EnemyMovementController`2.Initialize(IntEnemy)
  commentId: M:Global.EnemyMovementController`2.Initialize(IntEnemy)
  id: Initialize(IntEnemy)
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: Initialize(IntEnemy)
  nameWithType: EnemyMovementController<T, U>.Initialize(IntEnemy)
  fullName: EnemyMovementController<T, U>.Initialize(IntEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Initialize
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 26
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void Initialize(IntEnemy enemy)
    parameters:
    - id: enemy
      type: Global.IntEnemy
    content.vb: Public Overridable Sub Initialize(enemy As IntEnemy)
  overload: Global.EnemyMovementController`2.Initialize*
  nameWithType.vb: EnemyMovementController(Of T, U).Initialize(IntEnemy)
  fullName.vb: EnemyMovementController(Of T, U).Initialize(IntEnemy)
- uid: Global.EnemyMovementController`2.GetTimeInState
  commentId: M:Global.EnemyMovementController`2.GetTimeInState
  id: GetTimeInState
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: GetTimeInState()
  nameWithType: EnemyMovementController<T, U>.GetTimeInState()
  fullName: EnemyMovementController<T, U>.GetTimeInState()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetTimeInState
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 31
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float GetTimeInState()
    return:
      type: System.Single
    content.vb: Public Function GetTimeInState() As Single
  overload: Global.EnemyMovementController`2.GetTimeInState*
  nameWithType.vb: EnemyMovementController(Of T, U).GetTimeInState()
  fullName.vb: EnemyMovementController(Of T, U).GetTimeInState()
- uid: Global.EnemyMovementController`2.Update
  commentId: M:Global.EnemyMovementController`2.Update
  id: Update
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: EnemyMovementController<T, U>.Update()
  fullName: EnemyMovementController<T, U>.Update()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Update
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 37
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public abstract void Update()
    content.vb: Public MustOverride Sub Update()
  overload: Global.EnemyMovementController`2.Update*
  nameWithType.vb: EnemyMovementController(Of T, U).Update()
  fullName.vb: EnemyMovementController(Of T, U).Update()
- uid: Global.EnemyMovementController`2.Reset
  commentId: M:Global.EnemyMovementController`2.Reset
  id: Reset
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: EnemyMovementController<T, U>.Reset()
  fullName: EnemyMovementController<T, U>.Reset()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Reset
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 39
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void Reset()
    content.vb: Public Overridable Sub Reset()
  overload: Global.EnemyMovementController`2.Reset*
  nameWithType.vb: EnemyMovementController(Of T, U).Reset()
  fullName.vb: EnemyMovementController(Of T, U).Reset()
- uid: Global.EnemyMovementController`2.RegisterForStateEnter(`1,OptionStateMachine{`1}.TransitionAction)
  commentId: M:Global.EnemyMovementController`2.RegisterForStateEnter(`1,OptionStateMachine{`1}.TransitionAction)
  id: RegisterForStateEnter(`1,OptionStateMachine{`1}.TransitionAction)
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: RegisterForStateEnter(U, TransitionAction)
  nameWithType: EnemyMovementController<T, U>.RegisterForStateEnter(U, OptionStateMachine<U>.TransitionAction)
  fullName: EnemyMovementController<T, U>.RegisterForStateEnter(U, OptionStateMachine<U>.TransitionAction)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RegisterForStateEnter
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 44
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void RegisterForStateEnter(U state, OptionStateMachine<U>.TransitionAction callback)
    parameters:
    - id: state
      type: '{U}'
    - id: callback
      type: Global.OptionStateMachine{{U}}.TransitionAction
    content.vb: Public Sub RegisterForStateEnter(state As U, callback As OptionStateMachine(Of U).TransitionAction)
  overload: Global.EnemyMovementController`2.RegisterForStateEnter*
  nameWithType.vb: EnemyMovementController(Of T, U).RegisterForStateEnter(U, OptionStateMachine(Of U).TransitionAction)
  fullName.vb: EnemyMovementController(Of T, U).RegisterForStateEnter(U, OptionStateMachine(Of U).TransitionAction)
- uid: Global.EnemyMovementController`2.UnregisterForStateEnter(`1,OptionStateMachine{`1}.TransitionAction)
  commentId: M:Global.EnemyMovementController`2.UnregisterForStateEnter(`1,OptionStateMachine{`1}.TransitionAction)
  id: UnregisterForStateEnter(`1,OptionStateMachine{`1}.TransitionAction)
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: UnregisterForStateEnter(U, TransitionAction)
  nameWithType: EnemyMovementController<T, U>.UnregisterForStateEnter(U, OptionStateMachine<U>.TransitionAction)
  fullName: EnemyMovementController<T, U>.UnregisterForStateEnter(U, OptionStateMachine<U>.TransitionAction)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UnregisterForStateEnter
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 49
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UnregisterForStateEnter(U state, OptionStateMachine<U>.TransitionAction callback)
    parameters:
    - id: state
      type: '{U}'
    - id: callback
      type: Global.OptionStateMachine{{U}}.TransitionAction
    content.vb: Public Sub UnregisterForStateEnter(state As U, callback As OptionStateMachine(Of U).TransitionAction)
  overload: Global.EnemyMovementController`2.UnregisterForStateEnter*
  nameWithType.vb: EnemyMovementController(Of T, U).UnregisterForStateEnter(U, OptionStateMachine(Of U).TransitionAction)
  fullName.vb: EnemyMovementController(Of T, U).UnregisterForStateEnter(U, OptionStateMachine(Of U).TransitionAction)
- uid: Global.EnemyMovementController`2.RegisterForStateExit(`1,OptionStateMachine{`1}.TransitionAction)
  commentId: M:Global.EnemyMovementController`2.RegisterForStateExit(`1,OptionStateMachine{`1}.TransitionAction)
  id: RegisterForStateExit(`1,OptionStateMachine{`1}.TransitionAction)
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: RegisterForStateExit(U, TransitionAction)
  nameWithType: EnemyMovementController<T, U>.RegisterForStateExit(U, OptionStateMachine<U>.TransitionAction)
  fullName: EnemyMovementController<T, U>.RegisterForStateExit(U, OptionStateMachine<U>.TransitionAction)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RegisterForStateExit
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 54
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void RegisterForStateExit(U state, OptionStateMachine<U>.TransitionAction callback)
    parameters:
    - id: state
      type: '{U}'
    - id: callback
      type: Global.OptionStateMachine{{U}}.TransitionAction
    content.vb: Public Sub RegisterForStateExit(state As U, callback As OptionStateMachine(Of U).TransitionAction)
  overload: Global.EnemyMovementController`2.RegisterForStateExit*
  nameWithType.vb: EnemyMovementController(Of T, U).RegisterForStateExit(U, OptionStateMachine(Of U).TransitionAction)
  fullName.vb: EnemyMovementController(Of T, U).RegisterForStateExit(U, OptionStateMachine(Of U).TransitionAction)
- uid: Global.EnemyMovementController`2.UnregisterForStateExit(`1,OptionStateMachine{`1}.TransitionAction)
  commentId: M:Global.EnemyMovementController`2.UnregisterForStateExit(`1,OptionStateMachine{`1}.TransitionAction)
  id: UnregisterForStateExit(`1,OptionStateMachine{`1}.TransitionAction)
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: UnregisterForStateExit(U, TransitionAction)
  nameWithType: EnemyMovementController<T, U>.UnregisterForStateExit(U, OptionStateMachine<U>.TransitionAction)
  fullName: EnemyMovementController<T, U>.UnregisterForStateExit(U, OptionStateMachine<U>.TransitionAction)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UnregisterForStateExit
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 59
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UnregisterForStateExit(U state, OptionStateMachine<U>.TransitionAction callback)
    parameters:
    - id: state
      type: '{U}'
    - id: callback
      type: Global.OptionStateMachine{{U}}.TransitionAction
    content.vb: Public Sub UnregisterForStateExit(state As U, callback As OptionStateMachine(Of U).TransitionAction)
  overload: Global.EnemyMovementController`2.UnregisterForStateExit*
  nameWithType.vb: EnemyMovementController(Of T, U).UnregisterForStateExit(U, OptionStateMachine(Of U).TransitionAction)
  fullName.vb: EnemyMovementController(Of T, U).UnregisterForStateExit(U, OptionStateMachine(Of U).TransitionAction)
- uid: Global.EnemyMovementController`2.RegisterCollideXCallback(IntObject.SolidAction)
  commentId: M:Global.EnemyMovementController`2.RegisterCollideXCallback(IntObject.SolidAction)
  id: RegisterCollideXCallback(IntObject.SolidAction)
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: RegisterCollideXCallback(SolidAction)
  nameWithType: EnemyMovementController<T, U>.RegisterCollideXCallback(IntObject.SolidAction)
  fullName: EnemyMovementController<T, U>.RegisterCollideXCallback(IntObject.SolidAction)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RegisterCollideXCallback
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 68
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void RegisterCollideXCallback(IntObject.SolidAction callback)
    parameters:
    - id: callback
      type: Global.IntObject.SolidAction
    content.vb: Public Sub RegisterCollideXCallback(callback As IntObject.SolidAction)
  overload: Global.EnemyMovementController`2.RegisterCollideXCallback*
  nameWithType.vb: EnemyMovementController(Of T, U).RegisterCollideXCallback(IntObject.SolidAction)
  fullName.vb: EnemyMovementController(Of T, U).RegisterCollideXCallback(IntObject.SolidAction)
- uid: Global.EnemyMovementController`2.UnregisterCollideXCallback(IntObject.SolidAction)
  commentId: M:Global.EnemyMovementController`2.UnregisterCollideXCallback(IntObject.SolidAction)
  id: UnregisterCollideXCallback(IntObject.SolidAction)
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: UnregisterCollideXCallback(SolidAction)
  nameWithType: EnemyMovementController<T, U>.UnregisterCollideXCallback(IntObject.SolidAction)
  fullName: EnemyMovementController<T, U>.UnregisterCollideXCallback(IntObject.SolidAction)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UnregisterCollideXCallback
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 73
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UnregisterCollideXCallback(IntObject.SolidAction callback)
    parameters:
    - id: callback
      type: Global.IntObject.SolidAction
    content.vb: Public Sub UnregisterCollideXCallback(callback As IntObject.SolidAction)
  overload: Global.EnemyMovementController`2.UnregisterCollideXCallback*
  nameWithType.vb: EnemyMovementController(Of T, U).UnregisterCollideXCallback(IntObject.SolidAction)
  fullName.vb: EnemyMovementController(Of T, U).UnregisterCollideXCallback(IntObject.SolidAction)
- uid: Global.EnemyMovementController`2.RegisterCollideYCallback(IntObject.SolidAction)
  commentId: M:Global.EnemyMovementController`2.RegisterCollideYCallback(IntObject.SolidAction)
  id: RegisterCollideYCallback(IntObject.SolidAction)
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: RegisterCollideYCallback(SolidAction)
  nameWithType: EnemyMovementController<T, U>.RegisterCollideYCallback(IntObject.SolidAction)
  fullName: EnemyMovementController<T, U>.RegisterCollideYCallback(IntObject.SolidAction)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RegisterCollideYCallback
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 78
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void RegisterCollideYCallback(IntObject.SolidAction callback)
    parameters:
    - id: callback
      type: Global.IntObject.SolidAction
    content.vb: Public Sub RegisterCollideYCallback(callback As IntObject.SolidAction)
  overload: Global.EnemyMovementController`2.RegisterCollideYCallback*
  nameWithType.vb: EnemyMovementController(Of T, U).RegisterCollideYCallback(IntObject.SolidAction)
  fullName.vb: EnemyMovementController(Of T, U).RegisterCollideYCallback(IntObject.SolidAction)
- uid: Global.EnemyMovementController`2.UnregisterCollideYCallback(IntObject.SolidAction)
  commentId: M:Global.EnemyMovementController`2.UnregisterCollideYCallback(IntObject.SolidAction)
  id: UnregisterCollideYCallback(IntObject.SolidAction)
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: UnregisterCollideYCallback(SolidAction)
  nameWithType: EnemyMovementController<T, U>.UnregisterCollideYCallback(IntObject.SolidAction)
  fullName: EnemyMovementController<T, U>.UnregisterCollideYCallback(IntObject.SolidAction)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UnregisterCollideYCallback
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 83
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UnregisterCollideYCallback(IntObject.SolidAction callback)
    parameters:
    - id: callback
      type: Global.IntObject.SolidAction
    content.vb: Public Sub UnregisterCollideYCallback(callback As IntObject.SolidAction)
  overload: Global.EnemyMovementController`2.UnregisterCollideYCallback*
  nameWithType.vb: EnemyMovementController(Of T, U).UnregisterCollideYCallback(IntObject.SolidAction)
  fullName.vb: EnemyMovementController(Of T, U).UnregisterCollideYCallback(IntObject.SolidAction)
- uid: Global.EnemyMovementController`2.RegisterOverlapActorCallback(IntObject.ActorAction)
  commentId: M:Global.EnemyMovementController`2.RegisterOverlapActorCallback(IntObject.ActorAction)
  id: RegisterOverlapActorCallback(IntObject.ActorAction)
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: RegisterOverlapActorCallback(ActorAction)
  nameWithType: EnemyMovementController<T, U>.RegisterOverlapActorCallback(IntObject.ActorAction)
  fullName: EnemyMovementController<T, U>.RegisterOverlapActorCallback(IntObject.ActorAction)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RegisterOverlapActorCallback
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 88
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void RegisterOverlapActorCallback(IntObject.ActorAction callback)
    parameters:
    - id: callback
      type: Global.IntObject.ActorAction
    content.vb: Public Sub RegisterOverlapActorCallback(callback As IntObject.ActorAction)
  overload: Global.EnemyMovementController`2.RegisterOverlapActorCallback*
  nameWithType.vb: EnemyMovementController(Of T, U).RegisterOverlapActorCallback(IntObject.ActorAction)
  fullName.vb: EnemyMovementController(Of T, U).RegisterOverlapActorCallback(IntObject.ActorAction)
- uid: Global.EnemyMovementController`2.UnregisterOverlapActorCallback(IntObject.ActorAction)
  commentId: M:Global.EnemyMovementController`2.UnregisterOverlapActorCallback(IntObject.ActorAction)
  id: UnregisterOverlapActorCallback(IntObject.ActorAction)
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: UnregisterOverlapActorCallback(ActorAction)
  nameWithType: EnemyMovementController<T, U>.UnregisterOverlapActorCallback(IntObject.ActorAction)
  fullName: EnemyMovementController<T, U>.UnregisterOverlapActorCallback(IntObject.ActorAction)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UnregisterOverlapActorCallback
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 93
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UnregisterOverlapActorCallback(IntObject.ActorAction callback)
    parameters:
    - id: callback
      type: Global.IntObject.ActorAction
    content.vb: Public Sub UnregisterOverlapActorCallback(callback As IntObject.ActorAction)
  overload: Global.EnemyMovementController`2.UnregisterOverlapActorCallback*
  nameWithType.vb: EnemyMovementController(Of T, U).UnregisterOverlapActorCallback(IntObject.ActorAction)
  fullName.vb: EnemyMovementController(Of T, U).UnregisterOverlapActorCallback(IntObject.ActorAction)
- uid: Global.EnemyMovementController`2.RegisterOverlapTriggerCallback(IntObject.TriggerAction)
  commentId: M:Global.EnemyMovementController`2.RegisterOverlapTriggerCallback(IntObject.TriggerAction)
  id: RegisterOverlapTriggerCallback(IntObject.TriggerAction)
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: RegisterOverlapTriggerCallback(TriggerAction)
  nameWithType: EnemyMovementController<T, U>.RegisterOverlapTriggerCallback(IntObject.TriggerAction)
  fullName: EnemyMovementController<T, U>.RegisterOverlapTriggerCallback(IntObject.TriggerAction)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RegisterOverlapTriggerCallback
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 98
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void RegisterOverlapTriggerCallback(IntObject.TriggerAction callback)
    parameters:
    - id: callback
      type: Global.IntObject.TriggerAction
    content.vb: Public Sub RegisterOverlapTriggerCallback(callback As IntObject.TriggerAction)
  overload: Global.EnemyMovementController`2.RegisterOverlapTriggerCallback*
  nameWithType.vb: EnemyMovementController(Of T, U).RegisterOverlapTriggerCallback(IntObject.TriggerAction)
  fullName.vb: EnemyMovementController(Of T, U).RegisterOverlapTriggerCallback(IntObject.TriggerAction)
- uid: Global.EnemyMovementController`2.UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
  commentId: M:Global.EnemyMovementController`2.UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
  id: UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: UnregisterOverlapTriggerCallback(TriggerAction)
  nameWithType: EnemyMovementController<T, U>.UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
  fullName: EnemyMovementController<T, U>.UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UnregisterOverlapTriggerCallback
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 103
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UnregisterOverlapTriggerCallback(IntObject.TriggerAction callback)
    parameters:
    - id: callback
      type: Global.IntObject.TriggerAction
    content.vb: Public Sub UnregisterOverlapTriggerCallback(callback As IntObject.TriggerAction)
  overload: Global.EnemyMovementController`2.UnregisterOverlapTriggerCallback*
  nameWithType.vb: EnemyMovementController(Of T, U).UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
  fullName.vb: EnemyMovementController(Of T, U).UnregisterOverlapTriggerCallback(IntObject.TriggerAction)
- uid: Global.EnemyMovementController`2.GetCollideXCallback
  commentId: M:Global.EnemyMovementController`2.GetCollideXCallback
  id: GetCollideXCallback
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: GetCollideXCallback()
  nameWithType: EnemyMovementController<T, U>.GetCollideXCallback()
  fullName: EnemyMovementController<T, U>.GetCollideXCallback()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetCollideXCallback
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 110
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntObject.SolidAction GetCollideXCallback()
    return:
      type: Global.IntObject.SolidAction
    content.vb: Protected Function GetCollideXCallback() As IntObject.SolidAction
  overload: Global.EnemyMovementController`2.GetCollideXCallback*
  nameWithType.vb: EnemyMovementController(Of T, U).GetCollideXCallback()
  fullName.vb: EnemyMovementController(Of T, U).GetCollideXCallback()
- uid: Global.EnemyMovementController`2.GetCollideYCallback
  commentId: M:Global.EnemyMovementController`2.GetCollideYCallback
  id: GetCollideYCallback
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: GetCollideYCallback()
  nameWithType: EnemyMovementController<T, U>.GetCollideYCallback()
  fullName: EnemyMovementController<T, U>.GetCollideYCallback()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetCollideYCallback
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 115
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntObject.SolidAction GetCollideYCallback()
    return:
      type: Global.IntObject.SolidAction
    content.vb: Protected Function GetCollideYCallback() As IntObject.SolidAction
  overload: Global.EnemyMovementController`2.GetCollideYCallback*
  nameWithType.vb: EnemyMovementController(Of T, U).GetCollideYCallback()
  fullName.vb: EnemyMovementController(Of T, U).GetCollideYCallback()
- uid: Global.EnemyMovementController`2.GetOverlapActorCallback
  commentId: M:Global.EnemyMovementController`2.GetOverlapActorCallback
  id: GetOverlapActorCallback
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: GetOverlapActorCallback()
  nameWithType: EnemyMovementController<T, U>.GetOverlapActorCallback()
  fullName: EnemyMovementController<T, U>.GetOverlapActorCallback()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetOverlapActorCallback
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 120
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntObject.ActorAction GetOverlapActorCallback()
    return:
      type: Global.IntObject.ActorAction
    content.vb: Protected Function GetOverlapActorCallback() As IntObject.ActorAction
  overload: Global.EnemyMovementController`2.GetOverlapActorCallback*
  nameWithType.vb: EnemyMovementController(Of T, U).GetOverlapActorCallback()
  fullName.vb: EnemyMovementController(Of T, U).GetOverlapActorCallback()
- uid: Global.EnemyMovementController`2.GetOverlapTriggerCallback
  commentId: M:Global.EnemyMovementController`2.GetOverlapTriggerCallback
  id: GetOverlapTriggerCallback
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: GetOverlapTriggerCallback()
  nameWithType: EnemyMovementController<T, U>.GetOverlapTriggerCallback()
  fullName: EnemyMovementController<T, U>.GetOverlapTriggerCallback()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetOverlapTriggerCallback
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 125
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntObject.TriggerAction GetOverlapTriggerCallback()
    return:
      type: Global.IntObject.TriggerAction
    content.vb: Protected Function GetOverlapTriggerCallback() As IntObject.TriggerAction
  overload: Global.EnemyMovementController`2.GetOverlapTriggerCallback*
  nameWithType.vb: EnemyMovementController(Of T, U).GetOverlapTriggerCallback()
  fullName.vb: EnemyMovementController(Of T, U).GetOverlapTriggerCallback()
- uid: Global.EnemyMovementController`2.OnCollideX(IntSolid)
  commentId: M:Global.EnemyMovementController`2.OnCollideX(IntSolid)
  id: OnCollideX(IntSolid)
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: OnCollideX(IntSolid)
  nameWithType: EnemyMovementController<T, U>.OnCollideX(IntSolid)
  fullName: EnemyMovementController<T, U>.OnCollideX(IntSolid)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnCollideX
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 130
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void OnCollideX(IntSolid solid)
    parameters:
    - id: solid
      type: Global.IntSolid
    content.vb: Protected Overridable Sub OnCollideX(solid As IntSolid)
  overload: Global.EnemyMovementController`2.OnCollideX*
  nameWithType.vb: EnemyMovementController(Of T, U).OnCollideX(IntSolid)
  fullName.vb: EnemyMovementController(Of T, U).OnCollideX(IntSolid)
- uid: Global.EnemyMovementController`2.OnCollideY(IntSolid)
  commentId: M:Global.EnemyMovementController`2.OnCollideY(IntSolid)
  id: OnCollideY(IntSolid)
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: OnCollideY(IntSolid)
  nameWithType: EnemyMovementController<T, U>.OnCollideY(IntSolid)
  fullName: EnemyMovementController<T, U>.OnCollideY(IntSolid)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnCollideY
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 136
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void OnCollideY(IntSolid solid)
    parameters:
    - id: solid
      type: Global.IntSolid
    content.vb: Protected Overridable Sub OnCollideY(solid As IntSolid)
  overload: Global.EnemyMovementController`2.OnCollideY*
  nameWithType.vb: EnemyMovementController(Of T, U).OnCollideY(IntSolid)
  fullName.vb: EnemyMovementController(Of T, U).OnCollideY(IntSolid)
- uid: Global.EnemyMovementController`2.OnOverlapActor(IntActor)
  commentId: M:Global.EnemyMovementController`2.OnOverlapActor(IntActor)
  id: OnOverlapActor(IntActor)
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: OnOverlapActor(IntActor)
  nameWithType: EnemyMovementController<T, U>.OnOverlapActor(IntActor)
  fullName: EnemyMovementController<T, U>.OnOverlapActor(IntActor)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnOverlapActor
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 142
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void OnOverlapActor(IntActor actor)
    parameters:
    - id: actor
      type: Global.IntActor
    content.vb: Protected Overridable Sub OnOverlapActor(actor As IntActor)
  overload: Global.EnemyMovementController`2.OnOverlapActor*
  nameWithType.vb: EnemyMovementController(Of T, U).OnOverlapActor(IntActor)
  fullName.vb: EnemyMovementController(Of T, U).OnOverlapActor(IntActor)
- uid: Global.EnemyMovementController`2.OnOverlapTrigger(IntTrigger)
  commentId: M:Global.EnemyMovementController`2.OnOverlapTrigger(IntTrigger)
  id: OnOverlapTrigger(IntTrigger)
  parent: Global.EnemyMovementController`2
  langs:
  - csharp
  - vb
  name: OnOverlapTrigger(IntTrigger)
  nameWithType: EnemyMovementController<T, U>.OnOverlapTrigger(IntTrigger)
  fullName: EnemyMovementController<T, U>.OnOverlapTrigger(IntTrigger)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnOverlapTrigger
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Movement/EnemyMovementController.cs
    startLine: 147
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void OnOverlapTrigger(IntTrigger trigger)
    parameters:
    - id: trigger
      type: Global.IntTrigger
    content.vb: Protected Overridable Sub OnOverlapTrigger(trigger As IntTrigger)
  overload: Global.EnemyMovementController`2.OnOverlapTrigger*
  nameWithType.vb: EnemyMovementController(Of T, U).OnOverlapTrigger(IntTrigger)
  fullName.vb: EnemyMovementController(Of T, U).OnOverlapTrigger(IntTrigger)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Global.IntEnemy
  commentId: T:Global.IntEnemy
  name: IntEnemy
  nameWithType: IntEnemy
  fullName: IntEnemy
- uid: Global.OptionStateMachine{{U}}
  commentId: T:Global.OptionStateMachine{`1}
  definition: Global.OptionStateMachine`1
  name: OptionStateMachine<U>
  nameWithType: OptionStateMachine<U>
  fullName: OptionStateMachine<U>
  nameWithType.vb: OptionStateMachine(Of U)
  fullName.vb: OptionStateMachine(Of U)
  name.vb: OptionStateMachine(Of U)
  spec.csharp:
  - uid: Global.OptionStateMachine`1
    name: OptionStateMachine
  - name: <
  - name: U
  - name: '>'
  spec.vb:
  - uid: Global.OptionStateMachine`1
    name: OptionStateMachine
  - name: (
  - name: Of
  - name: " "
  - name: U
  - name: )
- uid: Global.OptionStateMachine`1
  commentId: T:Global.OptionStateMachine`1
  name: OptionStateMachine<T>
  nameWithType: OptionStateMachine<T>
  fullName: OptionStateMachine<T>
  nameWithType.vb: OptionStateMachine(Of T)
  fullName.vb: OptionStateMachine(Of T)
  name.vb: OptionStateMachine(Of T)
  spec.csharp:
  - uid: Global.OptionStateMachine`1
    name: OptionStateMachine
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.OptionStateMachine`1
    name: OptionStateMachine
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.IntObject.SolidAction
  commentId: T:Global.IntObject.SolidAction
  name: IntObject.SolidAction
  nameWithType: IntObject.SolidAction
  fullName: IntObject.SolidAction
  spec.csharp:
  - uid: Global.IntObject
    name: IntObject
  - name: .
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  spec.vb:
  - uid: Global.IntObject
    name: IntObject
  - name: .
  - uid: Global.IntObject.SolidAction
    name: SolidAction
- uid: Global.IntObject.ActorAction
  commentId: T:Global.IntObject.ActorAction
  name: IntObject.ActorAction
  nameWithType: IntObject.ActorAction
  fullName: IntObject.ActorAction
  spec.csharp:
  - uid: Global.IntObject
    name: IntObject
  - name: .
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  spec.vb:
  - uid: Global.IntObject
    name: IntObject
  - name: .
  - uid: Global.IntObject.ActorAction
    name: ActorAction
- uid: Global.IntObject.TriggerAction
  commentId: T:Global.IntObject.TriggerAction
  name: IntObject.TriggerAction
  nameWithType: IntObject.TriggerAction
  fullName: IntObject.TriggerAction
  spec.csharp:
  - uid: Global.IntObject
    name: IntObject
  - name: .
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  spec.vb:
  - uid: Global.IntObject
    name: IntObject
  - name: .
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
- uid: Global.IntObject.Action
  commentId: T:Global.IntObject.Action
  name: IntObject.Action
  nameWithType: IntObject.Action
  fullName: IntObject.Action
  spec.csharp:
  - uid: Global.IntObject
    name: IntObject
  - name: .
  - uid: Global.IntObject.Action
    name: Action
  spec.vb:
  - uid: Global.IntObject
    name: IntObject
  - name: .
  - uid: Global.IntObject.Action
    name: Action
- uid: Global.EnemyMovementController`2.CurrentState*
  commentId: Overload:Global.EnemyMovementController`2.CurrentState
  name: CurrentState
  nameWithType: EnemyMovementController<T, U>.CurrentState
  fullName: EnemyMovementController<T, U>.CurrentState
  nameWithType.vb: EnemyMovementController(Of T, U).CurrentState
  fullName.vb: EnemyMovementController(Of T, U).CurrentState
- uid: '{U}'
  commentId: '!:U'
  definition: U
  name: U
  nameWithType: U
  fullName: U
- uid: U
  name: U
  nameWithType: U
  fullName: U
- uid: Global.EnemyMovementController`2.#ctor*
  commentId: Overload:Global.EnemyMovementController`2.#ctor
  name: EnemyMovementController
  nameWithType: EnemyMovementController<T, U>.EnemyMovementController
  fullName: EnemyMovementController<T, U>.EnemyMovementController
  nameWithType.vb: EnemyMovementController(Of T, U).New
  fullName.vb: EnemyMovementController(Of T, U).New
  name.vb: New
- uid: Global.EnemyMovementController`2.Initialize*
  commentId: Overload:Global.EnemyMovementController`2.Initialize
  name: Initialize
  nameWithType: EnemyMovementController<T, U>.Initialize
  fullName: EnemyMovementController<T, U>.Initialize
  nameWithType.vb: EnemyMovementController(Of T, U).Initialize
  fullName.vb: EnemyMovementController(Of T, U).Initialize
- uid: Global.EnemyMovementController`2.GetTimeInState*
  commentId: Overload:Global.EnemyMovementController`2.GetTimeInState
  name: GetTimeInState
  nameWithType: EnemyMovementController<T, U>.GetTimeInState
  fullName: EnemyMovementController<T, U>.GetTimeInState
  nameWithType.vb: EnemyMovementController(Of T, U).GetTimeInState
  fullName.vb: EnemyMovementController(Of T, U).GetTimeInState
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.EnemyMovementController`2.Update*
  commentId: Overload:Global.EnemyMovementController`2.Update
  name: Update
  nameWithType: EnemyMovementController<T, U>.Update
  fullName: EnemyMovementController<T, U>.Update
  nameWithType.vb: EnemyMovementController(Of T, U).Update
  fullName.vb: EnemyMovementController(Of T, U).Update
- uid: Global.EnemyMovementController`2.Reset*
  commentId: Overload:Global.EnemyMovementController`2.Reset
  name: Reset
  nameWithType: EnemyMovementController<T, U>.Reset
  fullName: EnemyMovementController<T, U>.Reset
  nameWithType.vb: EnemyMovementController(Of T, U).Reset
  fullName.vb: EnemyMovementController(Of T, U).Reset
- uid: Global.EnemyMovementController`2.RegisterForStateEnter*
  commentId: Overload:Global.EnemyMovementController`2.RegisterForStateEnter
  name: RegisterForStateEnter
  nameWithType: EnemyMovementController<T, U>.RegisterForStateEnter
  fullName: EnemyMovementController<T, U>.RegisterForStateEnter
  nameWithType.vb: EnemyMovementController(Of T, U).RegisterForStateEnter
  fullName.vb: EnemyMovementController(Of T, U).RegisterForStateEnter
- uid: Global.OptionStateMachine{{U}}.TransitionAction
  commentId: T:Global.OptionStateMachine{`1}.TransitionAction
  definition: Global.OptionStateMachine`1.TransitionAction
  name: OptionStateMachine<U>.TransitionAction
  nameWithType: OptionStateMachine<U>.TransitionAction
  fullName: OptionStateMachine<U>.TransitionAction
  nameWithType.vb: OptionStateMachine(Of U).TransitionAction
  fullName.vb: OptionStateMachine(Of U).TransitionAction
  name.vb: OptionStateMachine(Of U).TransitionAction
  spec.csharp:
  - uid: Global.OptionStateMachine`1
    name: OptionStateMachine
  - name: <
  - name: U
  - name: '>'
  - name: .
  - uid: Global.OptionStateMachine{`1}.TransitionAction
    name: TransitionAction
  spec.vb:
  - uid: Global.OptionStateMachine`1
    name: OptionStateMachine
  - name: (
  - name: Of
  - name: " "
  - name: U
  - name: )
  - name: .
  - uid: Global.OptionStateMachine{`1}.TransitionAction
    name: TransitionAction
- uid: Global.OptionStateMachine`1.TransitionAction
  commentId: T:Global.OptionStateMachine`1.TransitionAction
  name: OptionStateMachine<T>.TransitionAction
  nameWithType: OptionStateMachine<T>.TransitionAction
  fullName: OptionStateMachine<T>.TransitionAction
  nameWithType.vb: OptionStateMachine(Of T).TransitionAction
  fullName.vb: OptionStateMachine(Of T).TransitionAction
  name.vb: OptionStateMachine(Of T).TransitionAction
  spec.csharp:
  - uid: Global.OptionStateMachine`1
    name: OptionStateMachine
  - name: <
  - name: T
  - name: '>'
  - name: .
  - uid: Global.OptionStateMachine`1.TransitionAction
    name: TransitionAction
  spec.vb:
  - uid: Global.OptionStateMachine`1
    name: OptionStateMachine
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: .
  - uid: Global.OptionStateMachine`1.TransitionAction
    name: TransitionAction
- uid: Global.EnemyMovementController`2.UnregisterForStateEnter*
  commentId: Overload:Global.EnemyMovementController`2.UnregisterForStateEnter
  name: UnregisterForStateEnter
  nameWithType: EnemyMovementController<T, U>.UnregisterForStateEnter
  fullName: EnemyMovementController<T, U>.UnregisterForStateEnter
  nameWithType.vb: EnemyMovementController(Of T, U).UnregisterForStateEnter
  fullName.vb: EnemyMovementController(Of T, U).UnregisterForStateEnter
- uid: Global.EnemyMovementController`2.RegisterForStateExit*
  commentId: Overload:Global.EnemyMovementController`2.RegisterForStateExit
  name: RegisterForStateExit
  nameWithType: EnemyMovementController<T, U>.RegisterForStateExit
  fullName: EnemyMovementController<T, U>.RegisterForStateExit
  nameWithType.vb: EnemyMovementController(Of T, U).RegisterForStateExit
  fullName.vb: EnemyMovementController(Of T, U).RegisterForStateExit
- uid: Global.EnemyMovementController`2.UnregisterForStateExit*
  commentId: Overload:Global.EnemyMovementController`2.UnregisterForStateExit
  name: UnregisterForStateExit
  nameWithType: EnemyMovementController<T, U>.UnregisterForStateExit
  fullName: EnemyMovementController<T, U>.UnregisterForStateExit
  nameWithType.vb: EnemyMovementController(Of T, U).UnregisterForStateExit
  fullName.vb: EnemyMovementController(Of T, U).UnregisterForStateExit
- uid: Global.EnemyMovementController`2.RegisterCollideXCallback*
  commentId: Overload:Global.EnemyMovementController`2.RegisterCollideXCallback
  name: RegisterCollideXCallback
  nameWithType: EnemyMovementController<T, U>.RegisterCollideXCallback
  fullName: EnemyMovementController<T, U>.RegisterCollideXCallback
  nameWithType.vb: EnemyMovementController(Of T, U).RegisterCollideXCallback
  fullName.vb: EnemyMovementController(Of T, U).RegisterCollideXCallback
- uid: Global.EnemyMovementController`2.UnregisterCollideXCallback*
  commentId: Overload:Global.EnemyMovementController`2.UnregisterCollideXCallback
  name: UnregisterCollideXCallback
  nameWithType: EnemyMovementController<T, U>.UnregisterCollideXCallback
  fullName: EnemyMovementController<T, U>.UnregisterCollideXCallback
  nameWithType.vb: EnemyMovementController(Of T, U).UnregisterCollideXCallback
  fullName.vb: EnemyMovementController(Of T, U).UnregisterCollideXCallback
- uid: Global.EnemyMovementController`2.RegisterCollideYCallback*
  commentId: Overload:Global.EnemyMovementController`2.RegisterCollideYCallback
  name: RegisterCollideYCallback
  nameWithType: EnemyMovementController<T, U>.RegisterCollideYCallback
  fullName: EnemyMovementController<T, U>.RegisterCollideYCallback
  nameWithType.vb: EnemyMovementController(Of T, U).RegisterCollideYCallback
  fullName.vb: EnemyMovementController(Of T, U).RegisterCollideYCallback
- uid: Global.EnemyMovementController`2.UnregisterCollideYCallback*
  commentId: Overload:Global.EnemyMovementController`2.UnregisterCollideYCallback
  name: UnregisterCollideYCallback
  nameWithType: EnemyMovementController<T, U>.UnregisterCollideYCallback
  fullName: EnemyMovementController<T, U>.UnregisterCollideYCallback
  nameWithType.vb: EnemyMovementController(Of T, U).UnregisterCollideYCallback
  fullName.vb: EnemyMovementController(Of T, U).UnregisterCollideYCallback
- uid: Global.EnemyMovementController`2.RegisterOverlapActorCallback*
  commentId: Overload:Global.EnemyMovementController`2.RegisterOverlapActorCallback
  name: RegisterOverlapActorCallback
  nameWithType: EnemyMovementController<T, U>.RegisterOverlapActorCallback
  fullName: EnemyMovementController<T, U>.RegisterOverlapActorCallback
  nameWithType.vb: EnemyMovementController(Of T, U).RegisterOverlapActorCallback
  fullName.vb: EnemyMovementController(Of T, U).RegisterOverlapActorCallback
- uid: Global.EnemyMovementController`2.UnregisterOverlapActorCallback*
  commentId: Overload:Global.EnemyMovementController`2.UnregisterOverlapActorCallback
  name: UnregisterOverlapActorCallback
  nameWithType: EnemyMovementController<T, U>.UnregisterOverlapActorCallback
  fullName: EnemyMovementController<T, U>.UnregisterOverlapActorCallback
  nameWithType.vb: EnemyMovementController(Of T, U).UnregisterOverlapActorCallback
  fullName.vb: EnemyMovementController(Of T, U).UnregisterOverlapActorCallback
- uid: Global.EnemyMovementController`2.RegisterOverlapTriggerCallback*
  commentId: Overload:Global.EnemyMovementController`2.RegisterOverlapTriggerCallback
  name: RegisterOverlapTriggerCallback
  nameWithType: EnemyMovementController<T, U>.RegisterOverlapTriggerCallback
  fullName: EnemyMovementController<T, U>.RegisterOverlapTriggerCallback
  nameWithType.vb: EnemyMovementController(Of T, U).RegisterOverlapTriggerCallback
  fullName.vb: EnemyMovementController(Of T, U).RegisterOverlapTriggerCallback
- uid: Global.EnemyMovementController`2.UnregisterOverlapTriggerCallback*
  commentId: Overload:Global.EnemyMovementController`2.UnregisterOverlapTriggerCallback
  name: UnregisterOverlapTriggerCallback
  nameWithType: EnemyMovementController<T, U>.UnregisterOverlapTriggerCallback
  fullName: EnemyMovementController<T, U>.UnregisterOverlapTriggerCallback
  nameWithType.vb: EnemyMovementController(Of T, U).UnregisterOverlapTriggerCallback
  fullName.vb: EnemyMovementController(Of T, U).UnregisterOverlapTriggerCallback
- uid: Global.EnemyMovementController`2.GetCollideXCallback*
  commentId: Overload:Global.EnemyMovementController`2.GetCollideXCallback
  name: GetCollideXCallback
  nameWithType: EnemyMovementController<T, U>.GetCollideXCallback
  fullName: EnemyMovementController<T, U>.GetCollideXCallback
  nameWithType.vb: EnemyMovementController(Of T, U).GetCollideXCallback
  fullName.vb: EnemyMovementController(Of T, U).GetCollideXCallback
- uid: Global.EnemyMovementController`2.GetCollideYCallback*
  commentId: Overload:Global.EnemyMovementController`2.GetCollideYCallback
  name: GetCollideYCallback
  nameWithType: EnemyMovementController<T, U>.GetCollideYCallback
  fullName: EnemyMovementController<T, U>.GetCollideYCallback
  nameWithType.vb: EnemyMovementController(Of T, U).GetCollideYCallback
  fullName.vb: EnemyMovementController(Of T, U).GetCollideYCallback
- uid: Global.EnemyMovementController`2.GetOverlapActorCallback*
  commentId: Overload:Global.EnemyMovementController`2.GetOverlapActorCallback
  name: GetOverlapActorCallback
  nameWithType: EnemyMovementController<T, U>.GetOverlapActorCallback
  fullName: EnemyMovementController<T, U>.GetOverlapActorCallback
  nameWithType.vb: EnemyMovementController(Of T, U).GetOverlapActorCallback
  fullName.vb: EnemyMovementController(Of T, U).GetOverlapActorCallback
- uid: Global.EnemyMovementController`2.GetOverlapTriggerCallback*
  commentId: Overload:Global.EnemyMovementController`2.GetOverlapTriggerCallback
  name: GetOverlapTriggerCallback
  nameWithType: EnemyMovementController<T, U>.GetOverlapTriggerCallback
  fullName: EnemyMovementController<T, U>.GetOverlapTriggerCallback
  nameWithType.vb: EnemyMovementController(Of T, U).GetOverlapTriggerCallback
  fullName.vb: EnemyMovementController(Of T, U).GetOverlapTriggerCallback
- uid: Global.EnemyMovementController`2.OnCollideX*
  commentId: Overload:Global.EnemyMovementController`2.OnCollideX
  name: OnCollideX
  nameWithType: EnemyMovementController<T, U>.OnCollideX
  fullName: EnemyMovementController<T, U>.OnCollideX
  nameWithType.vb: EnemyMovementController(Of T, U).OnCollideX
  fullName.vb: EnemyMovementController(Of T, U).OnCollideX
- uid: Global.IntSolid
  commentId: T:Global.IntSolid
  name: IntSolid
  nameWithType: IntSolid
  fullName: IntSolid
- uid: Global.EnemyMovementController`2.OnCollideY*
  commentId: Overload:Global.EnemyMovementController`2.OnCollideY
  name: OnCollideY
  nameWithType: EnemyMovementController<T, U>.OnCollideY
  fullName: EnemyMovementController<T, U>.OnCollideY
  nameWithType.vb: EnemyMovementController(Of T, U).OnCollideY
  fullName.vb: EnemyMovementController(Of T, U).OnCollideY
- uid: Global.EnemyMovementController`2.OnOverlapActor*
  commentId: Overload:Global.EnemyMovementController`2.OnOverlapActor
  name: OnOverlapActor
  nameWithType: EnemyMovementController<T, U>.OnOverlapActor
  fullName: EnemyMovementController<T, U>.OnOverlapActor
  nameWithType.vb: EnemyMovementController(Of T, U).OnOverlapActor
  fullName.vb: EnemyMovementController(Of T, U).OnOverlapActor
- uid: Global.IntActor
  commentId: T:Global.IntActor
  name: IntActor
  nameWithType: IntActor
  fullName: IntActor
- uid: Global.EnemyMovementController`2.OnOverlapTrigger*
  commentId: Overload:Global.EnemyMovementController`2.OnOverlapTrigger
  name: OnOverlapTrigger
  nameWithType: EnemyMovementController<T, U>.OnOverlapTrigger
  fullName: EnemyMovementController<T, U>.OnOverlapTrigger
  nameWithType.vb: EnemyMovementController(Of T, U).OnOverlapTrigger
  fullName.vb: EnemyMovementController(Of T, U).OnOverlapTrigger
- uid: Global.IntTrigger
  commentId: T:Global.IntTrigger
  name: IntTrigger
  nameWithType: IntTrigger
  fullName: IntTrigger
