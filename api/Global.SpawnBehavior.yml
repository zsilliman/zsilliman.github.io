### YamlMime:ManagedReference
items:
- uid: Global.SpawnBehavior
  commentId: T:Global.SpawnBehavior
  id: SpawnBehavior
  parent: Global
  children:
  - Global.SpawnBehavior.AttemptResolvePosition(IntActor)
  - Global.SpawnBehavior.AttemptSpawnNew
  - Global.SpawnBehavior.AttemptSpawnPending
  - Global.SpawnBehavior.Beacon
  - Global.SpawnBehavior.DoNotSpawnIfPlayerTooClose
  - Global.SpawnBehavior.DrawGizmos(ModularEnemy)
  - Global.SpawnBehavior.EmitBeaconOnSpawnKilled
  - Global.SpawnBehavior.GetRandomSpawnLocation
  - Global.SpawnBehavior.MaxSpawnAngle
  - Global.SpawnBehavior.MaxSpawnDistance
  - Global.SpawnBehavior.MaxSpawnedObjects
  - Global.SpawnBehavior.MinSpawnAngle
  - Global.SpawnBehavior.MinSpawnDistance
  - Global.SpawnBehavior.MirrorUsingSpriteFlip
  - Global.SpawnBehavior.OnResetObject(ModularEnemy)
  - Global.SpawnBehavior.OnRestart
  - Global.SpawnBehavior.OnSpawnKilled
  - Global.SpawnBehavior.PendingSpawnResolution
  - Global.SpawnBehavior.PlayerTooCloseDistance
  - Global.SpawnBehavior.ProjectToGround
  - Global.SpawnBehavior.SpawnedObjects
  - Global.SpawnBehavior.SpawnedPrefab
  - Global.SpawnBehavior.SpawnOffset
  - Global.SpawnBehavior.Start(ModularEnemy)
  - Global.SpawnBehavior.success
  - Global.SpawnBehavior.type
  - Global.SpawnBehavior.Update
  langs:
  - csharp
  - vb
  name: SpawnBehavior
  nameWithType: SpawnBehavior
  fullName: SpawnBehavior
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SpawnBehavior
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class SpawnBehavior : ModularEnemy.EnemyBehaviorInterface
    content.vb: >-
      <Serializable>

      Public Class SpawnBehavior Inherits ModularEnemy.EnemyBehaviorInterface
  inheritance:
  - System.Object
  - Global.ModularEnemy.EnemyBehaviorInterface
  inheritedMembers:
  - Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  - Global.ModularEnemy.EnemyBehaviorInterface.self
  - Global.ModularEnemy.EnemyBehaviorInterface.Started
  - Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.SpawnBehavior.type
  commentId: F:Global.SpawnBehavior.type
  id: type
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: type
  nameWithType: SpawnBehavior.type
  fullName: SpawnBehavior.type
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: type
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public SpawnBehavior.SpawnEffectType type
    return:
      type: Global.SpawnBehavior.SpawnEffectType
    content.vb: Public type As SpawnBehavior.SpawnEffectType
- uid: Global.SpawnBehavior.SpawnedPrefab
  commentId: F:Global.SpawnBehavior.SpawnedPrefab
  id: SpawnedPrefab
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: SpawnedPrefab
  nameWithType: SpawnBehavior.SpawnedPrefab
  fullName: SpawnBehavior.SpawnedPrefab
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SpawnedPrefab
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public GameObject SpawnedPrefab
    return:
      type: UnityEngine.GameObject
    content.vb: Public SpawnedPrefab As GameObject
- uid: Global.SpawnBehavior.MaxSpawnedObjects
  commentId: F:Global.SpawnBehavior.MaxSpawnedObjects
  id: MaxSpawnedObjects
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: MaxSpawnedObjects
  nameWithType: SpawnBehavior.MaxSpawnedObjects
  fullName: SpawnBehavior.MaxSpawnedObjects
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxSpawnedObjects
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int MaxSpawnedObjects
    return:
      type: System.Int32
    content.vb: Public MaxSpawnedObjects As Integer
- uid: Global.SpawnBehavior.SpawnOffset
  commentId: F:Global.SpawnBehavior.SpawnOffset
  id: SpawnOffset
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: SpawnOffset
  nameWithType: SpawnBehavior.SpawnOffset
  fullName: SpawnBehavior.SpawnOffset
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SpawnOffset
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("type", 1)]

      public Vector2Int SpawnOffset
    return:
      type: UnityEngine.Vector2Int
    content.vb: >-
      <ConditionalShow("type", 1)>

      Public SpawnOffset As Vector2Int
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: type
    - type: System.Int32
      value: 1
- uid: Global.SpawnBehavior.MirrorUsingSpriteFlip
  commentId: F:Global.SpawnBehavior.MirrorUsingSpriteFlip
  id: MirrorUsingSpriteFlip
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: MirrorUsingSpriteFlip
  nameWithType: SpawnBehavior.MirrorUsingSpriteFlip
  fullName: SpawnBehavior.MirrorUsingSpriteFlip
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MirrorUsingSpriteFlip
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 20
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("type", 1)]

      public bool MirrorUsingSpriteFlip
    return:
      type: System.Boolean
    content.vb: >-
      <ConditionalShow("type", 1)>

      Public MirrorUsingSpriteFlip As Boolean
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: type
    - type: System.Int32
      value: 1
- uid: Global.SpawnBehavior.MinSpawnAngle
  commentId: F:Global.SpawnBehavior.MinSpawnAngle
  id: MinSpawnAngle
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: MinSpawnAngle
  nameWithType: SpawnBehavior.MinSpawnAngle
  fullName: SpawnBehavior.MinSpawnAngle
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MinSpawnAngle
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("type", 0)]

      public float MinSpawnAngle
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("type", 0)>

      Public MinSpawnAngle As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: type
    - type: System.Int32
      value: 0
- uid: Global.SpawnBehavior.MaxSpawnAngle
  commentId: F:Global.SpawnBehavior.MaxSpawnAngle
  id: MaxSpawnAngle
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: MaxSpawnAngle
  nameWithType: SpawnBehavior.MaxSpawnAngle
  fullName: SpawnBehavior.MaxSpawnAngle
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxSpawnAngle
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("type", 0)]

      public float MaxSpawnAngle
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("type", 0)>

      Public MaxSpawnAngle As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: type
    - type: System.Int32
      value: 0
- uid: Global.SpawnBehavior.MinSpawnDistance
  commentId: F:Global.SpawnBehavior.MinSpawnDistance
  id: MinSpawnDistance
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: MinSpawnDistance
  nameWithType: SpawnBehavior.MinSpawnDistance
  fullName: SpawnBehavior.MinSpawnDistance
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MinSpawnDistance
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("type", 0)]

      public float MinSpawnDistance
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("type", 0)>

      Public MinSpawnDistance As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: type
    - type: System.Int32
      value: 0
- uid: Global.SpawnBehavior.MaxSpawnDistance
  commentId: F:Global.SpawnBehavior.MaxSpawnDistance
  id: MaxSpawnDistance
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: MaxSpawnDistance
  nameWithType: SpawnBehavior.MaxSpawnDistance
  fullName: SpawnBehavior.MaxSpawnDistance
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxSpawnDistance
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("type", 0)]

      public float MaxSpawnDistance
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("type", 0)>

      Public MaxSpawnDistance As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: type
    - type: System.Int32
      value: 0
- uid: Global.SpawnBehavior.ProjectToGround
  commentId: F:Global.SpawnBehavior.ProjectToGround
  id: ProjectToGround
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: ProjectToGround
  nameWithType: SpawnBehavior.ProjectToGround
  fullName: SpawnBehavior.ProjectToGround
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ProjectToGround
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 30
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool ProjectToGround
    return:
      type: System.Boolean
    content.vb: Public ProjectToGround As Boolean
- uid: Global.SpawnBehavior.DoNotSpawnIfPlayerTooClose
  commentId: F:Global.SpawnBehavior.DoNotSpawnIfPlayerTooClose
  id: DoNotSpawnIfPlayerTooClose
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: DoNotSpawnIfPlayerTooClose
  nameWithType: SpawnBehavior.DoNotSpawnIfPlayerTooClose
  fullName: SpawnBehavior.DoNotSpawnIfPlayerTooClose
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DoNotSpawnIfPlayerTooClose
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 31
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool DoNotSpawnIfPlayerTooClose
    return:
      type: System.Boolean
    content.vb: Public DoNotSpawnIfPlayerTooClose As Boolean
- uid: Global.SpawnBehavior.PlayerTooCloseDistance
  commentId: F:Global.SpawnBehavior.PlayerTooCloseDistance
  id: PlayerTooCloseDistance
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: PlayerTooCloseDistance
  nameWithType: SpawnBehavior.PlayerTooCloseDistance
  fullName: SpawnBehavior.PlayerTooCloseDistance
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PlayerTooCloseDistance
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 33
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("DoNotSpawnIfPlayerTooClose", 1)]

      public float PlayerTooCloseDistance
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("DoNotSpawnIfPlayerTooClose", 1)>

      Public PlayerTooCloseDistance As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: DoNotSpawnIfPlayerTooClose
    - type: System.Int32
      value: 1
- uid: Global.SpawnBehavior.EmitBeaconOnSpawnKilled
  commentId: F:Global.SpawnBehavior.EmitBeaconOnSpawnKilled
  id: EmitBeaconOnSpawnKilled
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: EmitBeaconOnSpawnKilled
  nameWithType: SpawnBehavior.EmitBeaconOnSpawnKilled
  fullName: SpawnBehavior.EmitBeaconOnSpawnKilled
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EmitBeaconOnSpawnKilled
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 34
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool EmitBeaconOnSpawnKilled
    return:
      type: System.Boolean
    content.vb: Public EmitBeaconOnSpawnKilled As Boolean
- uid: Global.SpawnBehavior.Beacon
  commentId: F:Global.SpawnBehavior.Beacon
  id: Beacon
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: Beacon
  nameWithType: SpawnBehavior.Beacon
  fullName: SpawnBehavior.Beacon
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Beacon
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 36
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("EmitBeaconOnSpawnKilled", 1)]

      public BeaconBehavior Beacon
    return:
      type: Global.BeaconBehavior
    content.vb: >-
      <ConditionalShow("EmitBeaconOnSpawnKilled", 1)>

      Public Beacon As BeaconBehavior
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: EmitBeaconOnSpawnKilled
    - type: System.Int32
      value: 1
- uid: Global.SpawnBehavior.success
  commentId: F:Global.SpawnBehavior.success
  id: success
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: success
  nameWithType: SpawnBehavior.success
  fullName: SpawnBehavior.success
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: success
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 38
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected bool success
    return:
      type: System.Boolean
    content.vb: Protected success As Boolean
- uid: Global.SpawnBehavior.SpawnedObjects
  commentId: F:Global.SpawnBehavior.SpawnedObjects
  id: SpawnedObjects
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: SpawnedObjects
  nameWithType: SpawnBehavior.SpawnedObjects
  fullName: SpawnBehavior.SpawnedObjects
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SpawnedObjects
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 39
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected List<GameObject> SpawnedObjects
    return:
      type: System.Collections.Generic.List{UnityEngine.GameObject}
    content.vb: Protected SpawnedObjects As List(Of GameObject)
- uid: Global.SpawnBehavior.PendingSpawnResolution
  commentId: F:Global.SpawnBehavior.PendingSpawnResolution
  id: PendingSpawnResolution
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: PendingSpawnResolution
  nameWithType: SpawnBehavior.PendingSpawnResolution
  fullName: SpawnBehavior.PendingSpawnResolution
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PendingSpawnResolution
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 40
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Dictionary<IntActor, int> PendingSpawnResolution
    return:
      type: System.Collections.Generic.Dictionary{IntActor,System.Int32}
    content.vb: Protected PendingSpawnResolution As Dictionary(Of IntActor, Integer)
- uid: Global.SpawnBehavior.Start(ModularEnemy)
  commentId: M:Global.SpawnBehavior.Start(ModularEnemy)
  id: Start(ModularEnemy)
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: Start(ModularEnemy)
  nameWithType: SpawnBehavior.Start(ModularEnemy)
  fullName: SpawnBehavior.Start(ModularEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Start
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 41
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void Start(ModularEnemy enemy)
    parameters:
    - id: enemy
      type: Global.ModularEnemy
    content.vb: Public Overrides Sub Start(enemy As ModularEnemy)
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  overload: Global.SpawnBehavior.Start*
- uid: Global.SpawnBehavior.DrawGizmos(ModularEnemy)
  commentId: M:Global.SpawnBehavior.DrawGizmos(ModularEnemy)
  id: DrawGizmos(ModularEnemy)
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: DrawGizmos(ModularEnemy)
  nameWithType: SpawnBehavior.DrawGizmos(ModularEnemy)
  fullName: SpawnBehavior.DrawGizmos(ModularEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DrawGizmos
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 55
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void DrawGizmos(ModularEnemy enemy)
    parameters:
    - id: enemy
      type: Global.ModularEnemy
    content.vb: Public Overrides Sub DrawGizmos(enemy As ModularEnemy)
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  overload: Global.SpawnBehavior.DrawGizmos*
- uid: Global.SpawnBehavior.OnRestart
  commentId: M:Global.SpawnBehavior.OnRestart
  id: OnRestart
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: OnRestart()
  nameWithType: SpawnBehavior.OnRestart()
  fullName: SpawnBehavior.OnRestart()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnRestart
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 71
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnRestart()
    content.vb: Public Overrides Sub OnRestart()
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
  overload: Global.SpawnBehavior.OnRestart*
- uid: Global.SpawnBehavior.OnResetObject(ModularEnemy)
  commentId: M:Global.SpawnBehavior.OnResetObject(ModularEnemy)
  id: OnResetObject(ModularEnemy)
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: OnResetObject(ModularEnemy)
  nameWithType: SpawnBehavior.OnResetObject(ModularEnemy)
  fullName: SpawnBehavior.OnResetObject(ModularEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnResetObject
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 82
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnResetObject(ModularEnemy enemy)
    parameters:
    - id: enemy
      type: Global.ModularEnemy
    content.vb: Public Overrides Sub OnResetObject(enemy As ModularEnemy)
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  overload: Global.SpawnBehavior.OnResetObject*
- uid: Global.SpawnBehavior.Update
  commentId: M:Global.SpawnBehavior.Update
  id: Update
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: SpawnBehavior.Update()
  fullName: SpawnBehavior.Update()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Update
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 118
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.Update
  overload: Global.SpawnBehavior.Update*
- uid: Global.SpawnBehavior.GetRandomSpawnLocation
  commentId: M:Global.SpawnBehavior.GetRandomSpawnLocation
  id: GetRandomSpawnLocation
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: GetRandomSpawnLocation()
  nameWithType: SpawnBehavior.GetRandomSpawnLocation()
  fullName: SpawnBehavior.GetRandomSpawnLocation()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetRandomSpawnLocation
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 128
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Vector3 GetRandomSpawnLocation()
    return:
      type: UnityEngine.Vector3
    content.vb: Protected Function GetRandomSpawnLocation() As Vector3
  overload: Global.SpawnBehavior.GetRandomSpawnLocation*
- uid: Global.SpawnBehavior.AttemptResolvePosition(IntActor)
  commentId: M:Global.SpawnBehavior.AttemptResolvePosition(IntActor)
  id: AttemptResolvePosition(IntActor)
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: AttemptResolvePosition(IntActor)
  nameWithType: SpawnBehavior.AttemptResolvePosition(IntActor)
  fullName: SpawnBehavior.AttemptResolvePosition(IntActor)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AttemptResolvePosition
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 150
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected bool AttemptResolvePosition(IntActor actor)
    parameters:
    - id: actor
      type: Global.IntActor
    return:
      type: System.Boolean
    content.vb: Protected Function AttemptResolvePosition(actor As IntActor) As Boolean
  overload: Global.SpawnBehavior.AttemptResolvePosition*
- uid: Global.SpawnBehavior.AttemptSpawnNew
  commentId: M:Global.SpawnBehavior.AttemptSpawnNew
  id: AttemptSpawnNew
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: AttemptSpawnNew()
  nameWithType: SpawnBehavior.AttemptSpawnNew()
  fullName: SpawnBehavior.AttemptSpawnNew()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AttemptSpawnNew
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 166
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void AttemptSpawnNew()
    content.vb: Protected Sub AttemptSpawnNew()
  overload: Global.SpawnBehavior.AttemptSpawnNew*
- uid: Global.SpawnBehavior.OnSpawnKilled
  commentId: M:Global.SpawnBehavior.OnSpawnKilled
  id: OnSpawnKilled
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: OnSpawnKilled()
  nameWithType: SpawnBehavior.OnSpawnKilled()
  fullName: SpawnBehavior.OnSpawnKilled()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnSpawnKilled
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 224
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void OnSpawnKilled()
    content.vb: Protected Sub OnSpawnKilled()
  overload: Global.SpawnBehavior.OnSpawnKilled*
- uid: Global.SpawnBehavior.AttemptSpawnPending
  commentId: M:Global.SpawnBehavior.AttemptSpawnPending
  id: AttemptSpawnPending
  parent: Global.SpawnBehavior
  langs:
  - csharp
  - vb
  name: AttemptSpawnPending()
  nameWithType: SpawnBehavior.AttemptSpawnPending()
  fullName: SpawnBehavior.AttemptSpawnPending()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AttemptSpawnPending
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/SpawnBehavior.cs
    startLine: 232
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void AttemptSpawnPending()
    content.vb: Protected Sub AttemptSpawnPending()
  overload: Global.SpawnBehavior.AttemptSpawnPending*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.ModularEnemy.EnemyBehaviorInterface
  commentId: T:Global.ModularEnemy.EnemyBehaviorInterface
  name: ModularEnemy.EnemyBehaviorInterface
  nameWithType: ModularEnemy.EnemyBehaviorInterface
  fullName: ModularEnemy.EnemyBehaviorInterface
  spec.csharp:
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: .
  - uid: Global.ModularEnemy.EnemyBehaviorInterface
    name: EnemyBehaviorInterface
  spec.vb:
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: .
  - uid: Global.ModularEnemy.EnemyBehaviorInterface
    name: EnemyBehaviorInterface
- uid: Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  commentId: F:Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: ShowGizmos
  nameWithType: ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  fullName: ModularEnemy.EnemyBehaviorInterface.ShowGizmos
- uid: Global.ModularEnemy.EnemyBehaviorInterface.self
  commentId: F:Global.ModularEnemy.EnemyBehaviorInterface.self
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: self
  nameWithType: ModularEnemy.EnemyBehaviorInterface.self
  fullName: ModularEnemy.EnemyBehaviorInterface.self
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Started
  commentId: P:Global.ModularEnemy.EnemyBehaviorInterface.Started
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: Started
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Started
  fullName: ModularEnemy.EnemyBehaviorInterface.Started
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  isExternal: true
  name: OnKill(ModularEnemy, bool)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, bool)
  fullName: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, bool)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, Boolean)
  fullName.vb: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, Boolean)
  name.vb: OnKill(ModularEnemy, Boolean)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
    name: OnKill
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
    name: OnKill
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.SpawnBehavior.SpawnEffectType
  commentId: T:Global.SpawnBehavior.SpawnEffectType
  name: SpawnBehavior.SpawnEffectType
  nameWithType: SpawnBehavior.SpawnEffectType
  fullName: SpawnBehavior.SpawnEffectType
  spec.csharp:
  - uid: Global.SpawnBehavior
    name: SpawnBehavior
  - name: .
  - uid: Global.SpawnBehavior.SpawnEffectType
    name: SpawnEffectType
  spec.vb:
  - uid: Global.SpawnBehavior
    name: SpawnBehavior
  - name: .
  - uid: Global.SpawnBehavior.SpawnEffectType
    name: SpawnEffectType
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.BeaconBehavior
  commentId: T:Global.BeaconBehavior
  name: BeaconBehavior
  nameWithType: BeaconBehavior
  fullName: BeaconBehavior
- uid: System.Collections.Generic.List{UnityEngine.GameObject}
  commentId: T:System.Collections.Generic.List{UnityEngine.GameObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<GameObject>
  nameWithType: List<GameObject>
  fullName: System.Collections.Generic.List<UnityEngine.GameObject>
  nameWithType.vb: List(Of GameObject)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.GameObject)
  name.vb: List(Of GameObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: System.Collections.Generic.Dictionary{IntActor,System.Int32}
  commentId: T:System.Collections.Generic.Dictionary{IntActor,System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<IntActor, int>
  nameWithType: Dictionary<IntActor, int>
  fullName: System.Collections.Generic.Dictionary<IntActor, int>
  nameWithType.vb: Dictionary(Of IntActor, Integer)
  fullName.vb: System.Collections.Generic.Dictionary(Of IntActor, Integer)
  name.vb: Dictionary(Of IntActor, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - uid: Global.IntActor
    name: IntActor
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntActor
    name: IntActor
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: Start(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
    name: Start
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
    name: Start
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.SpawnBehavior.Start*
  commentId: Overload:Global.SpawnBehavior.Start
  name: Start
  nameWithType: SpawnBehavior.Start
  fullName: SpawnBehavior.Start
- uid: Global.ModularEnemy
  commentId: T:Global.ModularEnemy
  name: ModularEnemy
  nameWithType: ModularEnemy
  fullName: ModularEnemy
- uid: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: DrawGizmos(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
    name: DrawGizmos
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
    name: DrawGizmos
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.SpawnBehavior.DrawGizmos*
  commentId: Overload:Global.SpawnBehavior.DrawGizmos
  name: DrawGizmos
  nameWithType: SpawnBehavior.DrawGizmos
  fullName: SpawnBehavior.DrawGizmos
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: OnRestart()
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnRestart()
  fullName: ModularEnemy.EnemyBehaviorInterface.OnRestart()
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
    name: OnRestart
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
    name: OnRestart
  - name: (
  - name: )
- uid: Global.SpawnBehavior.OnRestart*
  commentId: Overload:Global.SpawnBehavior.OnRestart
  name: OnRestart
  nameWithType: SpawnBehavior.OnRestart
  fullName: SpawnBehavior.OnRestart
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: OnResetObject(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
    name: OnResetObject
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
    name: OnResetObject
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.SpawnBehavior.OnResetObject*
  commentId: Overload:Global.SpawnBehavior.OnResetObject
  name: OnResetObject
  nameWithType: SpawnBehavior.OnResetObject
  fullName: SpawnBehavior.OnResetObject
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Update
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.Update
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: Update()
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Update()
  fullName: ModularEnemy.EnemyBehaviorInterface.Update()
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Update
    name: Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Update
    name: Update
  - name: (
  - name: )
- uid: Global.SpawnBehavior.Update*
  commentId: Overload:Global.SpawnBehavior.Update
  name: Update
  nameWithType: SpawnBehavior.Update
  fullName: SpawnBehavior.Update
- uid: Global.SpawnBehavior.GetRandomSpawnLocation*
  commentId: Overload:Global.SpawnBehavior.GetRandomSpawnLocation
  name: GetRandomSpawnLocation
  nameWithType: SpawnBehavior.GetRandomSpawnLocation
  fullName: SpawnBehavior.GetRandomSpawnLocation
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: Global.SpawnBehavior.AttemptResolvePosition*
  commentId: Overload:Global.SpawnBehavior.AttemptResolvePosition
  name: AttemptResolvePosition
  nameWithType: SpawnBehavior.AttemptResolvePosition
  fullName: SpawnBehavior.AttemptResolvePosition
- uid: Global.IntActor
  commentId: T:Global.IntActor
  name: IntActor
  nameWithType: IntActor
  fullName: IntActor
- uid: Global.SpawnBehavior.AttemptSpawnNew*
  commentId: Overload:Global.SpawnBehavior.AttemptSpawnNew
  name: AttemptSpawnNew
  nameWithType: SpawnBehavior.AttemptSpawnNew
  fullName: SpawnBehavior.AttemptSpawnNew
- uid: Global.SpawnBehavior.OnSpawnKilled*
  commentId: Overload:Global.SpawnBehavior.OnSpawnKilled
  name: OnSpawnKilled
  nameWithType: SpawnBehavior.OnSpawnKilled
  fullName: SpawnBehavior.OnSpawnKilled
- uid: Global.SpawnBehavior.AttemptSpawnPending*
  commentId: Overload:Global.SpawnBehavior.AttemptSpawnPending
  name: AttemptSpawnPending
  nameWithType: SpawnBehavior.AttemptSpawnPending
  fullName: SpawnBehavior.AttemptSpawnPending
