### YamlMime:ManagedReference
items:
- uid: Global.TileData.TileDataContainer
  commentId: T:Global.TileData.TileDataContainer
  id: TileData.TileDataContainer
  parent: Global
  children:
  - Global.TileData.TileDataContainer.Breakable
  - Global.TileData.TileDataContainer.CanWallJump
  - Global.TileData.TileDataContainer.ColliderType
  - Global.TileData.TileDataContainer.Contains(TileData.TileDataContainer)
  - Global.TileData.TileDataContainer.Crumbling
  - Global.TileData.TileDataContainer.Equals(TileData.TileDataContainer)
  - Global.TileData.TileDataContainer.KillsActor
  - Global.TileData.TileDataContainer.Oneway
  - Global.TileData.TileDataContainer.Solid
  langs:
  - csharp
  - vb
  name: TileData.TileDataContainer
  nameWithType: TileData.TileDataContainer
  fullName: TileData.TileDataContainer
  type: Struct
  source:
    remote:
      path: Assets/Objects & Components/Tilemap/TileData/TileData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TileDataContainer
    path: ../Assets/Objects & Components/Tilemap/TileData/TileData.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public struct TileData.TileDataContainer
    content.vb: >-
      <Serializable>

      Public Structure TileData.TileDataContainer
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.TileData.TileDataContainer.Solid
  commentId: F:Global.TileData.TileDataContainer.Solid
  id: Solid
  parent: Global.TileData.TileDataContainer
  langs:
  - csharp
  - vb
  name: Solid
  nameWithType: TileData.TileDataContainer.Solid
  fullName: TileData.TileDataContainer.Solid
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Tilemap/TileData/TileData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Solid
    path: ../Assets/Objects & Components/Tilemap/TileData/TileData.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public bool Solid
    return:
      type: System.Boolean
    content.vb: >-
      <SerializeField>

      Public Solid As Boolean
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.TileData.TileDataContainer.Oneway
  commentId: F:Global.TileData.TileDataContainer.Oneway
  id: Oneway
  parent: Global.TileData.TileDataContainer
  langs:
  - csharp
  - vb
  name: Oneway
  nameWithType: TileData.TileDataContainer.Oneway
  fullName: TileData.TileDataContainer.Oneway
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Tilemap/TileData/TileData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Oneway
    path: ../Assets/Objects & Components/Tilemap/TileData/TileData.cs
    startLine: 21
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public bool Oneway
    return:
      type: System.Boolean
    content.vb: >-
      <SerializeField>

      Public Oneway As Boolean
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.TileData.TileDataContainer.KillsActor
  commentId: F:Global.TileData.TileDataContainer.KillsActor
  id: KillsActor
  parent: Global.TileData.TileDataContainer
  langs:
  - csharp
  - vb
  name: KillsActor
  nameWithType: TileData.TileDataContainer.KillsActor
  fullName: TileData.TileDataContainer.KillsActor
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Tilemap/TileData/TileData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: KillsActor
    path: ../Assets/Objects & Components/Tilemap/TileData/TileData.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public bool KillsActor
    return:
      type: System.Boolean
    content.vb: >-
      <SerializeField>

      Public KillsActor As Boolean
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.TileData.TileDataContainer.Crumbling
  commentId: F:Global.TileData.TileDataContainer.Crumbling
  id: Crumbling
  parent: Global.TileData.TileDataContainer
  langs:
  - csharp
  - vb
  name: Crumbling
  nameWithType: TileData.TileDataContainer.Crumbling
  fullName: TileData.TileDataContainer.Crumbling
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Tilemap/TileData/TileData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Crumbling
    path: ../Assets/Objects & Components/Tilemap/TileData/TileData.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public bool Crumbling
    return:
      type: System.Boolean
    content.vb: >-
      <SerializeField>

      Public Crumbling As Boolean
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.TileData.TileDataContainer.Breakable
  commentId: F:Global.TileData.TileDataContainer.Breakable
  id: Breakable
  parent: Global.TileData.TileDataContainer
  langs:
  - csharp
  - vb
  name: Breakable
  nameWithType: TileData.TileDataContainer.Breakable
  fullName: TileData.TileDataContainer.Breakable
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Tilemap/TileData/TileData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Breakable
    path: ../Assets/Objects & Components/Tilemap/TileData/TileData.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public bool Breakable
    return:
      type: System.Boolean
    content.vb: >-
      <SerializeField>

      Public Breakable As Boolean
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.TileData.TileDataContainer.CanWallJump
  commentId: F:Global.TileData.TileDataContainer.CanWallJump
  id: CanWallJump
  parent: Global.TileData.TileDataContainer
  langs:
  - csharp
  - vb
  name: CanWallJump
  nameWithType: TileData.TileDataContainer.CanWallJump
  fullName: TileData.TileDataContainer.CanWallJump
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Tilemap/TileData/TileData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CanWallJump
    path: ../Assets/Objects & Components/Tilemap/TileData/TileData.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public bool CanWallJump
    return:
      type: System.Boolean
    content.vb: >-
      <SerializeField>

      Public CanWallJump As Boolean
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.TileData.TileDataContainer.ColliderType
  commentId: F:Global.TileData.TileDataContainer.ColliderType
  id: ColliderType
  parent: Global.TileData.TileDataContainer
  langs:
  - csharp
  - vb
  name: ColliderType
  nameWithType: TileData.TileDataContainer.ColliderType
  fullName: TileData.TileDataContainer.ColliderType
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Tilemap/TileData/TileData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ColliderType
    path: ../Assets/Objects & Components/Tilemap/TileData/TileData.cs
    startLine: 31
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public TileData.TileColliderType ColliderType
    return:
      type: Global.TileData.TileColliderType
    content.vb: >-
      <SerializeField>

      Public ColliderType As TileData.TileColliderType
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.TileData.TileDataContainer.Equals(TileData.TileDataContainer)
  commentId: M:Global.TileData.TileDataContainer.Equals(TileData.TileDataContainer)
  id: Equals(TileData.TileDataContainer)
  parent: Global.TileData.TileDataContainer
  langs:
  - csharp
  - vb
  name: Equals(TileDataContainer)
  nameWithType: TileData.TileDataContainer.Equals(TileData.TileDataContainer)
  fullName: TileData.TileDataContainer.Equals(TileData.TileDataContainer)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Tilemap/TileData/TileData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Equals
    path: ../Assets/Objects & Components/Tilemap/TileData/TileData.cs
    startLine: 33
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool Equals(TileData.TileDataContainer other)
    parameters:
    - id: other
      type: Global.TileData.TileDataContainer
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As TileData.TileDataContainer) As Boolean
  overload: Global.TileData.TileDataContainer.Equals*
- uid: Global.TileData.TileDataContainer.Contains(TileData.TileDataContainer)
  commentId: M:Global.TileData.TileDataContainer.Contains(TileData.TileDataContainer)
  id: Contains(TileData.TileDataContainer)
  parent: Global.TileData.TileDataContainer
  langs:
  - csharp
  - vb
  name: Contains(TileDataContainer)
  nameWithType: TileData.TileDataContainer.Contains(TileData.TileDataContainer)
  fullName: TileData.TileDataContainer.Contains(TileData.TileDataContainer)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Tilemap/TileData/TileData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Contains
    path: ../Assets/Objects & Components/Tilemap/TileData/TileData.cs
    startLine: 38
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool Contains(TileData.TileDataContainer other)
    parameters:
    - id: other
      type: Global.TileData.TileDataContainer
    return:
      type: System.Boolean
    content.vb: Public Function Contains(other As TileData.TileDataContainer) As Boolean
  overload: Global.TileData.TileDataContainer.Contains*
references:
- uid: Global
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.TileData.TileColliderType
  commentId: T:Global.TileData.TileColliderType
  name: TileData.TileColliderType
  nameWithType: TileData.TileColliderType
  fullName: TileData.TileColliderType
  spec.csharp:
  - uid: Global.TileData
    name: TileData
  - name: .
  - uid: Global.TileData.TileColliderType
    name: TileColliderType
  spec.vb:
  - uid: Global.TileData
    name: TileData
  - name: .
  - uid: Global.TileData.TileColliderType
    name: TileColliderType
- uid: Global.TileData.TileDataContainer.Equals*
  commentId: Overload:Global.TileData.TileDataContainer.Equals
  name: Equals
  nameWithType: TileData.TileDataContainer.Equals
  fullName: TileData.TileDataContainer.Equals
- uid: Global.TileData.TileDataContainer
  commentId: T:Global.TileData.TileDataContainer
  name: TileData.TileDataContainer
  nameWithType: TileData.TileDataContainer
  fullName: TileData.TileDataContainer
  spec.csharp:
  - uid: Global.TileData
    name: TileData
  - name: .
  - uid: Global.TileData.TileDataContainer
    name: TileDataContainer
  spec.vb:
  - uid: Global.TileData
    name: TileData
  - name: .
  - uid: Global.TileData.TileDataContainer
    name: TileDataContainer
- uid: Global.TileData.TileDataContainer.Contains*
  commentId: Overload:Global.TileData.TileDataContainer.Contains
  name: Contains
  nameWithType: TileData.TileDataContainer.Contains
  fullName: TileData.TileDataContainer.Contains
