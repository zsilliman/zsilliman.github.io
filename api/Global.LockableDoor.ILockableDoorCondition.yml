### YamlMime:ManagedReference
items:
- uid: Global.LockableDoor.ILockableDoorCondition
  commentId: T:Global.LockableDoor.ILockableDoorCondition
  id: LockableDoor.ILockableDoorCondition
  parent: Global
  children:
  - Global.LockableDoor.ILockableDoorCondition.CanClose
  - Global.LockableDoor.ILockableDoorCondition.CanOpen
  langs:
  - csharp
  - vb
  name: LockableDoor.ILockableDoorCondition
  nameWithType: LockableDoor.ILockableDoorCondition
  fullName: LockableDoor.ILockableDoorCondition
  type: Interface
  source:
    remote:
      path: Assets/Objects & Components/World/Platforms/RoomDoor/LockableDoor.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ILockableDoorCondition
    path: ../Assets/Objects & Components/World/Platforms/RoomDoor/LockableDoor.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public interface LockableDoor.ILockableDoorCondition
    content.vb: Public Interface LockableDoor.ILockableDoorCondition
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.LockableDoor.ILockableDoorCondition.CanOpen
  commentId: M:Global.LockableDoor.ILockableDoorCondition.CanOpen
  id: CanOpen
  parent: Global.LockableDoor.ILockableDoorCondition
  langs:
  - csharp
  - vb
  name: CanOpen()
  nameWithType: LockableDoor.ILockableDoorCondition.CanOpen()
  fullName: LockableDoor.ILockableDoorCondition.CanOpen()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Platforms/RoomDoor/LockableDoor.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CanOpen
    path: ../Assets/Objects & Components/World/Platforms/RoomDoor/LockableDoor.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: bool CanOpen()
    return:
      type: System.Boolean
    content.vb: Function CanOpen() As Boolean
  overload: Global.LockableDoor.ILockableDoorCondition.CanOpen*
- uid: Global.LockableDoor.ILockableDoorCondition.CanClose
  commentId: M:Global.LockableDoor.ILockableDoorCondition.CanClose
  id: CanClose
  parent: Global.LockableDoor.ILockableDoorCondition
  langs:
  - csharp
  - vb
  name: CanClose()
  nameWithType: LockableDoor.ILockableDoorCondition.CanClose()
  fullName: LockableDoor.ILockableDoorCondition.CanClose()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Platforms/RoomDoor/LockableDoor.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CanClose
    path: ../Assets/Objects & Components/World/Platforms/RoomDoor/LockableDoor.cs
    startLine: 21
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: bool CanClose()
    return:
      type: System.Boolean
    content.vb: Function CanClose() As Boolean
  overload: Global.LockableDoor.ILockableDoorCondition.CanClose*
references:
- uid: Global
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.LockableDoor.ILockableDoorCondition.CanOpen*
  commentId: Overload:Global.LockableDoor.ILockableDoorCondition.CanOpen
  name: CanOpen
  nameWithType: LockableDoor.ILockableDoorCondition.CanOpen
  fullName: LockableDoor.ILockableDoorCondition.CanOpen
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.LockableDoor.ILockableDoorCondition.CanClose*
  commentId: Overload:Global.LockableDoor.ILockableDoorCondition.CanClose
  name: CanClose
  nameWithType: LockableDoor.ILockableDoorCondition.CanClose
  fullName: LockableDoor.ILockableDoorCondition.CanClose
