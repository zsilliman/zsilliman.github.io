### YamlMime:ManagedReference
items:
- uid: Global.DamagePopUpManager
  commentId: T:Global.DamagePopUpManager
  id: DamagePopUpManager
  parent: Global
  children:
  - Global.DamagePopUpManager.canvasTransform
  - Global.DamagePopUpManager.CreateDamagePopUp(System.Int32,UnityEngine.Vector3,DamageType)
  - Global.DamagePopUpManager.Instance
  - Global.DamagePopUpManager.popUpPrefab
  langs:
  - csharp
  - vb
  name: DamagePopUpManager
  nameWithType: DamagePopUpManager
  fullName: DamagePopUpManager
  type: Class
  source:
    remote:
      path: Assets/DamagePopUpManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DamagePopUpManager
    path: ../Assets/DamagePopUpManager.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class DamagePopUpManager : MonoBehaviour'
    content.vb: Public Class DamagePopUpManager Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.DamagePopUpManager.Instance
  commentId: F:Global.DamagePopUpManager.Instance
  id: Instance
  parent: Global.DamagePopUpManager
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: DamagePopUpManager.Instance
  fullName: DamagePopUpManager.Instance
  type: Field
  source:
    remote:
      path: Assets/DamagePopUpManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Instance
    path: ../Assets/DamagePopUpManager.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static DamagePopUpManager Instance
    return:
      type: Global.DamagePopUpManager
    content.vb: Public Shared Instance As DamagePopUpManager
- uid: Global.DamagePopUpManager.popUpPrefab
  commentId: F:Global.DamagePopUpManager.popUpPrefab
  id: popUpPrefab
  parent: Global.DamagePopUpManager
  langs:
  - csharp
  - vb
  name: popUpPrefab
  nameWithType: DamagePopUpManager.popUpPrefab
  fullName: DamagePopUpManager.popUpPrefab
  type: Field
  source:
    remote:
      path: Assets/DamagePopUpManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: popUpPrefab
    path: ../Assets/DamagePopUpManager.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public GameObject popUpPrefab
    return:
      type: UnityEngine.GameObject
    content.vb: Public popUpPrefab As GameObject
- uid: Global.DamagePopUpManager.canvasTransform
  commentId: F:Global.DamagePopUpManager.canvasTransform
  id: canvasTransform
  parent: Global.DamagePopUpManager
  langs:
  - csharp
  - vb
  name: canvasTransform
  nameWithType: DamagePopUpManager.canvasTransform
  fullName: DamagePopUpManager.canvasTransform
  type: Field
  source:
    remote:
      path: Assets/DamagePopUpManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: canvasTransform
    path: ../Assets/DamagePopUpManager.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Transform canvasTransform
    return:
      type: UnityEngine.Transform
    content.vb: Public canvasTransform As Transform
- uid: Global.DamagePopUpManager.CreateDamagePopUp(System.Int32,UnityEngine.Vector3,DamageType)
  commentId: M:Global.DamagePopUpManager.CreateDamagePopUp(System.Int32,UnityEngine.Vector3,DamageType)
  id: CreateDamagePopUp(System.Int32,UnityEngine.Vector3,DamageType)
  parent: Global.DamagePopUpManager
  langs:
  - csharp
  - vb
  name: CreateDamagePopUp(int, Vector3, DamageType)
  nameWithType: DamagePopUpManager.CreateDamagePopUp(int, Vector3, DamageType)
  fullName: DamagePopUpManager.CreateDamagePopUp(int, UnityEngine.Vector3, DamageType)
  type: Method
  source:
    remote:
      path: Assets/DamagePopUpManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CreateDamagePopUp
    path: ../Assets/DamagePopUpManager.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void CreateDamagePopUp(int damage, Vector3 position, DamageType damageType)
    parameters:
    - id: damage
      type: System.Int32
    - id: position
      type: UnityEngine.Vector3
    - id: damageType
      type: Global.DamageType
    content.vb: Public Sub CreateDamagePopUp(damage As Integer, position As Vector3, damageType As DamageType)
  overload: Global.DamagePopUpManager.CreateDamagePopUp*
  nameWithType.vb: DamagePopUpManager.CreateDamagePopUp(Integer, Vector3, DamageType)
  fullName.vb: DamagePopUpManager.CreateDamagePopUp(Integer, UnityEngine.Vector3, DamageType)
  name.vb: CreateDamagePopUp(Integer, Vector3, DamageType)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.DamagePopUpManager
  commentId: T:Global.DamagePopUpManager
  name: DamagePopUpManager
  nameWithType: DamagePopUpManager
  fullName: DamagePopUpManager
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine.Transform
  commentId: T:UnityEngine.Transform
  parent: UnityEngine
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: UnityEngine.Transform
- uid: Global.DamagePopUpManager.CreateDamagePopUp*
  commentId: Overload:Global.DamagePopUpManager.CreateDamagePopUp
  name: CreateDamagePopUp
  nameWithType: DamagePopUpManager.CreateDamagePopUp
  fullName: DamagePopUpManager.CreateDamagePopUp
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: Global.DamageType
  commentId: T:Global.DamageType
  name: DamageType
  nameWithType: DamageType
  fullName: DamageType
