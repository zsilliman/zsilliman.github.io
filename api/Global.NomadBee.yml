### YamlMime:ManagedReference
items:
- uid: Global.NomadBee
  commentId: T:Global.NomadBee
  id: NomadBee
  parent: Global
  children:
  - Global.NomadBee.Animate
  - Global.NomadBee.AttackerBeeID
  - Global.NomadBee.OnCollideX(IntSolid)
  - Global.NomadBee.OnCollideY(IntSolid)
  - Global.NomadBee.OnDoneSniffing(System.Single,System.Single)
  - Global.NomadBee.OnKill(System.Boolean)
  - Global.NomadBee.OnReachedDestinationFlower
  - Global.NomadBee.PostInputUpdate
  - Global.NomadBee.PreInputUpdate
  - Global.NomadBee.ResetObject
  - Global.NomadBee.SetState(NomadBeeState)
  - Global.NomadBee.SpawnAura
  - Global.NomadBee.Start
  - Global.NomadBee.UpdateInput
  langs:
  - csharp
  - vb
  name: NomadBee
  nameWithType: NomadBee
  fullName: NomadBee
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: NomadBee
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class NomadBee : Bee<NomadBeeState>, ISavableObject<IntObjectSaveData>, IEntity, ICollectableInterface, ISpawnable'
    content.vb: Public Class NomadBee Inherits Bee(Of NomadBeeState) Implements ISavableObject(Of IntObjectSaveData), IEntity, ICollectableInterface, ISpawnable
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - Global.IntObject
  - Global.IntActor
  - Global.IntEnemy
  - Global.Bee{NomadBeeState}
  implements:
  - Global.ISavableObject{IntObjectSaveData}
  - Global.IEntity
  - Global.ICollectableInterface
  - Global.ISpawnable
  inheritedMembers:
  - Global.Bee{NomadBeeState}.flowerTarget
  - Global.Bee{NomadBeeState}.SniffOffset
  - Global.Bee{NomadBeeState}.SniffTimeRange
  - Global.Bee{NomadBeeState}.Speed
  - Global.Bee{NomadBeeState}.DistanceEpsilon
  - Global.Bee{NomadBeeState}.territory
  - Global.Bee{NomadBeeState}.FlowerParent
  - Global.Bee{NomadBeeState}.animator
  - Global.Bee{NomadBeeState}.sprite
  - Global.Bee{NomadBeeState}.flowers
  - Global.Bee{NomadBeeState}.pathFinder
  - Global.Bee{NomadBeeState}.path
  - Global.Bee{NomadBeeState}.PreviousEndNode
  - Global.Bee{NomadBeeState}.interval
  - Global.Bee{NomadBeeState}.activePathNode
  - Global.Bee{NomadBeeState}.currentState
  - Global.Bee{NomadBeeState}.AStarBoundsMin
  - Global.Bee{NomadBeeState}.AStarBoundsMax
  - Global.Bee{NomadBeeState}.PickNewFlower
  - Global.Bee{NomadBeeState}.HeuristicFunc(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  - Global.Bee{NomadBeeState}.GetPathToLocation(UnityEngine.Vector2Int,System.Boolean)
  - Global.Bee{NomadBeeState}.ExtendPathToLocation(UnityEngine.Vector2Int,System.Boolean)
  - Global.Bee{NomadBeeState}.IsTileUnBlocked(UnityEngine.Vector2Int)
  - Global.Bee{NomadBeeState}.DrawTile(UnityEngine.Vector2Int,UnityEngine.Color)
  - Global.Bee{NomadBeeState}.TraversePath
  - Global.Bee{NomadBeeState}.Initialize
  - Global.Bee{NomadBeeState}.OnDrawGizmosSelected
  - Global.IntEnemy.AlwaysDrawGizmos
  - Global.IntEnemy.EnemyUIEnabled
  - Global.IntEnemy.MaxDropTileDistance
  - Global.IntEnemy.IsKillable
  - Global.IntEnemy.MaxHealth
  - Global.IntEnemy.MaxShieldHealth
  - Global.IntEnemy.StartShieldHealth
  - Global.IntEnemy.CurrentHealth
  - Global.IntEnemy.CurrentShieldHealth
  - Global.IntEnemy.MaxFallSpeed
  - Global.IntEnemy.POISON_DISPEL_TIMER
  - Global.IntEnemy.POISON_PROC_TIMER
  - Global.IntEnemy.tilemap
  - Global.IntEnemy.velocity
  - Global.IntEnemy.IsGrounded
  - Global.IntEnemy.IsAlive
  - Global.IntEnemy.SpawnProperties
  - Global.IntEnemy.CanRepelEnemy
  - Global.IntEnemy.ComputeJumpInitialVelocityFromTile(System.Int32,System.Single)
  - Global.IntEnemy.ComputeJumpInitialVelocity(System.Single,System.Single)
  - Global.IntEnemy.ComputeJumpHangTimeFromVelocity(System.Single,System.Single)
  - Global.IntEnemy.ComputeJumpHangTimeFromHeight(System.Single,System.Single)
  - Global.IntEnemy.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  - Global.IntEnemy.SetCurrentShieldHealth(System.Int32)
  - Global.IntEnemy.SetPoisoned(System.Int32)
  - Global.IntEnemy.GetSightRayOrigin
  - Global.IntEnemy.GetForwardSightRayDirection
  - Global.IntEnemy.GetVelocity
  - Global.IntEnemy.IsCollected
  - Global.IntEnemy.StaticMoveUpdate
  - Global.IntEnemy.GetSpriteFlip(System.Boolean,System.Boolean)
  - Global.IntEnemy.GetLookAtFlipX(System.Boolean,UnityEngine.GameObject)
  - Global.IntEnemy.JumpTiles(System.Int32,System.Single)
  - Global.IntEnemy.JumpHeight(System.Single,System.Single)
  - Global.IntEnemy.Jump(System.Single)
  - Global.IntEnemy.ApplyGravity(System.Single)
  - Global.IntEnemy.AIMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.Action,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntEnemy.AIMoveWithJump(System.Int32,UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.Action,IntObject.ActorAction,IntObject.TriggerAction,IntObject.Action)
  - Global.IntEnemy.Charge(IntEnemy.ChargeProps,IntObject.Action,IntObject.SolidAction,IntObject.SolidAction,IntObject.TriggerAction,IntObject.ActorAction)
  - Global.IntEnemy.CastForwardSightRay(System.Single)
  - Global.IntEnemy.CastForwardSightRay(System.Single,IntColliderState.RayCastFilter)
  - Global.IntEnemy.GetJumpInfo(System.Int32)
  - Global.IntEnemy.CanContinueForward
  - Global.IntEnemy.Update
  - Global.IntEnemy.OnFirstFrame
  - Global.IntEnemy.OnSpike(IntSolid)
  - Global.IntEnemy.OnDrawDebugGizmos
  - Global.IntEnemy.DebugDrawTileVision
  - Global.IntEnemy.GizmosDrawTileVision
  - Global.IntEnemy.GizmosDrawRequiredSpace
  - Global.IntEnemy.OnDrawGizmos
  - Global.IntEnemy.GetSpawnProperties
  - Global.IntEnemy.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  - Global.IntEnemy.ResolveSpawnLocation
  - Global.IntEnemy.GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
  - Global.IntActor.HurtBySpike
  - Global.IntActor.aabb
  - Global.IntActor.Left
  - Global.IntActor.Right
  - Global.IntActor.Top
  - Global.IntActor.Bottom
  - Global.IntActor.Size
  - Global.IntActor.WindInfluence
  - Global.IntActor.OnTakeDamageCallback
  - Global.IntActor.RidingSolid
  - Global.IntActor.RidingTangent
  - Global.IntActor.RidingNormal
  - Global.IntActor.IsRidingFlatSurface
  - Global.IntActor.Awake
  - Global.IntActor.ManualInit
  - Global.IntActor.GetAABBIntCollider
  - Global.IntActor.EnsureAABBIntColliderSet
  - Global.IntActor.IsRiding(IntSolid)
  - Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
  - Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
  - Global.IntActor.IsTouchingWall(IntSolid)
  - Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
  - Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  - Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  - Global.IntActor.OnTakeDamage(System.Int32)
  - Global.IntActor.ResetAuraCollisionMap
  - Global.IntActor.ResetActorCollisionMap
  - Global.IntActor.ResetCollisionMap
  - Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
  - Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
  - Global.IntActor.GetCollisionMapValue(IntObject)
  - Global.IntActor.Squish(IntSolid)
  - Global.IntActor.OnTriggerStart(IntTrigger)
  - Global.IntActor.OnTriggerEnd(IntTrigger)
  - Global.IntActor.OnActor(IntActor)
  - Global.IntActor.CheckGrounded
  - Global.IntActor.GroundActor
  - Global.IntActor.CheckOnWall
  - Global.IntActor.DropDownOneWay
  - Global.IntActor.activeWater
  - Global.IntActor.GetSubmergedPercentage
  - Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
  - Global.IntActor.IsInWater
  - Global.IntActor.OnEnterWater(WaterComponent,System.Single)
  - Global.IntActor.OnExitWater(WaterComponent)
  - Global.IntActor.ApplyWind(UnityEngine.Vector2)
  - Global.IntActor.RemoveWind
  - Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
  - Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
  - Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
  - Global.IntActor.NotifyObjectKilled(IntObject)
  - Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.CheckActorInteractableCollisions
  - Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
  - Global.IntObject.section
  - Global.IntObject.state
  - Global.IntObject.int_collider
  - Global.IntObject.remainder
  - Global.IntObject.StartPosition
  - Global.IntObject.AttachedToPlayer
  - Global.IntObject.IgnoredObjectsMap
  - Global.IntObject.KilledCallback
  - Global.IntObject.Position
  - Global.IntObject.GetStartWorldPosition
  - Global.IntObject.collider_type
  - Global.IntObject.MarkedForKill
  - Global.IntObject.ObjectID
  - Global.IntObject.DestroyOnKill
  - Global.IntObject.RespawnBehavior
  - Global.IntObject.Status
  - Global.IntObject.InitialStatus
  - Global.IntObject.SaveObject
  - Global.IntObject.IsInSetPiece
  - Global.IntObject.Init
  - Global.IntObject.FindIntColliderState(System.Int32)
  - Global.IntObject.GetLocalGameStates
  - Global.IntObject.RegisterSelf
  - Global.IntObject.UnregisterSelf
  - Global.IntObject.RegisterKilledCallback(IntObject.Action)
  - Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  - Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  - Global.IntObject.SetStatus(ObjectStatus)
  - Global.IntObject.Kill
  - Global.IntObject.Kill(System.Boolean)
  - Global.IntObject.Kill(System.Single)
  - Global.IntObject.Kill(System.Boolean,System.Single)
  - Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  - Global.IntObject.SleepObject
  - Global.IntObject.OptimizeSleepObject
  - Global.IntObject.WakeObject
  - Global.IntObject.EnableObject
  - Global.IntObject.DisableObject
  - Global.IntObject.RespawnObject
  - Global.IntObject.RecursiveSetCollidable(System.Boolean)
  - Global.IntObject.SetColliderState(IntColliderState)
  - Global.IntObject.Translate(UnityEngine.Vector2Int)
  - Global.IntObject.Translate(UnityEngine.Vector2)
  - Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  - Global.IntObject.SetCollidable(System.Boolean)
  - Global.IntObject.GetCollidable
  - Global.IntObject.GetCollider
  - Global.IntObject.GetColliderState
  - Global.IntObject.Overlaps(IntObject)
  - Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  - Global.IntObject.RayCast(IntRay)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  - Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  - Global.IntObject.GetObjectSaveData
  - Global.IntObject.OnPostLoadSaveFile
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.NomadBee.AttackerBeeID
  commentId: F:Global.NomadBee.AttackerBeeID
  id: AttackerBeeID
  parent: Global.NomadBee
  langs:
  - csharp
  - vb
  name: AttackerBeeID
  nameWithType: NomadBee.AttackerBeeID
  fullName: NomadBee.AttackerBeeID
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AttackerBeeID
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static int AttackerBeeID
    return:
      type: System.Int32
    content.vb: Public Shared AttackerBeeID As Integer
- uid: Global.NomadBee.Start
  commentId: M:Global.NomadBee.Start
  id: Start
  parent: Global.NomadBee
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: NomadBee.Start()
  fullName: NomadBee.Start()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Start
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Start()
    content.vb: Protected Sub Start()
  overload: Global.NomadBee.Start*
- uid: Global.NomadBee.SetState(NomadBeeState)
  commentId: M:Global.NomadBee.SetState(NomadBeeState)
  id: SetState(NomadBeeState)
  parent: Global.NomadBee
  langs:
  - csharp
  - vb
  name: SetState(NomadBeeState)
  nameWithType: NomadBee.SetState(NomadBeeState)
  fullName: NomadBee.SetState(NomadBeeState)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetState
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override void SetState(NomadBeeState state)
    parameters:
    - id: state
      type: Global.NomadBeeState
    content.vb: Protected Overrides Sub SetState(state As NomadBeeState)
  overridden: Global.Bee{NomadBeeState}.SetState(NomadBeeState)
  overload: Global.NomadBee.SetState*
- uid: Global.NomadBee.OnDoneSniffing(System.Single,System.Single)
  commentId: M:Global.NomadBee.OnDoneSniffing(System.Single,System.Single)
  id: OnDoneSniffing(System.Single,System.Single)
  parent: Global.NomadBee
  langs:
  - csharp
  - vb
  name: OnDoneSniffing(float, float)
  nameWithType: NomadBee.OnDoneSniffing(float, float)
  fullName: NomadBee.OnDoneSniffing(float, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnDoneSniffing
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
    startLine: 52
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override void OnDoneSniffing(float TimePassed, float DesiredInterval)
    parameters:
    - id: TimePassed
      type: System.Single
    - id: DesiredInterval
      type: System.Single
    content.vb: Protected Overrides Sub OnDoneSniffing(TimePassed As Single, DesiredInterval As Single)
  overridden: Global.Bee{NomadBeeState}.OnDoneSniffing(System.Single,System.Single)
  overload: Global.NomadBee.OnDoneSniffing*
  nameWithType.vb: NomadBee.OnDoneSniffing(Single, Single)
  fullName.vb: NomadBee.OnDoneSniffing(Single, Single)
  name.vb: OnDoneSniffing(Single, Single)
- uid: Global.NomadBee.OnReachedDestinationFlower
  commentId: M:Global.NomadBee.OnReachedDestinationFlower
  id: OnReachedDestinationFlower
  parent: Global.NomadBee
  langs:
  - csharp
  - vb
  name: OnReachedDestinationFlower()
  nameWithType: NomadBee.OnReachedDestinationFlower()
  fullName: NomadBee.OnReachedDestinationFlower()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnReachedDestinationFlower
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
    startLine: 57
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override void OnReachedDestinationFlower()
    content.vb: Protected Overrides Sub OnReachedDestinationFlower()
  overridden: Global.Bee{NomadBeeState}.OnReachedDestinationFlower
  overload: Global.NomadBee.OnReachedDestinationFlower*
- uid: Global.NomadBee.SpawnAura
  commentId: M:Global.NomadBee.SpawnAura
  id: SpawnAura
  parent: Global.NomadBee
  langs:
  - csharp
  - vb
  name: SpawnAura()
  nameWithType: NomadBee.SpawnAura()
  fullName: NomadBee.SpawnAura()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SpawnAura
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
    startLine: 66
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override GameObject SpawnAura()
    return:
      type: UnityEngine.GameObject
    content.vb: Public Overrides Function SpawnAura() As GameObject
  overridden: Global.IntEnemy.SpawnAura
  overload: Global.NomadBee.SpawnAura*
- uid: Global.NomadBee.PreInputUpdate
  commentId: M:Global.NomadBee.PreInputUpdate
  id: PreInputUpdate
  parent: Global.NomadBee
  langs:
  - csharp
  - vb
  name: PreInputUpdate()
  nameWithType: NomadBee.PreInputUpdate()
  fullName: NomadBee.PreInputUpdate()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PreInputUpdate
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
    startLine: 72
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void PreInputUpdate()
    content.vb: Public Overrides Sub PreInputUpdate()
  overridden: Global.IntEnemy.PreInputUpdate
  overload: Global.NomadBee.PreInputUpdate*
- uid: Global.NomadBee.UpdateInput
  commentId: M:Global.NomadBee.UpdateInput
  id: UpdateInput
  parent: Global.NomadBee
  langs:
  - csharp
  - vb
  name: UpdateInput()
  nameWithType: NomadBee.UpdateInput()
  fullName: NomadBee.UpdateInput()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UpdateInput
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
    startLine: 77
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nHandle AI decisions and movement here\n"
  example: []
  syntax:
    content: public override void UpdateInput()
    content.vb: Public Overrides Sub UpdateInput()
  overridden: Global.IntEnemy.UpdateInput
  overload: Global.NomadBee.UpdateInput*
- uid: Global.NomadBee.PostInputUpdate
  commentId: M:Global.NomadBee.PostInputUpdate
  id: PostInputUpdate
  parent: Global.NomadBee
  langs:
  - csharp
  - vb
  name: PostInputUpdate()
  nameWithType: NomadBee.PostInputUpdate()
  fullName: NomadBee.PostInputUpdate()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PostInputUpdate
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
    startLine: 102
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void PostInputUpdate()
    content.vb: Public Overrides Sub PostInputUpdate()
  overridden: Global.IntEnemy.PostInputUpdate
  overload: Global.NomadBee.PostInputUpdate*
- uid: Global.NomadBee.Animate
  commentId: M:Global.NomadBee.Animate
  id: Animate
  parent: Global.NomadBee
  langs:
  - csharp
  - vb
  name: Animate()
  nameWithType: NomadBee.Animate()
  fullName: NomadBee.Animate()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Animate
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
    startLine: 107
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void Animate()
    content.vb: Public Overrides Sub Animate()
  overridden: Global.IntEnemy.Animate
  overload: Global.NomadBee.Animate*
- uid: Global.NomadBee.OnCollideX(IntSolid)
  commentId: M:Global.NomadBee.OnCollideX(IntSolid)
  id: OnCollideX(IntSolid)
  parent: Global.NomadBee
  langs:
  - csharp
  - vb
  name: OnCollideX(IntSolid)
  nameWithType: NomadBee.OnCollideX(IntSolid)
  fullName: NomadBee.OnCollideX(IntSolid)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnCollideX
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
    startLine: 119
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void OnCollideX(IntSolid solid)
    parameters:
    - id: solid
      type: Global.IntSolid
    content.vb: Protected Sub OnCollideX(solid As IntSolid)
  overload: Global.NomadBee.OnCollideX*
- uid: Global.NomadBee.OnCollideY(IntSolid)
  commentId: M:Global.NomadBee.OnCollideY(IntSolid)
  id: OnCollideY(IntSolid)
  parent: Global.NomadBee
  langs:
  - csharp
  - vb
  name: OnCollideY(IntSolid)
  nameWithType: NomadBee.OnCollideY(IntSolid)
  fullName: NomadBee.OnCollideY(IntSolid)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnCollideY
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
    startLine: 124
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void OnCollideY(IntSolid solid)
    parameters:
    - id: solid
      type: Global.IntSolid
    content.vb: Protected Sub OnCollideY(solid As IntSolid)
  overload: Global.NomadBee.OnCollideY*
- uid: Global.NomadBee.OnKill(System.Boolean)
  commentId: M:Global.NomadBee.OnKill(System.Boolean)
  id: OnKill(System.Boolean)
  parent: Global.NomadBee
  langs:
  - csharp
  - vb
  name: OnKill(bool)
  nameWithType: NomadBee.OnKill(bool)
  fullName: NomadBee.OnKill(bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnKill
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
    startLine: 129
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnKill(bool isAnimated)
    parameters:
    - id: isAnimated
      type: System.Boolean
    content.vb: Public Overrides Sub OnKill(isAnimated As Boolean)
  overridden: Global.IntObject.OnKill(System.Boolean)
  overload: Global.NomadBee.OnKill*
  nameWithType.vb: NomadBee.OnKill(Boolean)
  fullName.vb: NomadBee.OnKill(Boolean)
  name.vb: OnKill(Boolean)
- uid: Global.NomadBee.ResetObject
  commentId: M:Global.NomadBee.ResetObject
  id: ResetObject
  parent: Global.NomadBee
  langs:
  - csharp
  - vb
  name: ResetObject()
  nameWithType: NomadBee.ResetObject()
  fullName: NomadBee.ResetObject()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResetObject
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Hive/NomadBee/NomadBee.cs
    startLine: 134
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void ResetObject()
    content.vb: Public Overrides Sub ResetObject()
  overridden: Global.IntEnemy.ResetObject
  overload: Global.NomadBee.ResetObject*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Global.IntObject
  commentId: T:Global.IntObject
  name: IntObject
  nameWithType: IntObject
  fullName: IntObject
- uid: Global.IntActor
  commentId: T:Global.IntActor
  name: IntActor
  nameWithType: IntActor
  fullName: IntActor
- uid: Global.IntEnemy
  commentId: T:Global.IntEnemy
  name: IntEnemy
  nameWithType: IntEnemy
  fullName: IntEnemy
- uid: Global.Bee{NomadBeeState}
  commentId: T:Global.Bee{NomadBeeState}
  definition: Global.Bee`1
  name: Bee<NomadBeeState>
  nameWithType: Bee<NomadBeeState>
  fullName: Bee<NomadBeeState>
  nameWithType.vb: Bee(Of NomadBeeState)
  fullName.vb: Bee(Of NomadBeeState)
  name.vb: Bee(Of NomadBeeState)
  spec.csharp:
  - uid: Global.Bee`1
    name: Bee
  - name: <
  - uid: Global.NomadBeeState
    name: NomadBeeState
  - name: '>'
  spec.vb:
  - uid: Global.Bee`1
    name: Bee
  - name: (
  - name: Of
  - name: " "
  - uid: Global.NomadBeeState
    name: NomadBeeState
  - name: )
- uid: Global.ISavableObject{IntObjectSaveData}
  commentId: T:Global.ISavableObject{IntObjectSaveData}
  definition: Global.ISavableObject`1
  name: ISavableObject<IntObjectSaveData>
  nameWithType: ISavableObject<IntObjectSaveData>
  fullName: ISavableObject<IntObjectSaveData>
  nameWithType.vb: ISavableObject(Of IntObjectSaveData)
  fullName.vb: ISavableObject(Of IntObjectSaveData)
  name.vb: ISavableObject(Of IntObjectSaveData)
  spec.csharp:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: <
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: '>'
  spec.vb:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
- uid: Global.IEntity
  commentId: T:Global.IEntity
  name: IEntity
  nameWithType: IEntity
  fullName: IEntity
- uid: Global.ICollectableInterface
  commentId: T:Global.ICollectableInterface
  name: ICollectableInterface
  nameWithType: ICollectableInterface
  fullName: ICollectableInterface
- uid: Global.ISpawnable
  commentId: T:Global.ISpawnable
  name: ISpawnable
  nameWithType: ISpawnable
  fullName: ISpawnable
- uid: Global.Bee{NomadBeeState}.flowerTarget
  commentId: F:Global.Bee{NomadBeeState}.flowerTarget
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.flowerTarget
  name: flowerTarget
  nameWithType: Bee<NomadBeeState>.flowerTarget
  fullName: Bee<NomadBeeState>.flowerTarget
  nameWithType.vb: Bee(Of NomadBeeState).flowerTarget
  fullName.vb: Bee(Of NomadBeeState).flowerTarget
- uid: Global.Bee{NomadBeeState}.SniffOffset
  commentId: F:Global.Bee{NomadBeeState}.SniffOffset
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.SniffOffset
  name: SniffOffset
  nameWithType: Bee<NomadBeeState>.SniffOffset
  fullName: Bee<NomadBeeState>.SniffOffset
  nameWithType.vb: Bee(Of NomadBeeState).SniffOffset
  fullName.vb: Bee(Of NomadBeeState).SniffOffset
- uid: Global.Bee{NomadBeeState}.SniffTimeRange
  commentId: F:Global.Bee{NomadBeeState}.SniffTimeRange
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.SniffTimeRange
  name: SniffTimeRange
  nameWithType: Bee<NomadBeeState>.SniffTimeRange
  fullName: Bee<NomadBeeState>.SniffTimeRange
  nameWithType.vb: Bee(Of NomadBeeState).SniffTimeRange
  fullName.vb: Bee(Of NomadBeeState).SniffTimeRange
- uid: Global.Bee{NomadBeeState}.Speed
  commentId: F:Global.Bee{NomadBeeState}.Speed
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.Speed
  name: Speed
  nameWithType: Bee<NomadBeeState>.Speed
  fullName: Bee<NomadBeeState>.Speed
  nameWithType.vb: Bee(Of NomadBeeState).Speed
  fullName.vb: Bee(Of NomadBeeState).Speed
- uid: Global.Bee{NomadBeeState}.DistanceEpsilon
  commentId: F:Global.Bee{NomadBeeState}.DistanceEpsilon
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.DistanceEpsilon
  name: DistanceEpsilon
  nameWithType: Bee<NomadBeeState>.DistanceEpsilon
  fullName: Bee<NomadBeeState>.DistanceEpsilon
  nameWithType.vb: Bee(Of NomadBeeState).DistanceEpsilon
  fullName.vb: Bee(Of NomadBeeState).DistanceEpsilon
- uid: Global.Bee{NomadBeeState}.territory
  commentId: F:Global.Bee{NomadBeeState}.territory
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.territory
  name: territory
  nameWithType: Bee<NomadBeeState>.territory
  fullName: Bee<NomadBeeState>.territory
  nameWithType.vb: Bee(Of NomadBeeState).territory
  fullName.vb: Bee(Of NomadBeeState).territory
- uid: Global.Bee{NomadBeeState}.FlowerParent
  commentId: F:Global.Bee{NomadBeeState}.FlowerParent
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.FlowerParent
  name: FlowerParent
  nameWithType: Bee<NomadBeeState>.FlowerParent
  fullName: Bee<NomadBeeState>.FlowerParent
  nameWithType.vb: Bee(Of NomadBeeState).FlowerParent
  fullName.vb: Bee(Of NomadBeeState).FlowerParent
- uid: Global.Bee{NomadBeeState}.animator
  commentId: F:Global.Bee{NomadBeeState}.animator
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.animator
  name: animator
  nameWithType: Bee<NomadBeeState>.animator
  fullName: Bee<NomadBeeState>.animator
  nameWithType.vb: Bee(Of NomadBeeState).animator
  fullName.vb: Bee(Of NomadBeeState).animator
- uid: Global.Bee{NomadBeeState}.sprite
  commentId: F:Global.Bee{NomadBeeState}.sprite
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.sprite
  name: sprite
  nameWithType: Bee<NomadBeeState>.sprite
  fullName: Bee<NomadBeeState>.sprite
  nameWithType.vb: Bee(Of NomadBeeState).sprite
  fullName.vb: Bee(Of NomadBeeState).sprite
- uid: Global.Bee{NomadBeeState}.flowers
  commentId: F:Global.Bee{NomadBeeState}.flowers
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.flowers
  name: flowers
  nameWithType: Bee<NomadBeeState>.flowers
  fullName: Bee<NomadBeeState>.flowers
  nameWithType.vb: Bee(Of NomadBeeState).flowers
  fullName.vb: Bee(Of NomadBeeState).flowers
- uid: Global.Bee{NomadBeeState}.pathFinder
  commentId: F:Global.Bee{NomadBeeState}.pathFinder
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.pathFinder
  name: pathFinder
  nameWithType: Bee<NomadBeeState>.pathFinder
  fullName: Bee<NomadBeeState>.pathFinder
  nameWithType.vb: Bee(Of NomadBeeState).pathFinder
  fullName.vb: Bee(Of NomadBeeState).pathFinder
- uid: Global.Bee{NomadBeeState}.path
  commentId: F:Global.Bee{NomadBeeState}.path
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.path
  name: path
  nameWithType: Bee<NomadBeeState>.path
  fullName: Bee<NomadBeeState>.path
  nameWithType.vb: Bee(Of NomadBeeState).path
  fullName.vb: Bee(Of NomadBeeState).path
- uid: Global.Bee{NomadBeeState}.PreviousEndNode
  commentId: F:Global.Bee{NomadBeeState}.PreviousEndNode
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.PreviousEndNode
  name: PreviousEndNode
  nameWithType: Bee<NomadBeeState>.PreviousEndNode
  fullName: Bee<NomadBeeState>.PreviousEndNode
  nameWithType.vb: Bee(Of NomadBeeState).PreviousEndNode
  fullName.vb: Bee(Of NomadBeeState).PreviousEndNode
- uid: Global.Bee{NomadBeeState}.interval
  commentId: F:Global.Bee{NomadBeeState}.interval
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.interval
  name: interval
  nameWithType: Bee<NomadBeeState>.interval
  fullName: Bee<NomadBeeState>.interval
  nameWithType.vb: Bee(Of NomadBeeState).interval
  fullName.vb: Bee(Of NomadBeeState).interval
- uid: Global.Bee{NomadBeeState}.activePathNode
  commentId: F:Global.Bee{NomadBeeState}.activePathNode
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.activePathNode
  name: activePathNode
  nameWithType: Bee<NomadBeeState>.activePathNode
  fullName: Bee<NomadBeeState>.activePathNode
  nameWithType.vb: Bee(Of NomadBeeState).activePathNode
  fullName.vb: Bee(Of NomadBeeState).activePathNode
- uid: Global.Bee{NomadBeeState}.currentState
  commentId: F:Global.Bee{NomadBeeState}.currentState
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.currentState
  name: currentState
  nameWithType: Bee<NomadBeeState>.currentState
  fullName: Bee<NomadBeeState>.currentState
  nameWithType.vb: Bee(Of NomadBeeState).currentState
  fullName.vb: Bee(Of NomadBeeState).currentState
- uid: Global.Bee{NomadBeeState}.AStarBoundsMin
  commentId: F:Global.Bee{NomadBeeState}.AStarBoundsMin
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.AStarBoundsMin
  name: AStarBoundsMin
  nameWithType: Bee<NomadBeeState>.AStarBoundsMin
  fullName: Bee<NomadBeeState>.AStarBoundsMin
  nameWithType.vb: Bee(Of NomadBeeState).AStarBoundsMin
  fullName.vb: Bee(Of NomadBeeState).AStarBoundsMin
- uid: Global.Bee{NomadBeeState}.AStarBoundsMax
  commentId: F:Global.Bee{NomadBeeState}.AStarBoundsMax
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.AStarBoundsMax
  name: AStarBoundsMax
  nameWithType: Bee<NomadBeeState>.AStarBoundsMax
  fullName: Bee<NomadBeeState>.AStarBoundsMax
  nameWithType.vb: Bee(Of NomadBeeState).AStarBoundsMax
  fullName.vb: Bee(Of NomadBeeState).AStarBoundsMax
- uid: Global.Bee{NomadBeeState}.PickNewFlower
  commentId: M:Global.Bee{NomadBeeState}.PickNewFlower
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.PickNewFlower
  name: PickNewFlower()
  nameWithType: Bee<NomadBeeState>.PickNewFlower()
  fullName: Bee<NomadBeeState>.PickNewFlower()
  nameWithType.vb: Bee(Of NomadBeeState).PickNewFlower()
  fullName.vb: Bee(Of NomadBeeState).PickNewFlower()
  spec.csharp:
  - uid: Global.Bee{NomadBeeState}.PickNewFlower
    name: PickNewFlower
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Bee{NomadBeeState}.PickNewFlower
    name: PickNewFlower
  - name: (
  - name: )
- uid: Global.Bee{NomadBeeState}.HeuristicFunc(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  commentId: M:Global.Bee{NomadBeeState}.HeuristicFunc(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.HeuristicFunc(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  name: HeuristicFunc(Vector2Int, Vector2Int)
  nameWithType: Bee<NomadBeeState>.HeuristicFunc(Vector2Int, Vector2Int)
  fullName: Bee<NomadBeeState>.HeuristicFunc(UnityEngine.Vector2Int, UnityEngine.Vector2Int)
  nameWithType.vb: Bee(Of NomadBeeState).HeuristicFunc(Vector2Int, Vector2Int)
  fullName.vb: Bee(Of NomadBeeState).HeuristicFunc(UnityEngine.Vector2Int, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.Bee{NomadBeeState}.HeuristicFunc(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
    name: HeuristicFunc
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.Bee{NomadBeeState}.HeuristicFunc(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
    name: HeuristicFunc
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.Bee{NomadBeeState}.GetPathToLocation(UnityEngine.Vector2Int,System.Boolean)
  commentId: M:Global.Bee{NomadBeeState}.GetPathToLocation(UnityEngine.Vector2Int,System.Boolean)
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.GetPathToLocation(UnityEngine.Vector2Int,System.Boolean)
  name: GetPathToLocation(Vector2Int, bool)
  nameWithType: Bee<NomadBeeState>.GetPathToLocation(Vector2Int, bool)
  fullName: Bee<NomadBeeState>.GetPathToLocation(UnityEngine.Vector2Int, bool)
  nameWithType.vb: Bee(Of NomadBeeState).GetPathToLocation(Vector2Int, Boolean)
  fullName.vb: Bee(Of NomadBeeState).GetPathToLocation(UnityEngine.Vector2Int, Boolean)
  name.vb: GetPathToLocation(Vector2Int, Boolean)
  spec.csharp:
  - uid: Global.Bee{NomadBeeState}.GetPathToLocation(UnityEngine.Vector2Int,System.Boolean)
    name: GetPathToLocation
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.Bee{NomadBeeState}.GetPathToLocation(UnityEngine.Vector2Int,System.Boolean)
    name: GetPathToLocation
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.Bee{NomadBeeState}.ExtendPathToLocation(UnityEngine.Vector2Int,System.Boolean)
  commentId: M:Global.Bee{NomadBeeState}.ExtendPathToLocation(UnityEngine.Vector2Int,System.Boolean)
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.ExtendPathToLocation(UnityEngine.Vector2Int,System.Boolean)
  name: ExtendPathToLocation(Vector2Int, bool)
  nameWithType: Bee<NomadBeeState>.ExtendPathToLocation(Vector2Int, bool)
  fullName: Bee<NomadBeeState>.ExtendPathToLocation(UnityEngine.Vector2Int, bool)
  nameWithType.vb: Bee(Of NomadBeeState).ExtendPathToLocation(Vector2Int, Boolean)
  fullName.vb: Bee(Of NomadBeeState).ExtendPathToLocation(UnityEngine.Vector2Int, Boolean)
  name.vb: ExtendPathToLocation(Vector2Int, Boolean)
  spec.csharp:
  - uid: Global.Bee{NomadBeeState}.ExtendPathToLocation(UnityEngine.Vector2Int,System.Boolean)
    name: ExtendPathToLocation
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.Bee{NomadBeeState}.ExtendPathToLocation(UnityEngine.Vector2Int,System.Boolean)
    name: ExtendPathToLocation
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.Bee{NomadBeeState}.IsTileUnBlocked(UnityEngine.Vector2Int)
  commentId: M:Global.Bee{NomadBeeState}.IsTileUnBlocked(UnityEngine.Vector2Int)
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.IsTileUnBlocked(UnityEngine.Vector2Int)
  name: IsTileUnBlocked(Vector2Int)
  nameWithType: Bee<NomadBeeState>.IsTileUnBlocked(Vector2Int)
  fullName: Bee<NomadBeeState>.IsTileUnBlocked(UnityEngine.Vector2Int)
  nameWithType.vb: Bee(Of NomadBeeState).IsTileUnBlocked(Vector2Int)
  fullName.vb: Bee(Of NomadBeeState).IsTileUnBlocked(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.Bee{NomadBeeState}.IsTileUnBlocked(UnityEngine.Vector2Int)
    name: IsTileUnBlocked
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.Bee{NomadBeeState}.IsTileUnBlocked(UnityEngine.Vector2Int)
    name: IsTileUnBlocked
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.Bee{NomadBeeState}.DrawTile(UnityEngine.Vector2Int,UnityEngine.Color)
  commentId: M:Global.Bee{NomadBeeState}.DrawTile(UnityEngine.Vector2Int,UnityEngine.Color)
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.DrawTile(UnityEngine.Vector2Int,UnityEngine.Color)
  name: DrawTile(Vector2Int, Color)
  nameWithType: Bee<NomadBeeState>.DrawTile(Vector2Int, Color)
  fullName: Bee<NomadBeeState>.DrawTile(UnityEngine.Vector2Int, UnityEngine.Color)
  nameWithType.vb: Bee(Of NomadBeeState).DrawTile(Vector2Int, Color)
  fullName.vb: Bee(Of NomadBeeState).DrawTile(UnityEngine.Vector2Int, UnityEngine.Color)
  spec.csharp:
  - uid: Global.Bee{NomadBeeState}.DrawTile(UnityEngine.Vector2Int,UnityEngine.Color)
    name: DrawTile
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.Bee{NomadBeeState}.DrawTile(UnityEngine.Vector2Int,UnityEngine.Color)
    name: DrawTile
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
- uid: Global.Bee{NomadBeeState}.TraversePath
  commentId: M:Global.Bee{NomadBeeState}.TraversePath
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.TraversePath
  name: TraversePath()
  nameWithType: Bee<NomadBeeState>.TraversePath()
  fullName: Bee<NomadBeeState>.TraversePath()
  nameWithType.vb: Bee(Of NomadBeeState).TraversePath()
  fullName.vb: Bee(Of NomadBeeState).TraversePath()
  spec.csharp:
  - uid: Global.Bee{NomadBeeState}.TraversePath
    name: TraversePath
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Bee{NomadBeeState}.TraversePath
    name: TraversePath
  - name: (
  - name: )
- uid: Global.Bee{NomadBeeState}.Initialize
  commentId: M:Global.Bee{NomadBeeState}.Initialize
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.Initialize
  name: Initialize()
  nameWithType: Bee<NomadBeeState>.Initialize()
  fullName: Bee<NomadBeeState>.Initialize()
  nameWithType.vb: Bee(Of NomadBeeState).Initialize()
  fullName.vb: Bee(Of NomadBeeState).Initialize()
  spec.csharp:
  - uid: Global.Bee{NomadBeeState}.Initialize
    name: Initialize
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Bee{NomadBeeState}.Initialize
    name: Initialize
  - name: (
  - name: )
- uid: Global.Bee{NomadBeeState}.OnDrawGizmosSelected
  commentId: M:Global.Bee{NomadBeeState}.OnDrawGizmosSelected
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.OnDrawGizmosSelected
  name: OnDrawGizmosSelected()
  nameWithType: Bee<NomadBeeState>.OnDrawGizmosSelected()
  fullName: Bee<NomadBeeState>.OnDrawGizmosSelected()
  nameWithType.vb: Bee(Of NomadBeeState).OnDrawGizmosSelected()
  fullName.vb: Bee(Of NomadBeeState).OnDrawGizmosSelected()
  spec.csharp:
  - uid: Global.Bee{NomadBeeState}.OnDrawGizmosSelected
    name: OnDrawGizmosSelected
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Bee{NomadBeeState}.OnDrawGizmosSelected
    name: OnDrawGizmosSelected
  - name: (
  - name: )
- uid: Global.IntEnemy.AlwaysDrawGizmos
  commentId: F:Global.IntEnemy.AlwaysDrawGizmos
  parent: Global.IntEnemy
  name: AlwaysDrawGizmos
  nameWithType: IntEnemy.AlwaysDrawGizmos
  fullName: IntEnemy.AlwaysDrawGizmos
- uid: Global.IntEnemy.EnemyUIEnabled
  commentId: F:Global.IntEnemy.EnemyUIEnabled
  parent: Global.IntEnemy
  name: EnemyUIEnabled
  nameWithType: IntEnemy.EnemyUIEnabled
  fullName: IntEnemy.EnemyUIEnabled
- uid: Global.IntEnemy.MaxDropTileDistance
  commentId: F:Global.IntEnemy.MaxDropTileDistance
  parent: Global.IntEnemy
  name: MaxDropTileDistance
  nameWithType: IntEnemy.MaxDropTileDistance
  fullName: IntEnemy.MaxDropTileDistance
- uid: Global.IntEnemy.IsKillable
  commentId: F:Global.IntEnemy.IsKillable
  parent: Global.IntEnemy
  name: IsKillable
  nameWithType: IntEnemy.IsKillable
  fullName: IntEnemy.IsKillable
- uid: Global.IntEnemy.MaxHealth
  commentId: F:Global.IntEnemy.MaxHealth
  parent: Global.IntEnemy
  name: MaxHealth
  nameWithType: IntEnemy.MaxHealth
  fullName: IntEnemy.MaxHealth
- uid: Global.IntEnemy.MaxShieldHealth
  commentId: F:Global.IntEnemy.MaxShieldHealth
  parent: Global.IntEnemy
  name: MaxShieldHealth
  nameWithType: IntEnemy.MaxShieldHealth
  fullName: IntEnemy.MaxShieldHealth
- uid: Global.IntEnemy.StartShieldHealth
  commentId: F:Global.IntEnemy.StartShieldHealth
  parent: Global.IntEnemy
  name: StartShieldHealth
  nameWithType: IntEnemy.StartShieldHealth
  fullName: IntEnemy.StartShieldHealth
- uid: Global.IntEnemy.CurrentHealth
  commentId: P:Global.IntEnemy.CurrentHealth
  parent: Global.IntEnemy
  name: CurrentHealth
  nameWithType: IntEnemy.CurrentHealth
  fullName: IntEnemy.CurrentHealth
- uid: Global.IntEnemy.CurrentShieldHealth
  commentId: P:Global.IntEnemy.CurrentShieldHealth
  parent: Global.IntEnemy
  name: CurrentShieldHealth
  nameWithType: IntEnemy.CurrentShieldHealth
  fullName: IntEnemy.CurrentShieldHealth
- uid: Global.IntEnemy.MaxFallSpeed
  commentId: F:Global.IntEnemy.MaxFallSpeed
  parent: Global.IntEnemy
  name: MaxFallSpeed
  nameWithType: IntEnemy.MaxFallSpeed
  fullName: IntEnemy.MaxFallSpeed
- uid: Global.IntEnemy.POISON_DISPEL_TIMER
  commentId: F:Global.IntEnemy.POISON_DISPEL_TIMER
  parent: Global.IntEnemy
  name: POISON_DISPEL_TIMER
  nameWithType: IntEnemy.POISON_DISPEL_TIMER
  fullName: IntEnemy.POISON_DISPEL_TIMER
- uid: Global.IntEnemy.POISON_PROC_TIMER
  commentId: F:Global.IntEnemy.POISON_PROC_TIMER
  parent: Global.IntEnemy
  name: POISON_PROC_TIMER
  nameWithType: IntEnemy.POISON_PROC_TIMER
  fullName: IntEnemy.POISON_PROC_TIMER
- uid: Global.IntEnemy.tilemap
  commentId: P:Global.IntEnemy.tilemap
  parent: Global.IntEnemy
  name: tilemap
  nameWithType: IntEnemy.tilemap
  fullName: IntEnemy.tilemap
- uid: Global.IntEnemy.velocity
  commentId: F:Global.IntEnemy.velocity
  parent: Global.IntEnemy
  name: velocity
  nameWithType: IntEnemy.velocity
  fullName: IntEnemy.velocity
- uid: Global.IntEnemy.IsGrounded
  commentId: P:Global.IntEnemy.IsGrounded
  parent: Global.IntEnemy
  name: IsGrounded
  nameWithType: IntEnemy.IsGrounded
  fullName: IntEnemy.IsGrounded
- uid: Global.IntEnemy.IsAlive
  commentId: P:Global.IntEnemy.IsAlive
  parent: Global.IntEnemy
  name: IsAlive
  nameWithType: IntEnemy.IsAlive
  fullName: IntEnemy.IsAlive
- uid: Global.IntEnemy.SpawnProperties
  commentId: F:Global.IntEnemy.SpawnProperties
  parent: Global.IntEnemy
  name: SpawnProperties
  nameWithType: IntEnemy.SpawnProperties
  fullName: IntEnemy.SpawnProperties
- uid: Global.IntEnemy.CanRepelEnemy
  commentId: M:Global.IntEnemy.CanRepelEnemy
  parent: Global.IntEnemy
  name: CanRepelEnemy()
  nameWithType: IntEnemy.CanRepelEnemy()
  fullName: IntEnemy.CanRepelEnemy()
  spec.csharp:
  - uid: Global.IntEnemy.CanRepelEnemy
    name: CanRepelEnemy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.CanRepelEnemy
    name: CanRepelEnemy
  - name: (
  - name: )
- uid: Global.IntEnemy.ComputeJumpInitialVelocityFromTile(System.Int32,System.Single)
  commentId: M:Global.IntEnemy.ComputeJumpInitialVelocityFromTile(System.Int32,System.Single)
  parent: Global.IntEnemy
  isExternal: true
  name: ComputeJumpInitialVelocityFromTile(int, float)
  nameWithType: IntEnemy.ComputeJumpInitialVelocityFromTile(int, float)
  fullName: IntEnemy.ComputeJumpInitialVelocityFromTile(int, float)
  nameWithType.vb: IntEnemy.ComputeJumpInitialVelocityFromTile(Integer, Single)
  fullName.vb: IntEnemy.ComputeJumpInitialVelocityFromTile(Integer, Single)
  name.vb: ComputeJumpInitialVelocityFromTile(Integer, Single)
  spec.csharp:
  - uid: Global.IntEnemy.ComputeJumpInitialVelocityFromTile(System.Int32,System.Single)
    name: ComputeJumpInitialVelocityFromTile
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.ComputeJumpInitialVelocityFromTile(System.Int32,System.Single)
    name: ComputeJumpInitialVelocityFromTile
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntEnemy.ComputeJumpInitialVelocity(System.Single,System.Single)
  commentId: M:Global.IntEnemy.ComputeJumpInitialVelocity(System.Single,System.Single)
  parent: Global.IntEnemy
  isExternal: true
  name: ComputeJumpInitialVelocity(float, float)
  nameWithType: IntEnemy.ComputeJumpInitialVelocity(float, float)
  fullName: IntEnemy.ComputeJumpInitialVelocity(float, float)
  nameWithType.vb: IntEnemy.ComputeJumpInitialVelocity(Single, Single)
  fullName.vb: IntEnemy.ComputeJumpInitialVelocity(Single, Single)
  name.vb: ComputeJumpInitialVelocity(Single, Single)
  spec.csharp:
  - uid: Global.IntEnemy.ComputeJumpInitialVelocity(System.Single,System.Single)
    name: ComputeJumpInitialVelocity
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.ComputeJumpInitialVelocity(System.Single,System.Single)
    name: ComputeJumpInitialVelocity
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntEnemy.ComputeJumpHangTimeFromVelocity(System.Single,System.Single)
  commentId: M:Global.IntEnemy.ComputeJumpHangTimeFromVelocity(System.Single,System.Single)
  parent: Global.IntEnemy
  isExternal: true
  name: ComputeJumpHangTimeFromVelocity(float, float)
  nameWithType: IntEnemy.ComputeJumpHangTimeFromVelocity(float, float)
  fullName: IntEnemy.ComputeJumpHangTimeFromVelocity(float, float)
  nameWithType.vb: IntEnemy.ComputeJumpHangTimeFromVelocity(Single, Single)
  fullName.vb: IntEnemy.ComputeJumpHangTimeFromVelocity(Single, Single)
  name.vb: ComputeJumpHangTimeFromVelocity(Single, Single)
  spec.csharp:
  - uid: Global.IntEnemy.ComputeJumpHangTimeFromVelocity(System.Single,System.Single)
    name: ComputeJumpHangTimeFromVelocity
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.ComputeJumpHangTimeFromVelocity(System.Single,System.Single)
    name: ComputeJumpHangTimeFromVelocity
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntEnemy.ComputeJumpHangTimeFromHeight(System.Single,System.Single)
  commentId: M:Global.IntEnemy.ComputeJumpHangTimeFromHeight(System.Single,System.Single)
  parent: Global.IntEnemy
  isExternal: true
  name: ComputeJumpHangTimeFromHeight(float, float)
  nameWithType: IntEnemy.ComputeJumpHangTimeFromHeight(float, float)
  fullName: IntEnemy.ComputeJumpHangTimeFromHeight(float, float)
  nameWithType.vb: IntEnemy.ComputeJumpHangTimeFromHeight(Single, Single)
  fullName.vb: IntEnemy.ComputeJumpHangTimeFromHeight(Single, Single)
  name.vb: ComputeJumpHangTimeFromHeight(Single, Single)
  spec.csharp:
  - uid: Global.IntEnemy.ComputeJumpHangTimeFromHeight(System.Single,System.Single)
    name: ComputeJumpHangTimeFromHeight
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.ComputeJumpHangTimeFromHeight(System.Single,System.Single)
    name: ComputeJumpHangTimeFromHeight
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntEnemy.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  commentId: M:Global.IntEnemy.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  parent: Global.IntEnemy
  isExternal: true
  name: TakeDamage(int, bool, bool, DamageType)
  nameWithType: IntEnemy.TakeDamage(int, bool, bool, DamageType)
  fullName: IntEnemy.TakeDamage(int, bool, bool, DamageType)
  nameWithType.vb: IntEnemy.TakeDamage(Integer, Boolean, Boolean, DamageType)
  fullName.vb: IntEnemy.TakeDamage(Integer, Boolean, Boolean, DamageType)
  name.vb: TakeDamage(Integer, Boolean, Boolean, DamageType)
  spec.csharp:
  - uid: Global.IntEnemy.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
    name: TakeDamage
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.DamageType
    name: DamageType
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
    name: TakeDamage
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.DamageType
    name: DamageType
  - name: )
- uid: Global.IntEnemy.SetCurrentShieldHealth(System.Int32)
  commentId: M:Global.IntEnemy.SetCurrentShieldHealth(System.Int32)
  parent: Global.IntEnemy
  isExternal: true
  name: SetCurrentShieldHealth(int)
  nameWithType: IntEnemy.SetCurrentShieldHealth(int)
  fullName: IntEnemy.SetCurrentShieldHealth(int)
  nameWithType.vb: IntEnemy.SetCurrentShieldHealth(Integer)
  fullName.vb: IntEnemy.SetCurrentShieldHealth(Integer)
  name.vb: SetCurrentShieldHealth(Integer)
  spec.csharp:
  - uid: Global.IntEnemy.SetCurrentShieldHealth(System.Int32)
    name: SetCurrentShieldHealth
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.SetCurrentShieldHealth(System.Int32)
    name: SetCurrentShieldHealth
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Global.IntEnemy.SetPoisoned(System.Int32)
  commentId: M:Global.IntEnemy.SetPoisoned(System.Int32)
  parent: Global.IntEnemy
  isExternal: true
  name: SetPoisoned(int)
  nameWithType: IntEnemy.SetPoisoned(int)
  fullName: IntEnemy.SetPoisoned(int)
  nameWithType.vb: IntEnemy.SetPoisoned(Integer)
  fullName.vb: IntEnemy.SetPoisoned(Integer)
  name.vb: SetPoisoned(Integer)
  spec.csharp:
  - uid: Global.IntEnemy.SetPoisoned(System.Int32)
    name: SetPoisoned
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.SetPoisoned(System.Int32)
    name: SetPoisoned
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Global.IntEnemy.GetSightRayOrigin
  commentId: M:Global.IntEnemy.GetSightRayOrigin
  parent: Global.IntEnemy
  name: GetSightRayOrigin()
  nameWithType: IntEnemy.GetSightRayOrigin()
  fullName: IntEnemy.GetSightRayOrigin()
  spec.csharp:
  - uid: Global.IntEnemy.GetSightRayOrigin
    name: GetSightRayOrigin
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.GetSightRayOrigin
    name: GetSightRayOrigin
  - name: (
  - name: )
- uid: Global.IntEnemy.GetForwardSightRayDirection
  commentId: M:Global.IntEnemy.GetForwardSightRayDirection
  parent: Global.IntEnemy
  name: GetForwardSightRayDirection()
  nameWithType: IntEnemy.GetForwardSightRayDirection()
  fullName: IntEnemy.GetForwardSightRayDirection()
  spec.csharp:
  - uid: Global.IntEnemy.GetForwardSightRayDirection
    name: GetForwardSightRayDirection
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.GetForwardSightRayDirection
    name: GetForwardSightRayDirection
  - name: (
  - name: )
- uid: Global.IntEnemy.GetVelocity
  commentId: M:Global.IntEnemy.GetVelocity
  parent: Global.IntEnemy
  name: GetVelocity()
  nameWithType: IntEnemy.GetVelocity()
  fullName: IntEnemy.GetVelocity()
  spec.csharp:
  - uid: Global.IntEnemy.GetVelocity
    name: GetVelocity
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.GetVelocity
    name: GetVelocity
  - name: (
  - name: )
- uid: Global.IntEnemy.IsCollected
  commentId: M:Global.IntEnemy.IsCollected
  parent: Global.IntEnemy
  name: IsCollected()
  nameWithType: IntEnemy.IsCollected()
  fullName: IntEnemy.IsCollected()
  spec.csharp:
  - uid: Global.IntEnemy.IsCollected
    name: IsCollected
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.IsCollected
    name: IsCollected
  - name: (
  - name: )
- uid: Global.IntEnemy.StaticMoveUpdate
  commentId: M:Global.IntEnemy.StaticMoveUpdate
  parent: Global.IntEnemy
  name: StaticMoveUpdate()
  nameWithType: IntEnemy.StaticMoveUpdate()
  fullName: IntEnemy.StaticMoveUpdate()
  spec.csharp:
  - uid: Global.IntEnemy.StaticMoveUpdate
    name: StaticMoveUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.StaticMoveUpdate
    name: StaticMoveUpdate
  - name: (
  - name: )
- uid: Global.IntEnemy.GetSpriteFlip(System.Boolean,System.Boolean)
  commentId: M:Global.IntEnemy.GetSpriteFlip(System.Boolean,System.Boolean)
  parent: Global.IntEnemy
  isExternal: true
  name: GetSpriteFlip(bool, bool)
  nameWithType: IntEnemy.GetSpriteFlip(bool, bool)
  fullName: IntEnemy.GetSpriteFlip(bool, bool)
  nameWithType.vb: IntEnemy.GetSpriteFlip(Boolean, Boolean)
  fullName.vb: IntEnemy.GetSpriteFlip(Boolean, Boolean)
  name.vb: GetSpriteFlip(Boolean, Boolean)
  spec.csharp:
  - uid: Global.IntEnemy.GetSpriteFlip(System.Boolean,System.Boolean)
    name: GetSpriteFlip
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.GetSpriteFlip(System.Boolean,System.Boolean)
    name: GetSpriteFlip
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntEnemy.GetLookAtFlipX(System.Boolean,UnityEngine.GameObject)
  commentId: M:Global.IntEnemy.GetLookAtFlipX(System.Boolean,UnityEngine.GameObject)
  parent: Global.IntEnemy
  isExternal: true
  name: GetLookAtFlipX(bool, GameObject)
  nameWithType: IntEnemy.GetLookAtFlipX(bool, GameObject)
  fullName: IntEnemy.GetLookAtFlipX(bool, UnityEngine.GameObject)
  nameWithType.vb: IntEnemy.GetLookAtFlipX(Boolean, GameObject)
  fullName.vb: IntEnemy.GetLookAtFlipX(Boolean, UnityEngine.GameObject)
  name.vb: GetLookAtFlipX(Boolean, GameObject)
  spec.csharp:
  - uid: Global.IntEnemy.GetLookAtFlipX(System.Boolean,UnityEngine.GameObject)
    name: GetLookAtFlipX
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.GetLookAtFlipX(System.Boolean,UnityEngine.GameObject)
    name: GetLookAtFlipX
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: )
- uid: Global.IntEnemy.JumpTiles(System.Int32,System.Single)
  commentId: M:Global.IntEnemy.JumpTiles(System.Int32,System.Single)
  parent: Global.IntEnemy
  isExternal: true
  name: JumpTiles(int, float)
  nameWithType: IntEnemy.JumpTiles(int, float)
  fullName: IntEnemy.JumpTiles(int, float)
  nameWithType.vb: IntEnemy.JumpTiles(Integer, Single)
  fullName.vb: IntEnemy.JumpTiles(Integer, Single)
  name.vb: JumpTiles(Integer, Single)
  spec.csharp:
  - uid: Global.IntEnemy.JumpTiles(System.Int32,System.Single)
    name: JumpTiles
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.JumpTiles(System.Int32,System.Single)
    name: JumpTiles
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntEnemy.JumpHeight(System.Single,System.Single)
  commentId: M:Global.IntEnemy.JumpHeight(System.Single,System.Single)
  parent: Global.IntEnemy
  isExternal: true
  name: JumpHeight(float, float)
  nameWithType: IntEnemy.JumpHeight(float, float)
  fullName: IntEnemy.JumpHeight(float, float)
  nameWithType.vb: IntEnemy.JumpHeight(Single, Single)
  fullName.vb: IntEnemy.JumpHeight(Single, Single)
  name.vb: JumpHeight(Single, Single)
  spec.csharp:
  - uid: Global.IntEnemy.JumpHeight(System.Single,System.Single)
    name: JumpHeight
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.JumpHeight(System.Single,System.Single)
    name: JumpHeight
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntEnemy.Jump(System.Single)
  commentId: M:Global.IntEnemy.Jump(System.Single)
  parent: Global.IntEnemy
  isExternal: true
  name: Jump(float)
  nameWithType: IntEnemy.Jump(float)
  fullName: IntEnemy.Jump(float)
  nameWithType.vb: IntEnemy.Jump(Single)
  fullName.vb: IntEnemy.Jump(Single)
  name.vb: Jump(Single)
  spec.csharp:
  - uid: Global.IntEnemy.Jump(System.Single)
    name: Jump
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.Jump(System.Single)
    name: Jump
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntEnemy.ApplyGravity(System.Single)
  commentId: M:Global.IntEnemy.ApplyGravity(System.Single)
  parent: Global.IntEnemy
  isExternal: true
  name: ApplyGravity(float)
  nameWithType: IntEnemy.ApplyGravity(float)
  fullName: IntEnemy.ApplyGravity(float)
  nameWithType.vb: IntEnemy.ApplyGravity(Single)
  fullName.vb: IntEnemy.ApplyGravity(Single)
  name.vb: ApplyGravity(Single)
  spec.csharp:
  - uid: Global.IntEnemy.ApplyGravity(System.Single)
    name: ApplyGravity
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.ApplyGravity(System.Single)
    name: ApplyGravity
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntEnemy.AIMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.Action,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntEnemy.AIMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.Action,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntEnemy
  isExternal: true
  name: AIMove(Vector2, SolidAction, SolidAction, Action, ActorAction, TriggerAction)
  nameWithType: IntEnemy.AIMove(Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.Action, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntEnemy.AIMove(UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.Action, IntObject.ActorAction, IntObject.TriggerAction)
  spec.csharp:
  - uid: Global.IntEnemy.AIMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.Action,IntObject.ActorAction,IntObject.TriggerAction)
    name: AIMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.Action
    name: Action
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.AIMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.Action,IntObject.ActorAction,IntObject.TriggerAction)
    name: AIMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.Action
    name: Action
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntEnemy.AIMoveWithJump(System.Int32,UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.Action,IntObject.ActorAction,IntObject.TriggerAction,IntObject.Action)
  commentId: M:Global.IntEnemy.AIMoveWithJump(System.Int32,UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.Action,IntObject.ActorAction,IntObject.TriggerAction,IntObject.Action)
  parent: Global.IntEnemy
  isExternal: true
  name: AIMoveWithJump(int, Vector2, SolidAction, SolidAction, Action, ActorAction, TriggerAction, Action)
  nameWithType: IntEnemy.AIMoveWithJump(int, Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.Action, IntObject.ActorAction, IntObject.TriggerAction, IntObject.Action)
  fullName: IntEnemy.AIMoveWithJump(int, UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.Action, IntObject.ActorAction, IntObject.TriggerAction, IntObject.Action)
  nameWithType.vb: IntEnemy.AIMoveWithJump(Integer, Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.Action, IntObject.ActorAction, IntObject.TriggerAction, IntObject.Action)
  fullName.vb: IntEnemy.AIMoveWithJump(Integer, UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.Action, IntObject.ActorAction, IntObject.TriggerAction, IntObject.Action)
  name.vb: AIMoveWithJump(Integer, Vector2, SolidAction, SolidAction, Action, ActorAction, TriggerAction, Action)
  spec.csharp:
  - uid: Global.IntEnemy.AIMoveWithJump(System.Int32,UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.Action,IntObject.ActorAction,IntObject.TriggerAction,IntObject.Action)
    name: AIMoveWithJump
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.Action
    name: Action
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.AIMoveWithJump(System.Int32,UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.Action,IntObject.ActorAction,IntObject.TriggerAction,IntObject.Action)
    name: AIMoveWithJump
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.Action
    name: Action
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntEnemy.Charge(IntEnemy.ChargeProps,IntObject.Action,IntObject.SolidAction,IntObject.SolidAction,IntObject.TriggerAction,IntObject.ActorAction)
  commentId: M:Global.IntEnemy.Charge(IntEnemy.ChargeProps,IntObject.Action,IntObject.SolidAction,IntObject.SolidAction,IntObject.TriggerAction,IntObject.ActorAction)
  parent: Global.IntEnemy
  name: Charge(ChargeProps, Action, SolidAction, SolidAction, TriggerAction, ActorAction)
  nameWithType: IntEnemy.Charge(IntEnemy.ChargeProps, IntObject.Action, IntObject.SolidAction, IntObject.SolidAction, IntObject.TriggerAction, IntObject.ActorAction)
  fullName: IntEnemy.Charge(IntEnemy.ChargeProps, IntObject.Action, IntObject.SolidAction, IntObject.SolidAction, IntObject.TriggerAction, IntObject.ActorAction)
  spec.csharp:
  - uid: Global.IntEnemy.Charge(IntEnemy.ChargeProps,IntObject.Action,IntObject.SolidAction,IntObject.SolidAction,IntObject.TriggerAction,IntObject.ActorAction)
    name: Charge
  - name: (
  - uid: Global.IntEnemy.ChargeProps
    name: ChargeProps
  - name: ','
  - name: " "
  - uid: Global.IntObject.Action
    name: Action
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.Charge(IntEnemy.ChargeProps,IntObject.Action,IntObject.SolidAction,IntObject.SolidAction,IntObject.TriggerAction,IntObject.ActorAction)
    name: Charge
  - name: (
  - uid: Global.IntEnemy.ChargeProps
    name: ChargeProps
  - name: ','
  - name: " "
  - uid: Global.IntObject.Action
    name: Action
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: )
- uid: Global.IntEnemy.CastForwardSightRay(System.Single)
  commentId: M:Global.IntEnemy.CastForwardSightRay(System.Single)
  parent: Global.IntEnemy
  isExternal: true
  name: CastForwardSightRay(float)
  nameWithType: IntEnemy.CastForwardSightRay(float)
  fullName: IntEnemy.CastForwardSightRay(float)
  nameWithType.vb: IntEnemy.CastForwardSightRay(Single)
  fullName.vb: IntEnemy.CastForwardSightRay(Single)
  name.vb: CastForwardSightRay(Single)
  spec.csharp:
  - uid: Global.IntEnemy.CastForwardSightRay(System.Single)
    name: CastForwardSightRay
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.CastForwardSightRay(System.Single)
    name: CastForwardSightRay
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntEnemy.CastForwardSightRay(System.Single,IntColliderState.RayCastFilter)
  commentId: M:Global.IntEnemy.CastForwardSightRay(System.Single,IntColliderState.RayCastFilter)
  parent: Global.IntEnemy
  isExternal: true
  name: CastForwardSightRay(float, RayCastFilter)
  nameWithType: IntEnemy.CastForwardSightRay(float, IntColliderState.RayCastFilter)
  fullName: IntEnemy.CastForwardSightRay(float, IntColliderState.RayCastFilter)
  nameWithType.vb: IntEnemy.CastForwardSightRay(Single, IntColliderState.RayCastFilter)
  fullName.vb: IntEnemy.CastForwardSightRay(Single, IntColliderState.RayCastFilter)
  name.vb: CastForwardSightRay(Single, RayCastFilter)
  spec.csharp:
  - uid: Global.IntEnemy.CastForwardSightRay(System.Single,IntColliderState.RayCastFilter)
    name: CastForwardSightRay
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntColliderState.RayCastFilter
    name: RayCastFilter
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.CastForwardSightRay(System.Single,IntColliderState.RayCastFilter)
    name: CastForwardSightRay
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntColliderState.RayCastFilter
    name: RayCastFilter
  - name: )
- uid: Global.IntEnemy.GetJumpInfo(System.Int32)
  commentId: M:Global.IntEnemy.GetJumpInfo(System.Int32)
  parent: Global.IntEnemy
  isExternal: true
  name: GetJumpInfo(int)
  nameWithType: IntEnemy.GetJumpInfo(int)
  fullName: IntEnemy.GetJumpInfo(int)
  nameWithType.vb: IntEnemy.GetJumpInfo(Integer)
  fullName.vb: IntEnemy.GetJumpInfo(Integer)
  name.vb: GetJumpInfo(Integer)
  spec.csharp:
  - uid: Global.IntEnemy.GetJumpInfo(System.Int32)
    name: GetJumpInfo
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.GetJumpInfo(System.Int32)
    name: GetJumpInfo
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Global.IntEnemy.CanContinueForward
  commentId: M:Global.IntEnemy.CanContinueForward
  parent: Global.IntEnemy
  name: CanContinueForward()
  nameWithType: IntEnemy.CanContinueForward()
  fullName: IntEnemy.CanContinueForward()
  spec.csharp:
  - uid: Global.IntEnemy.CanContinueForward
    name: CanContinueForward
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.CanContinueForward
    name: CanContinueForward
  - name: (
  - name: )
- uid: Global.IntEnemy.Update
  commentId: M:Global.IntEnemy.Update
  parent: Global.IntEnemy
  name: Update()
  nameWithType: IntEnemy.Update()
  fullName: IntEnemy.Update()
  spec.csharp:
  - uid: Global.IntEnemy.Update
    name: Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.Update
    name: Update
  - name: (
  - name: )
- uid: Global.IntEnemy.OnFirstFrame
  commentId: M:Global.IntEnemy.OnFirstFrame
  parent: Global.IntEnemy
  name: OnFirstFrame()
  nameWithType: IntEnemy.OnFirstFrame()
  fullName: IntEnemy.OnFirstFrame()
  spec.csharp:
  - uid: Global.IntEnemy.OnFirstFrame
    name: OnFirstFrame
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.OnFirstFrame
    name: OnFirstFrame
  - name: (
  - name: )
- uid: Global.IntEnemy.OnSpike(IntSolid)
  commentId: M:Global.IntEnemy.OnSpike(IntSolid)
  parent: Global.IntEnemy
  name: OnSpike(IntSolid)
  nameWithType: IntEnemy.OnSpike(IntSolid)
  fullName: IntEnemy.OnSpike(IntSolid)
  spec.csharp:
  - uid: Global.IntEnemy.OnSpike(IntSolid)
    name: OnSpike
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.OnSpike(IntSolid)
    name: OnSpike
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.IntEnemy.OnDrawDebugGizmos
  commentId: M:Global.IntEnemy.OnDrawDebugGizmos
  parent: Global.IntEnemy
  name: OnDrawDebugGizmos()
  nameWithType: IntEnemy.OnDrawDebugGizmos()
  fullName: IntEnemy.OnDrawDebugGizmos()
  spec.csharp:
  - uid: Global.IntEnemy.OnDrawDebugGizmos
    name: OnDrawDebugGizmos
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.OnDrawDebugGizmos
    name: OnDrawDebugGizmos
  - name: (
  - name: )
- uid: Global.IntEnemy.DebugDrawTileVision
  commentId: M:Global.IntEnemy.DebugDrawTileVision
  parent: Global.IntEnemy
  name: DebugDrawTileVision()
  nameWithType: IntEnemy.DebugDrawTileVision()
  fullName: IntEnemy.DebugDrawTileVision()
  spec.csharp:
  - uid: Global.IntEnemy.DebugDrawTileVision
    name: DebugDrawTileVision
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.DebugDrawTileVision
    name: DebugDrawTileVision
  - name: (
  - name: )
- uid: Global.IntEnemy.GizmosDrawTileVision
  commentId: M:Global.IntEnemy.GizmosDrawTileVision
  parent: Global.IntEnemy
  name: GizmosDrawTileVision()
  nameWithType: IntEnemy.GizmosDrawTileVision()
  fullName: IntEnemy.GizmosDrawTileVision()
  spec.csharp:
  - uid: Global.IntEnemy.GizmosDrawTileVision
    name: GizmosDrawTileVision
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.GizmosDrawTileVision
    name: GizmosDrawTileVision
  - name: (
  - name: )
- uid: Global.IntEnemy.GizmosDrawRequiredSpace
  commentId: M:Global.IntEnemy.GizmosDrawRequiredSpace
  parent: Global.IntEnemy
  name: GizmosDrawRequiredSpace()
  nameWithType: IntEnemy.GizmosDrawRequiredSpace()
  fullName: IntEnemy.GizmosDrawRequiredSpace()
  spec.csharp:
  - uid: Global.IntEnemy.GizmosDrawRequiredSpace
    name: GizmosDrawRequiredSpace
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.GizmosDrawRequiredSpace
    name: GizmosDrawRequiredSpace
  - name: (
  - name: )
- uid: Global.IntEnemy.OnDrawGizmos
  commentId: M:Global.IntEnemy.OnDrawGizmos
  parent: Global.IntEnemy
  name: OnDrawGizmos()
  nameWithType: IntEnemy.OnDrawGizmos()
  fullName: IntEnemy.OnDrawGizmos()
  spec.csharp:
  - uid: Global.IntEnemy.OnDrawGizmos
    name: OnDrawGizmos
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.OnDrawGizmos
    name: OnDrawGizmos
  - name: (
  - name: )
- uid: Global.IntEnemy.GetSpawnProperties
  commentId: M:Global.IntEnemy.GetSpawnProperties
  parent: Global.IntEnemy
  name: GetSpawnProperties()
  nameWithType: IntEnemy.GetSpawnProperties()
  fullName: IntEnemy.GetSpawnProperties()
  spec.csharp:
  - uid: Global.IntEnemy.GetSpawnProperties
    name: GetSpawnProperties
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.GetSpawnProperties
    name: GetSpawnProperties
  - name: (
  - name: )
- uid: Global.IntEnemy.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  commentId: M:Global.IntEnemy.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  parent: Global.IntEnemy
  isExternal: true
  name: OnLocalSpaceSpawnBoundsSet(Vector2Int, Vector2Int)
  nameWithType: IntEnemy.OnLocalSpaceSpawnBoundsSet(Vector2Int, Vector2Int)
  fullName: IntEnemy.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntEnemy.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
    name: OnLocalSpaceSpawnBoundsSet
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
    name: OnLocalSpaceSpawnBoundsSet
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntEnemy.ResolveSpawnLocation
  commentId: M:Global.IntEnemy.ResolveSpawnLocation
  parent: Global.IntEnemy
  name: ResolveSpawnLocation()
  nameWithType: IntEnemy.ResolveSpawnLocation()
  fullName: IntEnemy.ResolveSpawnLocation()
  spec.csharp:
  - uid: Global.IntEnemy.ResolveSpawnLocation
    name: ResolveSpawnLocation
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.ResolveSpawnLocation
    name: ResolveSpawnLocation
  - name: (
  - name: )
- uid: Global.IntEnemy.GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
  commentId: M:Global.IntEnemy.GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
  parent: Global.IntEnemy
  isExternal: true
  name: GetSpawnLocationFromBounds(Vector3, Vector3)
  nameWithType: IntEnemy.GetSpawnLocationFromBounds(Vector3, Vector3)
  fullName: IntEnemy.GetSpawnLocationFromBounds(UnityEngine.Vector3, UnityEngine.Vector3)
  spec.csharp:
  - uid: Global.IntEnemy.GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
    name: GetSpawnLocationFromBounds
  - name: (
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
    name: GetSpawnLocationFromBounds
  - name: (
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: )
- uid: Global.IntActor.HurtBySpike
  commentId: F:Global.IntActor.HurtBySpike
  parent: Global.IntActor
  name: HurtBySpike
  nameWithType: IntActor.HurtBySpike
  fullName: IntActor.HurtBySpike
- uid: Global.IntActor.aabb
  commentId: F:Global.IntActor.aabb
  parent: Global.IntActor
  name: aabb
  nameWithType: IntActor.aabb
  fullName: IntActor.aabb
- uid: Global.IntActor.Left
  commentId: P:Global.IntActor.Left
  parent: Global.IntActor
  name: Left
  nameWithType: IntActor.Left
  fullName: IntActor.Left
- uid: Global.IntActor.Right
  commentId: P:Global.IntActor.Right
  parent: Global.IntActor
  name: Right
  nameWithType: IntActor.Right
  fullName: IntActor.Right
- uid: Global.IntActor.Top
  commentId: P:Global.IntActor.Top
  parent: Global.IntActor
  name: Top
  nameWithType: IntActor.Top
  fullName: IntActor.Top
- uid: Global.IntActor.Bottom
  commentId: P:Global.IntActor.Bottom
  parent: Global.IntActor
  name: Bottom
  nameWithType: IntActor.Bottom
  fullName: IntActor.Bottom
- uid: Global.IntActor.Size
  commentId: P:Global.IntActor.Size
  parent: Global.IntActor
  name: Size
  nameWithType: IntActor.Size
  fullName: IntActor.Size
- uid: Global.IntActor.WindInfluence
  commentId: F:Global.IntActor.WindInfluence
  parent: Global.IntActor
  name: WindInfluence
  nameWithType: IntActor.WindInfluence
  fullName: IntActor.WindInfluence
- uid: Global.IntActor.OnTakeDamageCallback
  commentId: F:Global.IntActor.OnTakeDamageCallback
  parent: Global.IntActor
  name: OnTakeDamageCallback
  nameWithType: IntActor.OnTakeDamageCallback
  fullName: IntActor.OnTakeDamageCallback
- uid: Global.IntActor.RidingSolid
  commentId: P:Global.IntActor.RidingSolid
  parent: Global.IntActor
  name: RidingSolid
  nameWithType: IntActor.RidingSolid
  fullName: IntActor.RidingSolid
- uid: Global.IntActor.RidingTangent
  commentId: P:Global.IntActor.RidingTangent
  parent: Global.IntActor
  name: RidingTangent
  nameWithType: IntActor.RidingTangent
  fullName: IntActor.RidingTangent
- uid: Global.IntActor.RidingNormal
  commentId: P:Global.IntActor.RidingNormal
  parent: Global.IntActor
  name: RidingNormal
  nameWithType: IntActor.RidingNormal
  fullName: IntActor.RidingNormal
- uid: Global.IntActor.IsRidingFlatSurface
  commentId: P:Global.IntActor.IsRidingFlatSurface
  parent: Global.IntActor
  name: IsRidingFlatSurface
  nameWithType: IntActor.IsRidingFlatSurface
  fullName: IntActor.IsRidingFlatSurface
- uid: Global.IntActor.Awake
  commentId: M:Global.IntActor.Awake
  parent: Global.IntActor
  name: Awake()
  nameWithType: IntActor.Awake()
  fullName: IntActor.Awake()
  spec.csharp:
  - uid: Global.IntActor.Awake
    name: Awake
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.Awake
    name: Awake
  - name: (
  - name: )
- uid: Global.IntActor.ManualInit
  commentId: M:Global.IntActor.ManualInit
  parent: Global.IntActor
  name: ManualInit()
  nameWithType: IntActor.ManualInit()
  fullName: IntActor.ManualInit()
  spec.csharp:
  - uid: Global.IntActor.ManualInit
    name: ManualInit
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.ManualInit
    name: ManualInit
  - name: (
  - name: )
- uid: Global.IntActor.GetAABBIntCollider
  commentId: M:Global.IntActor.GetAABBIntCollider
  parent: Global.IntActor
  name: GetAABBIntCollider()
  nameWithType: IntActor.GetAABBIntCollider()
  fullName: IntActor.GetAABBIntCollider()
  spec.csharp:
  - uid: Global.IntActor.GetAABBIntCollider
    name: GetAABBIntCollider
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetAABBIntCollider
    name: GetAABBIntCollider
  - name: (
  - name: )
- uid: Global.IntActor.EnsureAABBIntColliderSet
  commentId: M:Global.IntActor.EnsureAABBIntColliderSet
  parent: Global.IntActor
  name: EnsureAABBIntColliderSet()
  nameWithType: IntActor.EnsureAABBIntColliderSet()
  fullName: IntActor.EnsureAABBIntColliderSet()
  spec.csharp:
  - uid: Global.IntActor.EnsureAABBIntColliderSet
    name: EnsureAABBIntColliderSet
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.EnsureAABBIntColliderSet
    name: EnsureAABBIntColliderSet
  - name: (
  - name: )
- uid: Global.IntActor.IsRiding(IntSolid)
  commentId: M:Global.IntActor.IsRiding(IntSolid)
  parent: Global.IntActor
  name: IsRiding(IntSolid)
  nameWithType: IntActor.IsRiding(IntSolid)
  fullName: IntActor.IsRiding(IntSolid)
  spec.csharp:
  - uid: Global.IntActor.IsRiding(IntSolid)
    name: IsRiding
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.IntActor.IsRiding(IntSolid)
    name: IsRiding
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
  commentId: M:Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
  parent: Global.IntActor
  isExternal: true
  name: IsWalkingFlatOrUphill(Vector2)
  nameWithType: IntActor.IsWalkingFlatOrUphill(Vector2)
  fullName: IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
    name: IsWalkingFlatOrUphill
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
    name: IsWalkingFlatOrUphill
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
  commentId: M:Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
  parent: Global.IntActor
  isExternal: true
  name: GetEffectiveVelocity(Vector2)
  nameWithType: IntActor.GetEffectiveVelocity(Vector2)
  fullName: IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
    name: GetEffectiveVelocity
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
    name: GetEffectiveVelocity
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntActor.IsTouchingWall(IntSolid)
  commentId: M:Global.IntActor.IsTouchingWall(IntSolid)
  parent: Global.IntActor
  name: IsTouchingWall(IntSolid)
  nameWithType: IntActor.IsTouchingWall(IntSolid)
  fullName: IntActor.IsTouchingWall(IntSolid)
  spec.csharp:
  - uid: Global.IntActor.IsTouchingWall(IntSolid)
    name: IsTouchingWall
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.IntActor.IsTouchingWall(IntSolid)
    name: IsTouchingWall
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
  commentId: M:Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
  parent: Global.IntActor
  isExternal: true
  name: SolidContainsPoint(Vector2Int)
  nameWithType: IntActor.SolidContainsPoint(Vector2Int)
  fullName: IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
    name: SolidContainsPoint
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
    name: SolidContainsPoint
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  commentId: M:Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  parent: Global.IntActor
  name: RegisterOnTakeDamageCallback(Action)
  nameWithType: IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  fullName: IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
    name: RegisterOnTakeDamageCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
    name: RegisterOnTakeDamageCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  commentId: M:Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  parent: Global.IntActor
  name: UnregisterOnTakeDamageCallback(Action)
  nameWithType: IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  fullName: IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
    name: UnregisterOnTakeDamageCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
    name: UnregisterOnTakeDamageCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntActor.OnTakeDamage(System.Int32)
  commentId: M:Global.IntActor.OnTakeDamage(System.Int32)
  parent: Global.IntActor
  isExternal: true
  name: OnTakeDamage(int)
  nameWithType: IntActor.OnTakeDamage(int)
  fullName: IntActor.OnTakeDamage(int)
  nameWithType.vb: IntActor.OnTakeDamage(Integer)
  fullName.vb: IntActor.OnTakeDamage(Integer)
  name.vb: OnTakeDamage(Integer)
  spec.csharp:
  - uid: Global.IntActor.OnTakeDamage(System.Int32)
    name: OnTakeDamage
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnTakeDamage(System.Int32)
    name: OnTakeDamage
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Global.IntActor.ResetAuraCollisionMap
  commentId: M:Global.IntActor.ResetAuraCollisionMap
  parent: Global.IntActor
  name: ResetAuraCollisionMap()
  nameWithType: IntActor.ResetAuraCollisionMap()
  fullName: IntActor.ResetAuraCollisionMap()
  spec.csharp:
  - uid: Global.IntActor.ResetAuraCollisionMap
    name: ResetAuraCollisionMap
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResetAuraCollisionMap
    name: ResetAuraCollisionMap
  - name: (
  - name: )
- uid: Global.IntActor.ResetActorCollisionMap
  commentId: M:Global.IntActor.ResetActorCollisionMap
  parent: Global.IntActor
  name: ResetActorCollisionMap()
  nameWithType: IntActor.ResetActorCollisionMap()
  fullName: IntActor.ResetActorCollisionMap()
  spec.csharp:
  - uid: Global.IntActor.ResetActorCollisionMap
    name: ResetActorCollisionMap
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResetActorCollisionMap
    name: ResetActorCollisionMap
  - name: (
  - name: )
- uid: Global.IntActor.ResetCollisionMap
  commentId: M:Global.IntActor.ResetCollisionMap
  parent: Global.IntActor
  name: ResetCollisionMap()
  nameWithType: IntActor.ResetCollisionMap()
  fullName: IntActor.ResetCollisionMap()
  spec.csharp:
  - uid: Global.IntActor.ResetCollisionMap
    name: ResetCollisionMap
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResetCollisionMap
    name: ResetCollisionMap
  - name: (
  - name: )
- uid: Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
  commentId: M:Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
  parent: Global.IntActor
  isExternal: true
  name: ResetCollisionsAfterTime(IntObject, float)
  nameWithType: IntActor.ResetCollisionsAfterTime(IntObject, float)
  fullName: IntActor.ResetCollisionsAfterTime(IntObject, float)
  nameWithType.vb: IntActor.ResetCollisionsAfterTime(IntObject, Single)
  fullName.vb: IntActor.ResetCollisionsAfterTime(IntObject, Single)
  name.vb: ResetCollisionsAfterTime(IntObject, Single)
  spec.csharp:
  - uid: Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
    name: ResetCollisionsAfterTime
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
    name: ResetCollisionsAfterTime
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
  commentId: M:Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
  parent: Global.IntActor
  isExternal: true
  name: SetCollisionMapValue(IntObject, bool)
  nameWithType: IntActor.SetCollisionMapValue(IntObject, bool)
  fullName: IntActor.SetCollisionMapValue(IntObject, bool)
  nameWithType.vb: IntActor.SetCollisionMapValue(IntObject, Boolean)
  fullName.vb: IntActor.SetCollisionMapValue(IntObject, Boolean)
  name.vb: SetCollisionMapValue(IntObject, Boolean)
  spec.csharp:
  - uid: Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
    name: SetCollisionMapValue
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
    name: SetCollisionMapValue
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntActor.GetCollisionMapValue(IntObject)
  commentId: M:Global.IntActor.GetCollisionMapValue(IntObject)
  parent: Global.IntActor
  name: GetCollisionMapValue(IntObject)
  nameWithType: IntActor.GetCollisionMapValue(IntObject)
  fullName: IntActor.GetCollisionMapValue(IntObject)
  spec.csharp:
  - uid: Global.IntActor.GetCollisionMapValue(IntObject)
    name: GetCollisionMapValue
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetCollisionMapValue(IntObject)
    name: GetCollisionMapValue
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
- uid: Global.IntActor.Squish(IntSolid)
  commentId: M:Global.IntActor.Squish(IntSolid)
  parent: Global.IntActor
  name: Squish(IntSolid)
  nameWithType: IntActor.Squish(IntSolid)
  fullName: IntActor.Squish(IntSolid)
  spec.csharp:
  - uid: Global.IntActor.Squish(IntSolid)
    name: Squish
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.IntActor.Squish(IntSolid)
    name: Squish
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.IntActor.OnTriggerStart(IntTrigger)
  commentId: M:Global.IntActor.OnTriggerStart(IntTrigger)
  parent: Global.IntActor
  name: OnTriggerStart(IntTrigger)
  nameWithType: IntActor.OnTriggerStart(IntTrigger)
  fullName: IntActor.OnTriggerStart(IntTrigger)
  spec.csharp:
  - uid: Global.IntActor.OnTriggerStart(IntTrigger)
    name: OnTriggerStart
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnTriggerStart(IntTrigger)
    name: OnTriggerStart
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
- uid: Global.IntActor.OnTriggerEnd(IntTrigger)
  commentId: M:Global.IntActor.OnTriggerEnd(IntTrigger)
  parent: Global.IntActor
  name: OnTriggerEnd(IntTrigger)
  nameWithType: IntActor.OnTriggerEnd(IntTrigger)
  fullName: IntActor.OnTriggerEnd(IntTrigger)
  spec.csharp:
  - uid: Global.IntActor.OnTriggerEnd(IntTrigger)
    name: OnTriggerEnd
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnTriggerEnd(IntTrigger)
    name: OnTriggerEnd
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
- uid: Global.IntActor.OnActor(IntActor)
  commentId: M:Global.IntActor.OnActor(IntActor)
  parent: Global.IntActor
  name: OnActor(IntActor)
  nameWithType: IntActor.OnActor(IntActor)
  fullName: IntActor.OnActor(IntActor)
  spec.csharp:
  - uid: Global.IntActor.OnActor(IntActor)
    name: OnActor
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnActor(IntActor)
    name: OnActor
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
- uid: Global.IntActor.CheckGrounded
  commentId: M:Global.IntActor.CheckGrounded
  parent: Global.IntActor
  name: CheckGrounded()
  nameWithType: IntActor.CheckGrounded()
  fullName: IntActor.CheckGrounded()
  spec.csharp:
  - uid: Global.IntActor.CheckGrounded
    name: CheckGrounded
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.CheckGrounded
    name: CheckGrounded
  - name: (
  - name: )
- uid: Global.IntActor.GroundActor
  commentId: M:Global.IntActor.GroundActor
  parent: Global.IntActor
  name: GroundActor()
  nameWithType: IntActor.GroundActor()
  fullName: IntActor.GroundActor()
  spec.csharp:
  - uid: Global.IntActor.GroundActor
    name: GroundActor
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.GroundActor
    name: GroundActor
  - name: (
  - name: )
- uid: Global.IntActor.CheckOnWall
  commentId: M:Global.IntActor.CheckOnWall
  parent: Global.IntActor
  name: CheckOnWall()
  nameWithType: IntActor.CheckOnWall()
  fullName: IntActor.CheckOnWall()
  spec.csharp:
  - uid: Global.IntActor.CheckOnWall
    name: CheckOnWall
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.CheckOnWall
    name: CheckOnWall
  - name: (
  - name: )
- uid: Global.IntActor.DropDownOneWay
  commentId: M:Global.IntActor.DropDownOneWay
  parent: Global.IntActor
  name: DropDownOneWay()
  nameWithType: IntActor.DropDownOneWay()
  fullName: IntActor.DropDownOneWay()
  spec.csharp:
  - uid: Global.IntActor.DropDownOneWay
    name: DropDownOneWay
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.DropDownOneWay
    name: DropDownOneWay
  - name: (
  - name: )
- uid: Global.IntActor.activeWater
  commentId: P:Global.IntActor.activeWater
  parent: Global.IntActor
  name: activeWater
  nameWithType: IntActor.activeWater
  fullName: IntActor.activeWater
- uid: Global.IntActor.GetSubmergedPercentage
  commentId: M:Global.IntActor.GetSubmergedPercentage
  parent: Global.IntActor
  name: GetSubmergedPercentage()
  nameWithType: IntActor.GetSubmergedPercentage()
  fullName: IntActor.GetSubmergedPercentage()
  spec.csharp:
  - uid: Global.IntActor.GetSubmergedPercentage
    name: GetSubmergedPercentage
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetSubmergedPercentage
    name: GetSubmergedPercentage
  - name: (
  - name: )
- uid: Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
  commentId: M:Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
  parent: Global.IntActor
  isExternal: true
  name: GetSubmergedPercentage(Vector2Int)
  nameWithType: IntActor.GetSubmergedPercentage(Vector2Int)
  fullName: IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
    name: GetSubmergedPercentage
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
    name: GetSubmergedPercentage
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntActor.IsInWater
  commentId: P:Global.IntActor.IsInWater
  parent: Global.IntActor
  name: IsInWater
  nameWithType: IntActor.IsInWater
  fullName: IntActor.IsInWater
- uid: Global.IntActor.OnEnterWater(WaterComponent,System.Single)
  commentId: M:Global.IntActor.OnEnterWater(WaterComponent,System.Single)
  parent: Global.IntActor
  isExternal: true
  name: OnEnterWater(WaterComponent, float)
  nameWithType: IntActor.OnEnterWater(WaterComponent, float)
  fullName: IntActor.OnEnterWater(WaterComponent, float)
  nameWithType.vb: IntActor.OnEnterWater(WaterComponent, Single)
  fullName.vb: IntActor.OnEnterWater(WaterComponent, Single)
  name.vb: OnEnterWater(WaterComponent, Single)
  spec.csharp:
  - uid: Global.IntActor.OnEnterWater(WaterComponent,System.Single)
    name: OnEnterWater
  - name: (
  - uid: Global.WaterComponent
    name: WaterComponent
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnEnterWater(WaterComponent,System.Single)
    name: OnEnterWater
  - name: (
  - uid: Global.WaterComponent
    name: WaterComponent
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntActor.OnExitWater(WaterComponent)
  commentId: M:Global.IntActor.OnExitWater(WaterComponent)
  parent: Global.IntActor
  name: OnExitWater(WaterComponent)
  nameWithType: IntActor.OnExitWater(WaterComponent)
  fullName: IntActor.OnExitWater(WaterComponent)
  spec.csharp:
  - uid: Global.IntActor.OnExitWater(WaterComponent)
    name: OnExitWater
  - name: (
  - uid: Global.WaterComponent
    name: WaterComponent
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnExitWater(WaterComponent)
    name: OnExitWater
  - name: (
  - uid: Global.WaterComponent
    name: WaterComponent
  - name: )
- uid: Global.IntActor.ApplyWind(UnityEngine.Vector2)
  commentId: M:Global.IntActor.ApplyWind(UnityEngine.Vector2)
  parent: Global.IntActor
  isExternal: true
  name: ApplyWind(Vector2)
  nameWithType: IntActor.ApplyWind(Vector2)
  fullName: IntActor.ApplyWind(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntActor.ApplyWind(UnityEngine.Vector2)
    name: ApplyWind
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.ApplyWind(UnityEngine.Vector2)
    name: ApplyWind
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntActor.RemoveWind
  commentId: M:Global.IntActor.RemoveWind
  parent: Global.IntActor
  name: RemoveWind()
  nameWithType: IntActor.RemoveWind()
  fullName: IntActor.RemoveWind()
  spec.csharp:
  - uid: Global.IntActor.RemoveWind
    name: RemoveWind
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.RemoveWind
    name: RemoveWind
  - name: (
  - name: )
- uid: Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: ResolvePosition(Vector2, float, int, bool, bool, ActorAction, TriggerAction)
  nameWithType: IntActor.ResolvePosition(Vector2, float, int, bool, bool, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.ResolvePosition(UnityEngine.Vector2, float, int, bool, bool, IntObject.ActorAction, IntObject.TriggerAction)
  nameWithType.vb: IntActor.ResolvePosition(Vector2, Single, Integer, Boolean, Boolean, IntObject.ActorAction, IntObject.TriggerAction)
  fullName.vb: IntActor.ResolvePosition(UnityEngine.Vector2, Single, Integer, Boolean, Boolean, IntObject.ActorAction, IntObject.TriggerAction)
  name.vb: ResolvePosition(Vector2, Single, Integer, Boolean, Boolean, ActorAction, TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
    name: ResolvePosition
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
    name: ResolvePosition
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
  commentId: M:Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
  parent: Global.IntActor
  isExternal: true
  name: ResolvePositionNoSlide(Vector2Int)
  nameWithType: IntActor.ResolvePositionNoSlide(Vector2Int)
  fullName: IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
    name: ResolvePositionNoSlide
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
    name: ResolvePositionNoSlide
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
  commentId: M:Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
  parent: Global.IntActor
  isExternal: true
  name: EfficientMove(Vector2, SolidAction, SolidAction)
  nameWithType: IntActor.EfficientMove(Vector2, IntObject.SolidAction, IntObject.SolidAction)
  fullName: IntActor.EfficientMove(UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction)
  spec.csharp:
  - uid: Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
    name: EfficientMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
    name: EfficientMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
- uid: Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: MoveX(float, SolidAction, ActorAction, TriggerAction)
  nameWithType: IntActor.MoveX(float, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.MoveX(float, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  nameWithType.vb: IntActor.MoveX(Single, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName.vb: IntActor.MoveX(Single, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  name.vb: MoveX(Single, SolidAction, ActorAction, TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: MoveX
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: MoveX
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: MoveY(float, SolidAction, ActorAction, TriggerAction)
  nameWithType: IntActor.MoveY(float, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.MoveY(float, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  nameWithType.vb: IntActor.MoveY(Single, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName.vb: IntActor.MoveY(Single, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  name.vb: MoveY(Single, SolidAction, ActorAction, TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: MoveY
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: MoveY
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
  commentId: M:Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
  parent: Global.IntActor
  isExternal: true
  name: getIntersectParameters(int, float, float, float)
  nameWithType: IntActor.getIntersectParameters(int, float, float, float)
  fullName: IntActor.getIntersectParameters(int, float, float, float)
  nameWithType.vb: IntActor.getIntersectParameters(Integer, Single, Single, Single)
  fullName.vb: IntActor.getIntersectParameters(Integer, Single, Single, Single)
  name.vb: getIntersectParameters(Integer, Single, Single, Single)
  spec.csharp:
  - uid: Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
    name: getIntersectParameters
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
    name: getIntersectParameters
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntActor.NotifyObjectKilled(IntObject)
  commentId: M:Global.IntActor.NotifyObjectKilled(IntObject)
  parent: Global.IntActor
  name: NotifyObjectKilled(IntObject)
  nameWithType: IntActor.NotifyObjectKilled(IntObject)
  fullName: IntActor.NotifyObjectKilled(IntObject)
  spec.csharp:
  - uid: Global.IntActor.NotifyObjectKilled(IntObject)
    name: NotifyObjectKilled
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
  spec.vb:
  - uid: Global.IntActor.NotifyObjectKilled(IntObject)
    name: NotifyObjectKilled
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
- uid: Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: SlantMove(Vector2, ActorAction, TriggerAction)
  nameWithType: IntActor.SlantMove(Vector2, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.SlantMove(UnityEngine.Vector2, IntObject.ActorAction, IntObject.TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
    name: SlantMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
    name: SlantMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  name: CheckActorTriggerCollisions(ActorAction, TriggerAction)
  nameWithType: IntActor.CheckActorTriggerCollisions(IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.CheckActorTriggerCollisions(IntObject.ActorAction, IntObject.TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
    name: CheckActorTriggerCollisions
  - name: (
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
    name: CheckActorTriggerCollisions
  - name: (
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.CheckActorInteractableCollisions
  commentId: M:Global.IntActor.CheckActorInteractableCollisions
  parent: Global.IntActor
  name: CheckActorInteractableCollisions()
  nameWithType: IntActor.CheckActorInteractableCollisions()
  fullName: IntActor.CheckActorInteractableCollisions()
  spec.csharp:
  - uid: Global.IntActor.CheckActorInteractableCollisions
    name: CheckActorInteractableCollisions
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.CheckActorInteractableCollisions
    name: CheckActorInteractableCollisions
  - name: (
  - name: )
- uid: Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: SimpleMove(Vector2, SolidAction, SolidAction, ActorAction, TriggerAction)
  nameWithType: IntActor.SimpleMove(Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.SimpleMove(UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: SimpleMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: SimpleMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
  commentId: M:Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
  parent: Global.IntActor
  isExternal: true
  name: ComplexMove(Vector2, SolidAction, SolidAction, ActorAction, TriggerAction, int)
  nameWithType: IntActor.ComplexMove(Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction, int)
  fullName: IntActor.ComplexMove(UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction, int)
  nameWithType.vb: IntActor.ComplexMove(Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction, Integer)
  fullName.vb: IntActor.ComplexMove(UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction, Integer)
  name.vb: ComplexMove(Vector2, SolidAction, SolidAction, ActorAction, TriggerAction, Integer)
  spec.csharp:
  - uid: Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
    name: ComplexMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
    name: ComplexMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Global.IntObject.section
  commentId: P:Global.IntObject.section
  parent: Global.IntObject
  name: section
  nameWithType: IntObject.section
  fullName: IntObject.section
- uid: Global.IntObject.state
  commentId: P:Global.IntObject.state
  parent: Global.IntObject
  name: state
  nameWithType: IntObject.state
  fullName: IntObject.state
- uid: Global.IntObject.int_collider
  commentId: F:Global.IntObject.int_collider
  parent: Global.IntObject
  name: int_collider
  nameWithType: IntObject.int_collider
  fullName: IntObject.int_collider
- uid: Global.IntObject.remainder
  commentId: F:Global.IntObject.remainder
  parent: Global.IntObject
  name: remainder
  nameWithType: IntObject.remainder
  fullName: IntObject.remainder
- uid: Global.IntObject.StartPosition
  commentId: F:Global.IntObject.StartPosition
  parent: Global.IntObject
  name: StartPosition
  nameWithType: IntObject.StartPosition
  fullName: IntObject.StartPosition
- uid: Global.IntObject.AttachedToPlayer
  commentId: F:Global.IntObject.AttachedToPlayer
  parent: Global.IntObject
  name: AttachedToPlayer
  nameWithType: IntObject.AttachedToPlayer
  fullName: IntObject.AttachedToPlayer
- uid: Global.IntObject.IgnoredObjectsMap
  commentId: F:Global.IntObject.IgnoredObjectsMap
  parent: Global.IntObject
  name: IgnoredObjectsMap
  nameWithType: IntObject.IgnoredObjectsMap
  fullName: IntObject.IgnoredObjectsMap
- uid: Global.IntObject.KilledCallback
  commentId: F:Global.IntObject.KilledCallback
  parent: Global.IntObject
  name: KilledCallback
  nameWithType: IntObject.KilledCallback
  fullName: IntObject.KilledCallback
- uid: Global.IntObject.Position
  commentId: P:Global.IntObject.Position
  parent: Global.IntObject
  name: Position
  nameWithType: IntObject.Position
  fullName: IntObject.Position
- uid: Global.IntObject.GetStartWorldPosition
  commentId: P:Global.IntObject.GetStartWorldPosition
  parent: Global.IntObject
  name: GetStartWorldPosition
  nameWithType: IntObject.GetStartWorldPosition
  fullName: IntObject.GetStartWorldPosition
- uid: Global.IntObject.collider_type
  commentId: P:Global.IntObject.collider_type
  parent: Global.IntObject
  name: collider_type
  nameWithType: IntObject.collider_type
  fullName: IntObject.collider_type
- uid: Global.IntObject.MarkedForKill
  commentId: P:Global.IntObject.MarkedForKill
  parent: Global.IntObject
  name: MarkedForKill
  nameWithType: IntObject.MarkedForKill
  fullName: IntObject.MarkedForKill
- uid: Global.IntObject.ObjectID
  commentId: F:Global.IntObject.ObjectID
  parent: Global.IntObject
  name: ObjectID
  nameWithType: IntObject.ObjectID
  fullName: IntObject.ObjectID
- uid: Global.IntObject.DestroyOnKill
  commentId: F:Global.IntObject.DestroyOnKill
  parent: Global.IntObject
  name: DestroyOnKill
  nameWithType: IntObject.DestroyOnKill
  fullName: IntObject.DestroyOnKill
- uid: Global.IntObject.RespawnBehavior
  commentId: F:Global.IntObject.RespawnBehavior
  parent: Global.IntObject
  name: RespawnBehavior
  nameWithType: IntObject.RespawnBehavior
  fullName: IntObject.RespawnBehavior
- uid: Global.IntObject.Status
  commentId: F:Global.IntObject.Status
  parent: Global.IntObject
  name: Status
  nameWithType: IntObject.Status
  fullName: IntObject.Status
- uid: Global.IntObject.InitialStatus
  commentId: F:Global.IntObject.InitialStatus
  parent: Global.IntObject
  name: InitialStatus
  nameWithType: IntObject.InitialStatus
  fullName: IntObject.InitialStatus
- uid: Global.IntObject.SaveObject
  commentId: F:Global.IntObject.SaveObject
  parent: Global.IntObject
  name: SaveObject
  nameWithType: IntObject.SaveObject
  fullName: IntObject.SaveObject
- uid: Global.IntObject.IsInSetPiece
  commentId: P:Global.IntObject.IsInSetPiece
  parent: Global.IntObject
  name: IsInSetPiece
  nameWithType: IntObject.IsInSetPiece
  fullName: IntObject.IsInSetPiece
- uid: Global.IntObject.Init
  commentId: M:Global.IntObject.Init
  parent: Global.IntObject
  name: Init()
  nameWithType: IntObject.Init()
  fullName: IntObject.Init()
  spec.csharp:
  - uid: Global.IntObject.Init
    name: Init
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.Init
    name: Init
  - name: (
  - name: )
- uid: Global.IntObject.FindIntColliderState(System.Int32)
  commentId: M:Global.IntObject.FindIntColliderState(System.Int32)
  parent: Global.IntObject
  isExternal: true
  name: FindIntColliderState(int)
  nameWithType: IntObject.FindIntColliderState(int)
  fullName: IntObject.FindIntColliderState(int)
  nameWithType.vb: IntObject.FindIntColliderState(Integer)
  fullName.vb: IntObject.FindIntColliderState(Integer)
  name.vb: FindIntColliderState(Integer)
  spec.csharp:
  - uid: Global.IntObject.FindIntColliderState(System.Int32)
    name: FindIntColliderState
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.FindIntColliderState(System.Int32)
    name: FindIntColliderState
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Global.IntObject.GetLocalGameStates
  commentId: M:Global.IntObject.GetLocalGameStates
  parent: Global.IntObject
  name: GetLocalGameStates()
  nameWithType: IntObject.GetLocalGameStates()
  fullName: IntObject.GetLocalGameStates()
  spec.csharp:
  - uid: Global.IntObject.GetLocalGameStates
    name: GetLocalGameStates
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetLocalGameStates
    name: GetLocalGameStates
  - name: (
  - name: )
- uid: Global.IntObject.RegisterSelf
  commentId: M:Global.IntObject.RegisterSelf
  parent: Global.IntObject
  name: RegisterSelf()
  nameWithType: IntObject.RegisterSelf()
  fullName: IntObject.RegisterSelf()
  spec.csharp:
  - uid: Global.IntObject.RegisterSelf
    name: RegisterSelf
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.RegisterSelf
    name: RegisterSelf
  - name: (
  - name: )
- uid: Global.IntObject.UnregisterSelf
  commentId: M:Global.IntObject.UnregisterSelf
  parent: Global.IntObject
  name: UnregisterSelf()
  nameWithType: IntObject.UnregisterSelf()
  fullName: IntObject.UnregisterSelf()
  spec.csharp:
  - uid: Global.IntObject.UnregisterSelf
    name: UnregisterSelf
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.UnregisterSelf
    name: UnregisterSelf
  - name: (
  - name: )
- uid: Global.IntObject.RegisterKilledCallback(IntObject.Action)
  commentId: M:Global.IntObject.RegisterKilledCallback(IntObject.Action)
  parent: Global.IntObject
  name: RegisterKilledCallback(Action)
  nameWithType: IntObject.RegisterKilledCallback(IntObject.Action)
  fullName: IntObject.RegisterKilledCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntObject.RegisterKilledCallback(IntObject.Action)
    name: RegisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntObject.RegisterKilledCallback(IntObject.Action)
    name: RegisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  commentId: M:Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  parent: Global.IntObject
  name: UnregisterKilledCallback(Action)
  nameWithType: IntObject.UnregisterKilledCallback(IntObject.Action)
  fullName: IntObject.UnregisterKilledCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntObject.UnregisterKilledCallback(IntObject.Action)
    name: UnregisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntObject.UnregisterKilledCallback(IntObject.Action)
    name: UnregisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  commentId: M:Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  parent: Global.IntObject
  isExternal: true
  name: IsContainedInRect(Rect)
  nameWithType: IntObject.IsContainedInRect(Rect)
  fullName: IntObject.IsContainedInRect(UnityEngine.Rect)
  spec.csharp:
  - uid: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
    name: IsContainedInRect
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
    name: IsContainedInRect
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: )
- uid: Global.IntObject.SetStatus(ObjectStatus)
  commentId: M:Global.IntObject.SetStatus(ObjectStatus)
  parent: Global.IntObject
  name: SetStatus(ObjectStatus)
  nameWithType: IntObject.SetStatus(ObjectStatus)
  fullName: IntObject.SetStatus(ObjectStatus)
  spec.csharp:
  - uid: Global.IntObject.SetStatus(ObjectStatus)
    name: SetStatus
  - name: (
  - uid: Global.ObjectStatus
    name: ObjectStatus
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetStatus(ObjectStatus)
    name: SetStatus
  - name: (
  - uid: Global.ObjectStatus
    name: ObjectStatus
  - name: )
- uid: Global.IntObject.Kill
  commentId: M:Global.IntObject.Kill
  parent: Global.IntObject
  name: Kill()
  nameWithType: IntObject.Kill()
  fullName: IntObject.Kill()
  spec.csharp:
  - uid: Global.IntObject.Kill
    name: Kill
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill
    name: Kill
  - name: (
  - name: )
- uid: Global.IntObject.Kill(System.Boolean)
  commentId: M:Global.IntObject.Kill(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: Kill(bool)
  nameWithType: IntObject.Kill(bool)
  fullName: IntObject.Kill(bool)
  nameWithType.vb: IntObject.Kill(Boolean)
  fullName.vb: IntObject.Kill(Boolean)
  name.vb: Kill(Boolean)
  spec.csharp:
  - uid: Global.IntObject.Kill(System.Boolean)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill(System.Boolean)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.Kill(System.Single)
  commentId: M:Global.IntObject.Kill(System.Single)
  parent: Global.IntObject
  isExternal: true
  name: Kill(float)
  nameWithType: IntObject.Kill(float)
  fullName: IntObject.Kill(float)
  nameWithType.vb: IntObject.Kill(Single)
  fullName.vb: IntObject.Kill(Single)
  name.vb: Kill(Single)
  spec.csharp:
  - uid: Global.IntObject.Kill(System.Single)
    name: Kill
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill(System.Single)
    name: Kill
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntObject.Kill(System.Boolean,System.Single)
  commentId: M:Global.IntObject.Kill(System.Boolean,System.Single)
  parent: Global.IntObject
  isExternal: true
  name: Kill(bool, float)
  nameWithType: IntObject.Kill(bool, float)
  fullName: IntObject.Kill(bool, float)
  nameWithType.vb: IntObject.Kill(Boolean, Single)
  fullName.vb: IntObject.Kill(Boolean, Single)
  name.vb: Kill(Boolean, Single)
  spec.csharp:
  - uid: Global.IntObject.Kill(System.Boolean,System.Single)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill(System.Boolean,System.Single)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  commentId: M:Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  parent: Global.IntObject
  isExternal: true
  name: IgnoreObjectCollisions(IntObject, float)
  nameWithType: IntObject.IgnoreObjectCollisions(IntObject, float)
  fullName: IntObject.IgnoreObjectCollisions(IntObject, float)
  nameWithType.vb: IntObject.IgnoreObjectCollisions(IntObject, Single)
  fullName.vb: IntObject.IgnoreObjectCollisions(IntObject, Single)
  name.vb: IgnoreObjectCollisions(IntObject, Single)
  spec.csharp:
  - uid: Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
    name: IgnoreObjectCollisions
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
    name: IgnoreObjectCollisions
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntObject.SleepObject
  commentId: M:Global.IntObject.SleepObject
  parent: Global.IntObject
  name: SleepObject()
  nameWithType: IntObject.SleepObject()
  fullName: IntObject.SleepObject()
  spec.csharp:
  - uid: Global.IntObject.SleepObject
    name: SleepObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.SleepObject
    name: SleepObject
  - name: (
  - name: )
- uid: Global.IntObject.OptimizeSleepObject
  commentId: M:Global.IntObject.OptimizeSleepObject
  parent: Global.IntObject
  name: OptimizeSleepObject()
  nameWithType: IntObject.OptimizeSleepObject()
  fullName: IntObject.OptimizeSleepObject()
  spec.csharp:
  - uid: Global.IntObject.OptimizeSleepObject
    name: OptimizeSleepObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.OptimizeSleepObject
    name: OptimizeSleepObject
  - name: (
  - name: )
- uid: Global.IntObject.WakeObject
  commentId: M:Global.IntObject.WakeObject
  parent: Global.IntObject
  name: WakeObject()
  nameWithType: IntObject.WakeObject()
  fullName: IntObject.WakeObject()
  spec.csharp:
  - uid: Global.IntObject.WakeObject
    name: WakeObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.WakeObject
    name: WakeObject
  - name: (
  - name: )
- uid: Global.IntObject.EnableObject
  commentId: M:Global.IntObject.EnableObject
  parent: Global.IntObject
  name: EnableObject()
  nameWithType: IntObject.EnableObject()
  fullName: IntObject.EnableObject()
  spec.csharp:
  - uid: Global.IntObject.EnableObject
    name: EnableObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.EnableObject
    name: EnableObject
  - name: (
  - name: )
- uid: Global.IntObject.DisableObject
  commentId: M:Global.IntObject.DisableObject
  parent: Global.IntObject
  name: DisableObject()
  nameWithType: IntObject.DisableObject()
  fullName: IntObject.DisableObject()
  spec.csharp:
  - uid: Global.IntObject.DisableObject
    name: DisableObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.DisableObject
    name: DisableObject
  - name: (
  - name: )
- uid: Global.IntObject.RespawnObject
  commentId: M:Global.IntObject.RespawnObject
  parent: Global.IntObject
  name: RespawnObject()
  nameWithType: IntObject.RespawnObject()
  fullName: IntObject.RespawnObject()
  spec.csharp:
  - uid: Global.IntObject.RespawnObject
    name: RespawnObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.RespawnObject
    name: RespawnObject
  - name: (
  - name: )
- uid: Global.IntObject.RecursiveSetCollidable(System.Boolean)
  commentId: M:Global.IntObject.RecursiveSetCollidable(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: RecursiveSetCollidable(bool)
  nameWithType: IntObject.RecursiveSetCollidable(bool)
  fullName: IntObject.RecursiveSetCollidable(bool)
  nameWithType.vb: IntObject.RecursiveSetCollidable(Boolean)
  fullName.vb: IntObject.RecursiveSetCollidable(Boolean)
  name.vb: RecursiveSetCollidable(Boolean)
  spec.csharp:
  - uid: Global.IntObject.RecursiveSetCollidable(System.Boolean)
    name: RecursiveSetCollidable
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.RecursiveSetCollidable(System.Boolean)
    name: RecursiveSetCollidable
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.SetColliderState(IntColliderState)
  commentId: M:Global.IntObject.SetColliderState(IntColliderState)
  parent: Global.IntObject
  name: SetColliderState(IntColliderState)
  nameWithType: IntObject.SetColliderState(IntColliderState)
  fullName: IntObject.SetColliderState(IntColliderState)
  spec.csharp:
  - uid: Global.IntObject.SetColliderState(IntColliderState)
    name: SetColliderState
  - name: (
  - uid: Global.IntColliderState
    name: IntColliderState
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetColliderState(IntColliderState)
    name: SetColliderState
  - name: (
  - uid: Global.IntColliderState
    name: IntColliderState
  - name: )
- uid: Global.IntObject.Translate(UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.Translate(UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: Translate(Vector2Int)
  nameWithType: IntObject.Translate(Vector2Int)
  fullName: IntObject.Translate(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2Int)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2Int)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.Translate(UnityEngine.Vector2)
  commentId: M:Global.IntObject.Translate(UnityEngine.Vector2)
  parent: Global.IntObject
  isExternal: true
  name: Translate(Vector2)
  nameWithType: IntObject.Translate(Vector2)
  fullName: IntObject.Translate(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: SetPosition(Vector2Int)
  nameWithType: IntObject.SetPosition(Vector2Int)
  fullName: IntObject.SetPosition(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.SetPosition(UnityEngine.Vector2Int)
    name: SetPosition
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetPosition(UnityEngine.Vector2Int)
    name: SetPosition
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.SetCollidable(System.Boolean)
  commentId: M:Global.IntObject.SetCollidable(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: SetCollidable(bool)
  nameWithType: IntObject.SetCollidable(bool)
  fullName: IntObject.SetCollidable(bool)
  nameWithType.vb: IntObject.SetCollidable(Boolean)
  fullName.vb: IntObject.SetCollidable(Boolean)
  name.vb: SetCollidable(Boolean)
  spec.csharp:
  - uid: Global.IntObject.SetCollidable(System.Boolean)
    name: SetCollidable
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetCollidable(System.Boolean)
    name: SetCollidable
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.GetCollidable
  commentId: M:Global.IntObject.GetCollidable
  parent: Global.IntObject
  name: GetCollidable()
  nameWithType: IntObject.GetCollidable()
  fullName: IntObject.GetCollidable()
  spec.csharp:
  - uid: Global.IntObject.GetCollidable
    name: GetCollidable
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetCollidable
    name: GetCollidable
  - name: (
  - name: )
- uid: Global.IntObject.GetCollider
  commentId: M:Global.IntObject.GetCollider
  parent: Global.IntObject
  name: GetCollider()
  nameWithType: IntObject.GetCollider()
  fullName: IntObject.GetCollider()
  spec.csharp:
  - uid: Global.IntObject.GetCollider
    name: GetCollider
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetCollider
    name: GetCollider
  - name: (
  - name: )
- uid: Global.IntObject.GetColliderState
  commentId: M:Global.IntObject.GetColliderState
  parent: Global.IntObject
  name: GetColliderState()
  nameWithType: IntObject.GetColliderState()
  fullName: IntObject.GetColliderState()
  spec.csharp:
  - uid: Global.IntObject.GetColliderState
    name: GetColliderState
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetColliderState
    name: GetColliderState
  - name: (
  - name: )
- uid: Global.IntObject.Overlaps(IntObject)
  commentId: M:Global.IntObject.Overlaps(IntObject)
  parent: Global.IntObject
  name: Overlaps(IntObject)
  nameWithType: IntObject.Overlaps(IntObject)
  fullName: IntObject.Overlaps(IntObject)
  spec.csharp:
  - uid: Global.IntObject.Overlaps(IntObject)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
  spec.vb:
  - uid: Global.IntObject.Overlaps(IntObject)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
- uid: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: Overlaps(IntObject, Vector2Int)
  nameWithType: IntObject.Overlaps(IntObject, Vector2Int)
  fullName: IntObject.Overlaps(IntObject, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.RayCast(IntRay)
  commentId: M:Global.IntObject.RayCast(IntRay)
  parent: Global.IntObject
  name: RayCast(IntRay)
  nameWithType: IntObject.RayCast(IntRay)
  fullName: IntObject.RayCast(IntRay)
  spec.csharp:
  - uid: Global.IntObject.RayCast(IntRay)
    name: RayCast
  - name: (
  - uid: Global.IntRay
    name: IntRay
  - name: )
  spec.vb:
  - uid: Global.IntObject.RayCast(IntRay)
    name: RayCast
  - name: (
  - uid: Global.IntRay
    name: IntRay
  - name: )
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: CollideAt(List<IntSolid>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntSolid>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntSolid>, UnityEngine.Vector2Int)
  nameWithType.vb: IntObject.CollideAt(List(Of IntSolid), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntSolid), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntSolid), Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntSolid
    name: IntSolid
  - name: '>'
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: CollideAt(List<IntActor>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntActor>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntActor>, UnityEngine.Vector2Int)
  nameWithType.vb: IntObject.CollideAt(List(Of IntActor), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntActor), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntActor), Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntActor
    name: IntActor
  - name: '>'
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntActor
    name: IntActor
  - name: )
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: CollideAt(List<IntTrigger>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntTrigger>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntTrigger>, UnityEngine.Vector2Int)
  nameWithType.vb: IntObject.CollideAt(List(Of IntTrigger), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntTrigger), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntTrigger), Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: '>'
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  commentId: M:Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  parent: Global.IntObject
  name: LoadObjectSaveData(IntObjectSaveData)
  nameWithType: IntObject.LoadObjectSaveData(IntObjectSaveData)
  fullName: IntObject.LoadObjectSaveData(IntObjectSaveData)
  spec.csharp:
  - uid: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
    name: LoadObjectSaveData
  - name: (
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
  spec.vb:
  - uid: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
    name: LoadObjectSaveData
  - name: (
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
- uid: Global.IntObject.GetObjectSaveData
  commentId: M:Global.IntObject.GetObjectSaveData
  parent: Global.IntObject
  name: GetObjectSaveData()
  nameWithType: IntObject.GetObjectSaveData()
  fullName: IntObject.GetObjectSaveData()
  spec.csharp:
  - uid: Global.IntObject.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
- uid: Global.IntObject.OnPostLoadSaveFile
  commentId: M:Global.IntObject.OnPostLoadSaveFile
  parent: Global.IntObject
  name: OnPostLoadSaveFile()
  nameWithType: IntObject.OnPostLoadSaveFile()
  fullName: IntObject.OnPostLoadSaveFile()
  spec.csharp:
  - uid: Global.IntObject.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.Bee`1
  commentId: T:Global.Bee`1
  name: Bee<T>
  nameWithType: Bee<T>
  fullName: Bee<T>
  nameWithType.vb: Bee(Of T)
  fullName.vb: Bee(Of T)
  name.vb: Bee(Of T)
  spec.csharp:
  - uid: Global.Bee`1
    name: Bee
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.Bee`1
    name: Bee
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.ISavableObject`1
  commentId: T:Global.ISavableObject`1
  name: ISavableObject<T>
  nameWithType: ISavableObject<T>
  fullName: ISavableObject<T>
  nameWithType.vb: ISavableObject(Of T)
  fullName.vb: ISavableObject(Of T)
  name.vb: ISavableObject(Of T)
  spec.csharp:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.Bee`1.flowerTarget
  commentId: F:Global.Bee`1.flowerTarget
  name: flowerTarget
  nameWithType: Bee<T>.flowerTarget
  fullName: Bee<T>.flowerTarget
  nameWithType.vb: Bee(Of T).flowerTarget
  fullName.vb: Bee(Of T).flowerTarget
- uid: Global.Bee`1.SniffOffset
  commentId: F:Global.Bee`1.SniffOffset
  name: SniffOffset
  nameWithType: Bee<T>.SniffOffset
  fullName: Bee<T>.SniffOffset
  nameWithType.vb: Bee(Of T).SniffOffset
  fullName.vb: Bee(Of T).SniffOffset
- uid: Global.Bee`1.SniffTimeRange
  commentId: F:Global.Bee`1.SniffTimeRange
  name: SniffTimeRange
  nameWithType: Bee<T>.SniffTimeRange
  fullName: Bee<T>.SniffTimeRange
  nameWithType.vb: Bee(Of T).SniffTimeRange
  fullName.vb: Bee(Of T).SniffTimeRange
- uid: Global.Bee`1.Speed
  commentId: F:Global.Bee`1.Speed
  name: Speed
  nameWithType: Bee<T>.Speed
  fullName: Bee<T>.Speed
  nameWithType.vb: Bee(Of T).Speed
  fullName.vb: Bee(Of T).Speed
- uid: Global.Bee`1.DistanceEpsilon
  commentId: F:Global.Bee`1.DistanceEpsilon
  name: DistanceEpsilon
  nameWithType: Bee<T>.DistanceEpsilon
  fullName: Bee<T>.DistanceEpsilon
  nameWithType.vb: Bee(Of T).DistanceEpsilon
  fullName.vb: Bee(Of T).DistanceEpsilon
- uid: Global.Bee`1.territory
  commentId: F:Global.Bee`1.territory
  name: territory
  nameWithType: Bee<T>.territory
  fullName: Bee<T>.territory
  nameWithType.vb: Bee(Of T).territory
  fullName.vb: Bee(Of T).territory
- uid: Global.Bee`1.FlowerParent
  commentId: F:Global.Bee`1.FlowerParent
  name: FlowerParent
  nameWithType: Bee<T>.FlowerParent
  fullName: Bee<T>.FlowerParent
  nameWithType.vb: Bee(Of T).FlowerParent
  fullName.vb: Bee(Of T).FlowerParent
- uid: Global.Bee`1.animator
  commentId: F:Global.Bee`1.animator
  name: animator
  nameWithType: Bee<T>.animator
  fullName: Bee<T>.animator
  nameWithType.vb: Bee(Of T).animator
  fullName.vb: Bee(Of T).animator
- uid: Global.Bee`1.sprite
  commentId: F:Global.Bee`1.sprite
  name: sprite
  nameWithType: Bee<T>.sprite
  fullName: Bee<T>.sprite
  nameWithType.vb: Bee(Of T).sprite
  fullName.vb: Bee(Of T).sprite
- uid: Global.Bee`1.flowers
  commentId: F:Global.Bee`1.flowers
  name: flowers
  nameWithType: Bee<T>.flowers
  fullName: Bee<T>.flowers
  nameWithType.vb: Bee(Of T).flowers
  fullName.vb: Bee(Of T).flowers
- uid: Global.Bee`1.pathFinder
  commentId: F:Global.Bee`1.pathFinder
  name: pathFinder
  nameWithType: Bee<T>.pathFinder
  fullName: Bee<T>.pathFinder
  nameWithType.vb: Bee(Of T).pathFinder
  fullName.vb: Bee(Of T).pathFinder
- uid: Global.Bee`1.path
  commentId: F:Global.Bee`1.path
  name: path
  nameWithType: Bee<T>.path
  fullName: Bee<T>.path
  nameWithType.vb: Bee(Of T).path
  fullName.vb: Bee(Of T).path
- uid: Global.Bee`1.PreviousEndNode
  commentId: F:Global.Bee`1.PreviousEndNode
  name: PreviousEndNode
  nameWithType: Bee<T>.PreviousEndNode
  fullName: Bee<T>.PreviousEndNode
  nameWithType.vb: Bee(Of T).PreviousEndNode
  fullName.vb: Bee(Of T).PreviousEndNode
- uid: Global.Bee`1.interval
  commentId: F:Global.Bee`1.interval
  name: interval
  nameWithType: Bee<T>.interval
  fullName: Bee<T>.interval
  nameWithType.vb: Bee(Of T).interval
  fullName.vb: Bee(Of T).interval
- uid: Global.Bee`1.activePathNode
  commentId: F:Global.Bee`1.activePathNode
  name: activePathNode
  nameWithType: Bee<T>.activePathNode
  fullName: Bee<T>.activePathNode
  nameWithType.vb: Bee(Of T).activePathNode
  fullName.vb: Bee(Of T).activePathNode
- uid: Global.Bee`1.currentState
  commentId: F:Global.Bee`1.currentState
  name: currentState
  nameWithType: Bee<T>.currentState
  fullName: Bee<T>.currentState
  nameWithType.vb: Bee(Of T).currentState
  fullName.vb: Bee(Of T).currentState
- uid: Global.Bee`1.AStarBoundsMin
  commentId: F:Global.Bee`1.AStarBoundsMin
  name: AStarBoundsMin
  nameWithType: Bee<T>.AStarBoundsMin
  fullName: Bee<T>.AStarBoundsMin
  nameWithType.vb: Bee(Of T).AStarBoundsMin
  fullName.vb: Bee(Of T).AStarBoundsMin
- uid: Global.Bee`1.AStarBoundsMax
  commentId: F:Global.Bee`1.AStarBoundsMax
  name: AStarBoundsMax
  nameWithType: Bee<T>.AStarBoundsMax
  fullName: Bee<T>.AStarBoundsMax
  nameWithType.vb: Bee(Of T).AStarBoundsMax
  fullName.vb: Bee(Of T).AStarBoundsMax
- uid: Global.Bee`1.PickNewFlower
  commentId: M:Global.Bee`1.PickNewFlower
  name: PickNewFlower()
  nameWithType: Bee<T>.PickNewFlower()
  fullName: Bee<T>.PickNewFlower()
  nameWithType.vb: Bee(Of T).PickNewFlower()
  fullName.vb: Bee(Of T).PickNewFlower()
  spec.csharp:
  - uid: Global.Bee`1.PickNewFlower
    name: PickNewFlower
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Bee`1.PickNewFlower
    name: PickNewFlower
  - name: (
  - name: )
- uid: Global.Bee`1.HeuristicFunc(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  commentId: M:Global.Bee`1.HeuristicFunc(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  isExternal: true
  name: HeuristicFunc(Vector2Int, Vector2Int)
  nameWithType: Bee<T>.HeuristicFunc(Vector2Int, Vector2Int)
  fullName: Bee<T>.HeuristicFunc(UnityEngine.Vector2Int, UnityEngine.Vector2Int)
  nameWithType.vb: Bee(Of T).HeuristicFunc(Vector2Int, Vector2Int)
  fullName.vb: Bee(Of T).HeuristicFunc(UnityEngine.Vector2Int, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.Bee`1.HeuristicFunc(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
    name: HeuristicFunc
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.Bee`1.HeuristicFunc(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
    name: HeuristicFunc
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.Bee`1.GetPathToLocation(UnityEngine.Vector2Int,System.Boolean)
  commentId: M:Global.Bee`1.GetPathToLocation(UnityEngine.Vector2Int,System.Boolean)
  isExternal: true
  name: GetPathToLocation(Vector2Int, bool)
  nameWithType: Bee<T>.GetPathToLocation(Vector2Int, bool)
  fullName: Bee<T>.GetPathToLocation(UnityEngine.Vector2Int, bool)
  nameWithType.vb: Bee(Of T).GetPathToLocation(Vector2Int, Boolean)
  fullName.vb: Bee(Of T).GetPathToLocation(UnityEngine.Vector2Int, Boolean)
  name.vb: GetPathToLocation(Vector2Int, Boolean)
  spec.csharp:
  - uid: Global.Bee`1.GetPathToLocation(UnityEngine.Vector2Int,System.Boolean)
    name: GetPathToLocation
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.Bee`1.GetPathToLocation(UnityEngine.Vector2Int,System.Boolean)
    name: GetPathToLocation
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.Bee`1.ExtendPathToLocation(UnityEngine.Vector2Int,System.Boolean)
  commentId: M:Global.Bee`1.ExtendPathToLocation(UnityEngine.Vector2Int,System.Boolean)
  isExternal: true
  name: ExtendPathToLocation(Vector2Int, bool)
  nameWithType: Bee<T>.ExtendPathToLocation(Vector2Int, bool)
  fullName: Bee<T>.ExtendPathToLocation(UnityEngine.Vector2Int, bool)
  nameWithType.vb: Bee(Of T).ExtendPathToLocation(Vector2Int, Boolean)
  fullName.vb: Bee(Of T).ExtendPathToLocation(UnityEngine.Vector2Int, Boolean)
  name.vb: ExtendPathToLocation(Vector2Int, Boolean)
  spec.csharp:
  - uid: Global.Bee`1.ExtendPathToLocation(UnityEngine.Vector2Int,System.Boolean)
    name: ExtendPathToLocation
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.Bee`1.ExtendPathToLocation(UnityEngine.Vector2Int,System.Boolean)
    name: ExtendPathToLocation
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.Bee`1.IsTileUnBlocked(UnityEngine.Vector2Int)
  commentId: M:Global.Bee`1.IsTileUnBlocked(UnityEngine.Vector2Int)
  isExternal: true
  name: IsTileUnBlocked(Vector2Int)
  nameWithType: Bee<T>.IsTileUnBlocked(Vector2Int)
  fullName: Bee<T>.IsTileUnBlocked(UnityEngine.Vector2Int)
  nameWithType.vb: Bee(Of T).IsTileUnBlocked(Vector2Int)
  fullName.vb: Bee(Of T).IsTileUnBlocked(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.Bee`1.IsTileUnBlocked(UnityEngine.Vector2Int)
    name: IsTileUnBlocked
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.Bee`1.IsTileUnBlocked(UnityEngine.Vector2Int)
    name: IsTileUnBlocked
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.Bee`1.DrawTile(UnityEngine.Vector2Int,UnityEngine.Color)
  commentId: M:Global.Bee`1.DrawTile(UnityEngine.Vector2Int,UnityEngine.Color)
  isExternal: true
  name: DrawTile(Vector2Int, Color)
  nameWithType: Bee<T>.DrawTile(Vector2Int, Color)
  fullName: Bee<T>.DrawTile(UnityEngine.Vector2Int, UnityEngine.Color)
  nameWithType.vb: Bee(Of T).DrawTile(Vector2Int, Color)
  fullName.vb: Bee(Of T).DrawTile(UnityEngine.Vector2Int, UnityEngine.Color)
  spec.csharp:
  - uid: Global.Bee`1.DrawTile(UnityEngine.Vector2Int,UnityEngine.Color)
    name: DrawTile
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.Bee`1.DrawTile(UnityEngine.Vector2Int,UnityEngine.Color)
    name: DrawTile
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
- uid: Global.Bee`1.TraversePath
  commentId: M:Global.Bee`1.TraversePath
  name: TraversePath()
  nameWithType: Bee<T>.TraversePath()
  fullName: Bee<T>.TraversePath()
  nameWithType.vb: Bee(Of T).TraversePath()
  fullName.vb: Bee(Of T).TraversePath()
  spec.csharp:
  - uid: Global.Bee`1.TraversePath
    name: TraversePath
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Bee`1.TraversePath
    name: TraversePath
  - name: (
  - name: )
- uid: Global.Bee`1.Initialize
  commentId: M:Global.Bee`1.Initialize
  name: Initialize()
  nameWithType: Bee<T>.Initialize()
  fullName: Bee<T>.Initialize()
  nameWithType.vb: Bee(Of T).Initialize()
  fullName.vb: Bee(Of T).Initialize()
  spec.csharp:
  - uid: Global.Bee`1.Initialize
    name: Initialize
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Bee`1.Initialize
    name: Initialize
  - name: (
  - name: )
- uid: Global.Bee`1.OnDrawGizmosSelected
  commentId: M:Global.Bee`1.OnDrawGizmosSelected
  name: OnDrawGizmosSelected()
  nameWithType: Bee<T>.OnDrawGizmosSelected()
  fullName: Bee<T>.OnDrawGizmosSelected()
  nameWithType.vb: Bee(Of T).OnDrawGizmosSelected()
  fullName.vb: Bee(Of T).OnDrawGizmosSelected()
  spec.csharp:
  - uid: Global.Bee`1.OnDrawGizmosSelected
    name: OnDrawGizmosSelected
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Bee`1.OnDrawGizmosSelected
    name: OnDrawGizmosSelected
  - name: (
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.NomadBee.Start*
  commentId: Overload:Global.NomadBee.Start
  name: Start
  nameWithType: NomadBee.Start
  fullName: NomadBee.Start
- uid: Global.Bee{NomadBeeState}.SetState(NomadBeeState)
  commentId: M:Global.Bee{NomadBeeState}.SetState(NomadBeeState)
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.SetState(`0)
  name: SetState(NomadBeeState)
  nameWithType: Bee<NomadBeeState>.SetState(NomadBeeState)
  fullName: Bee<NomadBeeState>.SetState(NomadBeeState)
  nameWithType.vb: Bee(Of NomadBeeState).SetState(NomadBeeState)
  fullName.vb: Bee(Of NomadBeeState).SetState(NomadBeeState)
  spec.csharp:
  - uid: Global.Bee{NomadBeeState}.SetState(NomadBeeState)
    name: SetState
  - name: (
  - uid: Global.NomadBeeState
    name: NomadBeeState
  - name: )
  spec.vb:
  - uid: Global.Bee{NomadBeeState}.SetState(NomadBeeState)
    name: SetState
  - name: (
  - uid: Global.NomadBeeState
    name: NomadBeeState
  - name: )
- uid: Global.NomadBee.SetState*
  commentId: Overload:Global.NomadBee.SetState
  name: SetState
  nameWithType: NomadBee.SetState
  fullName: NomadBee.SetState
- uid: Global.NomadBeeState
  commentId: T:Global.NomadBeeState
  name: NomadBeeState
  nameWithType: NomadBeeState
  fullName: NomadBeeState
- uid: Global.Bee`1.SetState(`0)
  commentId: M:Global.Bee`1.SetState(`0)
  name: SetState(T)
  nameWithType: Bee<T>.SetState(T)
  fullName: Bee<T>.SetState(T)
  nameWithType.vb: Bee(Of T).SetState(T)
  fullName.vb: Bee(Of T).SetState(T)
  spec.csharp:
  - uid: Global.Bee`1.SetState(`0)
    name: SetState
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Global.Bee`1.SetState(`0)
    name: SetState
  - name: (
  - name: T
  - name: )
- uid: Global.Bee{NomadBeeState}.OnDoneSniffing(System.Single,System.Single)
  commentId: M:Global.Bee{NomadBeeState}.OnDoneSniffing(System.Single,System.Single)
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.OnDoneSniffing(System.Single,System.Single)
  name: OnDoneSniffing(float, float)
  nameWithType: Bee<NomadBeeState>.OnDoneSniffing(float, float)
  fullName: Bee<NomadBeeState>.OnDoneSniffing(float, float)
  nameWithType.vb: Bee(Of NomadBeeState).OnDoneSniffing(Single, Single)
  fullName.vb: Bee(Of NomadBeeState).OnDoneSniffing(Single, Single)
  name.vb: OnDoneSniffing(Single, Single)
  spec.csharp:
  - uid: Global.Bee{NomadBeeState}.OnDoneSniffing(System.Single,System.Single)
    name: OnDoneSniffing
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.Bee{NomadBeeState}.OnDoneSniffing(System.Single,System.Single)
    name: OnDoneSniffing
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.NomadBee.OnDoneSniffing*
  commentId: Overload:Global.NomadBee.OnDoneSniffing
  name: OnDoneSniffing
  nameWithType: NomadBee.OnDoneSniffing
  fullName: NomadBee.OnDoneSniffing
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.Bee`1.OnDoneSniffing(System.Single,System.Single)
  commentId: M:Global.Bee`1.OnDoneSniffing(System.Single,System.Single)
  isExternal: true
  name: OnDoneSniffing(float, float)
  nameWithType: Bee<T>.OnDoneSniffing(float, float)
  fullName: Bee<T>.OnDoneSniffing(float, float)
  nameWithType.vb: Bee(Of T).OnDoneSniffing(Single, Single)
  fullName.vb: Bee(Of T).OnDoneSniffing(Single, Single)
  name.vb: OnDoneSniffing(Single, Single)
  spec.csharp:
  - uid: Global.Bee`1.OnDoneSniffing(System.Single,System.Single)
    name: OnDoneSniffing
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.Bee`1.OnDoneSniffing(System.Single,System.Single)
    name: OnDoneSniffing
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.Bee{NomadBeeState}.OnReachedDestinationFlower
  commentId: M:Global.Bee{NomadBeeState}.OnReachedDestinationFlower
  parent: Global.Bee{NomadBeeState}
  definition: Global.Bee`1.OnReachedDestinationFlower
  name: OnReachedDestinationFlower()
  nameWithType: Bee<NomadBeeState>.OnReachedDestinationFlower()
  fullName: Bee<NomadBeeState>.OnReachedDestinationFlower()
  nameWithType.vb: Bee(Of NomadBeeState).OnReachedDestinationFlower()
  fullName.vb: Bee(Of NomadBeeState).OnReachedDestinationFlower()
  spec.csharp:
  - uid: Global.Bee{NomadBeeState}.OnReachedDestinationFlower
    name: OnReachedDestinationFlower
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Bee{NomadBeeState}.OnReachedDestinationFlower
    name: OnReachedDestinationFlower
  - name: (
  - name: )
- uid: Global.NomadBee.OnReachedDestinationFlower*
  commentId: Overload:Global.NomadBee.OnReachedDestinationFlower
  name: OnReachedDestinationFlower
  nameWithType: NomadBee.OnReachedDestinationFlower
  fullName: NomadBee.OnReachedDestinationFlower
- uid: Global.Bee`1.OnReachedDestinationFlower
  commentId: M:Global.Bee`1.OnReachedDestinationFlower
  name: OnReachedDestinationFlower()
  nameWithType: Bee<T>.OnReachedDestinationFlower()
  fullName: Bee<T>.OnReachedDestinationFlower()
  nameWithType.vb: Bee(Of T).OnReachedDestinationFlower()
  fullName.vb: Bee(Of T).OnReachedDestinationFlower()
  spec.csharp:
  - uid: Global.Bee`1.OnReachedDestinationFlower
    name: OnReachedDestinationFlower
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Bee`1.OnReachedDestinationFlower
    name: OnReachedDestinationFlower
  - name: (
  - name: )
- uid: Global.IntEnemy.SpawnAura
  commentId: M:Global.IntEnemy.SpawnAura
  parent: Global.IntEnemy
  name: SpawnAura()
  nameWithType: IntEnemy.SpawnAura()
  fullName: IntEnemy.SpawnAura()
  spec.csharp:
  - uid: Global.IntEnemy.SpawnAura
    name: SpawnAura
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.SpawnAura
    name: SpawnAura
  - name: (
  - name: )
- uid: Global.NomadBee.SpawnAura*
  commentId: Overload:Global.NomadBee.SpawnAura
  name: SpawnAura
  nameWithType: NomadBee.SpawnAura
  fullName: NomadBee.SpawnAura
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: Global.IntEnemy.PreInputUpdate
  commentId: M:Global.IntEnemy.PreInputUpdate
  parent: Global.IntEnemy
  name: PreInputUpdate()
  nameWithType: IntEnemy.PreInputUpdate()
  fullName: IntEnemy.PreInputUpdate()
  spec.csharp:
  - uid: Global.IntEnemy.PreInputUpdate
    name: PreInputUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.PreInputUpdate
    name: PreInputUpdate
  - name: (
  - name: )
- uid: Global.NomadBee.PreInputUpdate*
  commentId: Overload:Global.NomadBee.PreInputUpdate
  name: PreInputUpdate
  nameWithType: NomadBee.PreInputUpdate
  fullName: NomadBee.PreInputUpdate
- uid: Global.IntEnemy.UpdateInput
  commentId: M:Global.IntEnemy.UpdateInput
  parent: Global.IntEnemy
  name: UpdateInput()
  nameWithType: IntEnemy.UpdateInput()
  fullName: IntEnemy.UpdateInput()
  spec.csharp:
  - uid: Global.IntEnemy.UpdateInput
    name: UpdateInput
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.UpdateInput
    name: UpdateInput
  - name: (
  - name: )
- uid: Global.NomadBee.UpdateInput*
  commentId: Overload:Global.NomadBee.UpdateInput
  name: UpdateInput
  nameWithType: NomadBee.UpdateInput
  fullName: NomadBee.UpdateInput
- uid: Global.IntEnemy.PostInputUpdate
  commentId: M:Global.IntEnemy.PostInputUpdate
  parent: Global.IntEnemy
  name: PostInputUpdate()
  nameWithType: IntEnemy.PostInputUpdate()
  fullName: IntEnemy.PostInputUpdate()
  spec.csharp:
  - uid: Global.IntEnemy.PostInputUpdate
    name: PostInputUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.PostInputUpdate
    name: PostInputUpdate
  - name: (
  - name: )
- uid: Global.NomadBee.PostInputUpdate*
  commentId: Overload:Global.NomadBee.PostInputUpdate
  name: PostInputUpdate
  nameWithType: NomadBee.PostInputUpdate
  fullName: NomadBee.PostInputUpdate
- uid: Global.IntEnemy.Animate
  commentId: M:Global.IntEnemy.Animate
  parent: Global.IntEnemy
  name: Animate()
  nameWithType: IntEnemy.Animate()
  fullName: IntEnemy.Animate()
  spec.csharp:
  - uid: Global.IntEnemy.Animate
    name: Animate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.Animate
    name: Animate
  - name: (
  - name: )
- uid: Global.NomadBee.Animate*
  commentId: Overload:Global.NomadBee.Animate
  name: Animate
  nameWithType: NomadBee.Animate
  fullName: NomadBee.Animate
- uid: Global.NomadBee.OnCollideX*
  commentId: Overload:Global.NomadBee.OnCollideX
  name: OnCollideX
  nameWithType: NomadBee.OnCollideX
  fullName: NomadBee.OnCollideX
- uid: Global.IntSolid
  commentId: T:Global.IntSolid
  name: IntSolid
  nameWithType: IntSolid
  fullName: IntSolid
- uid: Global.NomadBee.OnCollideY*
  commentId: Overload:Global.NomadBee.OnCollideY
  name: OnCollideY
  nameWithType: NomadBee.OnCollideY
  fullName: NomadBee.OnCollideY
- uid: Global.IntObject.OnKill(System.Boolean)
  commentId: M:Global.IntObject.OnKill(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: OnKill(bool)
  nameWithType: IntObject.OnKill(bool)
  fullName: IntObject.OnKill(bool)
  nameWithType.vb: IntObject.OnKill(Boolean)
  fullName.vb: IntObject.OnKill(Boolean)
  name.vb: OnKill(Boolean)
  spec.csharp:
  - uid: Global.IntObject.OnKill(System.Boolean)
    name: OnKill
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.OnKill(System.Boolean)
    name: OnKill
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.NomadBee.OnKill*
  commentId: Overload:Global.NomadBee.OnKill
  name: OnKill
  nameWithType: NomadBee.OnKill
  fullName: NomadBee.OnKill
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.IntEnemy.ResetObject
  commentId: M:Global.IntEnemy.ResetObject
  parent: Global.IntEnemy
  name: ResetObject()
  nameWithType: IntEnemy.ResetObject()
  fullName: IntEnemy.ResetObject()
  spec.csharp:
  - uid: Global.IntEnemy.ResetObject
    name: ResetObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntEnemy.ResetObject
    name: ResetObject
  - name: (
  - name: )
- uid: Global.NomadBee.ResetObject*
  commentId: Overload:Global.NomadBee.ResetObject
  name: ResetObject
  nameWithType: NomadBee.ResetObject
  fullName: NomadBee.ResetObject
