### YamlMime:ManagedReference
items:
- uid: Global.InvinsibleComponent
  commentId: T:Global.InvinsibleComponent
  id: InvinsibleComponent
  parent: Global
  children:
  - Global.InvinsibleComponent.IsInvinsible
  - Global.InvinsibleComponent.SetInvinsible(System.Boolean)
  - Global.InvinsibleComponent.SetInvinsible(System.Single)
  langs:
  - csharp
  - vb
  name: InvinsibleComponent
  nameWithType: InvinsibleComponent
  fullName: InvinsibleComponent
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Components/InvinsibleComponent.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: InvinsibleComponent
    path: ../Assets/Objects & Components/Entities/Components/InvinsibleComponent.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class InvinsibleComponent : MonoBehaviour'
    content.vb: Public Class InvinsibleComponent Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.InvinsibleComponent.IsInvinsible
  commentId: P:Global.InvinsibleComponent.IsInvinsible
  id: IsInvinsible
  parent: Global.InvinsibleComponent
  langs:
  - csharp
  - vb
  name: IsInvinsible
  nameWithType: InvinsibleComponent.IsInvinsible
  fullName: InvinsibleComponent.IsInvinsible
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Components/InvinsibleComponent.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsInvinsible
    path: ../Assets/Objects & Components/Entities/Components/InvinsibleComponent.cs
    startLine: 6
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsInvinsible { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsInvinsible As Boolean
  overload: Global.InvinsibleComponent.IsInvinsible*
- uid: Global.InvinsibleComponent.SetInvinsible(System.Boolean)
  commentId: M:Global.InvinsibleComponent.SetInvinsible(System.Boolean)
  id: SetInvinsible(System.Boolean)
  parent: Global.InvinsibleComponent
  langs:
  - csharp
  - vb
  name: SetInvinsible(bool)
  nameWithType: InvinsibleComponent.SetInvinsible(bool)
  fullName: InvinsibleComponent.SetInvinsible(bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Components/InvinsibleComponent.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetInvinsible
    path: ../Assets/Objects & Components/Entities/Components/InvinsibleComponent.cs
    startLine: 21
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nSets invinsibility permanently/until manually changed\n"
  example: []
  syntax:
    content: public void SetInvinsible(bool isInvinsible)
    parameters:
    - id: isInvinsible
      type: System.Boolean
      description: value to set invinsibility to
    content.vb: Public Sub SetInvinsible(isInvinsible As Boolean)
  overload: Global.InvinsibleComponent.SetInvinsible*
  nameWithType.vb: InvinsibleComponent.SetInvinsible(Boolean)
  fullName.vb: InvinsibleComponent.SetInvinsible(Boolean)
  name.vb: SetInvinsible(Boolean)
- uid: Global.InvinsibleComponent.SetInvinsible(System.Single)
  commentId: M:Global.InvinsibleComponent.SetInvinsible(System.Single)
  id: SetInvinsible(System.Single)
  parent: Global.InvinsibleComponent
  langs:
  - csharp
  - vb
  name: SetInvinsible(float)
  nameWithType: InvinsibleComponent.SetInvinsible(float)
  fullName: InvinsibleComponent.SetInvinsible(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Components/InvinsibleComponent.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetInvinsible
    path: ../Assets/Objects & Components/Entities/Components/InvinsibleComponent.cs
    startLine: 31
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nSets the player to be invinsible for [duration] number of seconds\n"
  example: []
  syntax:
    content: public void SetInvinsible(float duration)
    parameters:
    - id: duration
      type: System.Single
      description: ''
    content.vb: Public Sub SetInvinsible(duration As Single)
  overload: Global.InvinsibleComponent.SetInvinsible*
  nameWithType.vb: InvinsibleComponent.SetInvinsible(Single)
  fullName.vb: InvinsibleComponent.SetInvinsible(Single)
  name.vb: SetInvinsible(Single)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.InvinsibleComponent.IsInvinsible*
  commentId: Overload:Global.InvinsibleComponent.IsInvinsible
  name: IsInvinsible
  nameWithType: InvinsibleComponent.IsInvinsible
  fullName: InvinsibleComponent.IsInvinsible
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.InvinsibleComponent.SetInvinsible*
  commentId: Overload:Global.InvinsibleComponent.SetInvinsible
  name: SetInvinsible
  nameWithType: InvinsibleComponent.SetInvinsible
  fullName: InvinsibleComponent.SetInvinsible
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
