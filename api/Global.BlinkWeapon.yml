### YamlMime:ManagedReference
items:
- uid: Global.BlinkWeapon
  commentId: T:Global.BlinkWeapon
  id: BlinkWeapon
  parent: Global
  children:
  - Global.BlinkWeapon.#ctor(Player,WeaponController)
  - Global.BlinkWeapon.blink
  - Global.BlinkWeapon.CanTakeDamage
  - Global.BlinkWeapon.GetTriggers(System.Collections.Generic.List{IntTrigger})
  - Global.BlinkWeapon.OnBlinkBoxEnter(IntActor)
  - Global.BlinkWeapon.OnCharged
  - Global.BlinkWeapon.ResetWeapon
  - Global.BlinkWeapon.Update
  - Global.BlinkWeapon.UseWeaponInternal
  langs:
  - csharp
  - vb
  name: BlinkWeapon
  nameWithType: BlinkWeapon
  fullName: BlinkWeapon
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Weapons/BlinkWeapon.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BlinkWeapon
    path: ../Assets/Objects & Components/Entities/Player/Weapons/BlinkWeapon.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class BlinkWeapon : Weapon'
    content.vb: Public Class BlinkWeapon Inherits Weapon
  inheritance:
  - System.Object
  - Global.Weapon
  inheritedMembers:
  - Global.Weapon.Active
  - Global.Weapon.Finished
  - Global.Weapon.Weilder
  - Global.Weapon.Loadout
  - Global.Weapon.WeaponTarget
  - Global.Weapon.SetFinishCallback(Weapon.Callback)
  - Global.Weapon.UseWeapon
  - Global.Weapon.OnFirstFrame
  - Global.Weapon.OnWeaponWeilded(WeaponController.WeaponType)
  - Global.Weapon.OnWeaponSheathed(WeaponController.WeaponType)
  - Global.Weapon.OnDashEnded
  - Global.Weapon.OnHitActor(IntActor)
  - Global.Weapon.OnFinish
  - Global.Weapon.Cancel
  - Global.Weapon.IsActive
  - Global.Weapon.IsFinished
  - Global.Weapon.Finish
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.BlinkWeapon.#ctor(Player,WeaponController)
  commentId: M:Global.BlinkWeapon.#ctor(Player,WeaponController)
  id: '#ctor(Player,WeaponController)'
  parent: Global.BlinkWeapon
  langs:
  - csharp
  - vb
  name: BlinkWeapon(Player, WeaponController)
  nameWithType: BlinkWeapon.BlinkWeapon(Player, WeaponController)
  fullName: BlinkWeapon.BlinkWeapon(Player, WeaponController)
  type: Constructor
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Weapons/BlinkWeapon.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: .ctor
    path: ../Assets/Objects & Components/Entities/Player/Weapons/BlinkWeapon.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public BlinkWeapon(Player Weilder, WeaponController Loadout)
    parameters:
    - id: Weilder
      type: Global.Player
    - id: Loadout
      type: Global.WeaponController
    content.vb: Public Sub New(Weilder As Player, Loadout As WeaponController)
  overload: Global.BlinkWeapon.#ctor*
  nameWithType.vb: BlinkWeapon.New(Player, WeaponController)
  fullName.vb: BlinkWeapon.New(Player, WeaponController)
  name.vb: New(Player, WeaponController)
- uid: Global.BlinkWeapon.UseWeaponInternal
  commentId: M:Global.BlinkWeapon.UseWeaponInternal
  id: UseWeaponInternal
  parent: Global.BlinkWeapon
  langs:
  - csharp
  - vb
  name: UseWeaponInternal()
  nameWithType: BlinkWeapon.UseWeaponInternal()
  fullName: BlinkWeapon.UseWeaponInternal()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Weapons/BlinkWeapon.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UseWeaponInternal
    path: ../Assets/Objects & Components/Entities/Player/Weapons/BlinkWeapon.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override void UseWeaponInternal()
    content.vb: Protected Overrides Sub UseWeaponInternal()
  overridden: Global.Weapon.UseWeaponInternal
  overload: Global.BlinkWeapon.UseWeaponInternal*
- uid: Global.BlinkWeapon.Update
  commentId: M:Global.BlinkWeapon.Update
  id: Update
  parent: Global.BlinkWeapon
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: BlinkWeapon.Update()
  fullName: BlinkWeapon.Update()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Weapons/BlinkWeapon.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Update
    path: ../Assets/Objects & Components/Entities/Player/Weapons/BlinkWeapon.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Global.Weapon.Update
  overload: Global.BlinkWeapon.Update*
- uid: Global.BlinkWeapon.CanTakeDamage
  commentId: M:Global.BlinkWeapon.CanTakeDamage
  id: CanTakeDamage
  parent: Global.BlinkWeapon
  langs:
  - csharp
  - vb
  name: CanTakeDamage()
  nameWithType: BlinkWeapon.CanTakeDamage()
  fullName: BlinkWeapon.CanTakeDamage()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Weapons/BlinkWeapon.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CanTakeDamage
    path: ../Assets/Objects & Components/Entities/Player/Weapons/BlinkWeapon.cs
    startLine: 32
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override bool CanTakeDamage()
    return:
      type: System.Boolean
    content.vb: Public Overrides Function CanTakeDamage() As Boolean
  overridden: Global.Weapon.CanTakeDamage
  overload: Global.BlinkWeapon.CanTakeDamage*
- uid: Global.BlinkWeapon.OnCharged
  commentId: M:Global.BlinkWeapon.OnCharged
  id: OnCharged
  parent: Global.BlinkWeapon
  langs:
  - csharp
  - vb
  name: OnCharged()
  nameWithType: BlinkWeapon.OnCharged()
  fullName: BlinkWeapon.OnCharged()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Weapons/BlinkWeapon.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnCharged
    path: ../Assets/Objects & Components/Entities/Player/Weapons/BlinkWeapon.cs
    startLine: 92
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnCharged()
    content.vb: Public Overrides Sub OnCharged()
  overridden: Global.Weapon.OnCharged
  overload: Global.BlinkWeapon.OnCharged*
- uid: Global.BlinkWeapon.ResetWeapon
  commentId: M:Global.BlinkWeapon.ResetWeapon
  id: ResetWeapon
  parent: Global.BlinkWeapon
  langs:
  - csharp
  - vb
  name: ResetWeapon()
  nameWithType: BlinkWeapon.ResetWeapon()
  fullName: BlinkWeapon.ResetWeapon()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Weapons/BlinkWeapon.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResetWeapon
    path: ../Assets/Objects & Components/Entities/Player/Weapons/BlinkWeapon.cs
    startLine: 114
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void ResetWeapon()
    content.vb: Public Overrides Sub ResetWeapon()
  overridden: Global.Weapon.ResetWeapon
  overload: Global.BlinkWeapon.ResetWeapon*
- uid: Global.BlinkWeapon.blink
  commentId: M:Global.BlinkWeapon.blink
  id: blink
  parent: Global.BlinkWeapon
  langs:
  - csharp
  - vb
  name: blink()
  nameWithType: BlinkWeapon.blink()
  fullName: BlinkWeapon.blink()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Weapons/BlinkWeapon.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: blink
    path: ../Assets/Objects & Components/Entities/Player/Weapons/BlinkWeapon.cs
    startLine: 124
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void blink()
    content.vb: Public Sub blink()
  overload: Global.BlinkWeapon.blink*
- uid: Global.BlinkWeapon.OnBlinkBoxEnter(IntActor)
  commentId: M:Global.BlinkWeapon.OnBlinkBoxEnter(IntActor)
  id: OnBlinkBoxEnter(IntActor)
  parent: Global.BlinkWeapon
  langs:
  - csharp
  - vb
  name: OnBlinkBoxEnter(IntActor)
  nameWithType: BlinkWeapon.OnBlinkBoxEnter(IntActor)
  fullName: BlinkWeapon.OnBlinkBoxEnter(IntActor)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Weapons/BlinkWeapon.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnBlinkBoxEnter
    path: ../Assets/Objects & Components/Entities/Player/Weapons/BlinkWeapon.cs
    startLine: 197
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void OnBlinkBoxEnter(IntActor actor)
    parameters:
    - id: actor
      type: Global.IntActor
    content.vb: Public Sub OnBlinkBoxEnter(actor As IntActor)
  overload: Global.BlinkWeapon.OnBlinkBoxEnter*
- uid: Global.BlinkWeapon.GetTriggers(System.Collections.Generic.List{IntTrigger})
  commentId: M:Global.BlinkWeapon.GetTriggers(System.Collections.Generic.List{IntTrigger})
  id: GetTriggers(System.Collections.Generic.List{IntTrigger})
  parent: Global.BlinkWeapon
  langs:
  - csharp
  - vb
  name: GetTriggers(List<IntTrigger>)
  nameWithType: BlinkWeapon.GetTriggers(List<IntTrigger>)
  fullName: BlinkWeapon.GetTriggers(System.Collections.Generic.List<IntTrigger>)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Weapons/BlinkWeapon.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetTriggers
    path: ../Assets/Objects & Components/Entities/Player/Weapons/BlinkWeapon.cs
    startLine: 227
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void GetTriggers(List<IntTrigger> triggers)
    parameters:
    - id: triggers
      type: System.Collections.Generic.List{IntTrigger}
    content.vb: Public Overrides Sub GetTriggers(triggers As List(Of IntTrigger))
  overridden: Global.Weapon.GetTriggers(System.Collections.Generic.List{IntTrigger})
  overload: Global.BlinkWeapon.GetTriggers*
  nameWithType.vb: BlinkWeapon.GetTriggers(List(Of IntTrigger))
  fullName.vb: BlinkWeapon.GetTriggers(System.Collections.Generic.List(Of IntTrigger))
  name.vb: GetTriggers(List(Of IntTrigger))
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.Weapon
  commentId: T:Global.Weapon
  name: Weapon
  nameWithType: Weapon
  fullName: Weapon
- uid: Global.Weapon.Active
  commentId: F:Global.Weapon.Active
  parent: Global.Weapon
  name: Active
  nameWithType: Weapon.Active
  fullName: Weapon.Active
- uid: Global.Weapon.Finished
  commentId: F:Global.Weapon.Finished
  parent: Global.Weapon
  name: Finished
  nameWithType: Weapon.Finished
  fullName: Weapon.Finished
- uid: Global.Weapon.Weilder
  commentId: F:Global.Weapon.Weilder
  parent: Global.Weapon
  name: Weilder
  nameWithType: Weapon.Weilder
  fullName: Weapon.Weilder
- uid: Global.Weapon.Loadout
  commentId: F:Global.Weapon.Loadout
  parent: Global.Weapon
  name: Loadout
  nameWithType: Weapon.Loadout
  fullName: Weapon.Loadout
- uid: Global.Weapon.WeaponTarget
  commentId: F:Global.Weapon.WeaponTarget
  parent: Global.Weapon
  name: WeaponTarget
  nameWithType: Weapon.WeaponTarget
  fullName: Weapon.WeaponTarget
- uid: Global.Weapon.SetFinishCallback(Weapon.Callback)
  commentId: M:Global.Weapon.SetFinishCallback(Weapon.Callback)
  parent: Global.Weapon
  name: SetFinishCallback(Callback)
  nameWithType: Weapon.SetFinishCallback(Weapon.Callback)
  fullName: Weapon.SetFinishCallback(Weapon.Callback)
  spec.csharp:
  - uid: Global.Weapon.SetFinishCallback(Weapon.Callback)
    name: SetFinishCallback
  - name: (
  - uid: Global.Weapon.Callback
    name: Callback
  - name: )
  spec.vb:
  - uid: Global.Weapon.SetFinishCallback(Weapon.Callback)
    name: SetFinishCallback
  - name: (
  - uid: Global.Weapon.Callback
    name: Callback
  - name: )
- uid: Global.Weapon.UseWeapon
  commentId: M:Global.Weapon.UseWeapon
  parent: Global.Weapon
  name: UseWeapon()
  nameWithType: Weapon.UseWeapon()
  fullName: Weapon.UseWeapon()
  spec.csharp:
  - uid: Global.Weapon.UseWeapon
    name: UseWeapon
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Weapon.UseWeapon
    name: UseWeapon
  - name: (
  - name: )
- uid: Global.Weapon.OnFirstFrame
  commentId: M:Global.Weapon.OnFirstFrame
  parent: Global.Weapon
  name: OnFirstFrame()
  nameWithType: Weapon.OnFirstFrame()
  fullName: Weapon.OnFirstFrame()
  spec.csharp:
  - uid: Global.Weapon.OnFirstFrame
    name: OnFirstFrame
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Weapon.OnFirstFrame
    name: OnFirstFrame
  - name: (
  - name: )
- uid: Global.Weapon.OnWeaponWeilded(WeaponController.WeaponType)
  commentId: M:Global.Weapon.OnWeaponWeilded(WeaponController.WeaponType)
  parent: Global.Weapon
  name: OnWeaponWeilded(WeaponType)
  nameWithType: Weapon.OnWeaponWeilded(WeaponController.WeaponType)
  fullName: Weapon.OnWeaponWeilded(WeaponController.WeaponType)
  spec.csharp:
  - uid: Global.Weapon.OnWeaponWeilded(WeaponController.WeaponType)
    name: OnWeaponWeilded
  - name: (
  - uid: Global.WeaponController.WeaponType
    name: WeaponType
  - name: )
  spec.vb:
  - uid: Global.Weapon.OnWeaponWeilded(WeaponController.WeaponType)
    name: OnWeaponWeilded
  - name: (
  - uid: Global.WeaponController.WeaponType
    name: WeaponType
  - name: )
- uid: Global.Weapon.OnWeaponSheathed(WeaponController.WeaponType)
  commentId: M:Global.Weapon.OnWeaponSheathed(WeaponController.WeaponType)
  parent: Global.Weapon
  name: OnWeaponSheathed(WeaponType)
  nameWithType: Weapon.OnWeaponSheathed(WeaponController.WeaponType)
  fullName: Weapon.OnWeaponSheathed(WeaponController.WeaponType)
  spec.csharp:
  - uid: Global.Weapon.OnWeaponSheathed(WeaponController.WeaponType)
    name: OnWeaponSheathed
  - name: (
  - uid: Global.WeaponController.WeaponType
    name: WeaponType
  - name: )
  spec.vb:
  - uid: Global.Weapon.OnWeaponSheathed(WeaponController.WeaponType)
    name: OnWeaponSheathed
  - name: (
  - uid: Global.WeaponController.WeaponType
    name: WeaponType
  - name: )
- uid: Global.Weapon.OnDashEnded
  commentId: M:Global.Weapon.OnDashEnded
  parent: Global.Weapon
  name: OnDashEnded()
  nameWithType: Weapon.OnDashEnded()
  fullName: Weapon.OnDashEnded()
  spec.csharp:
  - uid: Global.Weapon.OnDashEnded
    name: OnDashEnded
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Weapon.OnDashEnded
    name: OnDashEnded
  - name: (
  - name: )
- uid: Global.Weapon.OnHitActor(IntActor)
  commentId: M:Global.Weapon.OnHitActor(IntActor)
  parent: Global.Weapon
  name: OnHitActor(IntActor)
  nameWithType: Weapon.OnHitActor(IntActor)
  fullName: Weapon.OnHitActor(IntActor)
  spec.csharp:
  - uid: Global.Weapon.OnHitActor(IntActor)
    name: OnHitActor
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
  spec.vb:
  - uid: Global.Weapon.OnHitActor(IntActor)
    name: OnHitActor
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
- uid: Global.Weapon.OnFinish
  commentId: M:Global.Weapon.OnFinish
  parent: Global.Weapon
  name: OnFinish()
  nameWithType: Weapon.OnFinish()
  fullName: Weapon.OnFinish()
  spec.csharp:
  - uid: Global.Weapon.OnFinish
    name: OnFinish
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Weapon.OnFinish
    name: OnFinish
  - name: (
  - name: )
- uid: Global.Weapon.Cancel
  commentId: M:Global.Weapon.Cancel
  parent: Global.Weapon
  name: Cancel()
  nameWithType: Weapon.Cancel()
  fullName: Weapon.Cancel()
  spec.csharp:
  - uid: Global.Weapon.Cancel
    name: Cancel
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Weapon.Cancel
    name: Cancel
  - name: (
  - name: )
- uid: Global.Weapon.IsActive
  commentId: M:Global.Weapon.IsActive
  parent: Global.Weapon
  name: IsActive()
  nameWithType: Weapon.IsActive()
  fullName: Weapon.IsActive()
  spec.csharp:
  - uid: Global.Weapon.IsActive
    name: IsActive
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Weapon.IsActive
    name: IsActive
  - name: (
  - name: )
- uid: Global.Weapon.IsFinished
  commentId: M:Global.Weapon.IsFinished
  parent: Global.Weapon
  name: IsFinished()
  nameWithType: Weapon.IsFinished()
  fullName: Weapon.IsFinished()
  spec.csharp:
  - uid: Global.Weapon.IsFinished
    name: IsFinished
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Weapon.IsFinished
    name: IsFinished
  - name: (
  - name: )
- uid: Global.Weapon.Finish
  commentId: M:Global.Weapon.Finish
  parent: Global.Weapon
  name: Finish()
  nameWithType: Weapon.Finish()
  fullName: Weapon.Finish()
  spec.csharp:
  - uid: Global.Weapon.Finish
    name: Finish
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Weapon.Finish
    name: Finish
  - name: (
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.BlinkWeapon.#ctor*
  commentId: Overload:Global.BlinkWeapon.#ctor
  name: BlinkWeapon
  nameWithType: BlinkWeapon.BlinkWeapon
  fullName: BlinkWeapon.BlinkWeapon
  nameWithType.vb: BlinkWeapon.New
  fullName.vb: BlinkWeapon.New
  name.vb: New
- uid: Global.Player
  commentId: T:Global.Player
  name: Player
  nameWithType: Player
  fullName: Player
- uid: Global.WeaponController
  commentId: T:Global.WeaponController
  name: WeaponController
  nameWithType: WeaponController
  fullName: WeaponController
- uid: Global.Weapon.UseWeaponInternal
  commentId: M:Global.Weapon.UseWeaponInternal
  parent: Global.Weapon
  name: UseWeaponInternal()
  nameWithType: Weapon.UseWeaponInternal()
  fullName: Weapon.UseWeaponInternal()
  spec.csharp:
  - uid: Global.Weapon.UseWeaponInternal
    name: UseWeaponInternal
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Weapon.UseWeaponInternal
    name: UseWeaponInternal
  - name: (
  - name: )
- uid: Global.BlinkWeapon.UseWeaponInternal*
  commentId: Overload:Global.BlinkWeapon.UseWeaponInternal
  name: UseWeaponInternal
  nameWithType: BlinkWeapon.UseWeaponInternal
  fullName: BlinkWeapon.UseWeaponInternal
- uid: Global.Weapon.Update
  commentId: M:Global.Weapon.Update
  parent: Global.Weapon
  name: Update()
  nameWithType: Weapon.Update()
  fullName: Weapon.Update()
  spec.csharp:
  - uid: Global.Weapon.Update
    name: Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Weapon.Update
    name: Update
  - name: (
  - name: )
- uid: Global.BlinkWeapon.Update*
  commentId: Overload:Global.BlinkWeapon.Update
  name: Update
  nameWithType: BlinkWeapon.Update
  fullName: BlinkWeapon.Update
- uid: Global.Weapon.CanTakeDamage
  commentId: M:Global.Weapon.CanTakeDamage
  parent: Global.Weapon
  name: CanTakeDamage()
  nameWithType: Weapon.CanTakeDamage()
  fullName: Weapon.CanTakeDamage()
  spec.csharp:
  - uid: Global.Weapon.CanTakeDamage
    name: CanTakeDamage
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Weapon.CanTakeDamage
    name: CanTakeDamage
  - name: (
  - name: )
- uid: Global.BlinkWeapon.CanTakeDamage*
  commentId: Overload:Global.BlinkWeapon.CanTakeDamage
  name: CanTakeDamage
  nameWithType: BlinkWeapon.CanTakeDamage
  fullName: BlinkWeapon.CanTakeDamage
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.Weapon.OnCharged
  commentId: M:Global.Weapon.OnCharged
  parent: Global.Weapon
  name: OnCharged()
  nameWithType: Weapon.OnCharged()
  fullName: Weapon.OnCharged()
  spec.csharp:
  - uid: Global.Weapon.OnCharged
    name: OnCharged
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Weapon.OnCharged
    name: OnCharged
  - name: (
  - name: )
- uid: Global.BlinkWeapon.OnCharged*
  commentId: Overload:Global.BlinkWeapon.OnCharged
  name: OnCharged
  nameWithType: BlinkWeapon.OnCharged
  fullName: BlinkWeapon.OnCharged
- uid: Global.Weapon.ResetWeapon
  commentId: M:Global.Weapon.ResetWeapon
  parent: Global.Weapon
  name: ResetWeapon()
  nameWithType: Weapon.ResetWeapon()
  fullName: Weapon.ResetWeapon()
  spec.csharp:
  - uid: Global.Weapon.ResetWeapon
    name: ResetWeapon
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Weapon.ResetWeapon
    name: ResetWeapon
  - name: (
  - name: )
- uid: Global.BlinkWeapon.ResetWeapon*
  commentId: Overload:Global.BlinkWeapon.ResetWeapon
  name: ResetWeapon
  nameWithType: BlinkWeapon.ResetWeapon
  fullName: BlinkWeapon.ResetWeapon
- uid: Global.BlinkWeapon.blink*
  commentId: Overload:Global.BlinkWeapon.blink
  name: blink
  nameWithType: BlinkWeapon.blink
  fullName: BlinkWeapon.blink
- uid: Global.BlinkWeapon.OnBlinkBoxEnter*
  commentId: Overload:Global.BlinkWeapon.OnBlinkBoxEnter
  name: OnBlinkBoxEnter
  nameWithType: BlinkWeapon.OnBlinkBoxEnter
  fullName: BlinkWeapon.OnBlinkBoxEnter
- uid: Global.IntActor
  commentId: T:Global.IntActor
  name: IntActor
  nameWithType: IntActor
  fullName: IntActor
- uid: Global.Weapon.GetTriggers(System.Collections.Generic.List{IntTrigger})
  commentId: M:Global.Weapon.GetTriggers(System.Collections.Generic.List{IntTrigger})
  parent: Global.Weapon
  isExternal: true
  name: GetTriggers(List<IntTrigger>)
  nameWithType: Weapon.GetTriggers(List<IntTrigger>)
  fullName: Weapon.GetTriggers(System.Collections.Generic.List<IntTrigger>)
  nameWithType.vb: Weapon.GetTriggers(List(Of IntTrigger))
  fullName.vb: Weapon.GetTriggers(System.Collections.Generic.List(Of IntTrigger))
  name.vb: GetTriggers(List(Of IntTrigger))
  spec.csharp:
  - uid: Global.Weapon.GetTriggers(System.Collections.Generic.List{IntTrigger})
    name: GetTriggers
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: '>'
  - name: )
  spec.vb:
  - uid: Global.Weapon.GetTriggers(System.Collections.Generic.List{IntTrigger})
    name: GetTriggers
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
  - name: )
- uid: Global.BlinkWeapon.GetTriggers*
  commentId: Overload:Global.BlinkWeapon.GetTriggers
  name: GetTriggers
  nameWithType: BlinkWeapon.GetTriggers
  fullName: BlinkWeapon.GetTriggers
- uid: System.Collections.Generic.List{IntTrigger}
  commentId: T:System.Collections.Generic.List{IntTrigger}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IntTrigger>
  nameWithType: List<IntTrigger>
  fullName: System.Collections.Generic.List<IntTrigger>
  nameWithType.vb: List(Of IntTrigger)
  fullName.vb: System.Collections.Generic.List(Of IntTrigger)
  name.vb: List(Of IntTrigger)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
