### YamlMime:ManagedReference
items:
- uid: Global.DialogueObject
  commentId: T:Global.DialogueObject
  id: DialogueObject
  parent: Global
  children:
  - Global.DialogueObject.DialogueOptions
  langs:
  - csharp
  - vb
  name: DialogueObject
  nameWithType: DialogueObject
  fullName: DialogueObject
  type: Class
  source:
    remote:
      path: Assets/Framework/Gameplay/DialogueObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DialogueObject
    path: ../Assets/Framework/Gameplay/DialogueObject.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [CreateAssetMenu(menuName = "DialogueObject")]

      [Serializable]

      public class DialogueObject : ScriptableObject
    content.vb: >-
      <CreateAssetMenu(menuName:="DialogueObject")>

      <Serializable>

      Public Class DialogueObject Inherits ScriptableObject
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: UnityEngine.CreateAssetMenuAttribute
    ctor: UnityEngine.CreateAssetMenuAttribute.#ctor
    arguments: []
    namedArguments:
    - name: menuName
      type: System.String
      value: DialogueObject
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.DialogueObject.DialogueOptions
  commentId: F:Global.DialogueObject.DialogueOptions
  id: DialogueOptions
  parent: Global.DialogueObject
  langs:
  - csharp
  - vb
  name: DialogueOptions
  nameWithType: DialogueObject.DialogueOptions
  fullName: DialogueObject.DialogueOptions
  type: Field
  source:
    remote:
      path: Assets/Framework/Gameplay/DialogueObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DialogueOptions
    path: ../Assets/Framework/Gameplay/DialogueObject.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public SerializableDictionary<string, DialogueSequence> DialogueOptions
    return:
      type: Global.SerializableDictionary{System.String,DialogueSequence}
    content.vb: >-
      <SerializeField>

      Public DialogueOptions As SerializableDictionary(Of String, DialogueSequence)
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.SerializableDictionary{System.String,DialogueSequence}
  commentId: T:Global.SerializableDictionary{System.String,DialogueSequence}
  definition: Global.SerializableDictionary`2
  name: SerializableDictionary<string, DialogueSequence>
  nameWithType: SerializableDictionary<string, DialogueSequence>
  fullName: SerializableDictionary<string, DialogueSequence>
  nameWithType.vb: SerializableDictionary(Of String, DialogueSequence)
  fullName.vb: SerializableDictionary(Of String, DialogueSequence)
  name.vb: SerializableDictionary(Of String, DialogueSequence)
  spec.csharp:
  - uid: Global.SerializableDictionary`2
    name: SerializableDictionary
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.DialogueSequence
    name: DialogueSequence
  - name: '>'
  spec.vb:
  - uid: Global.SerializableDictionary`2
    name: SerializableDictionary
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.DialogueSequence
    name: DialogueSequence
  - name: )
- uid: Global.SerializableDictionary`2
  commentId: T:Global.SerializableDictionary`2
  name: SerializableDictionary<TKey, TValue>
  nameWithType: SerializableDictionary<TKey, TValue>
  fullName: SerializableDictionary<TKey, TValue>
  nameWithType.vb: SerializableDictionary(Of TKey, TValue)
  fullName.vb: SerializableDictionary(Of TKey, TValue)
  name.vb: SerializableDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: Global.SerializableDictionary`2
    name: SerializableDictionary
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Global.SerializableDictionary`2
    name: SerializableDictionary
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
