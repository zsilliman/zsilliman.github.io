### YamlMime:ManagedReference
items:
- uid: Global.Aura
  commentId: T:Global.Aura
  id: Aura
  parent: Global
  children:
  - Global.Aura.AttemptDischarge
  - Global.Aura.AuraColor
  - Global.Aura.AuraWidth
  - Global.Aura.autoMergeAura
  - Global.Aura.AutoMergeManagedReset
  - Global.Aura.Awake
  - Global.Aura.CustomEnd
  - Global.Aura.CustomStart
  - Global.Aura.DisableAura(System.Single)
  - Global.Aura.DisabledColor
  - Global.Aura.DischargeOption
  - Global.Aura.edgeCollider
  - Global.Aura.EnableAura
  - Global.Aura.EndIndicator
  - Global.Aura.EndIndicator(System.Boolean)
  - Global.Aura.FlashAura(UnityEngine.Vector2,System.Boolean)
  - Global.Aura.FlashColor
  - Global.Aura.FlushColliderChanges
  - Global.Aura.FlushColliderUsingSpline
  - Global.Aura.GetAuraLength
  - Global.Aura.GetAuraScale
  - Global.Aura.GetAutoMergeAura
  - Global.Aura.GetCirclePoints(UnityEngine.Vector2Int,System.Int32,System.Int32,System.Collections.Generic.List{UnityEngine.Vector2Int})
  - Global.Aura.GetEndWidth
  - Global.Aura.GetPositionAlongAuraAtDistance(System.Single)
  - Global.Aura.GetRightAlongAuraAtDistance(System.Single)
  - Global.Aura.GetStartWidth
  - Global.Aura.GetTangentAlongAuraAtDistance(System.Single)
  - Global.Aura.GetWidthCurve
  - Global.Aura.IsAuraActive
  - Global.Aura.IsAutoMergeAura
  - Global.Aura.IsBlackAura
  - Global.Aura.IsClosedLoop
  - Global.Aura.IsContainedInRect(UnityEngine.Rect)
  - Global.Aura.isIndicator
  - Global.Aura.KillsPlayer
  - Global.Aura.lineRenderer
  - Global.Aura.OnColliderChanges
  - Global.Aura.OnDrawGizmosSelected
  - Global.Aura.Overlaps(IntObject,UnityEngine.Vector2Int)
  - Global.Aura.RegisterColliderChangeHook(Aura.AuraCallback)
  - Global.Aura.ResetObject
  - Global.Aura.ScaleAura(System.Single,UnityEngine.Vector2Int)
  - Global.Aura.ScaleAura(UnityEngine.Vector2,UnityEngine.Vector2Int)
  - Global.Aura.SetAuraKillsPlayer(System.Boolean)
  - Global.Aura.SetAuraScale(UnityEngine.Vector2,UnityEngine.Vector2Int)
  - Global.Aura.SetAuraWidth(System.Single)
  - Global.Aura.SetAutoMergeAura(AutoMergeAura)
  - Global.Aura.SetClosedLoop(System.Boolean)
  - Global.Aura.SetCurrentAsUnscaled
  - Global.Aura.SetEndWidth(System.Single)
  - Global.Aura.SetStartWidth(System.Single)
  - Global.Aura.SetToArc(UnityEngine.Vector2Int,UnityEngine.Vector2,UnityEngine.Vector2,System.Single)
  - Global.Aura.SetToCircle(UnityEngine.Vector2Int,System.Int32,System.Single)
  - Global.Aura.SetToFunction(System.Int32,Aura.ShapeFunction)
  - Global.Aura.SetToLine(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  - Global.Aura.SetToPolarFunction(Aura.PolarFunction,UnityEngine.Vector2Int,UnityEngine.Vector2,System.Single)
  - Global.Aura.SetUniformWidth(System.Single)
  - Global.Aura.SetWidthCurve(UnityEngine.AnimationCurve)
  - Global.Aura.spline
  - Global.Aura.Start
  - Global.Aura.StartIndicator(System.Single)
  - Global.Aura.tstep
  - Global.Aura.UseSpline
  - Global.Aura.UseWorldSpace(System.Boolean)
  langs:
  - csharp
  - vb
  name: Aura
  nameWithType: Aura
  fullName: Aura
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Aura
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class Aura : IntTrigger, ISavableObject<IntObjectSaveData>'
    content.vb: Public Class Aura Inherits IntTrigger Implements ISavableObject(Of IntObjectSaveData)
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - Global.IntObject
  - Global.IntTrigger
  derivedClasses:
  - Global.WebThread
  implements:
  - Global.ISavableObject{IntObjectSaveData}
  inheritedMembers:
  - Global.IntTrigger.TriggerCount
  - Global.IntTrigger.triggerStartCallback
  - Global.IntTrigger.triggerEndCallback
  - Global.IntTrigger.SetCustomTriggerStartCallback(IntTrigger.TriggerCallback)
  - Global.IntTrigger.RemoveCustomTriggerStartCallback(IntTrigger.TriggerCallback)
  - Global.IntTrigger.SetCustomTriggerEndCallback(IntTrigger.TriggerCallback)
  - Global.IntTrigger.RemoveCustomTriggerEndCallback(IntTrigger.TriggerCallback)
  - Global.IntTrigger.OnTriggerStart(IntActor)
  - Global.IntTrigger.OnTriggerEnd(IntActor)
  - Global.IntObject.section
  - Global.IntObject.state
  - Global.IntObject.int_collider
  - Global.IntObject.remainder
  - Global.IntObject.StartPosition
  - Global.IntObject.AttachedToPlayer
  - Global.IntObject.IgnoredObjectsMap
  - Global.IntObject.KilledCallback
  - Global.IntObject.Position
  - Global.IntObject.GetStartWorldPosition
  - Global.IntObject.collider_type
  - Global.IntObject.MarkedForKill
  - Global.IntObject.ObjectID
  - Global.IntObject.DestroyOnKill
  - Global.IntObject.RespawnBehavior
  - Global.IntObject.Status
  - Global.IntObject.InitialStatus
  - Global.IntObject.SaveObject
  - Global.IntObject.IsInSetPiece
  - Global.IntObject.Init
  - Global.IntObject.FindIntColliderState(System.Int32)
  - Global.IntObject.GetLocalGameStates
  - Global.IntObject.RegisterSelf
  - Global.IntObject.UnregisterSelf
  - Global.IntObject.RegisterKilledCallback(IntObject.Action)
  - Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  - Global.IntObject.Update
  - Global.IntObject.SetStatus(ObjectStatus)
  - Global.IntObject.OnKill(System.Boolean)
  - Global.IntObject.Kill
  - Global.IntObject.Kill(System.Boolean)
  - Global.IntObject.Kill(System.Single)
  - Global.IntObject.Kill(System.Boolean,System.Single)
  - Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  - Global.IntObject.SleepObject
  - Global.IntObject.OptimizeSleepObject
  - Global.IntObject.WakeObject
  - Global.IntObject.EnableObject
  - Global.IntObject.DisableObject
  - Global.IntObject.RespawnObject
  - Global.IntObject.RecursiveSetCollidable(System.Boolean)
  - Global.IntObject.SetColliderState(IntColliderState)
  - Global.IntObject.Translate(UnityEngine.Vector2Int)
  - Global.IntObject.Translate(UnityEngine.Vector2)
  - Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  - Global.IntObject.SetCollidable(System.Boolean)
  - Global.IntObject.GetCollidable
  - Global.IntObject.GetCollider
  - Global.IntObject.GetColliderState
  - Global.IntObject.Overlaps(IntObject)
  - Global.IntObject.RayCast(IntRay)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  - Global.IntObject.OnDrawGizmos
  - Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  - Global.IntObject.GetObjectSaveData
  - Global.IntObject.OnPostLoadSaveFile
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.Aura.IsBlackAura
  commentId: F:Global.Aura.IsBlackAura
  id: IsBlackAura
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: IsBlackAura
  nameWithType: Aura.IsBlackAura
  fullName: Aura.IsBlackAura
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsBlackAura
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 21
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsBlackAura
    return:
      type: System.Boolean
    content.vb: Public IsBlackAura As Boolean
- uid: Global.Aura.AuraWidth
  commentId: F:Global.Aura.AuraWidth
  id: AuraWidth
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: AuraWidth
  nameWithType: Aura.AuraWidth
  fullName: Aura.AuraWidth
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AuraWidth
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float AuraWidth
    return:
      type: System.Single
    content.vb: Public AuraWidth As Single
- uid: Global.Aura.edgeCollider
  commentId: F:Global.Aura.edgeCollider
  id: edgeCollider
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: edgeCollider
  nameWithType: Aura.edgeCollider
  fullName: Aura.edgeCollider
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: edgeCollider
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public EdgeIntCollider edgeCollider
    return:
      type: Global.EdgeIntCollider
    content.vb: Public edgeCollider As EdgeIntCollider
- uid: Global.Aura.lineRenderer
  commentId: F:Global.Aura.lineRenderer
  id: lineRenderer
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: lineRenderer
  nameWithType: Aura.lineRenderer
  fullName: Aura.lineRenderer
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: lineRenderer
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public LineRenderer lineRenderer
    return:
      type: UnityEngine.LineRenderer
    content.vb: Public lineRenderer As LineRenderer
- uid: Global.Aura.tstep
  commentId: F:Global.Aura.tstep
  id: tstep
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: tstep
  nameWithType: Aura.tstep
  fullName: Aura.tstep
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: tstep
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float tstep
    return:
      type: System.Single
    content.vb: Public tstep As Single
- uid: Global.Aura.UseSpline
  commentId: F:Global.Aura.UseSpline
  id: UseSpline
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: UseSpline
  nameWithType: Aura.UseSpline
  fullName: Aura.UseSpline
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UseSpline
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 26
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool UseSpline
    return:
      type: System.Boolean
    content.vb: Public UseSpline As Boolean
- uid: Global.Aura.KillsPlayer
  commentId: F:Global.Aura.KillsPlayer
  id: KillsPlayer
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: KillsPlayer
  nameWithType: Aura.KillsPlayer
  fullName: Aura.KillsPlayer
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: KillsPlayer
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool KillsPlayer
    return:
      type: System.Boolean
    content.vb: Public KillsPlayer As Boolean
- uid: Global.Aura.DischargeOption
  commentId: F:Global.Aura.DischargeOption
  id: DischargeOption
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: DischargeOption
  nameWithType: Aura.DischargeOption
  fullName: Aura.DischargeOption
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DischargeOption
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 28
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Aura.AuraDischargeOption DischargeOption
    return:
      type: Global.Aura.AuraDischargeOption
    content.vb: Public DischargeOption As Aura.AuraDischargeOption
- uid: Global.Aura.OnColliderChanges
  commentId: F:Global.Aura.OnColliderChanges
  id: OnColliderChanges
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: OnColliderChanges
  nameWithType: Aura.OnColliderChanges
  fullName: Aura.OnColliderChanges
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnColliderChanges
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 30
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Aura.AuraCallback OnColliderChanges
    return:
      type: Global.Aura.AuraCallback
    content.vb: Public OnColliderChanges As Aura.AuraCallback
- uid: Global.Aura.CustomStart
  commentId: F:Global.Aura.CustomStart
  id: CustomStart
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: CustomStart
  nameWithType: Aura.CustomStart
  fullName: Aura.CustomStart
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CustomStart
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 35
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public CatmullRomSpline.CustomEndpoint CustomStart
    return:
      type: Global.CatmullRomSpline.CustomEndpoint
    content.vb: Public CustomStart As CatmullRomSpline.CustomEndpoint
- uid: Global.Aura.CustomEnd
  commentId: F:Global.Aura.CustomEnd
  id: CustomEnd
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: CustomEnd
  nameWithType: Aura.CustomEnd
  fullName: Aura.CustomEnd
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CustomEnd
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 35
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public CatmullRomSpline.CustomEndpoint CustomEnd
    return:
      type: Global.CatmullRomSpline.CustomEndpoint
    content.vb: Public CustomEnd As CatmullRomSpline.CustomEndpoint
- uid: Global.Aura.autoMergeAura
  commentId: F:Global.Aura.autoMergeAura
  id: autoMergeAura
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: autoMergeAura
  nameWithType: Aura.autoMergeAura
  fullName: Aura.autoMergeAura
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: autoMergeAura
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 37
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected AutoMergeAura autoMergeAura
    return:
      type: Global.AutoMergeAura
    content.vb: Protected autoMergeAura As AutoMergeAura
- uid: Global.Aura.AuraColor
  commentId: F:Global.Aura.AuraColor
  id: AuraColor
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: AuraColor
  nameWithType: Aura.AuraColor
  fullName: Aura.AuraColor
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AuraColor
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 41
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [HideInInspector]

      public Color AuraColor
    return:
      type: UnityEngine.Color
    content.vb: >-
      <HideInInspector>

      Public AuraColor As Color
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.Aura.FlashColor
  commentId: F:Global.Aura.FlashColor
  id: FlashColor
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: FlashColor
  nameWithType: Aura.FlashColor
  fullName: Aura.FlashColor
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: FlashColor
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 41
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [HideInInspector]

      public Color FlashColor
    return:
      type: UnityEngine.Color
    content.vb: >-
      <HideInInspector>

      Public FlashColor As Color
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.Aura.DisabledColor
  commentId: F:Global.Aura.DisabledColor
  id: DisabledColor
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: DisabledColor
  nameWithType: Aura.DisabledColor
  fullName: Aura.DisabledColor
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DisabledColor
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 41
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [HideInInspector]

      public Color DisabledColor
    return:
      type: UnityEngine.Color
    content.vb: >-
      <HideInInspector>

      Public DisabledColor As Color
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.Aura.spline
  commentId: F:Global.Aura.spline
  id: spline
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: spline
  nameWithType: Aura.spline
  fullName: Aura.spline
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: spline
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 42
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public CatmullRomSpline spline
    return:
      type: Global.CatmullRomSpline
    content.vb: Public spline As CatmullRomSpline
- uid: Global.Aura.isIndicator
  commentId: P:Global.Aura.isIndicator
  id: isIndicator
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: isIndicator
  nameWithType: Aura.isIndicator
  fullName: Aura.isIndicator
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: isIndicator
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 43
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool isIndicator { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isIndicator As Boolean
  overload: Global.Aura.isIndicator*
- uid: Global.Aura.Start
  commentId: M:Global.Aura.Start
  id: Start
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: Aura.Start()
  fullName: Aura.Start()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Start
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 46
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Start()
    content.vb: Protected Sub Start()
  overload: Global.Aura.Start*
- uid: Global.Aura.Awake
  commentId: M:Global.Aura.Awake
  id: Awake
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: Awake()
  nameWithType: Aura.Awake()
  fullName: Aura.Awake()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Awake
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 61
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Awake()
    content.vb: Protected Sub Awake()
  overload: Global.Aura.Awake*
- uid: Global.Aura.ResetObject
  commentId: M:Global.Aura.ResetObject
  id: ResetObject
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: ResetObject()
  nameWithType: Aura.ResetObject()
  fullName: Aura.ResetObject()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResetObject
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 69
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void ResetObject()
    content.vb: Public Overrides Sub ResetObject()
  overridden: Global.IntObject.ResetObject
  overload: Global.Aura.ResetObject*
- uid: Global.Aura.AutoMergeManagedReset
  commentId: M:Global.Aura.AutoMergeManagedReset
  id: AutoMergeManagedReset
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: AutoMergeManagedReset()
  nameWithType: Aura.AutoMergeManagedReset()
  fullName: Aura.AutoMergeManagedReset()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AutoMergeManagedReset
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 71
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void AutoMergeManagedReset()
    content.vb: Public Sub AutoMergeManagedReset()
  overload: Global.Aura.AutoMergeManagedReset*
- uid: Global.Aura.Overlaps(IntObject,UnityEngine.Vector2Int)
  commentId: M:Global.Aura.Overlaps(IntObject,UnityEngine.Vector2Int)
  id: Overlaps(IntObject,UnityEngine.Vector2Int)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: Overlaps(IntObject, Vector2Int)
  nameWithType: Aura.Overlaps(IntObject, Vector2Int)
  fullName: Aura.Overlaps(IntObject, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Overlaps
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 84
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override bool Overlaps(IntObject other, Vector2Int dPos)
    parameters:
    - id: other
      type: Global.IntObject
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Overlaps(other As IntObject, dPos As Vector2Int) As Boolean
  overridden: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  overload: Global.Aura.Overlaps*
- uid: Global.Aura.IsContainedInRect(UnityEngine.Rect)
  commentId: M:Global.Aura.IsContainedInRect(UnityEngine.Rect)
  id: IsContainedInRect(UnityEngine.Rect)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: IsContainedInRect(Rect)
  nameWithType: Aura.IsContainedInRect(Rect)
  fullName: Aura.IsContainedInRect(UnityEngine.Rect)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsContainedInRect
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 91
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override bool IsContainedInRect(Rect rect)
    parameters:
    - id: rect
      type: UnityEngine.Rect
    return:
      type: System.Boolean
    content.vb: Public Overrides Function IsContainedInRect(rect As Rect) As Boolean
  overridden: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  overload: Global.Aura.IsContainedInRect*
- uid: Global.Aura.StartIndicator(System.Single)
  commentId: M:Global.Aura.StartIndicator(System.Single)
  id: StartIndicator(System.Single)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: StartIndicator(float)
  nameWithType: Aura.StartIndicator(float)
  fullName: Aura.StartIndicator(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: StartIndicator
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 96
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void StartIndicator(float duration)
    parameters:
    - id: duration
      type: System.Single
    content.vb: Public Sub StartIndicator(duration As Single)
  overload: Global.Aura.StartIndicator*
  nameWithType.vb: Aura.StartIndicator(Single)
  fullName.vb: Aura.StartIndicator(Single)
  name.vb: StartIndicator(Single)
- uid: Global.Aura.EndIndicator
  commentId: M:Global.Aura.EndIndicator
  id: EndIndicator
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: EndIndicator()
  nameWithType: Aura.EndIndicator()
  fullName: Aura.EndIndicator()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EndIndicator
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 113
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void EndIndicator()
    content.vb: Public Sub EndIndicator()
  overload: Global.Aura.EndIndicator*
- uid: Global.Aura.EndIndicator(System.Boolean)
  commentId: M:Global.Aura.EndIndicator(System.Boolean)
  id: EndIndicator(System.Boolean)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: EndIndicator(bool)
  nameWithType: Aura.EndIndicator(bool)
  fullName: Aura.EndIndicator(bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EndIndicator
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 118
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void EndIndicator(bool flash)
    parameters:
    - id: flash
      type: System.Boolean
    content.vb: Public Sub EndIndicator(flash As Boolean)
  overload: Global.Aura.EndIndicator*
  nameWithType.vb: Aura.EndIndicator(Boolean)
  fullName.vb: Aura.EndIndicator(Boolean)
  name.vb: EndIndicator(Boolean)
- uid: Global.Aura.RegisterColliderChangeHook(Aura.AuraCallback)
  commentId: M:Global.Aura.RegisterColliderChangeHook(Aura.AuraCallback)
  id: RegisterColliderChangeHook(Aura.AuraCallback)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: RegisterColliderChangeHook(AuraCallback)
  nameWithType: Aura.RegisterColliderChangeHook(Aura.AuraCallback)
  fullName: Aura.RegisterColliderChangeHook(Aura.AuraCallback)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RegisterColliderChangeHook
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 128
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void RegisterColliderChangeHook(Aura.AuraCallback callback)
    parameters:
    - id: callback
      type: Global.Aura.AuraCallback
    content.vb: Public Sub RegisterColliderChangeHook(callback As Aura.AuraCallback)
  overload: Global.Aura.RegisterColliderChangeHook*
- uid: Global.Aura.FlashAura(UnityEngine.Vector2,System.Boolean)
  commentId: M:Global.Aura.FlashAura(UnityEngine.Vector2,System.Boolean)
  id: FlashAura(UnityEngine.Vector2,System.Boolean)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: FlashAura(Vector2, bool)
  nameWithType: Aura.FlashAura(Vector2, bool)
  fullName: Aura.FlashAura(UnityEngine.Vector2, bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: FlashAura
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 136
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nAnimate the aura when the player passes through it\n"
  example: []
  syntax:
    content: public void FlashAura(Vector2 WorldPosition, bool ignoreWorldPos = false)
    parameters:
    - id: WorldPosition
      type: UnityEngine.Vector2
    - id: ignoreWorldPos
      type: System.Boolean
    content.vb: Public Sub FlashAura(WorldPosition As Vector2, ignoreWorldPos As Boolean = False)
  overload: Global.Aura.FlashAura*
  nameWithType.vb: Aura.FlashAura(Vector2, Boolean)
  fullName.vb: Aura.FlashAura(UnityEngine.Vector2, Boolean)
  name.vb: FlashAura(Vector2, Boolean)
- uid: Global.Aura.FlushColliderChanges
  commentId: M:Global.Aura.FlushColliderChanges
  id: FlushColliderChanges
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: FlushColliderChanges()
  nameWithType: Aura.FlushColliderChanges()
  fullName: Aura.FlushColliderChanges()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: FlushColliderChanges
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 159
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nUpdate all the positions of the edge collider to the line renderer\n"
  example: []
  syntax:
    content: public void FlushColliderChanges()
    content.vb: Public Sub FlushColliderChanges()
  overload: Global.Aura.FlushColliderChanges*
- uid: Global.Aura.AttemptDischarge
  commentId: M:Global.Aura.AttemptDischarge
  id: AttemptDischarge
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: AttemptDischarge()
  nameWithType: Aura.AttemptDischarge()
  fullName: Aura.AttemptDischarge()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AttemptDischarge
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 174
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void AttemptDischarge()
    content.vb: Public Sub AttemptDischarge()
  overload: Global.Aura.AttemptDischarge*
- uid: Global.Aura.FlushColliderUsingSpline
  commentId: M:Global.Aura.FlushColliderUsingSpline
  id: FlushColliderUsingSpline
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: FlushColliderUsingSpline()
  nameWithType: Aura.FlushColliderUsingSpline()
  fullName: Aura.FlushColliderUsingSpline()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: FlushColliderUsingSpline
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 185
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nUpdate all the positions of the edge collider to the line renderer using a CatmullRomSpline\n"
  example: []
  syntax:
    content: public void FlushColliderUsingSpline()
    content.vb: Public Sub FlushColliderUsingSpline()
  overload: Global.Aura.FlushColliderUsingSpline*
- uid: Global.Aura.GetPositionAlongAuraAtDistance(System.Single)
  commentId: M:Global.Aura.GetPositionAlongAuraAtDistance(System.Single)
  id: GetPositionAlongAuraAtDistance(System.Single)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: GetPositionAlongAuraAtDistance(float)
  nameWithType: Aura.GetPositionAlongAuraAtDistance(float)
  fullName: Aura.GetPositionAlongAuraAtDistance(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetPositionAlongAuraAtDistance
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 195
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2 GetPositionAlongAuraAtDistance(float worldDistance)
    parameters:
    - id: worldDistance
      type: System.Single
    return:
      type: UnityEngine.Vector2
    content.vb: Public Function GetPositionAlongAuraAtDistance(worldDistance As Single) As Vector2
  overload: Global.Aura.GetPositionAlongAuraAtDistance*
  nameWithType.vb: Aura.GetPositionAlongAuraAtDistance(Single)
  fullName.vb: Aura.GetPositionAlongAuraAtDistance(Single)
  name.vb: GetPositionAlongAuraAtDistance(Single)
- uid: Global.Aura.GetTangentAlongAuraAtDistance(System.Single)
  commentId: M:Global.Aura.GetTangentAlongAuraAtDistance(System.Single)
  id: GetTangentAlongAuraAtDistance(System.Single)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: GetTangentAlongAuraAtDistance(float)
  nameWithType: Aura.GetTangentAlongAuraAtDistance(float)
  fullName: Aura.GetTangentAlongAuraAtDistance(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetTangentAlongAuraAtDistance
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 217
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2 GetTangentAlongAuraAtDistance(float worldDistance)
    parameters:
    - id: worldDistance
      type: System.Single
    return:
      type: UnityEngine.Vector2
    content.vb: Public Function GetTangentAlongAuraAtDistance(worldDistance As Single) As Vector2
  overload: Global.Aura.GetTangentAlongAuraAtDistance*
  nameWithType.vb: Aura.GetTangentAlongAuraAtDistance(Single)
  fullName.vb: Aura.GetTangentAlongAuraAtDistance(Single)
  name.vb: GetTangentAlongAuraAtDistance(Single)
- uid: Global.Aura.GetRightAlongAuraAtDistance(System.Single)
  commentId: M:Global.Aura.GetRightAlongAuraAtDistance(System.Single)
  id: GetRightAlongAuraAtDistance(System.Single)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: GetRightAlongAuraAtDistance(float)
  nameWithType: Aura.GetRightAlongAuraAtDistance(float)
  fullName: Aura.GetRightAlongAuraAtDistance(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetRightAlongAuraAtDistance
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 237
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2 GetRightAlongAuraAtDistance(float worldDistance)
    parameters:
    - id: worldDistance
      type: System.Single
    return:
      type: UnityEngine.Vector2
    content.vb: Public Function GetRightAlongAuraAtDistance(worldDistance As Single) As Vector2
  overload: Global.Aura.GetRightAlongAuraAtDistance*
  nameWithType.vb: Aura.GetRightAlongAuraAtDistance(Single)
  fullName.vb: Aura.GetRightAlongAuraAtDistance(Single)
  name.vb: GetRightAlongAuraAtDistance(Single)
- uid: Global.Aura.GetAuraLength
  commentId: M:Global.Aura.GetAuraLength
  id: GetAuraLength
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: GetAuraLength()
  nameWithType: Aura.GetAuraLength()
  fullName: Aura.GetAuraLength()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetAuraLength
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 242
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float GetAuraLength()
    return:
      type: System.Single
    content.vb: Public Function GetAuraLength() As Single
  overload: Global.Aura.GetAuraLength*
- uid: Global.Aura.SetToCircle(UnityEngine.Vector2Int,System.Int32,System.Single)
  commentId: M:Global.Aura.SetToCircle(UnityEngine.Vector2Int,System.Int32,System.Single)
  id: SetToCircle(UnityEngine.Vector2Int,System.Int32,System.Single)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: SetToCircle(Vector2Int, int, float)
  nameWithType: Aura.SetToCircle(Vector2Int, int, float)
  fullName: Aura.SetToCircle(UnityEngine.Vector2Int, int, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetToCircle
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 259
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nSet the edge collider and linerenderer to a circle\n"
  example: []
  syntax:
    content: public void SetToCircle(Vector2Int center, int radius, float SegmentsPerRadian)
    parameters:
    - id: center
      type: UnityEngine.Vector2Int
      description: Center point of the circle in local space
    - id: radius
      type: System.Int32
      description: radius of the circle
    - id: SegmentsPerRadian
      type: System.Single
      description: Number of segments per radian (precision of circle)
    content.vb: Public Sub SetToCircle(center As Vector2Int, radius As Integer, SegmentsPerRadian As Single)
  overload: Global.Aura.SetToCircle*
  nameWithType.vb: Aura.SetToCircle(Vector2Int, Integer, Single)
  fullName.vb: Aura.SetToCircle(UnityEngine.Vector2Int, Integer, Single)
  name.vb: SetToCircle(Vector2Int, Integer, Single)
- uid: Global.Aura.GetCirclePoints(UnityEngine.Vector2Int,System.Int32,System.Int32,System.Collections.Generic.List{UnityEngine.Vector2Int})
  commentId: M:Global.Aura.GetCirclePoints(UnityEngine.Vector2Int,System.Int32,System.Int32,System.Collections.Generic.List{UnityEngine.Vector2Int})
  id: GetCirclePoints(UnityEngine.Vector2Int,System.Int32,System.Int32,System.Collections.Generic.List{UnityEngine.Vector2Int})
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: GetCirclePoints(Vector2Int, int, int, List<Vector2Int>)
  nameWithType: Aura.GetCirclePoints(Vector2Int, int, int, List<Vector2Int>)
  fullName: Aura.GetCirclePoints(UnityEngine.Vector2Int, int, int, System.Collections.Generic.List<UnityEngine.Vector2Int>)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetCirclePoints
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 286
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void GetCirclePoints(Vector2Int center, int radius, int pointCount, List<Vector2Int> points)
    parameters:
    - id: center
      type: UnityEngine.Vector2Int
    - id: radius
      type: System.Int32
    - id: pointCount
      type: System.Int32
    - id: points
      type: System.Collections.Generic.List{UnityEngine.Vector2Int}
    content.vb: Public Sub GetCirclePoints(center As Vector2Int, radius As Integer, pointCount As Integer, points As List(Of Vector2Int))
  overload: Global.Aura.GetCirclePoints*
  nameWithType.vb: Aura.GetCirclePoints(Vector2Int, Integer, Integer, List(Of Vector2Int))
  fullName.vb: Aura.GetCirclePoints(UnityEngine.Vector2Int, Integer, Integer, System.Collections.Generic.List(Of UnityEngine.Vector2Int))
  name.vb: GetCirclePoints(Vector2Int, Integer, Integer, List(Of Vector2Int))
- uid: Global.Aura.SetToArc(UnityEngine.Vector2Int,UnityEngine.Vector2,UnityEngine.Vector2,System.Single)
  commentId: M:Global.Aura.SetToArc(UnityEngine.Vector2Int,UnityEngine.Vector2,UnityEngine.Vector2,System.Single)
  id: SetToArc(UnityEngine.Vector2Int,UnityEngine.Vector2,UnityEngine.Vector2,System.Single)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: SetToArc(Vector2Int, Vector2, Vector2, float)
  nameWithType: Aura.SetToArc(Vector2Int, Vector2, Vector2, float)
  fullName: Aura.SetToArc(UnityEngine.Vector2Int, UnityEngine.Vector2, UnityEngine.Vector2, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetToArc
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 307
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nSet the edge collider and linerenderer to an arc. Note that the arc can have a varying radius over time.\n"
  example: []
  syntax:
    content: public void SetToArc(Vector2Int center, Vector2 PolarStart, Vector2 PolarEnd, float SegmentsPerRadian)
    parameters:
    - id: center
      type: UnityEngine.Vector2Int
      description: Center point of the circle in local space
    - id: PolarStart
      type: UnityEngine.Vector2
      description: Polar coordinates of starting point. x=radius y=theta(degrees)
    - id: PolarEnd
      type: UnityEngine.Vector2
      description: Polar coordinates of ending point. x=radius y=theta(degrees)
    - id: SegmentsPerRadian
      type: System.Single
      description: Number of segments per radian (precision of circle)
    content.vb: Public Sub SetToArc(center As Vector2Int, PolarStart As Vector2, PolarEnd As Vector2, SegmentsPerRadian As Single)
  overload: Global.Aura.SetToArc*
  nameWithType.vb: Aura.SetToArc(Vector2Int, Vector2, Vector2, Single)
  fullName.vb: Aura.SetToArc(UnityEngine.Vector2Int, UnityEngine.Vector2, UnityEngine.Vector2, Single)
  name.vb: SetToArc(Vector2Int, Vector2, Vector2, Single)
- uid: Global.Aura.SetToPolarFunction(Aura.PolarFunction,UnityEngine.Vector2Int,UnityEngine.Vector2,System.Single)
  commentId: M:Global.Aura.SetToPolarFunction(Aura.PolarFunction,UnityEngine.Vector2Int,UnityEngine.Vector2,System.Single)
  id: SetToPolarFunction(Aura.PolarFunction,UnityEngine.Vector2Int,UnityEngine.Vector2,System.Single)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: SetToPolarFunction(PolarFunction, Vector2Int, Vector2, float)
  nameWithType: Aura.SetToPolarFunction(Aura.PolarFunction, Vector2Int, Vector2, float)
  fullName: Aura.SetToPolarFunction(Aura.PolarFunction, UnityEngine.Vector2Int, UnityEngine.Vector2, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetToPolarFunction
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 359
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nDraws an aura given a polar function\n"
  example: []
  syntax:
    content: public void SetToPolarFunction(Aura.PolarFunction func, Vector2Int center, Vector2 thetaRange, float SegmentsPerRadian)
    parameters:
    - id: func
      type: Global.Aura.PolarFunction
      description: Polar function
    - id: center
      type: UnityEngine.Vector2Int
      description: Location of origin point
    - id: thetaRange
      type: UnityEngine.Vector2
      description: Range of theta values [start,end] to evaluate (degrees). Set to [0,0] if using a full function.
    - id: SegmentsPerRadian
      type: System.Single
      description: ''
    content.vb: Public Sub SetToPolarFunction(func As Aura.PolarFunction, center As Vector2Int, thetaRange As Vector2, SegmentsPerRadian As Single)
  overload: Global.Aura.SetToPolarFunction*
  nameWithType.vb: Aura.SetToPolarFunction(Aura.PolarFunction, Vector2Int, Vector2, Single)
  fullName.vb: Aura.SetToPolarFunction(Aura.PolarFunction, UnityEngine.Vector2Int, UnityEngine.Vector2, Single)
  name.vb: SetToPolarFunction(PolarFunction, Vector2Int, Vector2, Single)
- uid: Global.Aura.SetToLine(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  commentId: M:Global.Aura.SetToLine(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  id: SetToLine(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: SetToLine(Vector2Int, Vector2Int)
  nameWithType: Aura.SetToLine(Vector2Int, Vector2Int)
  fullName: Aura.SetToLine(UnityEngine.Vector2Int, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetToLine
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 410
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetToLine(Vector2Int start, Vector2Int end)
    parameters:
    - id: start
      type: UnityEngine.Vector2Int
    - id: end
      type: UnityEngine.Vector2Int
    content.vb: Public Sub SetToLine(start As Vector2Int, [end] As Vector2Int)
  overload: Global.Aura.SetToLine*
- uid: Global.Aura.SetToFunction(System.Int32,Aura.ShapeFunction)
  commentId: M:Global.Aura.SetToFunction(System.Int32,Aura.ShapeFunction)
  id: SetToFunction(System.Int32,Aura.ShapeFunction)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: SetToFunction(int, ShapeFunction)
  nameWithType: Aura.SetToFunction(int, Aura.ShapeFunction)
  fullName: Aura.SetToFunction(int, Aura.ShapeFunction)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetToFunction
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 426
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetToFunction(int sampleCount, Aura.ShapeFunction shapeFunction)
    parameters:
    - id: sampleCount
      type: System.Int32
    - id: shapeFunction
      type: Global.Aura.ShapeFunction
    content.vb: Public Sub SetToFunction(sampleCount As Integer, shapeFunction As Aura.ShapeFunction)
  overload: Global.Aura.SetToFunction*
  nameWithType.vb: Aura.SetToFunction(Integer, Aura.ShapeFunction)
  fullName.vb: Aura.SetToFunction(Integer, Aura.ShapeFunction)
  name.vb: SetToFunction(Integer, ShapeFunction)
- uid: Global.Aura.SetCurrentAsUnscaled
  commentId: M:Global.Aura.SetCurrentAsUnscaled
  id: SetCurrentAsUnscaled
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: SetCurrentAsUnscaled()
  nameWithType: Aura.SetCurrentAsUnscaled()
  fullName: Aura.SetCurrentAsUnscaled()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetCurrentAsUnscaled
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 442
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetCurrentAsUnscaled()
    content.vb: Public Sub SetCurrentAsUnscaled()
  overload: Global.Aura.SetCurrentAsUnscaled*
- uid: Global.Aura.SetAuraKillsPlayer(System.Boolean)
  commentId: M:Global.Aura.SetAuraKillsPlayer(System.Boolean)
  id: SetAuraKillsPlayer(System.Boolean)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: SetAuraKillsPlayer(bool)
  nameWithType: Aura.SetAuraKillsPlayer(bool)
  fullName: Aura.SetAuraKillsPlayer(bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetAuraKillsPlayer
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 448
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetAuraKillsPlayer(bool kills)
    parameters:
    - id: kills
      type: System.Boolean
    content.vb: Public Sub SetAuraKillsPlayer(kills As Boolean)
  overload: Global.Aura.SetAuraKillsPlayer*
  nameWithType.vb: Aura.SetAuraKillsPlayer(Boolean)
  fullName.vb: Aura.SetAuraKillsPlayer(Boolean)
  name.vb: SetAuraKillsPlayer(Boolean)
- uid: Global.Aura.SetClosedLoop(System.Boolean)
  commentId: M:Global.Aura.SetClosedLoop(System.Boolean)
  id: SetClosedLoop(System.Boolean)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: SetClosedLoop(bool)
  nameWithType: Aura.SetClosedLoop(bool)
  fullName: Aura.SetClosedLoop(bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetClosedLoop
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 466
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetClosedLoop(bool closed)
    parameters:
    - id: closed
      type: System.Boolean
    content.vb: Public Sub SetClosedLoop(closed As Boolean)
  overload: Global.Aura.SetClosedLoop*
  nameWithType.vb: Aura.SetClosedLoop(Boolean)
  fullName.vb: Aura.SetClosedLoop(Boolean)
  name.vb: SetClosedLoop(Boolean)
- uid: Global.Aura.IsClosedLoop
  commentId: M:Global.Aura.IsClosedLoop
  id: IsClosedLoop
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: IsClosedLoop()
  nameWithType: Aura.IsClosedLoop()
  fullName: Aura.IsClosedLoop()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsClosedLoop
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 472
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsClosedLoop()
    return:
      type: System.Boolean
    content.vb: Public Function IsClosedLoop() As Boolean
  overload: Global.Aura.IsClosedLoop*
- uid: Global.Aura.SetWidthCurve(UnityEngine.AnimationCurve)
  commentId: M:Global.Aura.SetWidthCurve(UnityEngine.AnimationCurve)
  id: SetWidthCurve(UnityEngine.AnimationCurve)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: SetWidthCurve(AnimationCurve)
  nameWithType: Aura.SetWidthCurve(AnimationCurve)
  fullName: Aura.SetWidthCurve(UnityEngine.AnimationCurve)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetWidthCurve
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 477
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetWidthCurve(AnimationCurve widthCurve)
    parameters:
    - id: widthCurve
      type: UnityEngine.AnimationCurve
    content.vb: Public Sub SetWidthCurve(widthCurve As AnimationCurve)
  overload: Global.Aura.SetWidthCurve*
- uid: Global.Aura.SetUniformWidth(System.Single)
  commentId: M:Global.Aura.SetUniformWidth(System.Single)
  id: SetUniformWidth(System.Single)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: SetUniformWidth(float)
  nameWithType: Aura.SetUniformWidth(float)
  fullName: Aura.SetUniformWidth(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetUniformWidth
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 482
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetUniformWidth(float uniformWidth)
    parameters:
    - id: uniformWidth
      type: System.Single
    content.vb: Public Sub SetUniformWidth(uniformWidth As Single)
  overload: Global.Aura.SetUniformWidth*
  nameWithType.vb: Aura.SetUniformWidth(Single)
  fullName.vb: Aura.SetUniformWidth(Single)
  name.vb: SetUniformWidth(Single)
- uid: Global.Aura.SetStartWidth(System.Single)
  commentId: M:Global.Aura.SetStartWidth(System.Single)
  id: SetStartWidth(System.Single)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: SetStartWidth(float)
  nameWithType: Aura.SetStartWidth(float)
  fullName: Aura.SetStartWidth(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetStartWidth
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 488
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetStartWidth(float startWidth)
    parameters:
    - id: startWidth
      type: System.Single
    content.vb: Public Sub SetStartWidth(startWidth As Single)
  overload: Global.Aura.SetStartWidth*
  nameWithType.vb: Aura.SetStartWidth(Single)
  fullName.vb: Aura.SetStartWidth(Single)
  name.vb: SetStartWidth(Single)
- uid: Global.Aura.SetEndWidth(System.Single)
  commentId: M:Global.Aura.SetEndWidth(System.Single)
  id: SetEndWidth(System.Single)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: SetEndWidth(float)
  nameWithType: Aura.SetEndWidth(float)
  fullName: Aura.SetEndWidth(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetEndWidth
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 493
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetEndWidth(float endWidth)
    parameters:
    - id: endWidth
      type: System.Single
    content.vb: Public Sub SetEndWidth(endWidth As Single)
  overload: Global.Aura.SetEndWidth*
  nameWithType.vb: Aura.SetEndWidth(Single)
  fullName.vb: Aura.SetEndWidth(Single)
  name.vb: SetEndWidth(Single)
- uid: Global.Aura.GetWidthCurve
  commentId: M:Global.Aura.GetWidthCurve
  id: GetWidthCurve
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: GetWidthCurve()
  nameWithType: Aura.GetWidthCurve()
  fullName: Aura.GetWidthCurve()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetWidthCurve
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 498
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public AnimationCurve GetWidthCurve()
    return:
      type: UnityEngine.AnimationCurve
    content.vb: Public Function GetWidthCurve() As AnimationCurve
  overload: Global.Aura.GetWidthCurve*
- uid: Global.Aura.GetStartWidth
  commentId: M:Global.Aura.GetStartWidth
  id: GetStartWidth
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: GetStartWidth()
  nameWithType: Aura.GetStartWidth()
  fullName: Aura.GetStartWidth()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetStartWidth
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 503
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float GetStartWidth()
    return:
      type: System.Single
    content.vb: Public Function GetStartWidth() As Single
  overload: Global.Aura.GetStartWidth*
- uid: Global.Aura.GetEndWidth
  commentId: M:Global.Aura.GetEndWidth
  id: GetEndWidth
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: GetEndWidth()
  nameWithType: Aura.GetEndWidth()
  fullName: Aura.GetEndWidth()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetEndWidth
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 508
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float GetEndWidth()
    return:
      type: System.Single
    content.vb: Public Function GetEndWidth() As Single
  overload: Global.Aura.GetEndWidth*
- uid: Global.Aura.IsAutoMergeAura
  commentId: M:Global.Aura.IsAutoMergeAura
  id: IsAutoMergeAura
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: IsAutoMergeAura()
  nameWithType: Aura.IsAutoMergeAura()
  fullName: Aura.IsAutoMergeAura()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsAutoMergeAura
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 513
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsAutoMergeAura()
    return:
      type: System.Boolean
    content.vb: Public Function IsAutoMergeAura() As Boolean
  overload: Global.Aura.IsAutoMergeAura*
- uid: Global.Aura.DisableAura(System.Single)
  commentId: M:Global.Aura.DisableAura(System.Single)
  id: DisableAura(System.Single)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: DisableAura(float)
  nameWithType: Aura.DisableAura(float)
  fullName: Aura.DisableAura(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DisableAura
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 518
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void DisableAura(float duration)
    parameters:
    - id: duration
      type: System.Single
    content.vb: Public Sub DisableAura(duration As Single)
  overload: Global.Aura.DisableAura*
  nameWithType.vb: Aura.DisableAura(Single)
  fullName.vb: Aura.DisableAura(Single)
  name.vb: DisableAura(Single)
- uid: Global.Aura.EnableAura
  commentId: M:Global.Aura.EnableAura
  id: EnableAura
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: EnableAura()
  nameWithType: Aura.EnableAura()
  fullName: Aura.EnableAura()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EnableAura
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 533
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void EnableAura()
    content.vb: Public Sub EnableAura()
  overload: Global.Aura.EnableAura*
- uid: Global.Aura.IsAuraActive
  commentId: M:Global.Aura.IsAuraActive
  id: IsAuraActive
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: IsAuraActive()
  nameWithType: Aura.IsAuraActive()
  fullName: Aura.IsAuraActive()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsAuraActive
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 539
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsAuraActive()
    return:
      type: System.Boolean
    content.vb: Public Function IsAuraActive() As Boolean
  overload: Global.Aura.IsAuraActive*
- uid: Global.Aura.SetAuraWidth(System.Single)
  commentId: M:Global.Aura.SetAuraWidth(System.Single)
  id: SetAuraWidth(System.Single)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: SetAuraWidth(float)
  nameWithType: Aura.SetAuraWidth(float)
  fullName: Aura.SetAuraWidth(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetAuraWidth
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 544
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetAuraWidth(float width)
    parameters:
    - id: width
      type: System.Single
    content.vb: Public Sub SetAuraWidth(width As Single)
  overload: Global.Aura.SetAuraWidth*
  nameWithType.vb: Aura.SetAuraWidth(Single)
  fullName.vb: Aura.SetAuraWidth(Single)
  name.vb: SetAuraWidth(Single)
- uid: Global.Aura.GetAutoMergeAura
  commentId: M:Global.Aura.GetAutoMergeAura
  id: GetAutoMergeAura
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: GetAutoMergeAura()
  nameWithType: Aura.GetAutoMergeAura()
  fullName: Aura.GetAutoMergeAura()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetAutoMergeAura
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 553
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public AutoMergeAura GetAutoMergeAura()
    return:
      type: Global.AutoMergeAura
    content.vb: Public Function GetAutoMergeAura() As AutoMergeAura
  overload: Global.Aura.GetAutoMergeAura*
- uid: Global.Aura.SetAutoMergeAura(AutoMergeAura)
  commentId: M:Global.Aura.SetAutoMergeAura(AutoMergeAura)
  id: SetAutoMergeAura(AutoMergeAura)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: SetAutoMergeAura(AutoMergeAura)
  nameWithType: Aura.SetAutoMergeAura(AutoMergeAura)
  fullName: Aura.SetAutoMergeAura(AutoMergeAura)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetAutoMergeAura
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 558
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetAutoMergeAura(AutoMergeAura autoMergeAura)
    parameters:
    - id: autoMergeAura
      type: Global.AutoMergeAura
    content.vb: Public Sub SetAutoMergeAura(autoMergeAura As AutoMergeAura)
  overload: Global.Aura.SetAutoMergeAura*
- uid: Global.Aura.GetAuraScale
  commentId: M:Global.Aura.GetAuraScale
  id: GetAuraScale
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: GetAuraScale()
  nameWithType: Aura.GetAuraScale()
  fullName: Aura.GetAuraScale()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetAuraScale
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 567
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nGet the absolute scale of the aura\n"
  example: []
  syntax:
    content: public Vector2 GetAuraScale()
    return:
      type: UnityEngine.Vector2
      description: absolute scale
    content.vb: Public Function GetAuraScale() As Vector2
  overload: Global.Aura.GetAuraScale*
- uid: Global.Aura.SetAuraScale(UnityEngine.Vector2,UnityEngine.Vector2Int)
  commentId: M:Global.Aura.SetAuraScale(UnityEngine.Vector2,UnityEngine.Vector2Int)
  id: SetAuraScale(UnityEngine.Vector2,UnityEngine.Vector2Int)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: SetAuraScale(Vector2, Vector2Int)
  nameWithType: Aura.SetAuraScale(Vector2, Vector2Int)
  fullName: Aura.SetAuraScale(UnityEngine.Vector2, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetAuraScale
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 576
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nScale aura using an &quot;absolute&quot; scale\n"
  example: []
  syntax:
    content: public void SetAuraScale(Vector2 scale, Vector2Int center)
    parameters:
    - id: scale
      type: UnityEngine.Vector2
      description: absolute scale of aura
    - id: center
      type: UnityEngine.Vector2Int
    content.vb: Public Sub SetAuraScale(scale As Vector2, center As Vector2Int)
  overload: Global.Aura.SetAuraScale*
- uid: Global.Aura.ScaleAura(UnityEngine.Vector2,UnityEngine.Vector2Int)
  commentId: M:Global.Aura.ScaleAura(UnityEngine.Vector2,UnityEngine.Vector2Int)
  id: ScaleAura(UnityEngine.Vector2,UnityEngine.Vector2Int)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: ScaleAura(Vector2, Vector2Int)
  nameWithType: Aura.ScaleAura(Vector2, Vector2Int)
  fullName: Aura.ScaleAura(UnityEngine.Vector2, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ScaleAura
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 589
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nScale aura using a &quot;relative&quot; scale\n"
  example: []
  syntax:
    content: public void ScaleAura(Vector2 scale, Vector2Int center)
    parameters:
    - id: scale
      type: UnityEngine.Vector2
      description: absolute scale of aura
    - id: center
      type: UnityEngine.Vector2Int
    content.vb: Public Sub ScaleAura(scale As Vector2, center As Vector2Int)
  overload: Global.Aura.ScaleAura*
- uid: Global.Aura.ScaleAura(System.Single,UnityEngine.Vector2Int)
  commentId: M:Global.Aura.ScaleAura(System.Single,UnityEngine.Vector2Int)
  id: ScaleAura(System.Single,UnityEngine.Vector2Int)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: ScaleAura(float, Vector2Int)
  nameWithType: Aura.ScaleAura(float, Vector2Int)
  fullName: Aura.ScaleAura(float, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ScaleAura
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 594
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void ScaleAura(float scale, Vector2Int center)
    parameters:
    - id: scale
      type: System.Single
    - id: center
      type: UnityEngine.Vector2Int
    content.vb: Public Sub ScaleAura(scale As Single, center As Vector2Int)
  overload: Global.Aura.ScaleAura*
  nameWithType.vb: Aura.ScaleAura(Single, Vector2Int)
  fullName.vb: Aura.ScaleAura(Single, UnityEngine.Vector2Int)
  name.vb: ScaleAura(Single, Vector2Int)
- uid: Global.Aura.UseWorldSpace(System.Boolean)
  commentId: M:Global.Aura.UseWorldSpace(System.Boolean)
  id: UseWorldSpace(System.Boolean)
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: UseWorldSpace(bool)
  nameWithType: Aura.UseWorldSpace(bool)
  fullName: Aura.UseWorldSpace(bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UseWorldSpace
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 599
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UseWorldSpace(bool worldSpace)
    parameters:
    - id: worldSpace
      type: System.Boolean
    content.vb: Public Sub UseWorldSpace(worldSpace As Boolean)
  overload: Global.Aura.UseWorldSpace*
  nameWithType.vb: Aura.UseWorldSpace(Boolean)
  fullName.vb: Aura.UseWorldSpace(Boolean)
  name.vb: UseWorldSpace(Boolean)
- uid: Global.Aura.OnDrawGizmosSelected
  commentId: M:Global.Aura.OnDrawGizmosSelected
  id: OnDrawGizmosSelected
  parent: Global.Aura
  langs:
  - csharp
  - vb
  name: OnDrawGizmosSelected()
  nameWithType: Aura.OnDrawGizmosSelected()
  fullName: Aura.OnDrawGizmosSelected()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Aura.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnDrawGizmosSelected
    path: ../Assets/Objects & Components/Entities/Auras/Aura.cs
    startLine: 605
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void OnDrawGizmosSelected()
    content.vb: Public Sub OnDrawGizmosSelected()
  overload: Global.Aura.OnDrawGizmosSelected*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Global.IntObject
  commentId: T:Global.IntObject
  name: IntObject
  nameWithType: IntObject
  fullName: IntObject
- uid: Global.IntTrigger
  commentId: T:Global.IntTrigger
  name: IntTrigger
  nameWithType: IntTrigger
  fullName: IntTrigger
- uid: Global.ISavableObject{IntObjectSaveData}
  commentId: T:Global.ISavableObject{IntObjectSaveData}
  definition: Global.ISavableObject`1
  name: ISavableObject<IntObjectSaveData>
  nameWithType: ISavableObject<IntObjectSaveData>
  fullName: ISavableObject<IntObjectSaveData>
  nameWithType.vb: ISavableObject(Of IntObjectSaveData)
  fullName.vb: ISavableObject(Of IntObjectSaveData)
  name.vb: ISavableObject(Of IntObjectSaveData)
  spec.csharp:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: <
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: '>'
  spec.vb:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
- uid: Global.IntTrigger.TriggerCount
  commentId: P:Global.IntTrigger.TriggerCount
  parent: Global.IntTrigger
  name: TriggerCount
  nameWithType: IntTrigger.TriggerCount
  fullName: IntTrigger.TriggerCount
- uid: Global.IntTrigger.triggerStartCallback
  commentId: F:Global.IntTrigger.triggerStartCallback
  parent: Global.IntTrigger
  name: triggerStartCallback
  nameWithType: IntTrigger.triggerStartCallback
  fullName: IntTrigger.triggerStartCallback
- uid: Global.IntTrigger.triggerEndCallback
  commentId: F:Global.IntTrigger.triggerEndCallback
  parent: Global.IntTrigger
  name: triggerEndCallback
  nameWithType: IntTrigger.triggerEndCallback
  fullName: IntTrigger.triggerEndCallback
- uid: Global.IntTrigger.SetCustomTriggerStartCallback(IntTrigger.TriggerCallback)
  commentId: M:Global.IntTrigger.SetCustomTriggerStartCallback(IntTrigger.TriggerCallback)
  parent: Global.IntTrigger
  name: SetCustomTriggerStartCallback(TriggerCallback)
  nameWithType: IntTrigger.SetCustomTriggerStartCallback(IntTrigger.TriggerCallback)
  fullName: IntTrigger.SetCustomTriggerStartCallback(IntTrigger.TriggerCallback)
  spec.csharp:
  - uid: Global.IntTrigger.SetCustomTriggerStartCallback(IntTrigger.TriggerCallback)
    name: SetCustomTriggerStartCallback
  - name: (
  - uid: Global.IntTrigger.TriggerCallback
    name: TriggerCallback
  - name: )
  spec.vb:
  - uid: Global.IntTrigger.SetCustomTriggerStartCallback(IntTrigger.TriggerCallback)
    name: SetCustomTriggerStartCallback
  - name: (
  - uid: Global.IntTrigger.TriggerCallback
    name: TriggerCallback
  - name: )
- uid: Global.IntTrigger.RemoveCustomTriggerStartCallback(IntTrigger.TriggerCallback)
  commentId: M:Global.IntTrigger.RemoveCustomTriggerStartCallback(IntTrigger.TriggerCallback)
  parent: Global.IntTrigger
  name: RemoveCustomTriggerStartCallback(TriggerCallback)
  nameWithType: IntTrigger.RemoveCustomTriggerStartCallback(IntTrigger.TriggerCallback)
  fullName: IntTrigger.RemoveCustomTriggerStartCallback(IntTrigger.TriggerCallback)
  spec.csharp:
  - uid: Global.IntTrigger.RemoveCustomTriggerStartCallback(IntTrigger.TriggerCallback)
    name: RemoveCustomTriggerStartCallback
  - name: (
  - uid: Global.IntTrigger.TriggerCallback
    name: TriggerCallback
  - name: )
  spec.vb:
  - uid: Global.IntTrigger.RemoveCustomTriggerStartCallback(IntTrigger.TriggerCallback)
    name: RemoveCustomTriggerStartCallback
  - name: (
  - uid: Global.IntTrigger.TriggerCallback
    name: TriggerCallback
  - name: )
- uid: Global.IntTrigger.SetCustomTriggerEndCallback(IntTrigger.TriggerCallback)
  commentId: M:Global.IntTrigger.SetCustomTriggerEndCallback(IntTrigger.TriggerCallback)
  parent: Global.IntTrigger
  name: SetCustomTriggerEndCallback(TriggerCallback)
  nameWithType: IntTrigger.SetCustomTriggerEndCallback(IntTrigger.TriggerCallback)
  fullName: IntTrigger.SetCustomTriggerEndCallback(IntTrigger.TriggerCallback)
  spec.csharp:
  - uid: Global.IntTrigger.SetCustomTriggerEndCallback(IntTrigger.TriggerCallback)
    name: SetCustomTriggerEndCallback
  - name: (
  - uid: Global.IntTrigger.TriggerCallback
    name: TriggerCallback
  - name: )
  spec.vb:
  - uid: Global.IntTrigger.SetCustomTriggerEndCallback(IntTrigger.TriggerCallback)
    name: SetCustomTriggerEndCallback
  - name: (
  - uid: Global.IntTrigger.TriggerCallback
    name: TriggerCallback
  - name: )
- uid: Global.IntTrigger.RemoveCustomTriggerEndCallback(IntTrigger.TriggerCallback)
  commentId: M:Global.IntTrigger.RemoveCustomTriggerEndCallback(IntTrigger.TriggerCallback)
  parent: Global.IntTrigger
  name: RemoveCustomTriggerEndCallback(TriggerCallback)
  nameWithType: IntTrigger.RemoveCustomTriggerEndCallback(IntTrigger.TriggerCallback)
  fullName: IntTrigger.RemoveCustomTriggerEndCallback(IntTrigger.TriggerCallback)
  spec.csharp:
  - uid: Global.IntTrigger.RemoveCustomTriggerEndCallback(IntTrigger.TriggerCallback)
    name: RemoveCustomTriggerEndCallback
  - name: (
  - uid: Global.IntTrigger.TriggerCallback
    name: TriggerCallback
  - name: )
  spec.vb:
  - uid: Global.IntTrigger.RemoveCustomTriggerEndCallback(IntTrigger.TriggerCallback)
    name: RemoveCustomTriggerEndCallback
  - name: (
  - uid: Global.IntTrigger.TriggerCallback
    name: TriggerCallback
  - name: )
- uid: Global.IntTrigger.OnTriggerStart(IntActor)
  commentId: M:Global.IntTrigger.OnTriggerStart(IntActor)
  parent: Global.IntTrigger
  name: OnTriggerStart(IntActor)
  nameWithType: IntTrigger.OnTriggerStart(IntActor)
  fullName: IntTrigger.OnTriggerStart(IntActor)
  spec.csharp:
  - uid: Global.IntTrigger.OnTriggerStart(IntActor)
    name: OnTriggerStart
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
  spec.vb:
  - uid: Global.IntTrigger.OnTriggerStart(IntActor)
    name: OnTriggerStart
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
- uid: Global.IntTrigger.OnTriggerEnd(IntActor)
  commentId: M:Global.IntTrigger.OnTriggerEnd(IntActor)
  parent: Global.IntTrigger
  name: OnTriggerEnd(IntActor)
  nameWithType: IntTrigger.OnTriggerEnd(IntActor)
  fullName: IntTrigger.OnTriggerEnd(IntActor)
  spec.csharp:
  - uid: Global.IntTrigger.OnTriggerEnd(IntActor)
    name: OnTriggerEnd
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
  spec.vb:
  - uid: Global.IntTrigger.OnTriggerEnd(IntActor)
    name: OnTriggerEnd
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
- uid: Global.IntObject.section
  commentId: P:Global.IntObject.section
  parent: Global.IntObject
  name: section
  nameWithType: IntObject.section
  fullName: IntObject.section
- uid: Global.IntObject.state
  commentId: P:Global.IntObject.state
  parent: Global.IntObject
  name: state
  nameWithType: IntObject.state
  fullName: IntObject.state
- uid: Global.IntObject.int_collider
  commentId: F:Global.IntObject.int_collider
  parent: Global.IntObject
  name: int_collider
  nameWithType: IntObject.int_collider
  fullName: IntObject.int_collider
- uid: Global.IntObject.remainder
  commentId: F:Global.IntObject.remainder
  parent: Global.IntObject
  name: remainder
  nameWithType: IntObject.remainder
  fullName: IntObject.remainder
- uid: Global.IntObject.StartPosition
  commentId: F:Global.IntObject.StartPosition
  parent: Global.IntObject
  name: StartPosition
  nameWithType: IntObject.StartPosition
  fullName: IntObject.StartPosition
- uid: Global.IntObject.AttachedToPlayer
  commentId: F:Global.IntObject.AttachedToPlayer
  parent: Global.IntObject
  name: AttachedToPlayer
  nameWithType: IntObject.AttachedToPlayer
  fullName: IntObject.AttachedToPlayer
- uid: Global.IntObject.IgnoredObjectsMap
  commentId: F:Global.IntObject.IgnoredObjectsMap
  parent: Global.IntObject
  name: IgnoredObjectsMap
  nameWithType: IntObject.IgnoredObjectsMap
  fullName: IntObject.IgnoredObjectsMap
- uid: Global.IntObject.KilledCallback
  commentId: F:Global.IntObject.KilledCallback
  parent: Global.IntObject
  name: KilledCallback
  nameWithType: IntObject.KilledCallback
  fullName: IntObject.KilledCallback
- uid: Global.IntObject.Position
  commentId: P:Global.IntObject.Position
  parent: Global.IntObject
  name: Position
  nameWithType: IntObject.Position
  fullName: IntObject.Position
- uid: Global.IntObject.GetStartWorldPosition
  commentId: P:Global.IntObject.GetStartWorldPosition
  parent: Global.IntObject
  name: GetStartWorldPosition
  nameWithType: IntObject.GetStartWorldPosition
  fullName: IntObject.GetStartWorldPosition
- uid: Global.IntObject.collider_type
  commentId: P:Global.IntObject.collider_type
  parent: Global.IntObject
  name: collider_type
  nameWithType: IntObject.collider_type
  fullName: IntObject.collider_type
- uid: Global.IntObject.MarkedForKill
  commentId: P:Global.IntObject.MarkedForKill
  parent: Global.IntObject
  name: MarkedForKill
  nameWithType: IntObject.MarkedForKill
  fullName: IntObject.MarkedForKill
- uid: Global.IntObject.ObjectID
  commentId: F:Global.IntObject.ObjectID
  parent: Global.IntObject
  name: ObjectID
  nameWithType: IntObject.ObjectID
  fullName: IntObject.ObjectID
- uid: Global.IntObject.DestroyOnKill
  commentId: F:Global.IntObject.DestroyOnKill
  parent: Global.IntObject
  name: DestroyOnKill
  nameWithType: IntObject.DestroyOnKill
  fullName: IntObject.DestroyOnKill
- uid: Global.IntObject.RespawnBehavior
  commentId: F:Global.IntObject.RespawnBehavior
  parent: Global.IntObject
  name: RespawnBehavior
  nameWithType: IntObject.RespawnBehavior
  fullName: IntObject.RespawnBehavior
- uid: Global.IntObject.Status
  commentId: F:Global.IntObject.Status
  parent: Global.IntObject
  name: Status
  nameWithType: IntObject.Status
  fullName: IntObject.Status
- uid: Global.IntObject.InitialStatus
  commentId: F:Global.IntObject.InitialStatus
  parent: Global.IntObject
  name: InitialStatus
  nameWithType: IntObject.InitialStatus
  fullName: IntObject.InitialStatus
- uid: Global.IntObject.SaveObject
  commentId: F:Global.IntObject.SaveObject
  parent: Global.IntObject
  name: SaveObject
  nameWithType: IntObject.SaveObject
  fullName: IntObject.SaveObject
- uid: Global.IntObject.IsInSetPiece
  commentId: P:Global.IntObject.IsInSetPiece
  parent: Global.IntObject
  name: IsInSetPiece
  nameWithType: IntObject.IsInSetPiece
  fullName: IntObject.IsInSetPiece
- uid: Global.IntObject.Init
  commentId: M:Global.IntObject.Init
  parent: Global.IntObject
  name: Init()
  nameWithType: IntObject.Init()
  fullName: IntObject.Init()
  spec.csharp:
  - uid: Global.IntObject.Init
    name: Init
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.Init
    name: Init
  - name: (
  - name: )
- uid: Global.IntObject.FindIntColliderState(System.Int32)
  commentId: M:Global.IntObject.FindIntColliderState(System.Int32)
  parent: Global.IntObject
  isExternal: true
  name: FindIntColliderState(int)
  nameWithType: IntObject.FindIntColliderState(int)
  fullName: IntObject.FindIntColliderState(int)
  nameWithType.vb: IntObject.FindIntColliderState(Integer)
  fullName.vb: IntObject.FindIntColliderState(Integer)
  name.vb: FindIntColliderState(Integer)
  spec.csharp:
  - uid: Global.IntObject.FindIntColliderState(System.Int32)
    name: FindIntColliderState
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.FindIntColliderState(System.Int32)
    name: FindIntColliderState
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Global.IntObject.GetLocalGameStates
  commentId: M:Global.IntObject.GetLocalGameStates
  parent: Global.IntObject
  name: GetLocalGameStates()
  nameWithType: IntObject.GetLocalGameStates()
  fullName: IntObject.GetLocalGameStates()
  spec.csharp:
  - uid: Global.IntObject.GetLocalGameStates
    name: GetLocalGameStates
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetLocalGameStates
    name: GetLocalGameStates
  - name: (
  - name: )
- uid: Global.IntObject.RegisterSelf
  commentId: M:Global.IntObject.RegisterSelf
  parent: Global.IntObject
  name: RegisterSelf()
  nameWithType: IntObject.RegisterSelf()
  fullName: IntObject.RegisterSelf()
  spec.csharp:
  - uid: Global.IntObject.RegisterSelf
    name: RegisterSelf
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.RegisterSelf
    name: RegisterSelf
  - name: (
  - name: )
- uid: Global.IntObject.UnregisterSelf
  commentId: M:Global.IntObject.UnregisterSelf
  parent: Global.IntObject
  name: UnregisterSelf()
  nameWithType: IntObject.UnregisterSelf()
  fullName: IntObject.UnregisterSelf()
  spec.csharp:
  - uid: Global.IntObject.UnregisterSelf
    name: UnregisterSelf
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.UnregisterSelf
    name: UnregisterSelf
  - name: (
  - name: )
- uid: Global.IntObject.RegisterKilledCallback(IntObject.Action)
  commentId: M:Global.IntObject.RegisterKilledCallback(IntObject.Action)
  parent: Global.IntObject
  name: RegisterKilledCallback(Action)
  nameWithType: IntObject.RegisterKilledCallback(IntObject.Action)
  fullName: IntObject.RegisterKilledCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntObject.RegisterKilledCallback(IntObject.Action)
    name: RegisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntObject.RegisterKilledCallback(IntObject.Action)
    name: RegisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  commentId: M:Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  parent: Global.IntObject
  name: UnregisterKilledCallback(Action)
  nameWithType: IntObject.UnregisterKilledCallback(IntObject.Action)
  fullName: IntObject.UnregisterKilledCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntObject.UnregisterKilledCallback(IntObject.Action)
    name: UnregisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntObject.UnregisterKilledCallback(IntObject.Action)
    name: UnregisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntObject.Update
  commentId: M:Global.IntObject.Update
  parent: Global.IntObject
  name: Update()
  nameWithType: IntObject.Update()
  fullName: IntObject.Update()
  spec.csharp:
  - uid: Global.IntObject.Update
    name: Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.Update
    name: Update
  - name: (
  - name: )
- uid: Global.IntObject.SetStatus(ObjectStatus)
  commentId: M:Global.IntObject.SetStatus(ObjectStatus)
  parent: Global.IntObject
  name: SetStatus(ObjectStatus)
  nameWithType: IntObject.SetStatus(ObjectStatus)
  fullName: IntObject.SetStatus(ObjectStatus)
  spec.csharp:
  - uid: Global.IntObject.SetStatus(ObjectStatus)
    name: SetStatus
  - name: (
  - uid: Global.ObjectStatus
    name: ObjectStatus
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetStatus(ObjectStatus)
    name: SetStatus
  - name: (
  - uid: Global.ObjectStatus
    name: ObjectStatus
  - name: )
- uid: Global.IntObject.OnKill(System.Boolean)
  commentId: M:Global.IntObject.OnKill(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: OnKill(bool)
  nameWithType: IntObject.OnKill(bool)
  fullName: IntObject.OnKill(bool)
  nameWithType.vb: IntObject.OnKill(Boolean)
  fullName.vb: IntObject.OnKill(Boolean)
  name.vb: OnKill(Boolean)
  spec.csharp:
  - uid: Global.IntObject.OnKill(System.Boolean)
    name: OnKill
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.OnKill(System.Boolean)
    name: OnKill
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.Kill
  commentId: M:Global.IntObject.Kill
  parent: Global.IntObject
  name: Kill()
  nameWithType: IntObject.Kill()
  fullName: IntObject.Kill()
  spec.csharp:
  - uid: Global.IntObject.Kill
    name: Kill
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill
    name: Kill
  - name: (
  - name: )
- uid: Global.IntObject.Kill(System.Boolean)
  commentId: M:Global.IntObject.Kill(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: Kill(bool)
  nameWithType: IntObject.Kill(bool)
  fullName: IntObject.Kill(bool)
  nameWithType.vb: IntObject.Kill(Boolean)
  fullName.vb: IntObject.Kill(Boolean)
  name.vb: Kill(Boolean)
  spec.csharp:
  - uid: Global.IntObject.Kill(System.Boolean)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill(System.Boolean)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.Kill(System.Single)
  commentId: M:Global.IntObject.Kill(System.Single)
  parent: Global.IntObject
  isExternal: true
  name: Kill(float)
  nameWithType: IntObject.Kill(float)
  fullName: IntObject.Kill(float)
  nameWithType.vb: IntObject.Kill(Single)
  fullName.vb: IntObject.Kill(Single)
  name.vb: Kill(Single)
  spec.csharp:
  - uid: Global.IntObject.Kill(System.Single)
    name: Kill
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill(System.Single)
    name: Kill
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntObject.Kill(System.Boolean,System.Single)
  commentId: M:Global.IntObject.Kill(System.Boolean,System.Single)
  parent: Global.IntObject
  isExternal: true
  name: Kill(bool, float)
  nameWithType: IntObject.Kill(bool, float)
  fullName: IntObject.Kill(bool, float)
  nameWithType.vb: IntObject.Kill(Boolean, Single)
  fullName.vb: IntObject.Kill(Boolean, Single)
  name.vb: Kill(Boolean, Single)
  spec.csharp:
  - uid: Global.IntObject.Kill(System.Boolean,System.Single)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill(System.Boolean,System.Single)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  commentId: M:Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  parent: Global.IntObject
  isExternal: true
  name: IgnoreObjectCollisions(IntObject, float)
  nameWithType: IntObject.IgnoreObjectCollisions(IntObject, float)
  fullName: IntObject.IgnoreObjectCollisions(IntObject, float)
  nameWithType.vb: IntObject.IgnoreObjectCollisions(IntObject, Single)
  fullName.vb: IntObject.IgnoreObjectCollisions(IntObject, Single)
  name.vb: IgnoreObjectCollisions(IntObject, Single)
  spec.csharp:
  - uid: Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
    name: IgnoreObjectCollisions
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
    name: IgnoreObjectCollisions
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntObject.SleepObject
  commentId: M:Global.IntObject.SleepObject
  parent: Global.IntObject
  name: SleepObject()
  nameWithType: IntObject.SleepObject()
  fullName: IntObject.SleepObject()
  spec.csharp:
  - uid: Global.IntObject.SleepObject
    name: SleepObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.SleepObject
    name: SleepObject
  - name: (
  - name: )
- uid: Global.IntObject.OptimizeSleepObject
  commentId: M:Global.IntObject.OptimizeSleepObject
  parent: Global.IntObject
  name: OptimizeSleepObject()
  nameWithType: IntObject.OptimizeSleepObject()
  fullName: IntObject.OptimizeSleepObject()
  spec.csharp:
  - uid: Global.IntObject.OptimizeSleepObject
    name: OptimizeSleepObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.OptimizeSleepObject
    name: OptimizeSleepObject
  - name: (
  - name: )
- uid: Global.IntObject.WakeObject
  commentId: M:Global.IntObject.WakeObject
  parent: Global.IntObject
  name: WakeObject()
  nameWithType: IntObject.WakeObject()
  fullName: IntObject.WakeObject()
  spec.csharp:
  - uid: Global.IntObject.WakeObject
    name: WakeObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.WakeObject
    name: WakeObject
  - name: (
  - name: )
- uid: Global.IntObject.EnableObject
  commentId: M:Global.IntObject.EnableObject
  parent: Global.IntObject
  name: EnableObject()
  nameWithType: IntObject.EnableObject()
  fullName: IntObject.EnableObject()
  spec.csharp:
  - uid: Global.IntObject.EnableObject
    name: EnableObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.EnableObject
    name: EnableObject
  - name: (
  - name: )
- uid: Global.IntObject.DisableObject
  commentId: M:Global.IntObject.DisableObject
  parent: Global.IntObject
  name: DisableObject()
  nameWithType: IntObject.DisableObject()
  fullName: IntObject.DisableObject()
  spec.csharp:
  - uid: Global.IntObject.DisableObject
    name: DisableObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.DisableObject
    name: DisableObject
  - name: (
  - name: )
- uid: Global.IntObject.RespawnObject
  commentId: M:Global.IntObject.RespawnObject
  parent: Global.IntObject
  name: RespawnObject()
  nameWithType: IntObject.RespawnObject()
  fullName: IntObject.RespawnObject()
  spec.csharp:
  - uid: Global.IntObject.RespawnObject
    name: RespawnObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.RespawnObject
    name: RespawnObject
  - name: (
  - name: )
- uid: Global.IntObject.RecursiveSetCollidable(System.Boolean)
  commentId: M:Global.IntObject.RecursiveSetCollidable(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: RecursiveSetCollidable(bool)
  nameWithType: IntObject.RecursiveSetCollidable(bool)
  fullName: IntObject.RecursiveSetCollidable(bool)
  nameWithType.vb: IntObject.RecursiveSetCollidable(Boolean)
  fullName.vb: IntObject.RecursiveSetCollidable(Boolean)
  name.vb: RecursiveSetCollidable(Boolean)
  spec.csharp:
  - uid: Global.IntObject.RecursiveSetCollidable(System.Boolean)
    name: RecursiveSetCollidable
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.RecursiveSetCollidable(System.Boolean)
    name: RecursiveSetCollidable
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.SetColliderState(IntColliderState)
  commentId: M:Global.IntObject.SetColliderState(IntColliderState)
  parent: Global.IntObject
  name: SetColliderState(IntColliderState)
  nameWithType: IntObject.SetColliderState(IntColliderState)
  fullName: IntObject.SetColliderState(IntColliderState)
  spec.csharp:
  - uid: Global.IntObject.SetColliderState(IntColliderState)
    name: SetColliderState
  - name: (
  - uid: Global.IntColliderState
    name: IntColliderState
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetColliderState(IntColliderState)
    name: SetColliderState
  - name: (
  - uid: Global.IntColliderState
    name: IntColliderState
  - name: )
- uid: Global.IntObject.Translate(UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.Translate(UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: Translate(Vector2Int)
  nameWithType: IntObject.Translate(Vector2Int)
  fullName: IntObject.Translate(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2Int)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2Int)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.Translate(UnityEngine.Vector2)
  commentId: M:Global.IntObject.Translate(UnityEngine.Vector2)
  parent: Global.IntObject
  isExternal: true
  name: Translate(Vector2)
  nameWithType: IntObject.Translate(Vector2)
  fullName: IntObject.Translate(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: SetPosition(Vector2Int)
  nameWithType: IntObject.SetPosition(Vector2Int)
  fullName: IntObject.SetPosition(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.SetPosition(UnityEngine.Vector2Int)
    name: SetPosition
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetPosition(UnityEngine.Vector2Int)
    name: SetPosition
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.SetCollidable(System.Boolean)
  commentId: M:Global.IntObject.SetCollidable(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: SetCollidable(bool)
  nameWithType: IntObject.SetCollidable(bool)
  fullName: IntObject.SetCollidable(bool)
  nameWithType.vb: IntObject.SetCollidable(Boolean)
  fullName.vb: IntObject.SetCollidable(Boolean)
  name.vb: SetCollidable(Boolean)
  spec.csharp:
  - uid: Global.IntObject.SetCollidable(System.Boolean)
    name: SetCollidable
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetCollidable(System.Boolean)
    name: SetCollidable
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.GetCollidable
  commentId: M:Global.IntObject.GetCollidable
  parent: Global.IntObject
  name: GetCollidable()
  nameWithType: IntObject.GetCollidable()
  fullName: IntObject.GetCollidable()
  spec.csharp:
  - uid: Global.IntObject.GetCollidable
    name: GetCollidable
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetCollidable
    name: GetCollidable
  - name: (
  - name: )
- uid: Global.IntObject.GetCollider
  commentId: M:Global.IntObject.GetCollider
  parent: Global.IntObject
  name: GetCollider()
  nameWithType: IntObject.GetCollider()
  fullName: IntObject.GetCollider()
  spec.csharp:
  - uid: Global.IntObject.GetCollider
    name: GetCollider
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetCollider
    name: GetCollider
  - name: (
  - name: )
- uid: Global.IntObject.GetColliderState
  commentId: M:Global.IntObject.GetColliderState
  parent: Global.IntObject
  name: GetColliderState()
  nameWithType: IntObject.GetColliderState()
  fullName: IntObject.GetColliderState()
  spec.csharp:
  - uid: Global.IntObject.GetColliderState
    name: GetColliderState
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetColliderState
    name: GetColliderState
  - name: (
  - name: )
- uid: Global.IntObject.Overlaps(IntObject)
  commentId: M:Global.IntObject.Overlaps(IntObject)
  parent: Global.IntObject
  name: Overlaps(IntObject)
  nameWithType: IntObject.Overlaps(IntObject)
  fullName: IntObject.Overlaps(IntObject)
  spec.csharp:
  - uid: Global.IntObject.Overlaps(IntObject)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
  spec.vb:
  - uid: Global.IntObject.Overlaps(IntObject)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
- uid: Global.IntObject.RayCast(IntRay)
  commentId: M:Global.IntObject.RayCast(IntRay)
  parent: Global.IntObject
  name: RayCast(IntRay)
  nameWithType: IntObject.RayCast(IntRay)
  fullName: IntObject.RayCast(IntRay)
  spec.csharp:
  - uid: Global.IntObject.RayCast(IntRay)
    name: RayCast
  - name: (
  - uid: Global.IntRay
    name: IntRay
  - name: )
  spec.vb:
  - uid: Global.IntObject.RayCast(IntRay)
    name: RayCast
  - name: (
  - uid: Global.IntRay
    name: IntRay
  - name: )
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: CollideAt(List<IntSolid>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntSolid>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntSolid>, UnityEngine.Vector2Int)
  nameWithType.vb: IntObject.CollideAt(List(Of IntSolid), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntSolid), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntSolid), Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntSolid
    name: IntSolid
  - name: '>'
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: CollideAt(List<IntActor>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntActor>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntActor>, UnityEngine.Vector2Int)
  nameWithType.vb: IntObject.CollideAt(List(Of IntActor), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntActor), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntActor), Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntActor
    name: IntActor
  - name: '>'
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntActor
    name: IntActor
  - name: )
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: CollideAt(List<IntTrigger>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntTrigger>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntTrigger>, UnityEngine.Vector2Int)
  nameWithType.vb: IntObject.CollideAt(List(Of IntTrigger), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntTrigger), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntTrigger), Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: '>'
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.OnDrawGizmos
  commentId: M:Global.IntObject.OnDrawGizmos
  parent: Global.IntObject
  name: OnDrawGizmos()
  nameWithType: IntObject.OnDrawGizmos()
  fullName: IntObject.OnDrawGizmos()
  spec.csharp:
  - uid: Global.IntObject.OnDrawGizmos
    name: OnDrawGizmos
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.OnDrawGizmos
    name: OnDrawGizmos
  - name: (
  - name: )
- uid: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  commentId: M:Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  parent: Global.IntObject
  name: LoadObjectSaveData(IntObjectSaveData)
  nameWithType: IntObject.LoadObjectSaveData(IntObjectSaveData)
  fullName: IntObject.LoadObjectSaveData(IntObjectSaveData)
  spec.csharp:
  - uid: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
    name: LoadObjectSaveData
  - name: (
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
  spec.vb:
  - uid: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
    name: LoadObjectSaveData
  - name: (
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
- uid: Global.IntObject.GetObjectSaveData
  commentId: M:Global.IntObject.GetObjectSaveData
  parent: Global.IntObject
  name: GetObjectSaveData()
  nameWithType: IntObject.GetObjectSaveData()
  fullName: IntObject.GetObjectSaveData()
  spec.csharp:
  - uid: Global.IntObject.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
- uid: Global.IntObject.OnPostLoadSaveFile
  commentId: M:Global.IntObject.OnPostLoadSaveFile
  parent: Global.IntObject
  name: OnPostLoadSaveFile()
  nameWithType: IntObject.OnPostLoadSaveFile()
  fullName: IntObject.OnPostLoadSaveFile()
  spec.csharp:
  - uid: Global.IntObject.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ISavableObject`1
  commentId: T:Global.ISavableObject`1
  name: ISavableObject<T>
  nameWithType: ISavableObject<T>
  fullName: ISavableObject<T>
  nameWithType.vb: ISavableObject(Of T)
  fullName.vb: ISavableObject(Of T)
  name.vb: ISavableObject(Of T)
  spec.csharp:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.EdgeIntCollider
  commentId: T:Global.EdgeIntCollider
  name: EdgeIntCollider
  nameWithType: EdgeIntCollider
  fullName: EdgeIntCollider
- uid: UnityEngine.LineRenderer
  commentId: T:UnityEngine.LineRenderer
  parent: UnityEngine
  isExternal: true
  name: LineRenderer
  nameWithType: LineRenderer
  fullName: UnityEngine.LineRenderer
- uid: Global.Aura.AuraDischargeOption
  commentId: T:Global.Aura.AuraDischargeOption
  name: Aura.AuraDischargeOption
  nameWithType: Aura.AuraDischargeOption
  fullName: Aura.AuraDischargeOption
  spec.csharp:
  - uid: Global.Aura
    name: Aura
  - name: .
  - uid: Global.Aura.AuraDischargeOption
    name: AuraDischargeOption
  spec.vb:
  - uid: Global.Aura
    name: Aura
  - name: .
  - uid: Global.Aura.AuraDischargeOption
    name: AuraDischargeOption
- uid: Global.Aura.AuraCallback
  commentId: T:Global.Aura.AuraCallback
  name: Aura.AuraCallback
  nameWithType: Aura.AuraCallback
  fullName: Aura.AuraCallback
  spec.csharp:
  - uid: Global.Aura
    name: Aura
  - name: .
  - uid: Global.Aura.AuraCallback
    name: AuraCallback
  spec.vb:
  - uid: Global.Aura
    name: Aura
  - name: .
  - uid: Global.Aura.AuraCallback
    name: AuraCallback
- uid: Global.CatmullRomSpline.CustomEndpoint
  commentId: T:Global.CatmullRomSpline.CustomEndpoint
  name: CatmullRomSpline.CustomEndpoint
  nameWithType: CatmullRomSpline.CustomEndpoint
  fullName: CatmullRomSpline.CustomEndpoint
  spec.csharp:
  - uid: Global.CatmullRomSpline
    name: CatmullRomSpline
  - name: .
  - uid: Global.CatmullRomSpline.CustomEndpoint
    name: CustomEndpoint
  spec.vb:
  - uid: Global.CatmullRomSpline
    name: CatmullRomSpline
  - name: .
  - uid: Global.CatmullRomSpline.CustomEndpoint
    name: CustomEndpoint
- uid: Global.AutoMergeAura
  commentId: T:Global.AutoMergeAura
  name: AutoMergeAura
  nameWithType: AutoMergeAura
  fullName: AutoMergeAura
- uid: UnityEngine.Color
  commentId: T:UnityEngine.Color
  parent: UnityEngine
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.CatmullRomSpline
  commentId: T:Global.CatmullRomSpline
  name: CatmullRomSpline
  nameWithType: CatmullRomSpline
  fullName: CatmullRomSpline
- uid: Global.Aura.isIndicator*
  commentId: Overload:Global.Aura.isIndicator
  name: isIndicator
  nameWithType: Aura.isIndicator
  fullName: Aura.isIndicator
- uid: Global.Aura.Start*
  commentId: Overload:Global.Aura.Start
  name: Start
  nameWithType: Aura.Start
  fullName: Aura.Start
- uid: Global.Aura.Awake*
  commentId: Overload:Global.Aura.Awake
  name: Awake
  nameWithType: Aura.Awake
  fullName: Aura.Awake
- uid: Global.IntObject.ResetObject
  commentId: M:Global.IntObject.ResetObject
  parent: Global.IntObject
  name: ResetObject()
  nameWithType: IntObject.ResetObject()
  fullName: IntObject.ResetObject()
  spec.csharp:
  - uid: Global.IntObject.ResetObject
    name: ResetObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.ResetObject
    name: ResetObject
  - name: (
  - name: )
- uid: Global.Aura.ResetObject*
  commentId: Overload:Global.Aura.ResetObject
  name: ResetObject
  nameWithType: Aura.ResetObject
  fullName: Aura.ResetObject
- uid: Global.Aura.AutoMergeManagedReset*
  commentId: Overload:Global.Aura.AutoMergeManagedReset
  name: AutoMergeManagedReset
  nameWithType: Aura.AutoMergeManagedReset
  fullName: Aura.AutoMergeManagedReset
- uid: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: Overlaps(IntObject, Vector2Int)
  nameWithType: IntObject.Overlaps(IntObject, Vector2Int)
  fullName: IntObject.Overlaps(IntObject, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.Aura.Overlaps*
  commentId: Overload:Global.Aura.Overlaps
  name: Overlaps
  nameWithType: Aura.Overlaps
  fullName: Aura.Overlaps
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  commentId: M:Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  parent: Global.IntObject
  isExternal: true
  name: IsContainedInRect(Rect)
  nameWithType: IntObject.IsContainedInRect(Rect)
  fullName: IntObject.IsContainedInRect(UnityEngine.Rect)
  spec.csharp:
  - uid: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
    name: IsContainedInRect
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
    name: IsContainedInRect
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: )
- uid: Global.Aura.IsContainedInRect*
  commentId: Overload:Global.Aura.IsContainedInRect
  name: IsContainedInRect
  nameWithType: Aura.IsContainedInRect
  fullName: Aura.IsContainedInRect
- uid: UnityEngine.Rect
  commentId: T:UnityEngine.Rect
  parent: UnityEngine
  isExternal: true
  name: Rect
  nameWithType: Rect
  fullName: UnityEngine.Rect
- uid: Global.Aura.StartIndicator*
  commentId: Overload:Global.Aura.StartIndicator
  name: StartIndicator
  nameWithType: Aura.StartIndicator
  fullName: Aura.StartIndicator
- uid: Global.Aura.EndIndicator*
  commentId: Overload:Global.Aura.EndIndicator
  name: EndIndicator
  nameWithType: Aura.EndIndicator
  fullName: Aura.EndIndicator
- uid: Global.Aura.RegisterColliderChangeHook*
  commentId: Overload:Global.Aura.RegisterColliderChangeHook
  name: RegisterColliderChangeHook
  nameWithType: Aura.RegisterColliderChangeHook
  fullName: Aura.RegisterColliderChangeHook
- uid: Global.Aura.FlashAura*
  commentId: Overload:Global.Aura.FlashAura
  name: FlashAura
  nameWithType: Aura.FlashAura
  fullName: Aura.FlashAura
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.Aura.FlushColliderChanges*
  commentId: Overload:Global.Aura.FlushColliderChanges
  name: FlushColliderChanges
  nameWithType: Aura.FlushColliderChanges
  fullName: Aura.FlushColliderChanges
- uid: Global.Aura.AttemptDischarge*
  commentId: Overload:Global.Aura.AttemptDischarge
  name: AttemptDischarge
  nameWithType: Aura.AttemptDischarge
  fullName: Aura.AttemptDischarge
- uid: Global.Aura.FlushColliderUsingSpline*
  commentId: Overload:Global.Aura.FlushColliderUsingSpline
  name: FlushColliderUsingSpline
  nameWithType: Aura.FlushColliderUsingSpline
  fullName: Aura.FlushColliderUsingSpline
- uid: Global.Aura.GetPositionAlongAuraAtDistance*
  commentId: Overload:Global.Aura.GetPositionAlongAuraAtDistance
  name: GetPositionAlongAuraAtDistance
  nameWithType: Aura.GetPositionAlongAuraAtDistance
  fullName: Aura.GetPositionAlongAuraAtDistance
- uid: Global.Aura.GetTangentAlongAuraAtDistance*
  commentId: Overload:Global.Aura.GetTangentAlongAuraAtDistance
  name: GetTangentAlongAuraAtDistance
  nameWithType: Aura.GetTangentAlongAuraAtDistance
  fullName: Aura.GetTangentAlongAuraAtDistance
- uid: Global.Aura.GetRightAlongAuraAtDistance*
  commentId: Overload:Global.Aura.GetRightAlongAuraAtDistance
  name: GetRightAlongAuraAtDistance
  nameWithType: Aura.GetRightAlongAuraAtDistance
  fullName: Aura.GetRightAlongAuraAtDistance
- uid: Global.Aura.GetAuraLength*
  commentId: Overload:Global.Aura.GetAuraLength
  name: GetAuraLength
  nameWithType: Aura.GetAuraLength
  fullName: Aura.GetAuraLength
- uid: Global.Aura.SetToCircle*
  commentId: Overload:Global.Aura.SetToCircle
  name: SetToCircle
  nameWithType: Aura.SetToCircle
  fullName: Aura.SetToCircle
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.Aura.GetCirclePoints*
  commentId: Overload:Global.Aura.GetCirclePoints
  name: GetCirclePoints
  nameWithType: Aura.GetCirclePoints
  fullName: Aura.GetCirclePoints
- uid: System.Collections.Generic.List{UnityEngine.Vector2Int}
  commentId: T:System.Collections.Generic.List{UnityEngine.Vector2Int}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Vector2Int>
  nameWithType: List<Vector2Int>
  fullName: System.Collections.Generic.List<UnityEngine.Vector2Int>
  nameWithType.vb: List(Of Vector2Int)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Vector2Int)
  name.vb: List(Of Vector2Int)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: Global.Aura.SetToArc*
  commentId: Overload:Global.Aura.SetToArc
  name: SetToArc
  nameWithType: Aura.SetToArc
  fullName: Aura.SetToArc
- uid: Global.Aura.SetToPolarFunction*
  commentId: Overload:Global.Aura.SetToPolarFunction
  name: SetToPolarFunction
  nameWithType: Aura.SetToPolarFunction
  fullName: Aura.SetToPolarFunction
- uid: Global.Aura.PolarFunction
  commentId: T:Global.Aura.PolarFunction
  name: Aura.PolarFunction
  nameWithType: Aura.PolarFunction
  fullName: Aura.PolarFunction
  spec.csharp:
  - uid: Global.Aura
    name: Aura
  - name: .
  - uid: Global.Aura.PolarFunction
    name: PolarFunction
  spec.vb:
  - uid: Global.Aura
    name: Aura
  - name: .
  - uid: Global.Aura.PolarFunction
    name: PolarFunction
- uid: Global.Aura.SetToLine*
  commentId: Overload:Global.Aura.SetToLine
  name: SetToLine
  nameWithType: Aura.SetToLine
  fullName: Aura.SetToLine
- uid: Global.Aura.SetToFunction*
  commentId: Overload:Global.Aura.SetToFunction
  name: SetToFunction
  nameWithType: Aura.SetToFunction
  fullName: Aura.SetToFunction
- uid: Global.Aura.ShapeFunction
  commentId: T:Global.Aura.ShapeFunction
  name: Aura.ShapeFunction
  nameWithType: Aura.ShapeFunction
  fullName: Aura.ShapeFunction
  spec.csharp:
  - uid: Global.Aura
    name: Aura
  - name: .
  - uid: Global.Aura.ShapeFunction
    name: ShapeFunction
  spec.vb:
  - uid: Global.Aura
    name: Aura
  - name: .
  - uid: Global.Aura.ShapeFunction
    name: ShapeFunction
- uid: Global.Aura.SetCurrentAsUnscaled*
  commentId: Overload:Global.Aura.SetCurrentAsUnscaled
  name: SetCurrentAsUnscaled
  nameWithType: Aura.SetCurrentAsUnscaled
  fullName: Aura.SetCurrentAsUnscaled
- uid: Global.Aura.SetAuraKillsPlayer*
  commentId: Overload:Global.Aura.SetAuraKillsPlayer
  name: SetAuraKillsPlayer
  nameWithType: Aura.SetAuraKillsPlayer
  fullName: Aura.SetAuraKillsPlayer
- uid: Global.Aura.SetClosedLoop*
  commentId: Overload:Global.Aura.SetClosedLoop
  name: SetClosedLoop
  nameWithType: Aura.SetClosedLoop
  fullName: Aura.SetClosedLoop
- uid: Global.Aura.IsClosedLoop*
  commentId: Overload:Global.Aura.IsClosedLoop
  name: IsClosedLoop
  nameWithType: Aura.IsClosedLoop
  fullName: Aura.IsClosedLoop
- uid: Global.Aura.SetWidthCurve*
  commentId: Overload:Global.Aura.SetWidthCurve
  name: SetWidthCurve
  nameWithType: Aura.SetWidthCurve
  fullName: Aura.SetWidthCurve
- uid: UnityEngine.AnimationCurve
  commentId: T:UnityEngine.AnimationCurve
  parent: UnityEngine
  isExternal: true
  name: AnimationCurve
  nameWithType: AnimationCurve
  fullName: UnityEngine.AnimationCurve
- uid: Global.Aura.SetUniformWidth*
  commentId: Overload:Global.Aura.SetUniformWidth
  name: SetUniformWidth
  nameWithType: Aura.SetUniformWidth
  fullName: Aura.SetUniformWidth
- uid: Global.Aura.SetStartWidth*
  commentId: Overload:Global.Aura.SetStartWidth
  name: SetStartWidth
  nameWithType: Aura.SetStartWidth
  fullName: Aura.SetStartWidth
- uid: Global.Aura.SetEndWidth*
  commentId: Overload:Global.Aura.SetEndWidth
  name: SetEndWidth
  nameWithType: Aura.SetEndWidth
  fullName: Aura.SetEndWidth
- uid: Global.Aura.GetWidthCurve*
  commentId: Overload:Global.Aura.GetWidthCurve
  name: GetWidthCurve
  nameWithType: Aura.GetWidthCurve
  fullName: Aura.GetWidthCurve
- uid: Global.Aura.GetStartWidth*
  commentId: Overload:Global.Aura.GetStartWidth
  name: GetStartWidth
  nameWithType: Aura.GetStartWidth
  fullName: Aura.GetStartWidth
- uid: Global.Aura.GetEndWidth*
  commentId: Overload:Global.Aura.GetEndWidth
  name: GetEndWidth
  nameWithType: Aura.GetEndWidth
  fullName: Aura.GetEndWidth
- uid: Global.Aura.IsAutoMergeAura*
  commentId: Overload:Global.Aura.IsAutoMergeAura
  name: IsAutoMergeAura
  nameWithType: Aura.IsAutoMergeAura
  fullName: Aura.IsAutoMergeAura
- uid: Global.Aura.DisableAura*
  commentId: Overload:Global.Aura.DisableAura
  name: DisableAura
  nameWithType: Aura.DisableAura
  fullName: Aura.DisableAura
- uid: Global.Aura.EnableAura*
  commentId: Overload:Global.Aura.EnableAura
  name: EnableAura
  nameWithType: Aura.EnableAura
  fullName: Aura.EnableAura
- uid: Global.Aura.IsAuraActive*
  commentId: Overload:Global.Aura.IsAuraActive
  name: IsAuraActive
  nameWithType: Aura.IsAuraActive
  fullName: Aura.IsAuraActive
- uid: Global.Aura.SetAuraWidth*
  commentId: Overload:Global.Aura.SetAuraWidth
  name: SetAuraWidth
  nameWithType: Aura.SetAuraWidth
  fullName: Aura.SetAuraWidth
- uid: Global.Aura.GetAutoMergeAura*
  commentId: Overload:Global.Aura.GetAutoMergeAura
  name: GetAutoMergeAura
  nameWithType: Aura.GetAutoMergeAura
  fullName: Aura.GetAutoMergeAura
- uid: Global.Aura.SetAutoMergeAura*
  commentId: Overload:Global.Aura.SetAutoMergeAura
  name: SetAutoMergeAura
  nameWithType: Aura.SetAutoMergeAura
  fullName: Aura.SetAutoMergeAura
- uid: Global.Aura.GetAuraScale*
  commentId: Overload:Global.Aura.GetAuraScale
  name: GetAuraScale
  nameWithType: Aura.GetAuraScale
  fullName: Aura.GetAuraScale
- uid: Global.Aura.SetAuraScale*
  commentId: Overload:Global.Aura.SetAuraScale
  name: SetAuraScale
  nameWithType: Aura.SetAuraScale
  fullName: Aura.SetAuraScale
- uid: Global.Aura.ScaleAura*
  commentId: Overload:Global.Aura.ScaleAura
  name: ScaleAura
  nameWithType: Aura.ScaleAura
  fullName: Aura.ScaleAura
- uid: Global.Aura.UseWorldSpace*
  commentId: Overload:Global.Aura.UseWorldSpace
  name: UseWorldSpace
  nameWithType: Aura.UseWorldSpace
  fullName: Aura.UseWorldSpace
- uid: Global.Aura.OnDrawGizmosSelected*
  commentId: Overload:Global.Aura.OnDrawGizmosSelected
  name: OnDrawGizmosSelected
  nameWithType: Aura.OnDrawGizmosSelected
  fullName: Aura.OnDrawGizmosSelected
