### YamlMime:ManagedReference
items:
- uid: Global.PointOfInterest
  commentId: T:Global.PointOfInterest
  id: PointOfInterest
  parent: Global
  children:
  - Global.PointOfInterest.ControlType
  - Global.PointOfInterest.HalfHeight
  - Global.PointOfInterest.HalfWidth
  langs:
  - csharp
  - vb
  name: PointOfInterest
  nameWithType: PointOfInterest
  fullName: PointOfInterest
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/World/Binoculars/PointOfInterest.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PointOfInterest
    path: ../Assets/Objects & Components/World/Binoculars/PointOfInterest.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class PointOfInterest : MonoBehaviour'
    content.vb: Public Class PointOfInterest Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.PointOfInterest.ControlType
  commentId: F:Global.PointOfInterest.ControlType
  id: ControlType
  parent: Global.PointOfInterest
  langs:
  - csharp
  - vb
  name: ControlType
  nameWithType: PointOfInterest.ControlType
  fullName: PointOfInterest.ControlType
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Binoculars/PointOfInterest.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ControlType
    path: ../Assets/Objects & Components/World/Binoculars/PointOfInterest.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public PointOfInterest.DimensionControlType ControlType
    return:
      type: Global.PointOfInterest.DimensionControlType
    content.vb: Public ControlType As PointOfInterest.DimensionControlType
- uid: Global.PointOfInterest.HalfHeight
  commentId: F:Global.PointOfInterest.HalfHeight
  id: HalfHeight
  parent: Global.PointOfInterest
  langs:
  - csharp
  - vb
  name: HalfHeight
  nameWithType: PointOfInterest.HalfHeight
  fullName: PointOfInterest.HalfHeight
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Binoculars/PointOfInterest.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: HalfHeight
    path: ../Assets/Objects & Components/World/Binoculars/PointOfInterest.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("ControlType", 1)]

      public float HalfHeight
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("ControlType", 1)>

      Public HalfHeight As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: ControlType
    - type: System.Int32
      value: 1
- uid: Global.PointOfInterest.HalfWidth
  commentId: F:Global.PointOfInterest.HalfWidth
  id: HalfWidth
  parent: Global.PointOfInterest
  langs:
  - csharp
  - vb
  name: HalfWidth
  nameWithType: PointOfInterest.HalfWidth
  fullName: PointOfInterest.HalfWidth
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Binoculars/PointOfInterest.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: HalfWidth
    path: ../Assets/Objects & Components/World/Binoculars/PointOfInterest.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("ControlType", 0)]

      public float HalfWidth
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("ControlType", 0)>

      Public HalfWidth As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: ControlType
    - type: System.Int32
      value: 0
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.PointOfInterest.DimensionControlType
  commentId: T:Global.PointOfInterest.DimensionControlType
  name: PointOfInterest.DimensionControlType
  nameWithType: PointOfInterest.DimensionControlType
  fullName: PointOfInterest.DimensionControlType
  spec.csharp:
  - uid: Global.PointOfInterest
    name: PointOfInterest
  - name: .
  - uid: Global.PointOfInterest.DimensionControlType
    name: DimensionControlType
  spec.vb:
  - uid: Global.PointOfInterest
    name: PointOfInterest
  - name: .
  - uid: Global.PointOfInterest.DimensionControlType
    name: DimensionControlType
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
