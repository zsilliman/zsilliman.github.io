### YamlMime:ManagedReference
items:
- uid: Global.ProceduralPlatformPlacer
  commentId: T:Global.ProceduralPlatformPlacer
  id: ProceduralPlatformPlacer
  parent: Global
  children:
  - Global.ProceduralPlatformPlacer.CreateEvenGrid(UnityEngine.RectInt,UnityEngine.Vector2Int)
  - Global.ProceduralPlatformPlacer.CreateUnevenGrid(ProceduralPlatformPlacer.PlatformPlacerParams)
  - Global.ProceduralPlatformPlacer.FillUnevenGrid(ProceduralPlatformPlacer.GridBase,System.Int32,System.Int32)
  - Global.ProceduralPlatformPlacer.GenerateBlockPlatform(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,UnityEngine.RectInt)
  - Global.ProceduralPlatformPlacer.GenerateFlatPlatform(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,UnityEngine.RectInt)
  - Global.ProceduralPlatformPlacer.GenerateFloatingIslandPlatform(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,UnityEngine.RectInt)
  - Global.ProceduralPlatformPlacer.GenerateHalfBlockPlatform(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,UnityEngine.RectInt)
  - Global.ProceduralPlatformPlacer.GeneratePlatforms(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,ProceduralPlatformPlacer.GridBase,UnityEngine.Vector2Int)
  - Global.ProceduralPlatformPlacer.GenerateSinglePlatform(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,ProceduralPlatformPlacer.GridBase,UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  - Global.ProceduralPlatformPlacer.GenRandomPlatformOfSize(UnityEngine.Vector2Int)
  - Global.ProceduralPlatformPlacer.GetCellSizeOfEvenGrid(UnityEngine.RectInt,UnityEngine.Vector2Int)
  - Global.ProceduralPlatformPlacer.PlaceSinglePlatform(System.Collections.Generic.List{UnityEngine.Vector2Int},ProceduralPlatformPlacer.GridBase,UnityEngine.RectInt)
  langs:
  - csharp
  - vb
  name: ProceduralPlatformPlacer
  nameWithType: ProceduralPlatformPlacer
  fullName: ProceduralPlatformPlacer
  type: Class
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ProceduralPlatformPlacer
    path: ../Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
    startLine: 5
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static class ProceduralPlatformPlacer
    content.vb: Public Module ProceduralPlatformPlacer
  inheritance:
  - System.Object
- uid: Global.ProceduralPlatformPlacer.CreateUnevenGrid(ProceduralPlatformPlacer.PlatformPlacerParams)
  commentId: M:Global.ProceduralPlatformPlacer.CreateUnevenGrid(ProceduralPlatformPlacer.PlatformPlacerParams)
  id: CreateUnevenGrid(ProceduralPlatformPlacer.PlatformPlacerParams)
  parent: Global.ProceduralPlatformPlacer
  langs:
  - csharp
  - vb
  name: CreateUnevenGrid(PlatformPlacerParams)
  nameWithType: ProceduralPlatformPlacer.CreateUnevenGrid(ProceduralPlatformPlacer.PlatformPlacerParams)
  fullName: ProceduralPlatformPlacer.CreateUnevenGrid(ProceduralPlatformPlacer.PlatformPlacerParams)
  type: Method
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CreateUnevenGrid
    path: ../Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
    startLine: 149
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static ProceduralPlatformPlacer.UnevenGrid CreateUnevenGrid(ProceduralPlatformPlacer.PlatformPlacerParams ppp)
    parameters:
    - id: ppp
      type: Global.ProceduralPlatformPlacer.PlatformPlacerParams
    return:
      type: Global.ProceduralPlatformPlacer.UnevenGrid
    content.vb: Public Shared Function CreateUnevenGrid(ppp As ProceduralPlatformPlacer.PlatformPlacerParams) As ProceduralPlatformPlacer.UnevenGrid
  overload: Global.ProceduralPlatformPlacer.CreateUnevenGrid*
- uid: Global.ProceduralPlatformPlacer.CreateEvenGrid(UnityEngine.RectInt,UnityEngine.Vector2Int)
  commentId: M:Global.ProceduralPlatformPlacer.CreateEvenGrid(UnityEngine.RectInt,UnityEngine.Vector2Int)
  id: CreateEvenGrid(UnityEngine.RectInt,UnityEngine.Vector2Int)
  parent: Global.ProceduralPlatformPlacer
  langs:
  - csharp
  - vb
  name: CreateEvenGrid(RectInt, Vector2Int)
  nameWithType: ProceduralPlatformPlacer.CreateEvenGrid(RectInt, Vector2Int)
  fullName: ProceduralPlatformPlacer.CreateEvenGrid(UnityEngine.RectInt, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CreateEvenGrid
    path: ../Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
    startLine: 158
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static ProceduralPlatformPlacer.EvenGrid CreateEvenGrid(RectInt Container, Vector2Int PreferredCellCounts)
    parameters:
    - id: Container
      type: UnityEngine.RectInt
    - id: PreferredCellCounts
      type: UnityEngine.Vector2Int
    return:
      type: Global.ProceduralPlatformPlacer.EvenGrid
    content.vb: Public Shared Function CreateEvenGrid(Container As RectInt, PreferredCellCounts As Vector2Int) As ProceduralPlatformPlacer.EvenGrid
  overload: Global.ProceduralPlatformPlacer.CreateEvenGrid*
- uid: Global.ProceduralPlatformPlacer.GetCellSizeOfEvenGrid(UnityEngine.RectInt,UnityEngine.Vector2Int)
  commentId: M:Global.ProceduralPlatformPlacer.GetCellSizeOfEvenGrid(UnityEngine.RectInt,UnityEngine.Vector2Int)
  id: GetCellSizeOfEvenGrid(UnityEngine.RectInt,UnityEngine.Vector2Int)
  parent: Global.ProceduralPlatformPlacer
  langs:
  - csharp
  - vb
  name: GetCellSizeOfEvenGrid(RectInt, Vector2Int)
  nameWithType: ProceduralPlatformPlacer.GetCellSizeOfEvenGrid(RectInt, Vector2Int)
  fullName: ProceduralPlatformPlacer.GetCellSizeOfEvenGrid(UnityEngine.RectInt, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetCellSizeOfEvenGrid
    path: ../Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
    startLine: 169
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static Vector2Int GetCellSizeOfEvenGrid(RectInt Container, Vector2Int PreferredCellCounts)
    parameters:
    - id: Container
      type: UnityEngine.RectInt
    - id: PreferredCellCounts
      type: UnityEngine.Vector2Int
    return:
      type: UnityEngine.Vector2Int
    content.vb: Public Shared Function GetCellSizeOfEvenGrid(Container As RectInt, PreferredCellCounts As Vector2Int) As Vector2Int
  overload: Global.ProceduralPlatformPlacer.GetCellSizeOfEvenGrid*
- uid: Global.ProceduralPlatformPlacer.GenRandomPlatformOfSize(UnityEngine.Vector2Int)
  commentId: M:Global.ProceduralPlatformPlacer.GenRandomPlatformOfSize(UnityEngine.Vector2Int)
  id: GenRandomPlatformOfSize(UnityEngine.Vector2Int)
  parent: Global.ProceduralPlatformPlacer
  langs:
  - csharp
  - vb
  name: GenRandomPlatformOfSize(Vector2Int)
  nameWithType: ProceduralPlatformPlacer.GenRandomPlatformOfSize(Vector2Int)
  fullName: ProceduralPlatformPlacer.GenRandomPlatformOfSize(UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GenRandomPlatformOfSize
    path: ../Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
    startLine: 216
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static List<Vector2Int> GenRandomPlatformOfSize(Vector2Int size)
    parameters:
    - id: size
      type: UnityEngine.Vector2Int
    return:
      type: System.Collections.Generic.List{UnityEngine.Vector2Int}
    content.vb: Public Shared Function GenRandomPlatformOfSize(size As Vector2Int) As List(Of Vector2Int)
  overload: Global.ProceduralPlatformPlacer.GenRandomPlatformOfSize*
- uid: Global.ProceduralPlatformPlacer.PlaceSinglePlatform(System.Collections.Generic.List{UnityEngine.Vector2Int},ProceduralPlatformPlacer.GridBase,UnityEngine.RectInt)
  commentId: M:Global.ProceduralPlatformPlacer.PlaceSinglePlatform(System.Collections.Generic.List{UnityEngine.Vector2Int},ProceduralPlatformPlacer.GridBase,UnityEngine.RectInt)
  id: PlaceSinglePlatform(System.Collections.Generic.List{UnityEngine.Vector2Int},ProceduralPlatformPlacer.GridBase,UnityEngine.RectInt)
  parent: Global.ProceduralPlatformPlacer
  langs:
  - csharp
  - vb
  name: PlaceSinglePlatform(List<Vector2Int>, GridBase, RectInt)
  nameWithType: ProceduralPlatformPlacer.PlaceSinglePlatform(List<Vector2Int>, ProceduralPlatformPlacer.GridBase, RectInt)
  fullName: ProceduralPlatformPlacer.PlaceSinglePlatform(System.Collections.Generic.List<UnityEngine.Vector2Int>, ProceduralPlatformPlacer.GridBase, UnityEngine.RectInt)
  type: Method
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PlaceSinglePlatform
    path: ../Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
    startLine: 269
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static void PlaceSinglePlatform(List<Vector2Int> indices, ProceduralPlatformPlacer.GridBase grid, RectInt platformRect)
    parameters:
    - id: indices
      type: System.Collections.Generic.List{UnityEngine.Vector2Int}
    - id: grid
      type: Global.ProceduralPlatformPlacer.GridBase
    - id: platformRect
      type: UnityEngine.RectInt
    content.vb: Public Shared Sub PlaceSinglePlatform(indices As List(Of Vector2Int), grid As ProceduralPlatformPlacer.GridBase, platformRect As RectInt)
  overload: Global.ProceduralPlatformPlacer.PlaceSinglePlatform*
  nameWithType.vb: ProceduralPlatformPlacer.PlaceSinglePlatform(List(Of Vector2Int), ProceduralPlatformPlacer.GridBase, RectInt)
  fullName.vb: ProceduralPlatformPlacer.PlaceSinglePlatform(System.Collections.Generic.List(Of UnityEngine.Vector2Int), ProceduralPlatformPlacer.GridBase, UnityEngine.RectInt)
  name.vb: PlaceSinglePlatform(List(Of Vector2Int), GridBase, RectInt)
- uid: Global.ProceduralPlatformPlacer.FillUnevenGrid(ProceduralPlatformPlacer.GridBase,System.Int32,System.Int32)
  commentId: M:Global.ProceduralPlatformPlacer.FillUnevenGrid(ProceduralPlatformPlacer.GridBase,System.Int32,System.Int32)
  id: FillUnevenGrid(ProceduralPlatformPlacer.GridBase,System.Int32,System.Int32)
  parent: Global.ProceduralPlatformPlacer
  langs:
  - csharp
  - vb
  name: FillUnevenGrid(GridBase, int, int)
  nameWithType: ProceduralPlatformPlacer.FillUnevenGrid(ProceduralPlatformPlacer.GridBase, int, int)
  fullName: ProceduralPlatformPlacer.FillUnevenGrid(ProceduralPlatformPlacer.GridBase, int, int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: FillUnevenGrid
    path: ../Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
    startLine: 338
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static void FillUnevenGrid(ProceduralPlatformPlacer.GridBase grid, int min_platform_size, int max_platform_size)
    parameters:
    - id: grid
      type: Global.ProceduralPlatformPlacer.GridBase
    - id: min_platform_size
      type: System.Int32
    - id: max_platform_size
      type: System.Int32
    content.vb: Public Shared Sub FillUnevenGrid(grid As ProceduralPlatformPlacer.GridBase, min_platform_size As Integer, max_platform_size As Integer)
  overload: Global.ProceduralPlatformPlacer.FillUnevenGrid*
  nameWithType.vb: ProceduralPlatformPlacer.FillUnevenGrid(ProceduralPlatformPlacer.GridBase, Integer, Integer)
  fullName.vb: ProceduralPlatformPlacer.FillUnevenGrid(ProceduralPlatformPlacer.GridBase, Integer, Integer)
  name.vb: FillUnevenGrid(GridBase, Integer, Integer)
- uid: Global.ProceduralPlatformPlacer.GeneratePlatforms(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,ProceduralPlatformPlacer.GridBase,UnityEngine.Vector2Int)
  commentId: M:Global.ProceduralPlatformPlacer.GeneratePlatforms(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,ProceduralPlatformPlacer.GridBase,UnityEngine.Vector2Int)
  id: GeneratePlatforms(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,ProceduralPlatformPlacer.GridBase,UnityEngine.Vector2Int)
  parent: Global.ProceduralPlatformPlacer
  langs:
  - csharp
  - vb
  name: GeneratePlatforms(Tilemap, TileBase, GridBase, Vector2Int)
  nameWithType: ProceduralPlatformPlacer.GeneratePlatforms(Tilemap, TileBase, ProceduralPlatformPlacer.GridBase, Vector2Int)
  fullName: ProceduralPlatformPlacer.GeneratePlatforms(UnityEngine.Tilemaps.Tilemap, UnityEngine.Tilemaps.TileBase, ProceduralPlatformPlacer.GridBase, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GeneratePlatforms
    path: ../Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
    startLine: 373
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static void GeneratePlatforms(Tilemap map, TileBase tile, ProceduralPlatformPlacer.GridBase grid, Vector2Int tile_offset)
    parameters:
    - id: map
      type: UnityEngine.Tilemaps.Tilemap
    - id: tile
      type: UnityEngine.Tilemaps.TileBase
    - id: grid
      type: Global.ProceduralPlatformPlacer.GridBase
    - id: tile_offset
      type: UnityEngine.Vector2Int
    content.vb: Public Shared Sub GeneratePlatforms(map As Tilemap, tile As TileBase, grid As ProceduralPlatformPlacer.GridBase, tile_offset As Vector2Int)
  overload: Global.ProceduralPlatformPlacer.GeneratePlatforms*
- uid: Global.ProceduralPlatformPlacer.GenerateSinglePlatform(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,ProceduralPlatformPlacer.GridBase,UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  commentId: M:Global.ProceduralPlatformPlacer.GenerateSinglePlatform(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,ProceduralPlatformPlacer.GridBase,UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  id: GenerateSinglePlatform(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,ProceduralPlatformPlacer.GridBase,UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  parent: Global.ProceduralPlatformPlacer
  langs:
  - csharp
  - vb
  name: GenerateSinglePlatform(Tilemap, TileBase, GridBase, Vector2Int, Vector2Int)
  nameWithType: ProceduralPlatformPlacer.GenerateSinglePlatform(Tilemap, TileBase, ProceduralPlatformPlacer.GridBase, Vector2Int, Vector2Int)
  fullName: ProceduralPlatformPlacer.GenerateSinglePlatform(UnityEngine.Tilemaps.Tilemap, UnityEngine.Tilemaps.TileBase, ProceduralPlatformPlacer.GridBase, UnityEngine.Vector2Int, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GenerateSinglePlatform
    path: ../Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
    startLine: 385
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static void GenerateSinglePlatform(Tilemap map, TileBase tile, ProceduralPlatformPlacer.GridBase grid, Vector2Int tile_offset, Vector2Int index)
    parameters:
    - id: map
      type: UnityEngine.Tilemaps.Tilemap
    - id: tile
      type: UnityEngine.Tilemaps.TileBase
    - id: grid
      type: Global.ProceduralPlatformPlacer.GridBase
    - id: tile_offset
      type: UnityEngine.Vector2Int
    - id: index
      type: UnityEngine.Vector2Int
    content.vb: Public Shared Sub GenerateSinglePlatform(map As Tilemap, tile As TileBase, grid As ProceduralPlatformPlacer.GridBase, tile_offset As Vector2Int, index As Vector2Int)
  overload: Global.ProceduralPlatformPlacer.GenerateSinglePlatform*
- uid: Global.ProceduralPlatformPlacer.GenerateFlatPlatform(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,UnityEngine.RectInt)
  commentId: M:Global.ProceduralPlatformPlacer.GenerateFlatPlatform(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,UnityEngine.RectInt)
  id: GenerateFlatPlatform(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,UnityEngine.RectInt)
  parent: Global.ProceduralPlatformPlacer
  langs:
  - csharp
  - vb
  name: GenerateFlatPlatform(Tilemap, TileBase, RectInt)
  nameWithType: ProceduralPlatformPlacer.GenerateFlatPlatform(Tilemap, TileBase, RectInt)
  fullName: ProceduralPlatformPlacer.GenerateFlatPlatform(UnityEngine.Tilemaps.Tilemap, UnityEngine.Tilemaps.TileBase, UnityEngine.RectInt)
  type: Method
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GenerateFlatPlatform
    path: ../Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
    startLine: 415
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static void GenerateFlatPlatform(Tilemap map, TileBase tile, RectInt region)
    parameters:
    - id: map
      type: UnityEngine.Tilemaps.Tilemap
    - id: tile
      type: UnityEngine.Tilemaps.TileBase
    - id: region
      type: UnityEngine.RectInt
    content.vb: Public Shared Sub GenerateFlatPlatform(map As Tilemap, tile As TileBase, region As RectInt)
  overload: Global.ProceduralPlatformPlacer.GenerateFlatPlatform*
- uid: Global.ProceduralPlatformPlacer.GenerateFloatingIslandPlatform(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,UnityEngine.RectInt)
  commentId: M:Global.ProceduralPlatformPlacer.GenerateFloatingIslandPlatform(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,UnityEngine.RectInt)
  id: GenerateFloatingIslandPlatform(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,UnityEngine.RectInt)
  parent: Global.ProceduralPlatformPlacer
  langs:
  - csharp
  - vb
  name: GenerateFloatingIslandPlatform(Tilemap, TileBase, RectInt)
  nameWithType: ProceduralPlatformPlacer.GenerateFloatingIslandPlatform(Tilemap, TileBase, RectInt)
  fullName: ProceduralPlatformPlacer.GenerateFloatingIslandPlatform(UnityEngine.Tilemaps.Tilemap, UnityEngine.Tilemaps.TileBase, UnityEngine.RectInt)
  type: Method
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GenerateFloatingIslandPlatform
    path: ../Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
    startLine: 420
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static void GenerateFloatingIslandPlatform(Tilemap map, TileBase tile, RectInt region)
    parameters:
    - id: map
      type: UnityEngine.Tilemaps.Tilemap
    - id: tile
      type: UnityEngine.Tilemaps.TileBase
    - id: region
      type: UnityEngine.RectInt
    content.vb: Public Shared Sub GenerateFloatingIslandPlatform(map As Tilemap, tile As TileBase, region As RectInt)
  overload: Global.ProceduralPlatformPlacer.GenerateFloatingIslandPlatform*
- uid: Global.ProceduralPlatformPlacer.GenerateBlockPlatform(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,UnityEngine.RectInt)
  commentId: M:Global.ProceduralPlatformPlacer.GenerateBlockPlatform(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,UnityEngine.RectInt)
  id: GenerateBlockPlatform(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,UnityEngine.RectInt)
  parent: Global.ProceduralPlatformPlacer
  langs:
  - csharp
  - vb
  name: GenerateBlockPlatform(Tilemap, TileBase, RectInt)
  nameWithType: ProceduralPlatformPlacer.GenerateBlockPlatform(Tilemap, TileBase, RectInt)
  fullName: ProceduralPlatformPlacer.GenerateBlockPlatform(UnityEngine.Tilemaps.Tilemap, UnityEngine.Tilemaps.TileBase, UnityEngine.RectInt)
  type: Method
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GenerateBlockPlatform
    path: ../Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
    startLine: 441
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static void GenerateBlockPlatform(Tilemap map, TileBase tile, RectInt region)
    parameters:
    - id: map
      type: UnityEngine.Tilemaps.Tilemap
    - id: tile
      type: UnityEngine.Tilemaps.TileBase
    - id: region
      type: UnityEngine.RectInt
    content.vb: Public Shared Sub GenerateBlockPlatform(map As Tilemap, tile As TileBase, region As RectInt)
  overload: Global.ProceduralPlatformPlacer.GenerateBlockPlatform*
- uid: Global.ProceduralPlatformPlacer.GenerateHalfBlockPlatform(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,UnityEngine.RectInt)
  commentId: M:Global.ProceduralPlatformPlacer.GenerateHalfBlockPlatform(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,UnityEngine.RectInt)
  id: GenerateHalfBlockPlatform(UnityEngine.Tilemaps.Tilemap,UnityEngine.Tilemaps.TileBase,UnityEngine.RectInt)
  parent: Global.ProceduralPlatformPlacer
  langs:
  - csharp
  - vb
  name: GenerateHalfBlockPlatform(Tilemap, TileBase, RectInt)
  nameWithType: ProceduralPlatformPlacer.GenerateHalfBlockPlatform(Tilemap, TileBase, RectInt)
  fullName: ProceduralPlatformPlacer.GenerateHalfBlockPlatform(UnityEngine.Tilemaps.Tilemap, UnityEngine.Tilemaps.TileBase, UnityEngine.RectInt)
  type: Method
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GenerateHalfBlockPlatform
    path: ../Assets/Framework/Procedural Generation/ProceduralPlatformPlacer.cs
    startLine: 446
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static void GenerateHalfBlockPlatform(Tilemap map, TileBase tile, RectInt region)
    parameters:
    - id: map
      type: UnityEngine.Tilemaps.Tilemap
    - id: tile
      type: UnityEngine.Tilemaps.TileBase
    - id: region
      type: UnityEngine.RectInt
    content.vb: Public Shared Sub GenerateHalfBlockPlatform(map As Tilemap, tile As TileBase, region As RectInt)
  overload: Global.ProceduralPlatformPlacer.GenerateHalfBlockPlatform*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ProceduralPlatformPlacer.CreateUnevenGrid*
  commentId: Overload:Global.ProceduralPlatformPlacer.CreateUnevenGrid
  name: CreateUnevenGrid
  nameWithType: ProceduralPlatformPlacer.CreateUnevenGrid
  fullName: ProceduralPlatformPlacer.CreateUnevenGrid
- uid: Global.ProceduralPlatformPlacer.PlatformPlacerParams
  commentId: T:Global.ProceduralPlatformPlacer.PlatformPlacerParams
  name: ProceduralPlatformPlacer.PlatformPlacerParams
  nameWithType: ProceduralPlatformPlacer.PlatformPlacerParams
  fullName: ProceduralPlatformPlacer.PlatformPlacerParams
  spec.csharp:
  - uid: Global.ProceduralPlatformPlacer
    name: ProceduralPlatformPlacer
  - name: .
  - uid: Global.ProceduralPlatformPlacer.PlatformPlacerParams
    name: PlatformPlacerParams
  spec.vb:
  - uid: Global.ProceduralPlatformPlacer
    name: ProceduralPlatformPlacer
  - name: .
  - uid: Global.ProceduralPlatformPlacer.PlatformPlacerParams
    name: PlatformPlacerParams
- uid: Global.ProceduralPlatformPlacer.UnevenGrid
  commentId: T:Global.ProceduralPlatformPlacer.UnevenGrid
  name: ProceduralPlatformPlacer.UnevenGrid
  nameWithType: ProceduralPlatformPlacer.UnevenGrid
  fullName: ProceduralPlatformPlacer.UnevenGrid
  spec.csharp:
  - uid: Global.ProceduralPlatformPlacer
    name: ProceduralPlatformPlacer
  - name: .
  - uid: Global.ProceduralPlatformPlacer.UnevenGrid
    name: UnevenGrid
  spec.vb:
  - uid: Global.ProceduralPlatformPlacer
    name: ProceduralPlatformPlacer
  - name: .
  - uid: Global.ProceduralPlatformPlacer.UnevenGrid
    name: UnevenGrid
- uid: Global.ProceduralPlatformPlacer.CreateEvenGrid*
  commentId: Overload:Global.ProceduralPlatformPlacer.CreateEvenGrid
  name: CreateEvenGrid
  nameWithType: ProceduralPlatformPlacer.CreateEvenGrid
  fullName: ProceduralPlatformPlacer.CreateEvenGrid
- uid: UnityEngine.RectInt
  commentId: T:UnityEngine.RectInt
  parent: UnityEngine
  isExternal: true
  name: RectInt
  nameWithType: RectInt
  fullName: UnityEngine.RectInt
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: Global.ProceduralPlatformPlacer.EvenGrid
  commentId: T:Global.ProceduralPlatformPlacer.EvenGrid
  name: ProceduralPlatformPlacer.EvenGrid
  nameWithType: ProceduralPlatformPlacer.EvenGrid
  fullName: ProceduralPlatformPlacer.EvenGrid
  spec.csharp:
  - uid: Global.ProceduralPlatformPlacer
    name: ProceduralPlatformPlacer
  - name: .
  - uid: Global.ProceduralPlatformPlacer.EvenGrid
    name: EvenGrid
  spec.vb:
  - uid: Global.ProceduralPlatformPlacer
    name: ProceduralPlatformPlacer
  - name: .
  - uid: Global.ProceduralPlatformPlacer.EvenGrid
    name: EvenGrid
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ProceduralPlatformPlacer.GetCellSizeOfEvenGrid*
  commentId: Overload:Global.ProceduralPlatformPlacer.GetCellSizeOfEvenGrid
  name: GetCellSizeOfEvenGrid
  nameWithType: ProceduralPlatformPlacer.GetCellSizeOfEvenGrid
  fullName: ProceduralPlatformPlacer.GetCellSizeOfEvenGrid
- uid: Global.ProceduralPlatformPlacer.GenRandomPlatformOfSize*
  commentId: Overload:Global.ProceduralPlatformPlacer.GenRandomPlatformOfSize
  name: GenRandomPlatformOfSize
  nameWithType: ProceduralPlatformPlacer.GenRandomPlatformOfSize
  fullName: ProceduralPlatformPlacer.GenRandomPlatformOfSize
- uid: System.Collections.Generic.List{UnityEngine.Vector2Int}
  commentId: T:System.Collections.Generic.List{UnityEngine.Vector2Int}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Vector2Int>
  nameWithType: List<Vector2Int>
  fullName: System.Collections.Generic.List<UnityEngine.Vector2Int>
  nameWithType.vb: List(Of Vector2Int)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Vector2Int)
  name.vb: List(Of Vector2Int)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: Global.ProceduralPlatformPlacer.PlaceSinglePlatform*
  commentId: Overload:Global.ProceduralPlatformPlacer.PlaceSinglePlatform
  name: PlaceSinglePlatform
  nameWithType: ProceduralPlatformPlacer.PlaceSinglePlatform
  fullName: ProceduralPlatformPlacer.PlaceSinglePlatform
- uid: Global.ProceduralPlatformPlacer.GridBase
  commentId: T:Global.ProceduralPlatformPlacer.GridBase
  name: ProceduralPlatformPlacer.GridBase
  nameWithType: ProceduralPlatformPlacer.GridBase
  fullName: ProceduralPlatformPlacer.GridBase
  spec.csharp:
  - uid: Global.ProceduralPlatformPlacer
    name: ProceduralPlatformPlacer
  - name: .
  - uid: Global.ProceduralPlatformPlacer.GridBase
    name: GridBase
  spec.vb:
  - uid: Global.ProceduralPlatformPlacer
    name: ProceduralPlatformPlacer
  - name: .
  - uid: Global.ProceduralPlatformPlacer.GridBase
    name: GridBase
- uid: Global.ProceduralPlatformPlacer.FillUnevenGrid*
  commentId: Overload:Global.ProceduralPlatformPlacer.FillUnevenGrid
  name: FillUnevenGrid
  nameWithType: ProceduralPlatformPlacer.FillUnevenGrid
  fullName: ProceduralPlatformPlacer.FillUnevenGrid
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.ProceduralPlatformPlacer.GeneratePlatforms*
  commentId: Overload:Global.ProceduralPlatformPlacer.GeneratePlatforms
  name: GeneratePlatforms
  nameWithType: ProceduralPlatformPlacer.GeneratePlatforms
  fullName: ProceduralPlatformPlacer.GeneratePlatforms
- uid: UnityEngine.Tilemaps.Tilemap
  commentId: T:UnityEngine.Tilemaps.Tilemap
  parent: UnityEngine.Tilemaps
  isExternal: true
  name: Tilemap
  nameWithType: Tilemap
  fullName: UnityEngine.Tilemaps.Tilemap
- uid: UnityEngine.Tilemaps.TileBase
  commentId: T:UnityEngine.Tilemaps.TileBase
  parent: UnityEngine.Tilemaps
  isExternal: true
  name: TileBase
  nameWithType: TileBase
  fullName: UnityEngine.Tilemaps.TileBase
- uid: UnityEngine.Tilemaps
  commentId: N:UnityEngine.Tilemaps
  isExternal: true
  name: UnityEngine.Tilemaps
  nameWithType: UnityEngine.Tilemaps
  fullName: UnityEngine.Tilemaps
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Tilemaps
    name: Tilemaps
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Tilemaps
    name: Tilemaps
    isExternal: true
- uid: Global.ProceduralPlatformPlacer.GenerateSinglePlatform*
  commentId: Overload:Global.ProceduralPlatformPlacer.GenerateSinglePlatform
  name: GenerateSinglePlatform
  nameWithType: ProceduralPlatformPlacer.GenerateSinglePlatform
  fullName: ProceduralPlatformPlacer.GenerateSinglePlatform
- uid: Global.ProceduralPlatformPlacer.GenerateFlatPlatform*
  commentId: Overload:Global.ProceduralPlatformPlacer.GenerateFlatPlatform
  name: GenerateFlatPlatform
  nameWithType: ProceduralPlatformPlacer.GenerateFlatPlatform
  fullName: ProceduralPlatformPlacer.GenerateFlatPlatform
- uid: Global.ProceduralPlatformPlacer.GenerateFloatingIslandPlatform*
  commentId: Overload:Global.ProceduralPlatformPlacer.GenerateFloatingIslandPlatform
  name: GenerateFloatingIslandPlatform
  nameWithType: ProceduralPlatformPlacer.GenerateFloatingIslandPlatform
  fullName: ProceduralPlatformPlacer.GenerateFloatingIslandPlatform
- uid: Global.ProceduralPlatformPlacer.GenerateBlockPlatform*
  commentId: Overload:Global.ProceduralPlatformPlacer.GenerateBlockPlatform
  name: GenerateBlockPlatform
  nameWithType: ProceduralPlatformPlacer.GenerateBlockPlatform
  fullName: ProceduralPlatformPlacer.GenerateBlockPlatform
- uid: Global.ProceduralPlatformPlacer.GenerateHalfBlockPlatform*
  commentId: Overload:Global.ProceduralPlatformPlacer.GenerateHalfBlockPlatform
  name: GenerateHalfBlockPlatform
  nameWithType: ProceduralPlatformPlacer.GenerateHalfBlockPlatform
  fullName: ProceduralPlatformPlacer.GenerateHalfBlockPlatform
