### YamlMime:ManagedReference
items:
- uid: Global.WeatherController
  commentId: T:Global.WeatherController
  id: WeatherController
  parent: Global
  children:
  - Global.WeatherController.ApplyParams
  - Global.WeatherController.ContinuouslyUpdateParamsInEditor
  - Global.WeatherController.EffectRegionSectionSpace
  - Global.WeatherController.Intensity
  - Global.WeatherController.SetWindSpeed(System.Single)
  - Global.WeatherController.WeatherEnabled
  langs:
  - csharp
  - vb
  name: WeatherController
  nameWithType: WeatherController
  fullName: WeatherController
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/SectionWeatherController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WeatherController
    path: ../Assets/Objects & Components/World/Weather/SectionWeatherController.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public abstract class WeatherController : MonoBehaviour'
    content.vb: Public MustInherit Class WeatherController Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  derivedClasses:
  - Global.FogController
  - Global.RainController
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.WeatherController.ContinuouslyUpdateParamsInEditor
  commentId: F:Global.WeatherController.ContinuouslyUpdateParamsInEditor
  id: ContinuouslyUpdateParamsInEditor
  parent: Global.WeatherController
  langs:
  - csharp
  - vb
  name: ContinuouslyUpdateParamsInEditor
  nameWithType: WeatherController.ContinuouslyUpdateParamsInEditor
  fullName: WeatherController.ContinuouslyUpdateParamsInEditor
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/SectionWeatherController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ContinuouslyUpdateParamsInEditor
    path: ../Assets/Objects & Components/World/Weather/SectionWeatherController.cs
    startLine: 6
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool ContinuouslyUpdateParamsInEditor
    return:
      type: System.Boolean
    content.vb: Public ContinuouslyUpdateParamsInEditor As Boolean
- uid: Global.WeatherController.WeatherEnabled
  commentId: F:Global.WeatherController.WeatherEnabled
  id: WeatherEnabled
  parent: Global.WeatherController
  langs:
  - csharp
  - vb
  name: WeatherEnabled
  nameWithType: WeatherController.WeatherEnabled
  fullName: WeatherController.WeatherEnabled
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/SectionWeatherController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WeatherEnabled
    path: ../Assets/Objects & Components/World/Weather/SectionWeatherController.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Space(15)]

      [Header("Generic Weather Controller Params")]

      public bool WeatherEnabled
    return:
      type: System.Boolean
    content.vb: >-
      <Space(15)>

      <Header("Generic Weather Controller Params")>

      Public WeatherEnabled As Boolean
  attributes:
  - type: UnityEngine.SpaceAttribute
    ctor: UnityEngine.SpaceAttribute.#ctor(System.Single)
    arguments:
    - type: System.Single
      value: 15
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Generic Weather Controller Params
- uid: Global.WeatherController.Intensity
  commentId: F:Global.WeatherController.Intensity
  id: Intensity
  parent: Global.WeatherController
  langs:
  - csharp
  - vb
  name: Intensity
  nameWithType: WeatherController.Intensity
  fullName: WeatherController.Intensity
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/SectionWeatherController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Intensity
    path: ../Assets/Objects & Components/World/Weather/SectionWeatherController.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Range(0, 1)]

      public float Intensity
    return:
      type: System.Single
    content.vb: >-
      <Range(0, 1)>

      Public Intensity As Single
  attributes:
  - type: UnityEngine.RangeAttribute
    ctor: UnityEngine.RangeAttribute.#ctor(System.Single,System.Single)
    arguments:
    - type: System.Single
      value: 0
    - type: System.Single
      value: 1
- uid: Global.WeatherController.EffectRegionSectionSpace
  commentId: F:Global.WeatherController.EffectRegionSectionSpace
  id: EffectRegionSectionSpace
  parent: Global.WeatherController
  langs:
  - csharp
  - vb
  name: EffectRegionSectionSpace
  nameWithType: WeatherController.EffectRegionSectionSpace
  fullName: WeatherController.EffectRegionSectionSpace
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/SectionWeatherController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EffectRegionSectionSpace
    path: ../Assets/Objects & Components/World/Weather/SectionWeatherController.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Rect EffectRegionSectionSpace
    return:
      type: UnityEngine.Rect
    content.vb: Public EffectRegionSectionSpace As Rect
- uid: Global.WeatherController.SetWindSpeed(System.Single)
  commentId: M:Global.WeatherController.SetWindSpeed(System.Single)
  id: SetWindSpeed(System.Single)
  parent: Global.WeatherController
  langs:
  - csharp
  - vb
  name: SetWindSpeed(float)
  nameWithType: WeatherController.SetWindSpeed(float)
  fullName: WeatherController.SetWindSpeed(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/SectionWeatherController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetWindSpeed
    path: ../Assets/Objects & Components/World/Weather/SectionWeatherController.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public abstract void SetWindSpeed(float windSpeed)
    parameters:
    - id: windSpeed
      type: System.Single
    content.vb: Public MustOverride Sub SetWindSpeed(windSpeed As Single)
  overload: Global.WeatherController.SetWindSpeed*
  nameWithType.vb: WeatherController.SetWindSpeed(Single)
  fullName.vb: WeatherController.SetWindSpeed(Single)
  name.vb: SetWindSpeed(Single)
- uid: Global.WeatherController.ApplyParams
  commentId: M:Global.WeatherController.ApplyParams
  id: ApplyParams
  parent: Global.WeatherController
  langs:
  - csharp
  - vb
  name: ApplyParams()
  nameWithType: WeatherController.ApplyParams()
  fullName: WeatherController.ApplyParams()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/SectionWeatherController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ApplyParams
    path: ../Assets/Objects & Components/World/Weather/SectionWeatherController.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public abstract void ApplyParams()
    content.vb: Public MustOverride Sub ApplyParams()
  overload: Global.WeatherController.ApplyParams*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Rect
  commentId: T:UnityEngine.Rect
  parent: UnityEngine
  isExternal: true
  name: Rect
  nameWithType: Rect
  fullName: UnityEngine.Rect
- uid: Global.WeatherController.SetWindSpeed*
  commentId: Overload:Global.WeatherController.SetWindSpeed
  name: SetWindSpeed
  nameWithType: WeatherController.SetWindSpeed
  fullName: WeatherController.SetWindSpeed
- uid: Global.WeatherController.ApplyParams*
  commentId: Overload:Global.WeatherController.ApplyParams
  name: ApplyParams
  nameWithType: WeatherController.ApplyParams
  fullName: WeatherController.ApplyParams
