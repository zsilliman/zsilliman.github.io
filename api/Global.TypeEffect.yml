### YamlMime:ManagedReference
items:
- uid: Global.TypeEffect
  commentId: T:Global.TypeEffect
  id: TypeEffect
  parent: Global
  children:
  - Global.TypeEffect.AnimateText
  - Global.TypeEffect.Animating
  - Global.TypeEffect.InstantShowAllText
  - Global.TypeEffect.LettersPerSecond
  langs:
  - csharp
  - vb
  name: TypeEffect
  nameWithType: TypeEffect
  fullName: TypeEffect
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/UI/TextEffects/TypeEffect.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TypeEffect
    path: ../Assets/Objects & Components/World/Interactable/UI/TextEffects/TypeEffect.cs
    startLine: 5
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class TypeEffect : MonoBehaviour'
    content.vb: Public Class TypeEffect Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.TypeEffect.Animating
  commentId: P:Global.TypeEffect.Animating
  id: Animating
  parent: Global.TypeEffect
  langs:
  - csharp
  - vb
  name: Animating
  nameWithType: TypeEffect.Animating
  fullName: TypeEffect.Animating
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/UI/TextEffects/TypeEffect.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Animating
    path: ../Assets/Objects & Components/World/Interactable/UI/TextEffects/TypeEffect.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool Animating { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Animating As Boolean
  overload: Global.TypeEffect.Animating*
- uid: Global.TypeEffect.LettersPerSecond
  commentId: F:Global.TypeEffect.LettersPerSecond
  id: LettersPerSecond
  parent: Global.TypeEffect
  langs:
  - csharp
  - vb
  name: LettersPerSecond
  nameWithType: TypeEffect.LettersPerSecond
  fullName: TypeEffect.LettersPerSecond
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/UI/TextEffects/TypeEffect.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LettersPerSecond
    path: ../Assets/Objects & Components/World/Interactable/UI/TextEffects/TypeEffect.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float LettersPerSecond
    return:
      type: System.Single
    content.vb: Public LettersPerSecond As Single
- uid: Global.TypeEffect.AnimateText
  commentId: M:Global.TypeEffect.AnimateText
  id: AnimateText
  parent: Global.TypeEffect
  langs:
  - csharp
  - vb
  name: AnimateText()
  nameWithType: TypeEffect.AnimateText()
  fullName: TypeEffect.AnimateText()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/UI/TextEffects/TypeEffect.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AnimateText
    path: ../Assets/Objects & Components/World/Interactable/UI/TextEffects/TypeEffect.cs
    startLine: 33
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void AnimateText()
    content.vb: Public Sub AnimateText()
  overload: Global.TypeEffect.AnimateText*
- uid: Global.TypeEffect.InstantShowAllText
  commentId: M:Global.TypeEffect.InstantShowAllText
  id: InstantShowAllText
  parent: Global.TypeEffect
  langs:
  - csharp
  - vb
  name: InstantShowAllText()
  nameWithType: TypeEffect.InstantShowAllText()
  fullName: TypeEffect.InstantShowAllText()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/UI/TextEffects/TypeEffect.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: InstantShowAllText
    path: ../Assets/Objects & Components/World/Interactable/UI/TextEffects/TypeEffect.cs
    startLine: 39
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void InstantShowAllText()
    content.vb: Public Sub InstantShowAllText()
  overload: Global.TypeEffect.InstantShowAllText*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.TypeEffect.Animating*
  commentId: Overload:Global.TypeEffect.Animating
  name: Animating
  nameWithType: TypeEffect.Animating
  fullName: TypeEffect.Animating
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.TypeEffect.AnimateText*
  commentId: Overload:Global.TypeEffect.AnimateText
  name: AnimateText
  nameWithType: TypeEffect.AnimateText
  fullName: TypeEffect.AnimateText
- uid: Global.TypeEffect.InstantShowAllText*
  commentId: Overload:Global.TypeEffect.InstantShowAllText
  name: InstantShowAllText
  nameWithType: TypeEffect.InstantShowAllText
  fullName: TypeEffect.InstantShowAllText
