### YamlMime:ManagedReference
items:
- uid: Global.BinocularInteractionController
  commentId: T:Global.BinocularInteractionController
  id: BinocularInteractionController
  parent: Global
  children:
  - Global.BinocularInteractionController.BinocularsInProgress
  - Global.BinocularInteractionController.EasingFunc
  - Global.BinocularInteractionController.IsInteractionActive
  - Global.BinocularInteractionController.IsInteractionFinished
  - Global.BinocularInteractionController.OnInteract
  - Global.BinocularInteractionController.OnInteractionTriggerEnter(Player)
  - Global.BinocularInteractionController.OnInteractionTriggerExit(Player)
  - Global.BinocularInteractionController.OnResetObject
  - Global.BinocularInteractionController.POI
  - Global.BinocularInteractionController.Start
  - Global.BinocularInteractionController.transitionCondition
  - Global.BinocularInteractionController.TransitionTime
  - Global.BinocularInteractionController.ViewTime
  langs:
  - csharp
  - vb
  name: BinocularInteractionController
  nameWithType: BinocularInteractionController
  fullName: BinocularInteractionController
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BinocularInteractionController
    path: ../Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class BinocularInteractionController : InteractionController'
    content.vb: Public Class BinocularInteractionController Inherits InteractionController
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - Global.InteractionController
  inheritedMembers:
  - Global.InteractionController.interactable
  - Global.InteractionController.WaitForOtherControllers
  - Global.InteractionController.OnAllInteractionsCompleted
  - Global.InteractionController.OnTriggerEnterCallback(IntActor)
  - Global.InteractionController.OnTriggerExitCallback(IntActor)
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.BinocularInteractionController.POI
  commentId: F:Global.BinocularInteractionController.POI
  id: POI
  parent: Global.BinocularInteractionController
  langs:
  - csharp
  - vb
  name: POI
  nameWithType: BinocularInteractionController.POI
  fullName: BinocularInteractionController.POI
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: POI
    path: ../Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public PointOfInterest POI
    return:
      type: Global.PointOfInterest
    content.vb: Public POI As PointOfInterest
- uid: Global.BinocularInteractionController.EasingFunc
  commentId: F:Global.BinocularInteractionController.EasingFunc
  id: EasingFunc
  parent: Global.BinocularInteractionController
  langs:
  - csharp
  - vb
  name: EasingFunc
  nameWithType: BinocularInteractionController.EasingFunc
  fullName: BinocularInteractionController.EasingFunc
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EasingFunc
    path: ../Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public EasingFunction.Ease EasingFunc
    return:
      type: Global.EasingFunction.Ease
    content.vb: Public EasingFunc As EasingFunction.Ease
- uid: Global.BinocularInteractionController.TransitionTime
  commentId: F:Global.BinocularInteractionController.TransitionTime
  id: TransitionTime
  parent: Global.BinocularInteractionController
  langs:
  - csharp
  - vb
  name: TransitionTime
  nameWithType: BinocularInteractionController.TransitionTime
  fullName: BinocularInteractionController.TransitionTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TransitionTime
    path: ../Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float TransitionTime
    return:
      type: System.Single
    content.vb: Public TransitionTime As Single
- uid: Global.BinocularInteractionController.transitionCondition
  commentId: F:Global.BinocularInteractionController.transitionCondition
  id: transitionCondition
  parent: Global.BinocularInteractionController
  langs:
  - csharp
  - vb
  name: transitionCondition
  nameWithType: BinocularInteractionController.transitionCondition
  fullName: BinocularInteractionController.transitionCondition
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: transitionCondition
    path: ../Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public BinocularInteractionController.BinocularTransitionCondition transitionCondition
    return:
      type: Global.BinocularInteractionController.BinocularTransitionCondition
    content.vb: Public transitionCondition As BinocularInteractionController.BinocularTransitionCondition
- uid: Global.BinocularInteractionController.ViewTime
  commentId: F:Global.BinocularInteractionController.ViewTime
  id: ViewTime
  parent: Global.BinocularInteractionController
  langs:
  - csharp
  - vb
  name: ViewTime
  nameWithType: BinocularInteractionController.ViewTime
  fullName: BinocularInteractionController.ViewTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ViewTime
    path: ../Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
    startLine: 21
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("transitionCondition", 1)]

      public float ViewTime
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("transitionCondition", 1)>

      Public ViewTime As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: transitionCondition
    - type: System.Int32
      value: 1
- uid: Global.BinocularInteractionController.BinocularsInProgress
  commentId: P:Global.BinocularInteractionController.BinocularsInProgress
  id: BinocularsInProgress
  parent: Global.BinocularInteractionController
  langs:
  - csharp
  - vb
  name: BinocularsInProgress
  nameWithType: BinocularInteractionController.BinocularsInProgress
  fullName: BinocularInteractionController.BinocularsInProgress
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BinocularsInProgress
    path: ../Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool BinocularsInProgress { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property BinocularsInProgress As Boolean
  overload: Global.BinocularInteractionController.BinocularsInProgress*
- uid: Global.BinocularInteractionController.Start
  commentId: M:Global.BinocularInteractionController.Start
  id: Start
  parent: Global.BinocularInteractionController
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: BinocularInteractionController.Start()
  fullName: BinocularInteractionController.Start()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Start
    path: ../Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
    startLine: 31
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Start()
    content.vb: Protected Sub Start()
  overload: Global.BinocularInteractionController.Start*
- uid: Global.BinocularInteractionController.OnInteract
  commentId: M:Global.BinocularInteractionController.OnInteract
  id: OnInteract
  parent: Global.BinocularInteractionController
  langs:
  - csharp
  - vb
  name: OnInteract()
  nameWithType: BinocularInteractionController.OnInteract()
  fullName: BinocularInteractionController.OnInteract()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnInteract
    path: ../Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
    startLine: 121
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnInteract()
    content.vb: Public Overrides Sub OnInteract()
  overridden: Global.InteractionController.OnInteract
  overload: Global.BinocularInteractionController.OnInteract*
- uid: Global.BinocularInteractionController.OnInteractionTriggerEnter(Player)
  commentId: M:Global.BinocularInteractionController.OnInteractionTriggerEnter(Player)
  id: OnInteractionTriggerEnter(Player)
  parent: Global.BinocularInteractionController
  langs:
  - csharp
  - vb
  name: OnInteractionTriggerEnter(Player)
  nameWithType: BinocularInteractionController.OnInteractionTriggerEnter(Player)
  fullName: BinocularInteractionController.OnInteractionTriggerEnter(Player)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnInteractionTriggerEnter
    path: ../Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
    startLine: 138
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnInteractionTriggerEnter(Player player)
    parameters:
    - id: player
      type: Global.Player
    content.vb: Public Overrides Sub OnInteractionTriggerEnter(player As Player)
  overridden: Global.InteractionController.OnInteractionTriggerEnter(Player)
  overload: Global.BinocularInteractionController.OnInteractionTriggerEnter*
- uid: Global.BinocularInteractionController.OnInteractionTriggerExit(Player)
  commentId: M:Global.BinocularInteractionController.OnInteractionTriggerExit(Player)
  id: OnInteractionTriggerExit(Player)
  parent: Global.BinocularInteractionController
  langs:
  - csharp
  - vb
  name: OnInteractionTriggerExit(Player)
  nameWithType: BinocularInteractionController.OnInteractionTriggerExit(Player)
  fullName: BinocularInteractionController.OnInteractionTriggerExit(Player)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnInteractionTriggerExit
    path: ../Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
    startLine: 143
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnInteractionTriggerExit(Player player)
    parameters:
    - id: player
      type: Global.Player
    content.vb: Public Overrides Sub OnInteractionTriggerExit(player As Player)
  overridden: Global.InteractionController.OnInteractionTriggerExit(Player)
  overload: Global.BinocularInteractionController.OnInteractionTriggerExit*
- uid: Global.BinocularInteractionController.OnResetObject
  commentId: M:Global.BinocularInteractionController.OnResetObject
  id: OnResetObject
  parent: Global.BinocularInteractionController
  langs:
  - csharp
  - vb
  name: OnResetObject()
  nameWithType: BinocularInteractionController.OnResetObject()
  fullName: BinocularInteractionController.OnResetObject()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnResetObject
    path: ../Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
    startLine: 148
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnResetObject()
    content.vb: Public Overrides Sub OnResetObject()
  overridden: Global.InteractionController.OnResetObject
  overload: Global.BinocularInteractionController.OnResetObject*
- uid: Global.BinocularInteractionController.IsInteractionFinished
  commentId: M:Global.BinocularInteractionController.IsInteractionFinished
  id: IsInteractionFinished
  parent: Global.BinocularInteractionController
  langs:
  - csharp
  - vb
  name: IsInteractionFinished()
  nameWithType: BinocularInteractionController.IsInteractionFinished()
  fullName: BinocularInteractionController.IsInteractionFinished()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsInteractionFinished
    path: ../Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
    startLine: 153
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override bool IsInteractionFinished()
    return:
      type: System.Boolean
    content.vb: Public Overrides Function IsInteractionFinished() As Boolean
  overridden: Global.InteractionController.IsInteractionFinished
  overload: Global.BinocularInteractionController.IsInteractionFinished*
- uid: Global.BinocularInteractionController.IsInteractionActive
  commentId: M:Global.BinocularInteractionController.IsInteractionActive
  id: IsInteractionActive
  parent: Global.BinocularInteractionController
  langs:
  - csharp
  - vb
  name: IsInteractionActive()
  nameWithType: BinocularInteractionController.IsInteractionActive()
  fullName: BinocularInteractionController.IsInteractionActive()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsInteractionActive
    path: ../Assets/Objects & Components/World/Interactable/Controllers/BinocularInteractionController.cs
    startLine: 158
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override bool IsInteractionActive()
    return:
      type: System.Boolean
    content.vb: Public Overrides Function IsInteractionActive() As Boolean
  overridden: Global.InteractionController.IsInteractionActive
  overload: Global.BinocularInteractionController.IsInteractionActive*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Global.InteractionController
  commentId: T:Global.InteractionController
  name: InteractionController
  nameWithType: InteractionController
  fullName: InteractionController
- uid: Global.InteractionController.interactable
  commentId: F:Global.InteractionController.interactable
  parent: Global.InteractionController
  name: interactable
  nameWithType: InteractionController.interactable
  fullName: InteractionController.interactable
- uid: Global.InteractionController.WaitForOtherControllers
  commentId: F:Global.InteractionController.WaitForOtherControllers
  parent: Global.InteractionController
  name: WaitForOtherControllers
  nameWithType: InteractionController.WaitForOtherControllers
  fullName: InteractionController.WaitForOtherControllers
- uid: Global.InteractionController.OnAllInteractionsCompleted
  commentId: M:Global.InteractionController.OnAllInteractionsCompleted
  parent: Global.InteractionController
  name: OnAllInteractionsCompleted()
  nameWithType: InteractionController.OnAllInteractionsCompleted()
  fullName: InteractionController.OnAllInteractionsCompleted()
  spec.csharp:
  - uid: Global.InteractionController.OnAllInteractionsCompleted
    name: OnAllInteractionsCompleted
  - name: (
  - name: )
  spec.vb:
  - uid: Global.InteractionController.OnAllInteractionsCompleted
    name: OnAllInteractionsCompleted
  - name: (
  - name: )
- uid: Global.InteractionController.OnTriggerEnterCallback(IntActor)
  commentId: M:Global.InteractionController.OnTriggerEnterCallback(IntActor)
  parent: Global.InteractionController
  name: OnTriggerEnterCallback(IntActor)
  nameWithType: InteractionController.OnTriggerEnterCallback(IntActor)
  fullName: InteractionController.OnTriggerEnterCallback(IntActor)
  spec.csharp:
  - uid: Global.InteractionController.OnTriggerEnterCallback(IntActor)
    name: OnTriggerEnterCallback
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
  spec.vb:
  - uid: Global.InteractionController.OnTriggerEnterCallback(IntActor)
    name: OnTriggerEnterCallback
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
- uid: Global.InteractionController.OnTriggerExitCallback(IntActor)
  commentId: M:Global.InteractionController.OnTriggerExitCallback(IntActor)
  parent: Global.InteractionController
  name: OnTriggerExitCallback(IntActor)
  nameWithType: InteractionController.OnTriggerExitCallback(IntActor)
  fullName: InteractionController.OnTriggerExitCallback(IntActor)
  spec.csharp:
  - uid: Global.InteractionController.OnTriggerExitCallback(IntActor)
    name: OnTriggerExitCallback
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
  spec.vb:
  - uid: Global.InteractionController.OnTriggerExitCallback(IntActor)
    name: OnTriggerExitCallback
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.PointOfInterest
  commentId: T:Global.PointOfInterest
  name: PointOfInterest
  nameWithType: PointOfInterest
  fullName: PointOfInterest
- uid: Global.EasingFunction.Ease
  commentId: T:Global.EasingFunction.Ease
  name: EasingFunction.Ease
  nameWithType: EasingFunction.Ease
  fullName: EasingFunction.Ease
  spec.csharp:
  - uid: Global.EasingFunction
    name: EasingFunction
  - name: .
  - uid: Global.EasingFunction.Ease
    name: Ease
  spec.vb:
  - uid: Global.EasingFunction
    name: EasingFunction
  - name: .
  - uid: Global.EasingFunction.Ease
    name: Ease
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.BinocularInteractionController.BinocularTransitionCondition
  commentId: T:Global.BinocularInteractionController.BinocularTransitionCondition
  name: BinocularInteractionController.BinocularTransitionCondition
  nameWithType: BinocularInteractionController.BinocularTransitionCondition
  fullName: BinocularInteractionController.BinocularTransitionCondition
  spec.csharp:
  - uid: Global.BinocularInteractionController
    name: BinocularInteractionController
  - name: .
  - uid: Global.BinocularInteractionController.BinocularTransitionCondition
    name: BinocularTransitionCondition
  spec.vb:
  - uid: Global.BinocularInteractionController
    name: BinocularInteractionController
  - name: .
  - uid: Global.BinocularInteractionController.BinocularTransitionCondition
    name: BinocularTransitionCondition
- uid: Global.BinocularInteractionController.BinocularsInProgress*
  commentId: Overload:Global.BinocularInteractionController.BinocularsInProgress
  name: BinocularsInProgress
  nameWithType: BinocularInteractionController.BinocularsInProgress
  fullName: BinocularInteractionController.BinocularsInProgress
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.BinocularInteractionController.Start*
  commentId: Overload:Global.BinocularInteractionController.Start
  name: Start
  nameWithType: BinocularInteractionController.Start
  fullName: BinocularInteractionController.Start
- uid: Global.InteractionController.OnInteract
  commentId: M:Global.InteractionController.OnInteract
  parent: Global.InteractionController
  name: OnInteract()
  nameWithType: InteractionController.OnInteract()
  fullName: InteractionController.OnInteract()
  spec.csharp:
  - uid: Global.InteractionController.OnInteract
    name: OnInteract
  - name: (
  - name: )
  spec.vb:
  - uid: Global.InteractionController.OnInteract
    name: OnInteract
  - name: (
  - name: )
- uid: Global.BinocularInteractionController.OnInteract*
  commentId: Overload:Global.BinocularInteractionController.OnInteract
  name: OnInteract
  nameWithType: BinocularInteractionController.OnInteract
  fullName: BinocularInteractionController.OnInteract
- uid: Global.InteractionController.OnInteractionTriggerEnter(Player)
  commentId: M:Global.InteractionController.OnInteractionTriggerEnter(Player)
  parent: Global.InteractionController
  name: OnInteractionTriggerEnter(Player)
  nameWithType: InteractionController.OnInteractionTriggerEnter(Player)
  fullName: InteractionController.OnInteractionTriggerEnter(Player)
  spec.csharp:
  - uid: Global.InteractionController.OnInteractionTriggerEnter(Player)
    name: OnInteractionTriggerEnter
  - name: (
  - uid: Global.Player
    name: Player
  - name: )
  spec.vb:
  - uid: Global.InteractionController.OnInteractionTriggerEnter(Player)
    name: OnInteractionTriggerEnter
  - name: (
  - uid: Global.Player
    name: Player
  - name: )
- uid: Global.BinocularInteractionController.OnInteractionTriggerEnter*
  commentId: Overload:Global.BinocularInteractionController.OnInteractionTriggerEnter
  name: OnInteractionTriggerEnter
  nameWithType: BinocularInteractionController.OnInteractionTriggerEnter
  fullName: BinocularInteractionController.OnInteractionTriggerEnter
- uid: Global.Player
  commentId: T:Global.Player
  name: Player
  nameWithType: Player
  fullName: Player
- uid: Global.InteractionController.OnInteractionTriggerExit(Player)
  commentId: M:Global.InteractionController.OnInteractionTriggerExit(Player)
  parent: Global.InteractionController
  name: OnInteractionTriggerExit(Player)
  nameWithType: InteractionController.OnInteractionTriggerExit(Player)
  fullName: InteractionController.OnInteractionTriggerExit(Player)
  spec.csharp:
  - uid: Global.InteractionController.OnInteractionTriggerExit(Player)
    name: OnInteractionTriggerExit
  - name: (
  - uid: Global.Player
    name: Player
  - name: )
  spec.vb:
  - uid: Global.InteractionController.OnInteractionTriggerExit(Player)
    name: OnInteractionTriggerExit
  - name: (
  - uid: Global.Player
    name: Player
  - name: )
- uid: Global.BinocularInteractionController.OnInteractionTriggerExit*
  commentId: Overload:Global.BinocularInteractionController.OnInteractionTriggerExit
  name: OnInteractionTriggerExit
  nameWithType: BinocularInteractionController.OnInteractionTriggerExit
  fullName: BinocularInteractionController.OnInteractionTriggerExit
- uid: Global.InteractionController.OnResetObject
  commentId: M:Global.InteractionController.OnResetObject
  parent: Global.InteractionController
  name: OnResetObject()
  nameWithType: InteractionController.OnResetObject()
  fullName: InteractionController.OnResetObject()
  spec.csharp:
  - uid: Global.InteractionController.OnResetObject
    name: OnResetObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.InteractionController.OnResetObject
    name: OnResetObject
  - name: (
  - name: )
- uid: Global.BinocularInteractionController.OnResetObject*
  commentId: Overload:Global.BinocularInteractionController.OnResetObject
  name: OnResetObject
  nameWithType: BinocularInteractionController.OnResetObject
  fullName: BinocularInteractionController.OnResetObject
- uid: Global.InteractionController.IsInteractionFinished
  commentId: M:Global.InteractionController.IsInteractionFinished
  parent: Global.InteractionController
  name: IsInteractionFinished()
  nameWithType: InteractionController.IsInteractionFinished()
  fullName: InteractionController.IsInteractionFinished()
  spec.csharp:
  - uid: Global.InteractionController.IsInteractionFinished
    name: IsInteractionFinished
  - name: (
  - name: )
  spec.vb:
  - uid: Global.InteractionController.IsInteractionFinished
    name: IsInteractionFinished
  - name: (
  - name: )
- uid: Global.BinocularInteractionController.IsInteractionFinished*
  commentId: Overload:Global.BinocularInteractionController.IsInteractionFinished
  name: IsInteractionFinished
  nameWithType: BinocularInteractionController.IsInteractionFinished
  fullName: BinocularInteractionController.IsInteractionFinished
- uid: Global.InteractionController.IsInteractionActive
  commentId: M:Global.InteractionController.IsInteractionActive
  parent: Global.InteractionController
  name: IsInteractionActive()
  nameWithType: InteractionController.IsInteractionActive()
  fullName: InteractionController.IsInteractionActive()
  spec.csharp:
  - uid: Global.InteractionController.IsInteractionActive
    name: IsInteractionActive
  - name: (
  - name: )
  spec.vb:
  - uid: Global.InteractionController.IsInteractionActive
    name: IsInteractionActive
  - name: (
  - name: )
- uid: Global.BinocularInteractionController.IsInteractionActive*
  commentId: Overload:Global.BinocularInteractionController.IsInteractionActive
  name: IsInteractionActive
  nameWithType: BinocularInteractionController.IsInteractionActive
  fullName: BinocularInteractionController.IsInteractionActive
