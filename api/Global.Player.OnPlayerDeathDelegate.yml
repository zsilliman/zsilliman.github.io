### YamlMime:ManagedReference
items:
- uid: Global.Player.OnPlayerDeathDelegate
  commentId: T:Global.Player.OnPlayerDeathDelegate
  id: Player.OnPlayerDeathDelegate
  parent: Global
  children: []
  langs:
  - csharp
  - vb
  name: Player.OnPlayerDeathDelegate
  nameWithType: Player.OnPlayerDeathDelegate
  fullName: Player.OnPlayerDeathDelegate
  type: Delegate
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/Player.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnPlayerDeathDelegate
    path: ../Assets/Objects & Components/Entities/Player/Player.cs
    startLine: 82
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public delegate void Player.OnPlayerDeathDelegate(Player player, bool isMajorRespawn)
    parameters:
    - id: player
      type: Global.Player
    - id: isMajorRespawn
      type: System.Boolean
    content.vb: Public Delegate Sub Player.OnPlayerDeathDelegate(player As Player, isMajorRespawn As Boolean)
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
references:
- uid: Global
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.Player
  commentId: T:Global.Player
  name: Player
  nameWithType: Player
  fullName: Player
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
