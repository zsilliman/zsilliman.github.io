### YamlMime:ManagedReference
items:
- uid: Global.BoundsAggroTrigger
  commentId: T:Global.BoundsAggroTrigger
  id: BoundsAggroTrigger
  parent: Global
  children:
  - Global.BoundsAggroTrigger.CheckShouldAggro
  - Global.BoundsAggroTrigger.UpdateBounds
  langs:
  - csharp
  - vb
  name: BoundsAggroTrigger
  nameWithType: BoundsAggroTrigger
  fullName: BoundsAggroTrigger
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/AggroTrigger/AggroTrigger.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BoundsAggroTrigger
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/AggroTrigger/AggroTrigger.cs
    startLine: 139
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class BoundsAggroTrigger : AggroTriggerBase<AggroBoundsProperties>
    content.vb: >-
      <Serializable>

      Public Class BoundsAggroTrigger Inherits AggroTriggerBase(Of AggroBoundsProperties)
  inheritance:
  - System.Object
  - Global.AggroTriggerBase{AggroBoundsProperties}
  inheritedMembers:
  - Global.AggroTriggerBase{AggroBoundsProperties}.Properties
  - Global.AggroTriggerBase{AggroBoundsProperties}.Target
  - Global.AggroTriggerBase{AggroBoundsProperties}.Self
  - Global.AggroTriggerBase{AggroBoundsProperties}.IsAggroing
  - Global.AggroTriggerBase{AggroBoundsProperties}.OnStartAggro
  - Global.AggroTriggerBase{AggroBoundsProperties}.OnEndAggro
  - Global.AggroTriggerBase{AggroBoundsProperties}.LastFrameAggro
  - Global.AggroTriggerBase{AggroBoundsProperties}.Initialize(AggroBoundsProperties,UnityEngine.GameObject,IntObject)
  - Global.AggroTriggerBase{AggroBoundsProperties}.RegisterStartAggroCallback(IntObject.Action)
  - Global.AggroTriggerBase{AggroBoundsProperties}.UnregisterStartAggroCallback(IntObject.Action)
  - Global.AggroTriggerBase{AggroBoundsProperties}.RegisterEndAggroCallback(IntObject.Action)
  - Global.AggroTriggerBase{AggroBoundsProperties}.UnregisterEndAggroCallback(IntObject.Action)
  - Global.AggroTriggerBase{AggroBoundsProperties}.Reset
  - Global.AggroTriggerBase{AggroBoundsProperties}.IsTargetVisible
  - Global.AggroTriggerBase{AggroBoundsProperties}.Update
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.BoundsAggroTrigger.UpdateBounds
  commentId: M:Global.BoundsAggroTrigger.UpdateBounds
  id: UpdateBounds
  parent: Global.BoundsAggroTrigger
  langs:
  - csharp
  - vb
  name: UpdateBounds()
  nameWithType: BoundsAggroTrigger.UpdateBounds()
  fullName: BoundsAggroTrigger.UpdateBounds()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/AggroTrigger/AggroTrigger.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UpdateBounds
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/AggroTrigger/AggroTrigger.cs
    startLine: 145
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override void UpdateBounds()
    content.vb: Protected Overrides Sub UpdateBounds()
  overridden: Global.AggroTriggerBase{AggroBoundsProperties}.UpdateBounds
  overload: Global.BoundsAggroTrigger.UpdateBounds*
- uid: Global.BoundsAggroTrigger.CheckShouldAggro
  commentId: M:Global.BoundsAggroTrigger.CheckShouldAggro
  id: CheckShouldAggro
  parent: Global.BoundsAggroTrigger
  langs:
  - csharp
  - vb
  name: CheckShouldAggro()
  nameWithType: BoundsAggroTrigger.CheckShouldAggro()
  fullName: BoundsAggroTrigger.CheckShouldAggro()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/AggroTrigger/AggroTrigger.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CheckShouldAggro
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/AggroTrigger/AggroTrigger.cs
    startLine: 155
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override bool CheckShouldAggro()
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function CheckShouldAggro() As Boolean
  overridden: Global.AggroTriggerBase{AggroBoundsProperties}.CheckShouldAggro
  overload: Global.BoundsAggroTrigger.CheckShouldAggro*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.AggroTriggerBase{AggroBoundsProperties}
  commentId: T:Global.AggroTriggerBase{AggroBoundsProperties}
  definition: Global.AggroTriggerBase`1
  name: AggroTriggerBase<AggroBoundsProperties>
  nameWithType: AggroTriggerBase<AggroBoundsProperties>
  fullName: AggroTriggerBase<AggroBoundsProperties>
  nameWithType.vb: AggroTriggerBase(Of AggroBoundsProperties)
  fullName.vb: AggroTriggerBase(Of AggroBoundsProperties)
  name.vb: AggroTriggerBase(Of AggroBoundsProperties)
  spec.csharp:
  - uid: Global.AggroTriggerBase`1
    name: AggroTriggerBase
  - name: <
  - uid: Global.AggroBoundsProperties
    name: AggroBoundsProperties
  - name: '>'
  spec.vb:
  - uid: Global.AggroTriggerBase`1
    name: AggroTriggerBase
  - name: (
  - name: Of
  - name: " "
  - uid: Global.AggroBoundsProperties
    name: AggroBoundsProperties
  - name: )
- uid: Global.AggroTriggerBase{AggroBoundsProperties}.Properties
  commentId: F:Global.AggroTriggerBase{AggroBoundsProperties}.Properties
  parent: Global.AggroTriggerBase{AggroBoundsProperties}
  definition: Global.AggroTriggerBase`1.Properties
  name: Properties
  nameWithType: AggroTriggerBase<AggroBoundsProperties>.Properties
  fullName: AggroTriggerBase<AggroBoundsProperties>.Properties
  nameWithType.vb: AggroTriggerBase(Of AggroBoundsProperties).Properties
  fullName.vb: AggroTriggerBase(Of AggroBoundsProperties).Properties
- uid: Global.AggroTriggerBase{AggroBoundsProperties}.Target
  commentId: P:Global.AggroTriggerBase{AggroBoundsProperties}.Target
  parent: Global.AggroTriggerBase{AggroBoundsProperties}
  definition: Global.AggroTriggerBase`1.Target
  name: Target
  nameWithType: AggroTriggerBase<AggroBoundsProperties>.Target
  fullName: AggroTriggerBase<AggroBoundsProperties>.Target
  nameWithType.vb: AggroTriggerBase(Of AggroBoundsProperties).Target
  fullName.vb: AggroTriggerBase(Of AggroBoundsProperties).Target
- uid: Global.AggroTriggerBase{AggroBoundsProperties}.Self
  commentId: P:Global.AggroTriggerBase{AggroBoundsProperties}.Self
  parent: Global.AggroTriggerBase{AggroBoundsProperties}
  definition: Global.AggroTriggerBase`1.Self
  name: Self
  nameWithType: AggroTriggerBase<AggroBoundsProperties>.Self
  fullName: AggroTriggerBase<AggroBoundsProperties>.Self
  nameWithType.vb: AggroTriggerBase(Of AggroBoundsProperties).Self
  fullName.vb: AggroTriggerBase(Of AggroBoundsProperties).Self
- uid: Global.AggroTriggerBase{AggroBoundsProperties}.IsAggroing
  commentId: P:Global.AggroTriggerBase{AggroBoundsProperties}.IsAggroing
  parent: Global.AggroTriggerBase{AggroBoundsProperties}
  definition: Global.AggroTriggerBase`1.IsAggroing
  name: IsAggroing
  nameWithType: AggroTriggerBase<AggroBoundsProperties>.IsAggroing
  fullName: AggroTriggerBase<AggroBoundsProperties>.IsAggroing
  nameWithType.vb: AggroTriggerBase(Of AggroBoundsProperties).IsAggroing
  fullName.vb: AggroTriggerBase(Of AggroBoundsProperties).IsAggroing
- uid: Global.AggroTriggerBase{AggroBoundsProperties}.OnStartAggro
  commentId: F:Global.AggroTriggerBase{AggroBoundsProperties}.OnStartAggro
  parent: Global.AggroTriggerBase{AggroBoundsProperties}
  definition: Global.AggroTriggerBase`1.OnStartAggro
  name: OnStartAggro
  nameWithType: AggroTriggerBase<AggroBoundsProperties>.OnStartAggro
  fullName: AggroTriggerBase<AggroBoundsProperties>.OnStartAggro
  nameWithType.vb: AggroTriggerBase(Of AggroBoundsProperties).OnStartAggro
  fullName.vb: AggroTriggerBase(Of AggroBoundsProperties).OnStartAggro
- uid: Global.AggroTriggerBase{AggroBoundsProperties}.OnEndAggro
  commentId: F:Global.AggroTriggerBase{AggroBoundsProperties}.OnEndAggro
  parent: Global.AggroTriggerBase{AggroBoundsProperties}
  definition: Global.AggroTriggerBase`1.OnEndAggro
  name: OnEndAggro
  nameWithType: AggroTriggerBase<AggroBoundsProperties>.OnEndAggro
  fullName: AggroTriggerBase<AggroBoundsProperties>.OnEndAggro
  nameWithType.vb: AggroTriggerBase(Of AggroBoundsProperties).OnEndAggro
  fullName.vb: AggroTriggerBase(Of AggroBoundsProperties).OnEndAggro
- uid: Global.AggroTriggerBase{AggroBoundsProperties}.LastFrameAggro
  commentId: F:Global.AggroTriggerBase{AggroBoundsProperties}.LastFrameAggro
  parent: Global.AggroTriggerBase{AggroBoundsProperties}
  definition: Global.AggroTriggerBase`1.LastFrameAggro
  name: LastFrameAggro
  nameWithType: AggroTriggerBase<AggroBoundsProperties>.LastFrameAggro
  fullName: AggroTriggerBase<AggroBoundsProperties>.LastFrameAggro
  nameWithType.vb: AggroTriggerBase(Of AggroBoundsProperties).LastFrameAggro
  fullName.vb: AggroTriggerBase(Of AggroBoundsProperties).LastFrameAggro
- uid: Global.AggroTriggerBase{AggroBoundsProperties}.Initialize(AggroBoundsProperties,UnityEngine.GameObject,IntObject)
  commentId: M:Global.AggroTriggerBase{AggroBoundsProperties}.Initialize(AggroBoundsProperties,UnityEngine.GameObject,IntObject)
  parent: Global.AggroTriggerBase{AggroBoundsProperties}
  definition: Global.AggroTriggerBase`1.Initialize(`0,UnityEngine.GameObject,IntObject)
  name: Initialize(AggroBoundsProperties, GameObject, IntObject)
  nameWithType: AggroTriggerBase<AggroBoundsProperties>.Initialize(AggroBoundsProperties, GameObject, IntObject)
  fullName: AggroTriggerBase<AggroBoundsProperties>.Initialize(AggroBoundsProperties, UnityEngine.GameObject, IntObject)
  nameWithType.vb: AggroTriggerBase(Of AggroBoundsProperties).Initialize(AggroBoundsProperties, GameObject, IntObject)
  fullName.vb: AggroTriggerBase(Of AggroBoundsProperties).Initialize(AggroBoundsProperties, UnityEngine.GameObject, IntObject)
  spec.csharp:
  - uid: Global.AggroTriggerBase{AggroBoundsProperties}.Initialize(AggroBoundsProperties,UnityEngine.GameObject,IntObject)
    name: Initialize
  - name: (
  - uid: Global.AggroBoundsProperties
    name: AggroBoundsProperties
  - name: ','
  - name: " "
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject
    name: IntObject
  - name: )
  spec.vb:
  - uid: Global.AggroTriggerBase{AggroBoundsProperties}.Initialize(AggroBoundsProperties,UnityEngine.GameObject,IntObject)
    name: Initialize
  - name: (
  - uid: Global.AggroBoundsProperties
    name: AggroBoundsProperties
  - name: ','
  - name: " "
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject
    name: IntObject
  - name: )
- uid: Global.AggroTriggerBase{AggroBoundsProperties}.RegisterStartAggroCallback(IntObject.Action)
  commentId: M:Global.AggroTriggerBase{AggroBoundsProperties}.RegisterStartAggroCallback(IntObject.Action)
  parent: Global.AggroTriggerBase{AggroBoundsProperties}
  definition: Global.AggroTriggerBase`1.RegisterStartAggroCallback(IntObject.Action)
  name: RegisterStartAggroCallback(Action)
  nameWithType: AggroTriggerBase<AggroBoundsProperties>.RegisterStartAggroCallback(IntObject.Action)
  fullName: AggroTriggerBase<AggroBoundsProperties>.RegisterStartAggroCallback(IntObject.Action)
  nameWithType.vb: AggroTriggerBase(Of AggroBoundsProperties).RegisterStartAggroCallback(IntObject.Action)
  fullName.vb: AggroTriggerBase(Of AggroBoundsProperties).RegisterStartAggroCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.AggroTriggerBase{AggroBoundsProperties}.RegisterStartAggroCallback(IntObject.Action)
    name: RegisterStartAggroCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.AggroTriggerBase{AggroBoundsProperties}.RegisterStartAggroCallback(IntObject.Action)
    name: RegisterStartAggroCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.AggroTriggerBase{AggroBoundsProperties}.UnregisterStartAggroCallback(IntObject.Action)
  commentId: M:Global.AggroTriggerBase{AggroBoundsProperties}.UnregisterStartAggroCallback(IntObject.Action)
  parent: Global.AggroTriggerBase{AggroBoundsProperties}
  definition: Global.AggroTriggerBase`1.UnregisterStartAggroCallback(IntObject.Action)
  name: UnregisterStartAggroCallback(Action)
  nameWithType: AggroTriggerBase<AggroBoundsProperties>.UnregisterStartAggroCallback(IntObject.Action)
  fullName: AggroTriggerBase<AggroBoundsProperties>.UnregisterStartAggroCallback(IntObject.Action)
  nameWithType.vb: AggroTriggerBase(Of AggroBoundsProperties).UnregisterStartAggroCallback(IntObject.Action)
  fullName.vb: AggroTriggerBase(Of AggroBoundsProperties).UnregisterStartAggroCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.AggroTriggerBase{AggroBoundsProperties}.UnregisterStartAggroCallback(IntObject.Action)
    name: UnregisterStartAggroCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.AggroTriggerBase{AggroBoundsProperties}.UnregisterStartAggroCallback(IntObject.Action)
    name: UnregisterStartAggroCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.AggroTriggerBase{AggroBoundsProperties}.RegisterEndAggroCallback(IntObject.Action)
  commentId: M:Global.AggroTriggerBase{AggroBoundsProperties}.RegisterEndAggroCallback(IntObject.Action)
  parent: Global.AggroTriggerBase{AggroBoundsProperties}
  definition: Global.AggroTriggerBase`1.RegisterEndAggroCallback(IntObject.Action)
  name: RegisterEndAggroCallback(Action)
  nameWithType: AggroTriggerBase<AggroBoundsProperties>.RegisterEndAggroCallback(IntObject.Action)
  fullName: AggroTriggerBase<AggroBoundsProperties>.RegisterEndAggroCallback(IntObject.Action)
  nameWithType.vb: AggroTriggerBase(Of AggroBoundsProperties).RegisterEndAggroCallback(IntObject.Action)
  fullName.vb: AggroTriggerBase(Of AggroBoundsProperties).RegisterEndAggroCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.AggroTriggerBase{AggroBoundsProperties}.RegisterEndAggroCallback(IntObject.Action)
    name: RegisterEndAggroCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.AggroTriggerBase{AggroBoundsProperties}.RegisterEndAggroCallback(IntObject.Action)
    name: RegisterEndAggroCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.AggroTriggerBase{AggroBoundsProperties}.UnregisterEndAggroCallback(IntObject.Action)
  commentId: M:Global.AggroTriggerBase{AggroBoundsProperties}.UnregisterEndAggroCallback(IntObject.Action)
  parent: Global.AggroTriggerBase{AggroBoundsProperties}
  definition: Global.AggroTriggerBase`1.UnregisterEndAggroCallback(IntObject.Action)
  name: UnregisterEndAggroCallback(Action)
  nameWithType: AggroTriggerBase<AggroBoundsProperties>.UnregisterEndAggroCallback(IntObject.Action)
  fullName: AggroTriggerBase<AggroBoundsProperties>.UnregisterEndAggroCallback(IntObject.Action)
  nameWithType.vb: AggroTriggerBase(Of AggroBoundsProperties).UnregisterEndAggroCallback(IntObject.Action)
  fullName.vb: AggroTriggerBase(Of AggroBoundsProperties).UnregisterEndAggroCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.AggroTriggerBase{AggroBoundsProperties}.UnregisterEndAggroCallback(IntObject.Action)
    name: UnregisterEndAggroCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.AggroTriggerBase{AggroBoundsProperties}.UnregisterEndAggroCallback(IntObject.Action)
    name: UnregisterEndAggroCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.AggroTriggerBase{AggroBoundsProperties}.Reset
  commentId: M:Global.AggroTriggerBase{AggroBoundsProperties}.Reset
  parent: Global.AggroTriggerBase{AggroBoundsProperties}
  definition: Global.AggroTriggerBase`1.Reset
  name: Reset()
  nameWithType: AggroTriggerBase<AggroBoundsProperties>.Reset()
  fullName: AggroTriggerBase<AggroBoundsProperties>.Reset()
  nameWithType.vb: AggroTriggerBase(Of AggroBoundsProperties).Reset()
  fullName.vb: AggroTriggerBase(Of AggroBoundsProperties).Reset()
  spec.csharp:
  - uid: Global.AggroTriggerBase{AggroBoundsProperties}.Reset
    name: Reset
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AggroTriggerBase{AggroBoundsProperties}.Reset
    name: Reset
  - name: (
  - name: )
- uid: Global.AggroTriggerBase{AggroBoundsProperties}.IsTargetVisible
  commentId: M:Global.AggroTriggerBase{AggroBoundsProperties}.IsTargetVisible
  parent: Global.AggroTriggerBase{AggroBoundsProperties}
  definition: Global.AggroTriggerBase`1.IsTargetVisible
  name: IsTargetVisible()
  nameWithType: AggroTriggerBase<AggroBoundsProperties>.IsTargetVisible()
  fullName: AggroTriggerBase<AggroBoundsProperties>.IsTargetVisible()
  nameWithType.vb: AggroTriggerBase(Of AggroBoundsProperties).IsTargetVisible()
  fullName.vb: AggroTriggerBase(Of AggroBoundsProperties).IsTargetVisible()
  spec.csharp:
  - uid: Global.AggroTriggerBase{AggroBoundsProperties}.IsTargetVisible
    name: IsTargetVisible
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AggroTriggerBase{AggroBoundsProperties}.IsTargetVisible
    name: IsTargetVisible
  - name: (
  - name: )
- uid: Global.AggroTriggerBase{AggroBoundsProperties}.Update
  commentId: M:Global.AggroTriggerBase{AggroBoundsProperties}.Update
  parent: Global.AggroTriggerBase{AggroBoundsProperties}
  definition: Global.AggroTriggerBase`1.Update
  name: Update()
  nameWithType: AggroTriggerBase<AggroBoundsProperties>.Update()
  fullName: AggroTriggerBase<AggroBoundsProperties>.Update()
  nameWithType.vb: AggroTriggerBase(Of AggroBoundsProperties).Update()
  fullName.vb: AggroTriggerBase(Of AggroBoundsProperties).Update()
  spec.csharp:
  - uid: Global.AggroTriggerBase{AggroBoundsProperties}.Update
    name: Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AggroTriggerBase{AggroBoundsProperties}.Update
    name: Update
  - name: (
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.AggroTriggerBase`1
  commentId: T:Global.AggroTriggerBase`1
  name: AggroTriggerBase<T>
  nameWithType: AggroTriggerBase<T>
  fullName: AggroTriggerBase<T>
  nameWithType.vb: AggroTriggerBase(Of T)
  fullName.vb: AggroTriggerBase(Of T)
  name.vb: AggroTriggerBase(Of T)
  spec.csharp:
  - uid: Global.AggroTriggerBase`1
    name: AggroTriggerBase
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.AggroTriggerBase`1
    name: AggroTriggerBase
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.AggroTriggerBase`1.Properties
  commentId: F:Global.AggroTriggerBase`1.Properties
  name: Properties
  nameWithType: AggroTriggerBase<T>.Properties
  fullName: AggroTriggerBase<T>.Properties
  nameWithType.vb: AggroTriggerBase(Of T).Properties
  fullName.vb: AggroTriggerBase(Of T).Properties
- uid: Global.AggroTriggerBase`1.Target
  commentId: P:Global.AggroTriggerBase`1.Target
  name: Target
  nameWithType: AggroTriggerBase<T>.Target
  fullName: AggroTriggerBase<T>.Target
  nameWithType.vb: AggroTriggerBase(Of T).Target
  fullName.vb: AggroTriggerBase(Of T).Target
- uid: Global.AggroTriggerBase`1.Self
  commentId: P:Global.AggroTriggerBase`1.Self
  name: Self
  nameWithType: AggroTriggerBase<T>.Self
  fullName: AggroTriggerBase<T>.Self
  nameWithType.vb: AggroTriggerBase(Of T).Self
  fullName.vb: AggroTriggerBase(Of T).Self
- uid: Global.AggroTriggerBase`1.IsAggroing
  commentId: P:Global.AggroTriggerBase`1.IsAggroing
  name: IsAggroing
  nameWithType: AggroTriggerBase<T>.IsAggroing
  fullName: AggroTriggerBase<T>.IsAggroing
  nameWithType.vb: AggroTriggerBase(Of T).IsAggroing
  fullName.vb: AggroTriggerBase(Of T).IsAggroing
- uid: Global.AggroTriggerBase`1.OnStartAggro
  commentId: F:Global.AggroTriggerBase`1.OnStartAggro
  name: OnStartAggro
  nameWithType: AggroTriggerBase<T>.OnStartAggro
  fullName: AggroTriggerBase<T>.OnStartAggro
  nameWithType.vb: AggroTriggerBase(Of T).OnStartAggro
  fullName.vb: AggroTriggerBase(Of T).OnStartAggro
- uid: Global.AggroTriggerBase`1.OnEndAggro
  commentId: F:Global.AggroTriggerBase`1.OnEndAggro
  name: OnEndAggro
  nameWithType: AggroTriggerBase<T>.OnEndAggro
  fullName: AggroTriggerBase<T>.OnEndAggro
  nameWithType.vb: AggroTriggerBase(Of T).OnEndAggro
  fullName.vb: AggroTriggerBase(Of T).OnEndAggro
- uid: Global.AggroTriggerBase`1.LastFrameAggro
  commentId: F:Global.AggroTriggerBase`1.LastFrameAggro
  name: LastFrameAggro
  nameWithType: AggroTriggerBase<T>.LastFrameAggro
  fullName: AggroTriggerBase<T>.LastFrameAggro
  nameWithType.vb: AggroTriggerBase(Of T).LastFrameAggro
  fullName.vb: AggroTriggerBase(Of T).LastFrameAggro
- uid: Global.AggroTriggerBase`1.Initialize(`0,UnityEngine.GameObject,IntObject)
  commentId: M:Global.AggroTriggerBase`1.Initialize(`0,UnityEngine.GameObject,IntObject)
  isExternal: true
  name: Initialize(T, GameObject, IntObject)
  nameWithType: AggroTriggerBase<T>.Initialize(T, GameObject, IntObject)
  fullName: AggroTriggerBase<T>.Initialize(T, UnityEngine.GameObject, IntObject)
  nameWithType.vb: AggroTriggerBase(Of T).Initialize(T, GameObject, IntObject)
  fullName.vb: AggroTriggerBase(Of T).Initialize(T, UnityEngine.GameObject, IntObject)
  spec.csharp:
  - uid: Global.AggroTriggerBase`1.Initialize(`0,UnityEngine.GameObject,IntObject)
    name: Initialize
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject
    name: IntObject
  - name: )
  spec.vb:
  - uid: Global.AggroTriggerBase`1.Initialize(`0,UnityEngine.GameObject,IntObject)
    name: Initialize
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject
    name: IntObject
  - name: )
- uid: Global.AggroTriggerBase`1.RegisterStartAggroCallback(IntObject.Action)
  commentId: M:Global.AggroTriggerBase`1.RegisterStartAggroCallback(IntObject.Action)
  name: RegisterStartAggroCallback(Action)
  nameWithType: AggroTriggerBase<T>.RegisterStartAggroCallback(IntObject.Action)
  fullName: AggroTriggerBase<T>.RegisterStartAggroCallback(IntObject.Action)
  nameWithType.vb: AggroTriggerBase(Of T).RegisterStartAggroCallback(IntObject.Action)
  fullName.vb: AggroTriggerBase(Of T).RegisterStartAggroCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.AggroTriggerBase`1.RegisterStartAggroCallback(IntObject.Action)
    name: RegisterStartAggroCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.AggroTriggerBase`1.RegisterStartAggroCallback(IntObject.Action)
    name: RegisterStartAggroCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.AggroTriggerBase`1.UnregisterStartAggroCallback(IntObject.Action)
  commentId: M:Global.AggroTriggerBase`1.UnregisterStartAggroCallback(IntObject.Action)
  name: UnregisterStartAggroCallback(Action)
  nameWithType: AggroTriggerBase<T>.UnregisterStartAggroCallback(IntObject.Action)
  fullName: AggroTriggerBase<T>.UnregisterStartAggroCallback(IntObject.Action)
  nameWithType.vb: AggroTriggerBase(Of T).UnregisterStartAggroCallback(IntObject.Action)
  fullName.vb: AggroTriggerBase(Of T).UnregisterStartAggroCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.AggroTriggerBase`1.UnregisterStartAggroCallback(IntObject.Action)
    name: UnregisterStartAggroCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.AggroTriggerBase`1.UnregisterStartAggroCallback(IntObject.Action)
    name: UnregisterStartAggroCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.AggroTriggerBase`1.RegisterEndAggroCallback(IntObject.Action)
  commentId: M:Global.AggroTriggerBase`1.RegisterEndAggroCallback(IntObject.Action)
  name: RegisterEndAggroCallback(Action)
  nameWithType: AggroTriggerBase<T>.RegisterEndAggroCallback(IntObject.Action)
  fullName: AggroTriggerBase<T>.RegisterEndAggroCallback(IntObject.Action)
  nameWithType.vb: AggroTriggerBase(Of T).RegisterEndAggroCallback(IntObject.Action)
  fullName.vb: AggroTriggerBase(Of T).RegisterEndAggroCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.AggroTriggerBase`1.RegisterEndAggroCallback(IntObject.Action)
    name: RegisterEndAggroCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.AggroTriggerBase`1.RegisterEndAggroCallback(IntObject.Action)
    name: RegisterEndAggroCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.AggroTriggerBase`1.UnregisterEndAggroCallback(IntObject.Action)
  commentId: M:Global.AggroTriggerBase`1.UnregisterEndAggroCallback(IntObject.Action)
  name: UnregisterEndAggroCallback(Action)
  nameWithType: AggroTriggerBase<T>.UnregisterEndAggroCallback(IntObject.Action)
  fullName: AggroTriggerBase<T>.UnregisterEndAggroCallback(IntObject.Action)
  nameWithType.vb: AggroTriggerBase(Of T).UnregisterEndAggroCallback(IntObject.Action)
  fullName.vb: AggroTriggerBase(Of T).UnregisterEndAggroCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.AggroTriggerBase`1.UnregisterEndAggroCallback(IntObject.Action)
    name: UnregisterEndAggroCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.AggroTriggerBase`1.UnregisterEndAggroCallback(IntObject.Action)
    name: UnregisterEndAggroCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.AggroTriggerBase`1.Reset
  commentId: M:Global.AggroTriggerBase`1.Reset
  name: Reset()
  nameWithType: AggroTriggerBase<T>.Reset()
  fullName: AggroTriggerBase<T>.Reset()
  nameWithType.vb: AggroTriggerBase(Of T).Reset()
  fullName.vb: AggroTriggerBase(Of T).Reset()
  spec.csharp:
  - uid: Global.AggroTriggerBase`1.Reset
    name: Reset
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AggroTriggerBase`1.Reset
    name: Reset
  - name: (
  - name: )
- uid: Global.AggroTriggerBase`1.IsTargetVisible
  commentId: M:Global.AggroTriggerBase`1.IsTargetVisible
  name: IsTargetVisible()
  nameWithType: AggroTriggerBase<T>.IsTargetVisible()
  fullName: AggroTriggerBase<T>.IsTargetVisible()
  nameWithType.vb: AggroTriggerBase(Of T).IsTargetVisible()
  fullName.vb: AggroTriggerBase(Of T).IsTargetVisible()
  spec.csharp:
  - uid: Global.AggroTriggerBase`1.IsTargetVisible
    name: IsTargetVisible
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AggroTriggerBase`1.IsTargetVisible
    name: IsTargetVisible
  - name: (
  - name: )
- uid: Global.AggroTriggerBase`1.Update
  commentId: M:Global.AggroTriggerBase`1.Update
  name: Update()
  nameWithType: AggroTriggerBase<T>.Update()
  fullName: AggroTriggerBase<T>.Update()
  nameWithType.vb: AggroTriggerBase(Of T).Update()
  fullName.vb: AggroTriggerBase(Of T).Update()
  spec.csharp:
  - uid: Global.AggroTriggerBase`1.Update
    name: Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AggroTriggerBase`1.Update
    name: Update
  - name: (
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.AggroTriggerBase{AggroBoundsProperties}.UpdateBounds
  commentId: M:Global.AggroTriggerBase{AggroBoundsProperties}.UpdateBounds
  parent: Global.AggroTriggerBase{AggroBoundsProperties}
  definition: Global.AggroTriggerBase`1.UpdateBounds
  name: UpdateBounds()
  nameWithType: AggroTriggerBase<AggroBoundsProperties>.UpdateBounds()
  fullName: AggroTriggerBase<AggroBoundsProperties>.UpdateBounds()
  nameWithType.vb: AggroTriggerBase(Of AggroBoundsProperties).UpdateBounds()
  fullName.vb: AggroTriggerBase(Of AggroBoundsProperties).UpdateBounds()
  spec.csharp:
  - uid: Global.AggroTriggerBase{AggroBoundsProperties}.UpdateBounds
    name: UpdateBounds
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AggroTriggerBase{AggroBoundsProperties}.UpdateBounds
    name: UpdateBounds
  - name: (
  - name: )
- uid: Global.BoundsAggroTrigger.UpdateBounds*
  commentId: Overload:Global.BoundsAggroTrigger.UpdateBounds
  name: UpdateBounds
  nameWithType: BoundsAggroTrigger.UpdateBounds
  fullName: BoundsAggroTrigger.UpdateBounds
- uid: Global.AggroTriggerBase`1.UpdateBounds
  commentId: M:Global.AggroTriggerBase`1.UpdateBounds
  name: UpdateBounds()
  nameWithType: AggroTriggerBase<T>.UpdateBounds()
  fullName: AggroTriggerBase<T>.UpdateBounds()
  nameWithType.vb: AggroTriggerBase(Of T).UpdateBounds()
  fullName.vb: AggroTriggerBase(Of T).UpdateBounds()
  spec.csharp:
  - uid: Global.AggroTriggerBase`1.UpdateBounds
    name: UpdateBounds
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AggroTriggerBase`1.UpdateBounds
    name: UpdateBounds
  - name: (
  - name: )
- uid: Global.AggroTriggerBase{AggroBoundsProperties}.CheckShouldAggro
  commentId: M:Global.AggroTriggerBase{AggroBoundsProperties}.CheckShouldAggro
  parent: Global.AggroTriggerBase{AggroBoundsProperties}
  definition: Global.AggroTriggerBase`1.CheckShouldAggro
  name: CheckShouldAggro()
  nameWithType: AggroTriggerBase<AggroBoundsProperties>.CheckShouldAggro()
  fullName: AggroTriggerBase<AggroBoundsProperties>.CheckShouldAggro()
  nameWithType.vb: AggroTriggerBase(Of AggroBoundsProperties).CheckShouldAggro()
  fullName.vb: AggroTriggerBase(Of AggroBoundsProperties).CheckShouldAggro()
  spec.csharp:
  - uid: Global.AggroTriggerBase{AggroBoundsProperties}.CheckShouldAggro
    name: CheckShouldAggro
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AggroTriggerBase{AggroBoundsProperties}.CheckShouldAggro
    name: CheckShouldAggro
  - name: (
  - name: )
- uid: Global.BoundsAggroTrigger.CheckShouldAggro*
  commentId: Overload:Global.BoundsAggroTrigger.CheckShouldAggro
  name: CheckShouldAggro
  nameWithType: BoundsAggroTrigger.CheckShouldAggro
  fullName: BoundsAggroTrigger.CheckShouldAggro
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.AggroTriggerBase`1.CheckShouldAggro
  commentId: M:Global.AggroTriggerBase`1.CheckShouldAggro
  name: CheckShouldAggro()
  nameWithType: AggroTriggerBase<T>.CheckShouldAggro()
  fullName: AggroTriggerBase<T>.CheckShouldAggro()
  nameWithType.vb: AggroTriggerBase(Of T).CheckShouldAggro()
  fullName.vb: AggroTriggerBase(Of T).CheckShouldAggro()
  spec.csharp:
  - uid: Global.AggroTriggerBase`1.CheckShouldAggro
    name: CheckShouldAggro
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AggroTriggerBase`1.CheckShouldAggro
    name: CheckShouldAggro
  - name: (
  - name: )
