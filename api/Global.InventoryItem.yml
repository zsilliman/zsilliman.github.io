### YamlMime:ManagedReference
items:
- uid: Global.InventoryItem
  commentId: T:Global.InventoryItem
  id: InventoryItem
  parent: Global
  children:
  - Global.InventoryItem.AfterDrop
  - Global.InventoryItem.BeforePickup
  - Global.InventoryItem.categoryIcon
  - Global.InventoryItem.DestroyPopups
  - Global.InventoryItem.hand
  - Global.InventoryItem.image
  - Global.InventoryItem.InitializeItem(Item)
  - Global.InventoryItem.item
  - Global.InventoryItem.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)
  - Global.InventoryItem.OnDrag(UnityEngine.EventSystems.PointerEventData)
  - Global.InventoryItem.OnEndDrag(UnityEngine.EventSystems.PointerEventData)
  - Global.InventoryItem.OnPointerClick(UnityEngine.EventSystems.PointerEventData)
  - Global.InventoryItem.OnPointerEnter(UnityEngine.EventSystems.PointerEventData)
  - Global.InventoryItem.OnPointerExit(UnityEngine.EventSystems.PointerEventData)
  - Global.InventoryItem.originalParent
  - Global.InventoryItem.popUpPrefab
  - Global.InventoryItem.ResetDraggedItem
  - Global.InventoryItem.SetAsChildOf(UnityEngine.Transform)
  langs:
  - csharp
  - vb
  name: InventoryItem
  nameWithType: InventoryItem
  fullName: InventoryItem
  type: Class
  source:
    remote:
      path: Assets/User Interface/Inventory/InventoryItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: InventoryItem
    path: ../Assets/User Interface/Inventory/InventoryItem.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class InventoryItem : MonoBehaviour'
    content.vb: Public Class InventoryItem Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.InventoryItem.image
  commentId: F:Global.InventoryItem.image
  id: image
  parent: Global.InventoryItem
  langs:
  - csharp
  - vb
  name: image
  nameWithType: InventoryItem.image
  fullName: InventoryItem.image
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/InventoryItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: image
    path: ../Assets/User Interface/Inventory/InventoryItem.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Image image
    return:
      type: UnityEngine.UI.Image
    content.vb: Public image As Image
- uid: Global.InventoryItem.popUpPrefab
  commentId: F:Global.InventoryItem.popUpPrefab
  id: popUpPrefab
  parent: Global.InventoryItem
  langs:
  - csharp
  - vb
  name: popUpPrefab
  nameWithType: InventoryItem.popUpPrefab
  fullName: InventoryItem.popUpPrefab
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/InventoryItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: popUpPrefab
    path: ../Assets/User Interface/Inventory/InventoryItem.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public GameObject popUpPrefab
    return:
      type: UnityEngine.GameObject
    content.vb: Public popUpPrefab As GameObject
- uid: Global.InventoryItem.item
  commentId: F:Global.InventoryItem.item
  id: item
  parent: Global.InventoryItem
  langs:
  - csharp
  - vb
  name: item
  nameWithType: InventoryItem.item
  fullName: InventoryItem.item
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/InventoryItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: item
    path: ../Assets/User Interface/Inventory/InventoryItem.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [HideInInspector]

      public Item item
    return:
      type: Global.Item
    content.vb: >-
      <HideInInspector>

      Public item As Item
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.InventoryItem.originalParent
  commentId: F:Global.InventoryItem.originalParent
  id: originalParent
  parent: Global.InventoryItem
  langs:
  - csharp
  - vb
  name: originalParent
  nameWithType: InventoryItem.originalParent
  fullName: InventoryItem.originalParent
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/InventoryItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: originalParent
    path: ../Assets/User Interface/Inventory/InventoryItem.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [HideInInspector]

      public Transform originalParent
    return:
      type: UnityEngine.Transform
    content.vb: >-
      <HideInInspector>

      Public originalParent As Transform
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.InventoryItem.hand
  commentId: F:Global.InventoryItem.hand
  id: hand
  parent: Global.InventoryItem
  langs:
  - csharp
  - vb
  name: hand
  nameWithType: InventoryItem.hand
  fullName: InventoryItem.hand
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/InventoryItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: hand
    path: ../Assets/User Interface/Inventory/InventoryItem.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [HideInInspector]

      public Hand hand
    return:
      type: Global.Hand
    content.vb: >-
      <HideInInspector>

      Public hand As Hand
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.InventoryItem.categoryIcon
  commentId: F:Global.InventoryItem.categoryIcon
  id: categoryIcon
  parent: Global.InventoryItem
  langs:
  - csharp
  - vb
  name: categoryIcon
  nameWithType: InventoryItem.categoryIcon
  fullName: InventoryItem.categoryIcon
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/InventoryItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: categoryIcon
    path: ../Assets/User Interface/Inventory/InventoryItem.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Image categoryIcon
    return:
      type: UnityEngine.UI.Image
    content.vb: Public categoryIcon As Image
- uid: Global.InventoryItem.InitializeItem(Item)
  commentId: M:Global.InventoryItem.InitializeItem(Item)
  id: InitializeItem(Item)
  parent: Global.InventoryItem
  langs:
  - csharp
  - vb
  name: InitializeItem(Item)
  nameWithType: InventoryItem.InitializeItem(Item)
  fullName: InventoryItem.InitializeItem(Item)
  type: Method
  source:
    remote:
      path: Assets/User Interface/Inventory/InventoryItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: InitializeItem
    path: ../Assets/User Interface/Inventory/InventoryItem.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void InitializeItem(Item newItem)
    parameters:
    - id: newItem
      type: Global.Item
    content.vb: Public Sub InitializeItem(newItem As Item)
  overload: Global.InventoryItem.InitializeItem*
- uid: Global.InventoryItem.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)
  commentId: M:Global.InventoryItem.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)
  id: OnBeginDrag(UnityEngine.EventSystems.PointerEventData)
  parent: Global.InventoryItem
  langs:
  - csharp
  - vb
  name: OnBeginDrag(PointerEventData)
  nameWithType: InventoryItem.OnBeginDrag(PointerEventData)
  fullName: InventoryItem.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)
  type: Method
  source:
    remote:
      path: Assets/User Interface/Inventory/InventoryItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnBeginDrag
    path: ../Assets/User Interface/Inventory/InventoryItem.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void OnBeginDrag(PointerEventData eventData)
    parameters:
    - id: eventData
      type: UnityEngine.EventSystems.PointerEventData
    content.vb: Public Sub OnBeginDrag(eventData As PointerEventData)
  overload: Global.InventoryItem.OnBeginDrag*
- uid: Global.InventoryItem.OnDrag(UnityEngine.EventSystems.PointerEventData)
  commentId: M:Global.InventoryItem.OnDrag(UnityEngine.EventSystems.PointerEventData)
  id: OnDrag(UnityEngine.EventSystems.PointerEventData)
  parent: Global.InventoryItem
  langs:
  - csharp
  - vb
  name: OnDrag(PointerEventData)
  nameWithType: InventoryItem.OnDrag(PointerEventData)
  fullName: InventoryItem.OnDrag(UnityEngine.EventSystems.PointerEventData)
  type: Method
  source:
    remote:
      path: Assets/User Interface/Inventory/InventoryItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnDrag
    path: ../Assets/User Interface/Inventory/InventoryItem.cs
    startLine: 37
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void OnDrag(PointerEventData eventData)
    parameters:
    - id: eventData
      type: UnityEngine.EventSystems.PointerEventData
    content.vb: Public Sub OnDrag(eventData As PointerEventData)
  overload: Global.InventoryItem.OnDrag*
- uid: Global.InventoryItem.OnEndDrag(UnityEngine.EventSystems.PointerEventData)
  commentId: M:Global.InventoryItem.OnEndDrag(UnityEngine.EventSystems.PointerEventData)
  id: OnEndDrag(UnityEngine.EventSystems.PointerEventData)
  parent: Global.InventoryItem
  langs:
  - csharp
  - vb
  name: OnEndDrag(PointerEventData)
  nameWithType: InventoryItem.OnEndDrag(PointerEventData)
  fullName: InventoryItem.OnEndDrag(UnityEngine.EventSystems.PointerEventData)
  type: Method
  source:
    remote:
      path: Assets/User Interface/Inventory/InventoryItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnEndDrag
    path: ../Assets/User Interface/Inventory/InventoryItem.cs
    startLine: 42
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void OnEndDrag(PointerEventData eventData)
    parameters:
    - id: eventData
      type: UnityEngine.EventSystems.PointerEventData
    content.vb: Public Sub OnEndDrag(eventData As PointerEventData)
  overload: Global.InventoryItem.OnEndDrag*
- uid: Global.InventoryItem.OnPointerClick(UnityEngine.EventSystems.PointerEventData)
  commentId: M:Global.InventoryItem.OnPointerClick(UnityEngine.EventSystems.PointerEventData)
  id: OnPointerClick(UnityEngine.EventSystems.PointerEventData)
  parent: Global.InventoryItem
  langs:
  - csharp
  - vb
  name: OnPointerClick(PointerEventData)
  nameWithType: InventoryItem.OnPointerClick(PointerEventData)
  fullName: InventoryItem.OnPointerClick(UnityEngine.EventSystems.PointerEventData)
  type: Method
  source:
    remote:
      path: Assets/User Interface/Inventory/InventoryItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnPointerClick
    path: ../Assets/User Interface/Inventory/InventoryItem.cs
    startLine: 49
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void OnPointerClick(PointerEventData eventData)
    parameters:
    - id: eventData
      type: UnityEngine.EventSystems.PointerEventData
    content.vb: Public Sub OnPointerClick(eventData As PointerEventData)
  overload: Global.InventoryItem.OnPointerClick*
- uid: Global.InventoryItem.BeforePickup
  commentId: M:Global.InventoryItem.BeforePickup
  id: BeforePickup
  parent: Global.InventoryItem
  langs:
  - csharp
  - vb
  name: BeforePickup()
  nameWithType: InventoryItem.BeforePickup()
  fullName: InventoryItem.BeforePickup()
  type: Method
  source:
    remote:
      path: Assets/User Interface/Inventory/InventoryItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BeforePickup
    path: ../Assets/User Interface/Inventory/InventoryItem.cs
    startLine: 70
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void BeforePickup()
    content.vb: Public Sub BeforePickup()
  overload: Global.InventoryItem.BeforePickup*
- uid: Global.InventoryItem.AfterDrop
  commentId: M:Global.InventoryItem.AfterDrop
  id: AfterDrop
  parent: Global.InventoryItem
  langs:
  - csharp
  - vb
  name: AfterDrop()
  nameWithType: InventoryItem.AfterDrop()
  fullName: InventoryItem.AfterDrop()
  type: Method
  source:
    remote:
      path: Assets/User Interface/Inventory/InventoryItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AfterDrop
    path: ../Assets/User Interface/Inventory/InventoryItem.cs
    startLine: 76
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void AfterDrop()
    content.vb: Public Sub AfterDrop()
  overload: Global.InventoryItem.AfterDrop*
- uid: Global.InventoryItem.SetAsChildOf(UnityEngine.Transform)
  commentId: M:Global.InventoryItem.SetAsChildOf(UnityEngine.Transform)
  id: SetAsChildOf(UnityEngine.Transform)
  parent: Global.InventoryItem
  langs:
  - csharp
  - vb
  name: SetAsChildOf(Transform)
  nameWithType: InventoryItem.SetAsChildOf(Transform)
  fullName: InventoryItem.SetAsChildOf(UnityEngine.Transform)
  type: Method
  source:
    remote:
      path: Assets/User Interface/Inventory/InventoryItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetAsChildOf
    path: ../Assets/User Interface/Inventory/InventoryItem.cs
    startLine: 81
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetAsChildOf(Transform parentTransform)
    parameters:
    - id: parentTransform
      type: UnityEngine.Transform
    content.vb: Public Sub SetAsChildOf(parentTransform As Transform)
  overload: Global.InventoryItem.SetAsChildOf*
- uid: Global.InventoryItem.ResetDraggedItem
  commentId: M:Global.InventoryItem.ResetDraggedItem
  id: ResetDraggedItem
  parent: Global.InventoryItem
  langs:
  - csharp
  - vb
  name: ResetDraggedItem()
  nameWithType: InventoryItem.ResetDraggedItem()
  fullName: InventoryItem.ResetDraggedItem()
  type: Method
  source:
    remote:
      path: Assets/User Interface/Inventory/InventoryItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResetDraggedItem
    path: ../Assets/User Interface/Inventory/InventoryItem.cs
    startLine: 85
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void ResetDraggedItem()
    content.vb: Public Sub ResetDraggedItem()
  overload: Global.InventoryItem.ResetDraggedItem*
- uid: Global.InventoryItem.OnPointerEnter(UnityEngine.EventSystems.PointerEventData)
  commentId: M:Global.InventoryItem.OnPointerEnter(UnityEngine.EventSystems.PointerEventData)
  id: OnPointerEnter(UnityEngine.EventSystems.PointerEventData)
  parent: Global.InventoryItem
  langs:
  - csharp
  - vb
  name: OnPointerEnter(PointerEventData)
  nameWithType: InventoryItem.OnPointerEnter(PointerEventData)
  fullName: InventoryItem.OnPointerEnter(UnityEngine.EventSystems.PointerEventData)
  type: Method
  source:
    remote:
      path: Assets/User Interface/Inventory/InventoryItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnPointerEnter
    path: ../Assets/User Interface/Inventory/InventoryItem.cs
    startLine: 90
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void OnPointerEnter(PointerEventData eventData)
    parameters:
    - id: eventData
      type: UnityEngine.EventSystems.PointerEventData
    content.vb: Public Sub OnPointerEnter(eventData As PointerEventData)
  overload: Global.InventoryItem.OnPointerEnter*
- uid: Global.InventoryItem.OnPointerExit(UnityEngine.EventSystems.PointerEventData)
  commentId: M:Global.InventoryItem.OnPointerExit(UnityEngine.EventSystems.PointerEventData)
  id: OnPointerExit(UnityEngine.EventSystems.PointerEventData)
  parent: Global.InventoryItem
  langs:
  - csharp
  - vb
  name: OnPointerExit(PointerEventData)
  nameWithType: InventoryItem.OnPointerExit(PointerEventData)
  fullName: InventoryItem.OnPointerExit(UnityEngine.EventSystems.PointerEventData)
  type: Method
  source:
    remote:
      path: Assets/User Interface/Inventory/InventoryItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnPointerExit
    path: ../Assets/User Interface/Inventory/InventoryItem.cs
    startLine: 187
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void OnPointerExit(PointerEventData eventData)
    parameters:
    - id: eventData
      type: UnityEngine.EventSystems.PointerEventData
    content.vb: Public Sub OnPointerExit(eventData As PointerEventData)
  overload: Global.InventoryItem.OnPointerExit*
- uid: Global.InventoryItem.DestroyPopups
  commentId: M:Global.InventoryItem.DestroyPopups
  id: DestroyPopups
  parent: Global.InventoryItem
  langs:
  - csharp
  - vb
  name: DestroyPopups()
  nameWithType: InventoryItem.DestroyPopups()
  fullName: InventoryItem.DestroyPopups()
  type: Method
  source:
    remote:
      path: Assets/User Interface/Inventory/InventoryItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DestroyPopups
    path: ../Assets/User Interface/Inventory/InventoryItem.cs
    startLine: 192
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void DestroyPopups()
    content.vb: Public Sub DestroyPopups()
  overload: Global.InventoryItem.DestroyPopups*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: UnityEngine.UI.Image
  commentId: T:UnityEngine.UI.Image
  parent: UnityEngine.UI
  isExternal: true
  name: Image
  nameWithType: Image
  fullName: UnityEngine.UI.Image
- uid: UnityEngine.UI
  commentId: N:UnityEngine.UI
  isExternal: true
  name: UnityEngine.UI
  nameWithType: UnityEngine.UI
  fullName: UnityEngine.UI
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.UI
    name: UI
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.UI
    name: UI
    isExternal: true
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: Global.Item
  commentId: T:Global.Item
  name: Item
  nameWithType: Item
  fullName: Item
- uid: UnityEngine.Transform
  commentId: T:UnityEngine.Transform
  parent: UnityEngine
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: UnityEngine.Transform
- uid: Global.Hand
  commentId: T:Global.Hand
  name: Hand
  nameWithType: Hand
  fullName: Hand
- uid: Global.InventoryItem.InitializeItem*
  commentId: Overload:Global.InventoryItem.InitializeItem
  name: InitializeItem
  nameWithType: InventoryItem.InitializeItem
  fullName: InventoryItem.InitializeItem
- uid: Global.InventoryItem.OnBeginDrag*
  commentId: Overload:Global.InventoryItem.OnBeginDrag
  name: OnBeginDrag
  nameWithType: InventoryItem.OnBeginDrag
  fullName: InventoryItem.OnBeginDrag
- uid: UnityEngine.EventSystems.PointerEventData
  commentId: T:UnityEngine.EventSystems.PointerEventData
  parent: UnityEngine.EventSystems
  isExternal: true
  name: PointerEventData
  nameWithType: PointerEventData
  fullName: UnityEngine.EventSystems.PointerEventData
- uid: UnityEngine.EventSystems
  commentId: N:UnityEngine.EventSystems
  isExternal: true
  name: UnityEngine.EventSystems
  nameWithType: UnityEngine.EventSystems
  fullName: UnityEngine.EventSystems
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.EventSystems
    name: EventSystems
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.EventSystems
    name: EventSystems
    isExternal: true
- uid: Global.InventoryItem.OnDrag*
  commentId: Overload:Global.InventoryItem.OnDrag
  name: OnDrag
  nameWithType: InventoryItem.OnDrag
  fullName: InventoryItem.OnDrag
- uid: Global.InventoryItem.OnEndDrag*
  commentId: Overload:Global.InventoryItem.OnEndDrag
  name: OnEndDrag
  nameWithType: InventoryItem.OnEndDrag
  fullName: InventoryItem.OnEndDrag
- uid: Global.InventoryItem.OnPointerClick*
  commentId: Overload:Global.InventoryItem.OnPointerClick
  name: OnPointerClick
  nameWithType: InventoryItem.OnPointerClick
  fullName: InventoryItem.OnPointerClick
- uid: Global.InventoryItem.BeforePickup*
  commentId: Overload:Global.InventoryItem.BeforePickup
  name: BeforePickup
  nameWithType: InventoryItem.BeforePickup
  fullName: InventoryItem.BeforePickup
- uid: Global.InventoryItem.AfterDrop*
  commentId: Overload:Global.InventoryItem.AfterDrop
  name: AfterDrop
  nameWithType: InventoryItem.AfterDrop
  fullName: InventoryItem.AfterDrop
- uid: Global.InventoryItem.SetAsChildOf*
  commentId: Overload:Global.InventoryItem.SetAsChildOf
  name: SetAsChildOf
  nameWithType: InventoryItem.SetAsChildOf
  fullName: InventoryItem.SetAsChildOf
- uid: Global.InventoryItem.ResetDraggedItem*
  commentId: Overload:Global.InventoryItem.ResetDraggedItem
  name: ResetDraggedItem
  nameWithType: InventoryItem.ResetDraggedItem
  fullName: InventoryItem.ResetDraggedItem
- uid: Global.InventoryItem.OnPointerEnter*
  commentId: Overload:Global.InventoryItem.OnPointerEnter
  name: OnPointerEnter
  nameWithType: InventoryItem.OnPointerEnter
  fullName: InventoryItem.OnPointerEnter
- uid: Global.InventoryItem.OnPointerExit*
  commentId: Overload:Global.InventoryItem.OnPointerExit
  name: OnPointerExit
  nameWithType: InventoryItem.OnPointerExit
  fullName: InventoryItem.OnPointerExit
- uid: Global.InventoryItem.DestroyPopups*
  commentId: Overload:Global.InventoryItem.DestroyPopups
  name: DestroyPopups
  nameWithType: InventoryItem.DestroyPopups
  fullName: InventoryItem.DestroyPopups
