### YamlMime:ManagedReference
items:
- uid: Global.ProceduralSectionGenerator.ProceduralSectionProperties
  commentId: T:Global.ProceduralSectionGenerator.ProceduralSectionProperties
  id: ProceduralSectionGenerator.ProceduralSectionProperties
  parent: Global
  children:
  - Global.ProceduralSectionGenerator.ProceduralSectionProperties.AlignmentRule
  - Global.ProceduralSectionGenerator.ProceduralSectionProperties.BorderType
  - Global.ProceduralSectionGenerator.ProceduralSectionProperties.EntranceProps
  - Global.ProceduralSectionGenerator.ProceduralSectionProperties.SizeInTiles
  - Global.ProceduralSectionGenerator.ProceduralSectionProperties.TerrainType
  langs:
  - csharp
  - vb
  name: ProceduralSectionGenerator.ProceduralSectionProperties
  nameWithType: ProceduralSectionGenerator.ProceduralSectionProperties
  fullName: ProceduralSectionGenerator.ProceduralSectionProperties
  type: Class
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ProceduralSectionProperties
    path: ../Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
    startLine: 58
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nClass used to hold properties about the procedural section being generated\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class ProceduralSectionGenerator.ProceduralSectionProperties
    content.vb: >-
      <Serializable>

      Public Class ProceduralSectionGenerator.ProceduralSectionProperties
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.ProceduralSectionGenerator.ProceduralSectionProperties.EntranceProps
  commentId: F:Global.ProceduralSectionGenerator.ProceduralSectionProperties.EntranceProps
  id: EntranceProps
  parent: Global.ProceduralSectionGenerator.ProceduralSectionProperties
  langs:
  - csharp
  - vb
  name: EntranceProps
  nameWithType: ProceduralSectionGenerator.ProceduralSectionProperties.EntranceProps
  fullName: ProceduralSectionGenerator.ProceduralSectionProperties.EntranceProps
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EntranceProps
    path: ../Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
    startLine: 62
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public List<ProceduralSectionGenerator.EntranceProps> EntranceProps
    return:
      type: System.Collections.Generic.List{ProceduralSectionGenerator.EntranceProps}
    content.vb: >-
      <SerializeField>

      Public EntranceProps As List(Of ProceduralSectionGenerator.EntranceProps)
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.ProceduralSectionGenerator.ProceduralSectionProperties.SizeInTiles
  commentId: F:Global.ProceduralSectionGenerator.ProceduralSectionProperties.SizeInTiles
  id: SizeInTiles
  parent: Global.ProceduralSectionGenerator.ProceduralSectionProperties
  langs:
  - csharp
  - vb
  name: SizeInTiles
  nameWithType: ProceduralSectionGenerator.ProceduralSectionProperties.SizeInTiles
  fullName: ProceduralSectionGenerator.ProceduralSectionProperties.SizeInTiles
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SizeInTiles
    path: ../Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
    startLine: 64
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public Vector2Int SizeInTiles
    return:
      type: UnityEngine.Vector2Int
    content.vb: >-
      <SerializeField>

      Public SizeInTiles As Vector2Int
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.ProceduralSectionGenerator.ProceduralSectionProperties.BorderType
  commentId: F:Global.ProceduralSectionGenerator.ProceduralSectionProperties.BorderType
  id: BorderType
  parent: Global.ProceduralSectionGenerator.ProceduralSectionProperties
  langs:
  - csharp
  - vb
  name: BorderType
  nameWithType: ProceduralSectionGenerator.ProceduralSectionProperties.BorderType
  fullName: ProceduralSectionGenerator.ProceduralSectionProperties.BorderType
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BorderType
    path: ../Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
    startLine: 66
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public ProceduralSectionGenerator.SectionBorderType BorderType
    return:
      type: Global.ProceduralSectionGenerator.SectionBorderType
    content.vb: >-
      <SerializeField>

      Public BorderType As ProceduralSectionGenerator.SectionBorderType
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.ProceduralSectionGenerator.ProceduralSectionProperties.AlignmentRule
  commentId: F:Global.ProceduralSectionGenerator.ProceduralSectionProperties.AlignmentRule
  id: AlignmentRule
  parent: Global.ProceduralSectionGenerator.ProceduralSectionProperties
  langs:
  - csharp
  - vb
  name: AlignmentRule
  nameWithType: ProceduralSectionGenerator.ProceduralSectionProperties.AlignmentRule
  fullName: ProceduralSectionGenerator.ProceduralSectionProperties.AlignmentRule
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AlignmentRule
    path: ../Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
    startLine: 68
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public ProceduralSectionGenerator.SectionAlignmentRule AlignmentRule
    return:
      type: Global.ProceduralSectionGenerator.SectionAlignmentRule
    content.vb: >-
      <SerializeField>

      Public AlignmentRule As ProceduralSectionGenerator.SectionAlignmentRule
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.ProceduralSectionGenerator.ProceduralSectionProperties.TerrainType
  commentId: F:Global.ProceduralSectionGenerator.ProceduralSectionProperties.TerrainType
  id: TerrainType
  parent: Global.ProceduralSectionGenerator.ProceduralSectionProperties
  langs:
  - csharp
  - vb
  name: TerrainType
  nameWithType: ProceduralSectionGenerator.ProceduralSectionProperties.TerrainType
  fullName: ProceduralSectionGenerator.ProceduralSectionProperties.TerrainType
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TerrainType
    path: ../Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
    startLine: 70
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public ProceduralSectionGenerator.SectionTerrainType TerrainType
    return:
      type: Global.ProceduralSectionGenerator.SectionTerrainType
    content.vb: >-
      <SerializeField>

      Public TerrainType As ProceduralSectionGenerator.SectionTerrainType
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.Collections.Generic.List{ProceduralSectionGenerator.EntranceProps}
  commentId: T:System.Collections.Generic.List{ProceduralSectionGenerator.EntranceProps}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ProceduralSectionGenerator.EntranceProps>
  nameWithType: List<ProceduralSectionGenerator.EntranceProps>
  fullName: System.Collections.Generic.List<ProceduralSectionGenerator.EntranceProps>
  nameWithType.vb: List(Of ProceduralSectionGenerator.EntranceProps)
  fullName.vb: System.Collections.Generic.List(Of ProceduralSectionGenerator.EntranceProps)
  name.vb: List(Of ProceduralSectionGenerator.EntranceProps)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.ProceduralSectionGenerator
    name: ProceduralSectionGenerator
  - name: .
  - uid: Global.ProceduralSectionGenerator.EntranceProps
    name: EntranceProps
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.ProceduralSectionGenerator
    name: ProceduralSectionGenerator
  - name: .
  - uid: Global.ProceduralSectionGenerator.EntranceProps
    name: EntranceProps
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ProceduralSectionGenerator.SectionBorderType
  commentId: T:Global.ProceduralSectionGenerator.SectionBorderType
  name: ProceduralSectionGenerator.SectionBorderType
  nameWithType: ProceduralSectionGenerator.SectionBorderType
  fullName: ProceduralSectionGenerator.SectionBorderType
  spec.csharp:
  - uid: Global.ProceduralSectionGenerator
    name: ProceduralSectionGenerator
  - name: .
  - uid: Global.ProceduralSectionGenerator.SectionBorderType
    name: SectionBorderType
  spec.vb:
  - uid: Global.ProceduralSectionGenerator
    name: ProceduralSectionGenerator
  - name: .
  - uid: Global.ProceduralSectionGenerator.SectionBorderType
    name: SectionBorderType
- uid: Global.ProceduralSectionGenerator.SectionAlignmentRule
  commentId: T:Global.ProceduralSectionGenerator.SectionAlignmentRule
  name: ProceduralSectionGenerator.SectionAlignmentRule
  nameWithType: ProceduralSectionGenerator.SectionAlignmentRule
  fullName: ProceduralSectionGenerator.SectionAlignmentRule
  spec.csharp:
  - uid: Global.ProceduralSectionGenerator
    name: ProceduralSectionGenerator
  - name: .
  - uid: Global.ProceduralSectionGenerator.SectionAlignmentRule
    name: SectionAlignmentRule
  spec.vb:
  - uid: Global.ProceduralSectionGenerator
    name: ProceduralSectionGenerator
  - name: .
  - uid: Global.ProceduralSectionGenerator.SectionAlignmentRule
    name: SectionAlignmentRule
- uid: Global.ProceduralSectionGenerator.SectionTerrainType
  commentId: T:Global.ProceduralSectionGenerator.SectionTerrainType
  name: ProceduralSectionGenerator.SectionTerrainType
  nameWithType: ProceduralSectionGenerator.SectionTerrainType
  fullName: ProceduralSectionGenerator.SectionTerrainType
  spec.csharp:
  - uid: Global.ProceduralSectionGenerator
    name: ProceduralSectionGenerator
  - name: .
  - uid: Global.ProceduralSectionGenerator.SectionTerrainType
    name: SectionTerrainType
  spec.vb:
  - uid: Global.ProceduralSectionGenerator
    name: ProceduralSectionGenerator
  - name: .
  - uid: Global.ProceduralSectionGenerator.SectionTerrainType
    name: SectionTerrainType
