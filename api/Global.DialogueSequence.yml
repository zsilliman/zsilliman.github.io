### YamlMime:ManagedReference
items:
- uid: Global.DialogueSequence
  commentId: T:Global.DialogueSequence
  id: DialogueSequence
  parent: Global
  children:
  - Global.DialogueSequence.Dialogues
  - Global.DialogueSequence.SequenceName
  langs:
  - csharp
  - vb
  name: DialogueSequence
  nameWithType: DialogueSequence
  fullName: DialogueSequence
  type: Class
  source:
    remote:
      path: Assets/Framework/Gameplay/DialogueObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DialogueSequence
    path: ../Assets/Framework/Gameplay/DialogueObject.cs
    startLine: 5
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class DialogueSequence
    content.vb: >-
      <Serializable>

      Public Class DialogueSequence
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.DialogueSequence.SequenceName
  commentId: F:Global.DialogueSequence.SequenceName
  id: SequenceName
  parent: Global.DialogueSequence
  langs:
  - csharp
  - vb
  name: SequenceName
  nameWithType: DialogueSequence.SequenceName
  fullName: DialogueSequence.SequenceName
  type: Field
  source:
    remote:
      path: Assets/Framework/Gameplay/DialogueObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SequenceName
    path: ../Assets/Framework/Gameplay/DialogueObject.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public string SequenceName
    return:
      type: System.String
    content.vb: >-
      <SerializeField>

      Public SequenceName As String
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.DialogueSequence.Dialogues
  commentId: F:Global.DialogueSequence.Dialogues
  id: Dialogues
  parent: Global.DialogueSequence
  langs:
  - csharp
  - vb
  name: Dialogues
  nameWithType: DialogueSequence.Dialogues
  fullName: DialogueSequence.Dialogues
  type: Field
  source:
    remote:
      path: Assets/Framework/Gameplay/DialogueObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Dialogues
    path: ../Assets/Framework/Gameplay/DialogueObject.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public List<DialogueInteractionController.DialogueStruct> Dialogues
    return:
      type: System.Collections.Generic.List{DialogueInteractionController.DialogueStruct}
    content.vb: >-
      <SerializeField>

      Public Dialogues As List(Of DialogueInteractionController.DialogueStruct)
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.List{DialogueInteractionController.DialogueStruct}
  commentId: T:System.Collections.Generic.List{DialogueInteractionController.DialogueStruct}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<DialogueInteractionController.DialogueStruct>
  nameWithType: List<DialogueInteractionController.DialogueStruct>
  fullName: System.Collections.Generic.List<DialogueInteractionController.DialogueStruct>
  nameWithType.vb: List(Of DialogueInteractionController.DialogueStruct)
  fullName.vb: System.Collections.Generic.List(Of DialogueInteractionController.DialogueStruct)
  name.vb: List(Of DialogueInteractionController.DialogueStruct)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.DialogueInteractionController
    name: DialogueInteractionController
  - name: .
  - uid: Global.DialogueInteractionController.DialogueStruct
    name: DialogueStruct
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.DialogueInteractionController
    name: DialogueInteractionController
  - name: .
  - uid: Global.DialogueInteractionController.DialogueStruct
    name: DialogueStruct
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
