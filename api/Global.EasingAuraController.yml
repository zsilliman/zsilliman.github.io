### YamlMime:ManagedReference
items:
- uid: Global.EasingAuraController
  commentId: T:Global.EasingAuraController
  id: EasingAuraController
  parent: Global
  children:
  - Global.EasingAuraController.AuraEndRadius
  - Global.EasingAuraController.AuraStartRadius
  - Global.EasingAuraController.ContractingFunction
  - Global.EasingAuraController.ContractTime
  - Global.EasingAuraController.ExpandAndContract
  - Global.EasingAuraController.ExpandingFunction
  - Global.EasingAuraController.ExpandOnly
  - Global.EasingAuraController.ExpandTime
  - Global.EasingAuraController.Notify(DefaultNotificationType)
  - Global.EasingAuraController.SegmentsPerRadian
  - Global.EasingAuraController.SetExpandContract(EasingFunction.Ease,System.Single,EasingFunction.Ease,System.Single)
  - Global.EasingAuraController.SetExpandOnly(EasingFunction.Ease,System.Single)
  - Global.EasingAuraController.Start
  - Global.EasingAuraController.Type
  - Global.EasingAuraController.Update
  langs:
  - csharp
  - vb
  name: EasingAuraController
  nameWithType: EasingAuraController
  fullName: EasingAuraController
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EasingAuraController
    path: ../Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class EasingAuraController : AuraController<DefaultNotificationType>'
    content.vb: Public Class EasingAuraController Inherits AuraController(Of DefaultNotificationType)
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - Global.AuraController{DefaultNotificationType}
  inheritedMembers:
  - Global.AuraController{DefaultNotificationType}.auraCreator
  - Global.AuraController{DefaultNotificationType}.auraComponent
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.EasingAuraController.AuraStartRadius
  commentId: F:Global.EasingAuraController.AuraStartRadius
  id: AuraStartRadius
  parent: Global.EasingAuraController
  langs:
  - csharp
  - vb
  name: AuraStartRadius
  nameWithType: EasingAuraController.AuraStartRadius
  fullName: EasingAuraController.AuraStartRadius
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AuraStartRadius
    path: ../Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int AuraStartRadius
    return:
      type: System.Int32
    content.vb: Public AuraStartRadius As Integer
- uid: Global.EasingAuraController.AuraEndRadius
  commentId: F:Global.EasingAuraController.AuraEndRadius
  id: AuraEndRadius
  parent: Global.EasingAuraController
  langs:
  - csharp
  - vb
  name: AuraEndRadius
  nameWithType: EasingAuraController.AuraEndRadius
  fullName: EasingAuraController.AuraEndRadius
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AuraEndRadius
    path: ../Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int AuraEndRadius
    return:
      type: System.Int32
    content.vb: Public AuraEndRadius As Integer
- uid: Global.EasingAuraController.ExpandTime
  commentId: F:Global.EasingAuraController.ExpandTime
  id: ExpandTime
  parent: Global.EasingAuraController
  langs:
  - csharp
  - vb
  name: ExpandTime
  nameWithType: EasingAuraController.ExpandTime
  fullName: EasingAuraController.ExpandTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ExpandTime
    path: ../Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float ExpandTime
    return:
      type: System.Single
    content.vb: Public ExpandTime As Single
- uid: Global.EasingAuraController.ContractTime
  commentId: F:Global.EasingAuraController.ContractTime
  id: ContractTime
  parent: Global.EasingAuraController
  langs:
  - csharp
  - vb
  name: ContractTime
  nameWithType: EasingAuraController.ContractTime
  fullName: EasingAuraController.ContractTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ContractTime
    path: ../Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float ContractTime
    return:
      type: System.Single
    content.vb: Public ContractTime As Single
- uid: Global.EasingAuraController.SegmentsPerRadian
  commentId: F:Global.EasingAuraController.SegmentsPerRadian
  id: SegmentsPerRadian
  parent: Global.EasingAuraController
  langs:
  - csharp
  - vb
  name: SegmentsPerRadian
  nameWithType: EasingAuraController.SegmentsPerRadian
  fullName: EasingAuraController.SegmentsPerRadian
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SegmentsPerRadian
    path: ../Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float SegmentsPerRadian
    return:
      type: System.Single
    content.vb: Public SegmentsPerRadian As Single
- uid: Global.EasingAuraController.Type
  commentId: F:Global.EasingAuraController.Type
  id: Type
  parent: Global.EasingAuraController
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: EasingAuraController.Type
  fullName: EasingAuraController.Type
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Type
    path: ../Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public EasingAuraController.ExpandType Type
    return:
      type: Global.EasingAuraController.ExpandType
    content.vb: Public Type As EasingAuraController.ExpandType
- uid: Global.EasingAuraController.ExpandingFunction
  commentId: F:Global.EasingAuraController.ExpandingFunction
  id: ExpandingFunction
  parent: Global.EasingAuraController
  langs:
  - csharp
  - vb
  name: ExpandingFunction
  nameWithType: EasingAuraController.ExpandingFunction
  fullName: EasingAuraController.ExpandingFunction
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ExpandingFunction
    path: ../Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public EasingFunction.Ease ExpandingFunction
    return:
      type: Global.EasingFunction.Ease
    content.vb: Public ExpandingFunction As EasingFunction.Ease
- uid: Global.EasingAuraController.ContractingFunction
  commentId: F:Global.EasingAuraController.ContractingFunction
  id: ContractingFunction
  parent: Global.EasingAuraController
  langs:
  - csharp
  - vb
  name: ContractingFunction
  nameWithType: EasingAuraController.ContractingFunction
  fullName: EasingAuraController.ContractingFunction
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ContractingFunction
    path: ../Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public EasingFunction.Ease ContractingFunction
    return:
      type: Global.EasingFunction.Ease
    content.vb: Public ContractingFunction As EasingFunction.Ease
- uid: Global.EasingAuraController.SetExpandOnly(EasingFunction.Ease,System.Single)
  commentId: M:Global.EasingAuraController.SetExpandOnly(EasingFunction.Ease,System.Single)
  id: SetExpandOnly(EasingFunction.Ease,System.Single)
  parent: Global.EasingAuraController
  langs:
  - csharp
  - vb
  name: SetExpandOnly(Ease, float)
  nameWithType: EasingAuraController.SetExpandOnly(EasingFunction.Ease, float)
  fullName: EasingAuraController.SetExpandOnly(EasingFunction.Ease, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetExpandOnly
    path: ../Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
    startLine: 21
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetExpandOnly(EasingFunction.Ease expandFunc, float expandTime)
    parameters:
    - id: expandFunc
      type: Global.EasingFunction.Ease
    - id: expandTime
      type: System.Single
    content.vb: Public Sub SetExpandOnly(expandFunc As EasingFunction.Ease, expandTime As Single)
  overload: Global.EasingAuraController.SetExpandOnly*
  nameWithType.vb: EasingAuraController.SetExpandOnly(EasingFunction.Ease, Single)
  fullName.vb: EasingAuraController.SetExpandOnly(EasingFunction.Ease, Single)
  name.vb: SetExpandOnly(Ease, Single)
- uid: Global.EasingAuraController.SetExpandContract(EasingFunction.Ease,System.Single,EasingFunction.Ease,System.Single)
  commentId: M:Global.EasingAuraController.SetExpandContract(EasingFunction.Ease,System.Single,EasingFunction.Ease,System.Single)
  id: SetExpandContract(EasingFunction.Ease,System.Single,EasingFunction.Ease,System.Single)
  parent: Global.EasingAuraController
  langs:
  - csharp
  - vb
  name: SetExpandContract(Ease, float, Ease, float)
  nameWithType: EasingAuraController.SetExpandContract(EasingFunction.Ease, float, EasingFunction.Ease, float)
  fullName: EasingAuraController.SetExpandContract(EasingFunction.Ease, float, EasingFunction.Ease, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetExpandContract
    path: ../Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
    startLine: 28
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetExpandContract(EasingFunction.Ease expandFunc, float expandTime, EasingFunction.Ease contractFunc, float contractTime)
    parameters:
    - id: expandFunc
      type: Global.EasingFunction.Ease
    - id: expandTime
      type: System.Single
    - id: contractFunc
      type: Global.EasingFunction.Ease
    - id: contractTime
      type: System.Single
    content.vb: Public Sub SetExpandContract(expandFunc As EasingFunction.Ease, expandTime As Single, contractFunc As EasingFunction.Ease, contractTime As Single)
  overload: Global.EasingAuraController.SetExpandContract*
  nameWithType.vb: EasingAuraController.SetExpandContract(EasingFunction.Ease, Single, EasingFunction.Ease, Single)
  fullName.vb: EasingAuraController.SetExpandContract(EasingFunction.Ease, Single, EasingFunction.Ease, Single)
  name.vb: SetExpandContract(Ease, Single, Ease, Single)
- uid: Global.EasingAuraController.Notify(DefaultNotificationType)
  commentId: M:Global.EasingAuraController.Notify(DefaultNotificationType)
  id: Notify(DefaultNotificationType)
  parent: Global.EasingAuraController
  langs:
  - csharp
  - vb
  name: Notify(DefaultNotificationType)
  nameWithType: EasingAuraController.Notify(DefaultNotificationType)
  fullName: EasingAuraController.Notify(DefaultNotificationType)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Notify
    path: ../Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
    startLine: 37
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void Notify(DefaultNotificationType notificationType)
    parameters:
    - id: notificationType
      type: Global.DefaultNotificationType
    content.vb: Public Overrides Sub Notify(notificationType As DefaultNotificationType)
  overridden: Global.AuraController{DefaultNotificationType}.Notify(DefaultNotificationType)
  overload: Global.EasingAuraController.Notify*
- uid: Global.EasingAuraController.Start
  commentId: M:Global.EasingAuraController.Start
  id: Start
  parent: Global.EasingAuraController
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: EasingAuraController.Start()
  fullName: EasingAuraController.Start()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Start
    path: ../Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
    startLine: 43
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Start()
    content.vb: Protected Sub Start()
  overload: Global.EasingAuraController.Start*
- uid: Global.EasingAuraController.Update
  commentId: M:Global.EasingAuraController.Update
  id: Update
  parent: Global.EasingAuraController
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: EasingAuraController.Update()
  fullName: EasingAuraController.Update()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Update
    path: ../Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
    startLine: 52
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Update()
    content.vb: Protected Sub Update()
  overload: Global.EasingAuraController.Update*
- uid: Global.EasingAuraController.ExpandAndContract
  commentId: M:Global.EasingAuraController.ExpandAndContract
  id: ExpandAndContract
  parent: Global.EasingAuraController
  langs:
  - csharp
  - vb
  name: ExpandAndContract()
  nameWithType: EasingAuraController.ExpandAndContract()
  fullName: EasingAuraController.ExpandAndContract()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ExpandAndContract
    path: ../Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
    startLine: 70
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void ExpandAndContract()
    content.vb: Protected Sub ExpandAndContract()
  overload: Global.EasingAuraController.ExpandAndContract*
- uid: Global.EasingAuraController.ExpandOnly
  commentId: M:Global.EasingAuraController.ExpandOnly
  id: ExpandOnly
  parent: Global.EasingAuraController
  langs:
  - csharp
  - vb
  name: ExpandOnly()
  nameWithType: EasingAuraController.ExpandOnly()
  fullName: EasingAuraController.ExpandOnly()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ExpandOnly
    path: ../Assets/Objects & Components/Entities/Auras/Shared/EasingAuraController.cs
    startLine: 92
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void ExpandOnly()
    content.vb: Protected Sub ExpandOnly()
  overload: Global.EasingAuraController.ExpandOnly*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Global.AuraController{DefaultNotificationType}
  commentId: T:Global.AuraController{DefaultNotificationType}
  definition: Global.AuraController`1
  name: AuraController<DefaultNotificationType>
  nameWithType: AuraController<DefaultNotificationType>
  fullName: AuraController<DefaultNotificationType>
  nameWithType.vb: AuraController(Of DefaultNotificationType)
  fullName.vb: AuraController(Of DefaultNotificationType)
  name.vb: AuraController(Of DefaultNotificationType)
  spec.csharp:
  - uid: Global.AuraController`1
    name: AuraController
  - name: <
  - uid: Global.DefaultNotificationType
    name: DefaultNotificationType
  - name: '>'
  spec.vb:
  - uid: Global.AuraController`1
    name: AuraController
  - name: (
  - name: Of
  - name: " "
  - uid: Global.DefaultNotificationType
    name: DefaultNotificationType
  - name: )
- uid: Global.AuraController{DefaultNotificationType}.auraCreator
  commentId: F:Global.AuraController{DefaultNotificationType}.auraCreator
  parent: Global.AuraController{DefaultNotificationType}
  definition: Global.AuraController`1.auraCreator
  name: auraCreator
  nameWithType: AuraController<DefaultNotificationType>.auraCreator
  fullName: AuraController<DefaultNotificationType>.auraCreator
  nameWithType.vb: AuraController(Of DefaultNotificationType).auraCreator
  fullName.vb: AuraController(Of DefaultNotificationType).auraCreator
- uid: Global.AuraController{DefaultNotificationType}.auraComponent
  commentId: F:Global.AuraController{DefaultNotificationType}.auraComponent
  parent: Global.AuraController{DefaultNotificationType}
  definition: Global.AuraController`1.auraComponent
  name: auraComponent
  nameWithType: AuraController<DefaultNotificationType>.auraComponent
  fullName: AuraController<DefaultNotificationType>.auraComponent
  nameWithType.vb: AuraController(Of DefaultNotificationType).auraComponent
  fullName.vb: AuraController(Of DefaultNotificationType).auraComponent
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.AuraController`1
  commentId: T:Global.AuraController`1
  name: AuraController<T>
  nameWithType: AuraController<T>
  fullName: AuraController<T>
  nameWithType.vb: AuraController(Of T)
  fullName.vb: AuraController(Of T)
  name.vb: AuraController(Of T)
  spec.csharp:
  - uid: Global.AuraController`1
    name: AuraController
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.AuraController`1
    name: AuraController
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.AuraController`1.auraCreator
  commentId: F:Global.AuraController`1.auraCreator
  name: auraCreator
  nameWithType: AuraController<T>.auraCreator
  fullName: AuraController<T>.auraCreator
  nameWithType.vb: AuraController(Of T).auraCreator
  fullName.vb: AuraController(Of T).auraCreator
- uid: Global.AuraController`1.auraComponent
  commentId: F:Global.AuraController`1.auraComponent
  name: auraComponent
  nameWithType: AuraController<T>.auraComponent
  fullName: AuraController<T>.auraComponent
  nameWithType.vb: AuraController(Of T).auraComponent
  fullName.vb: AuraController(Of T).auraComponent
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.EasingAuraController.ExpandType
  commentId: T:Global.EasingAuraController.ExpandType
  name: EasingAuraController.ExpandType
  nameWithType: EasingAuraController.ExpandType
  fullName: EasingAuraController.ExpandType
  spec.csharp:
  - uid: Global.EasingAuraController
    name: EasingAuraController
  - name: .
  - uid: Global.EasingAuraController.ExpandType
    name: ExpandType
  spec.vb:
  - uid: Global.EasingAuraController
    name: EasingAuraController
  - name: .
  - uid: Global.EasingAuraController.ExpandType
    name: ExpandType
- uid: Global.EasingFunction.Ease
  commentId: T:Global.EasingFunction.Ease
  name: EasingFunction.Ease
  nameWithType: EasingFunction.Ease
  fullName: EasingFunction.Ease
  spec.csharp:
  - uid: Global.EasingFunction
    name: EasingFunction
  - name: .
  - uid: Global.EasingFunction.Ease
    name: Ease
  spec.vb:
  - uid: Global.EasingFunction
    name: EasingFunction
  - name: .
  - uid: Global.EasingFunction.Ease
    name: Ease
- uid: Global.EasingAuraController.SetExpandOnly*
  commentId: Overload:Global.EasingAuraController.SetExpandOnly
  name: SetExpandOnly
  nameWithType: EasingAuraController.SetExpandOnly
  fullName: EasingAuraController.SetExpandOnly
- uid: Global.EasingAuraController.SetExpandContract*
  commentId: Overload:Global.EasingAuraController.SetExpandContract
  name: SetExpandContract
  nameWithType: EasingAuraController.SetExpandContract
  fullName: EasingAuraController.SetExpandContract
- uid: Global.AuraController{DefaultNotificationType}.Notify(DefaultNotificationType)
  commentId: M:Global.AuraController{DefaultNotificationType}.Notify(DefaultNotificationType)
  parent: Global.AuraController{DefaultNotificationType}
  definition: Global.AuraController`1.Notify(`0)
  name: Notify(DefaultNotificationType)
  nameWithType: AuraController<DefaultNotificationType>.Notify(DefaultNotificationType)
  fullName: AuraController<DefaultNotificationType>.Notify(DefaultNotificationType)
  nameWithType.vb: AuraController(Of DefaultNotificationType).Notify(DefaultNotificationType)
  fullName.vb: AuraController(Of DefaultNotificationType).Notify(DefaultNotificationType)
  spec.csharp:
  - uid: Global.AuraController{DefaultNotificationType}.Notify(DefaultNotificationType)
    name: Notify
  - name: (
  - uid: Global.DefaultNotificationType
    name: DefaultNotificationType
  - name: )
  spec.vb:
  - uid: Global.AuraController{DefaultNotificationType}.Notify(DefaultNotificationType)
    name: Notify
  - name: (
  - uid: Global.DefaultNotificationType
    name: DefaultNotificationType
  - name: )
- uid: Global.EasingAuraController.Notify*
  commentId: Overload:Global.EasingAuraController.Notify
  name: Notify
  nameWithType: EasingAuraController.Notify
  fullName: EasingAuraController.Notify
- uid: Global.DefaultNotificationType
  commentId: T:Global.DefaultNotificationType
  name: DefaultNotificationType
  nameWithType: DefaultNotificationType
  fullName: DefaultNotificationType
- uid: Global.AuraController`1.Notify(`0)
  commentId: M:Global.AuraController`1.Notify(`0)
  name: Notify(T)
  nameWithType: AuraController<T>.Notify(T)
  fullName: AuraController<T>.Notify(T)
  nameWithType.vb: AuraController(Of T).Notify(T)
  fullName.vb: AuraController(Of T).Notify(T)
  spec.csharp:
  - uid: Global.AuraController`1.Notify(`0)
    name: Notify
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Global.AuraController`1.Notify(`0)
    name: Notify
  - name: (
  - name: T
  - name: )
- uid: Global.EasingAuraController.Start*
  commentId: Overload:Global.EasingAuraController.Start
  name: Start
  nameWithType: EasingAuraController.Start
  fullName: EasingAuraController.Start
- uid: Global.EasingAuraController.Update*
  commentId: Overload:Global.EasingAuraController.Update
  name: Update
  nameWithType: EasingAuraController.Update
  fullName: EasingAuraController.Update
- uid: Global.EasingAuraController.ExpandAndContract*
  commentId: Overload:Global.EasingAuraController.ExpandAndContract
  name: ExpandAndContract
  nameWithType: EasingAuraController.ExpandAndContract
  fullName: EasingAuraController.ExpandAndContract
- uid: Global.EasingAuraController.ExpandOnly*
  commentId: Overload:Global.EasingAuraController.ExpandOnly
  name: ExpandOnly
  nameWithType: EasingAuraController.ExpandOnly
  fullName: EasingAuraController.ExpandOnly
