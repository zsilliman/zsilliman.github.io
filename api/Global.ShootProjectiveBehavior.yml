### YamlMime:ManagedReference
items:
- uid: Global.ShootProjectiveBehavior
  commentId: T:Global.ShootProjectiveBehavior
  id: ShootProjectiveBehavior
  parent: Global
  children:
  - Global.ShootProjectiveBehavior.ApplyGravity
  - Global.ShootProjectiveBehavior.AttachToParent
  - Global.ShootProjectiveBehavior.AxisClip
  - Global.ShootProjectiveBehavior.BurstFireCount
  - Global.ShootProjectiveBehavior.BurstFireInterval
  - Global.ShootProjectiveBehavior.CanHitSolids
  - Global.ShootProjectiveBehavior.DestroySelfOnCollision
  - Global.ShootProjectiveBehavior.DrawGizmos(ModularEnemy)
  - Global.ShootProjectiveBehavior.GravityScale
  - Global.ShootProjectiveBehavior.Init(IntObject)
  - Global.ShootProjectiveBehavior.Lifetime
  - Global.ShootProjectiveBehavior.OnResetObject(ModularEnemy)
  - Global.ShootProjectiveBehavior.OnRestart
  - Global.ShootProjectiveBehavior.ProjectilePrefabPattern
  - Global.ShootProjectiveBehavior.ProjectileStartOffset
  - Global.ShootProjectiveBehavior.RecomputeAimForEachBurst
  - Global.ShootProjectiveBehavior.ShootSingleProjectile(UnityEngine.Vector2)
  - Global.ShootProjectiveBehavior.Speed
  - Global.ShootProjectiveBehavior.SprayAngularWidth
  - Global.ShootProjectiveBehavior.SprayProjectileCount
  - Global.ShootProjectiveBehavior.SprayProjectiles(UnityEngine.Vector2)
  - Global.ShootProjectiveBehavior.Start(ModularEnemy)
  - Global.ShootProjectiveBehavior.Update
  langs:
  - csharp
  - vb
  name: ShootProjectiveBehavior
  nameWithType: ShootProjectiveBehavior
  fullName: ShootProjectiveBehavior
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ShootProjectiveBehavior
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class ShootProjectiveBehavior : ModularEnemy.EnemyBehaviorInterface
    content.vb: >-
      <Serializable>

      Public Class ShootProjectiveBehavior Inherits ModularEnemy.EnemyBehaviorInterface
  inheritance:
  - System.Object
  - Global.ModularEnemy.EnemyBehaviorInterface
  inheritedMembers:
  - Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  - Global.ModularEnemy.EnemyBehaviorInterface.self
  - Global.ModularEnemy.EnemyBehaviorInterface.Started
  - Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.ShootProjectiveBehavior.ProjectilePrefabPattern
  commentId: F:Global.ShootProjectiveBehavior.ProjectilePrefabPattern
  id: ProjectilePrefabPattern
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: ProjectilePrefabPattern
  nameWithType: ShootProjectiveBehavior.ProjectilePrefabPattern
  fullName: ShootProjectiveBehavior.ProjectilePrefabPattern
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ProjectilePrefabPattern
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Just put one element if you do not want a pattern")]

      public GameObject[] ProjectilePrefabPattern
    return:
      type: UnityEngine.GameObject[]
    content.vb: >-
      <Tooltip("Just put one element if you do not want a pattern")>

      Public ProjectilePrefabPattern As GameObject()
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Just put one element if you do not want a pattern
- uid: Global.ShootProjectiveBehavior.ProjectileStartOffset
  commentId: F:Global.ShootProjectiveBehavior.ProjectileStartOffset
  id: ProjectileStartOffset
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: ProjectileStartOffset
  nameWithType: ShootProjectiveBehavior.ProjectileStartOffset
  fullName: ShootProjectiveBehavior.ProjectileStartOffset
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ProjectileStartOffset
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2Int ProjectileStartOffset
    return:
      type: UnityEngine.Vector2Int
    content.vb: Public ProjectileStartOffset As Vector2Int
- uid: Global.ShootProjectiveBehavior.SprayAngularWidth
  commentId: F:Global.ShootProjectiveBehavior.SprayAngularWidth
  id: SprayAngularWidth
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: SprayAngularWidth
  nameWithType: ShootProjectiveBehavior.SprayAngularWidth
  fullName: ShootProjectiveBehavior.SprayAngularWidth
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SprayAngularWidth
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Fire Behavior")]

      [Tooltip("How wide the weapon sprays. Similar to the FOV of a camera.")]

      public float SprayAngularWidth
    return:
      type: System.Single
    content.vb: >-
      <Header("Fire Behavior")>

      <Tooltip("How wide the weapon sprays. Similar to the FOV of a camera.")>

      Public SprayAngularWidth As Single
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Fire Behavior
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: How wide the weapon sprays. Similar to the FOV of a camera.
- uid: Global.ShootProjectiveBehavior.SprayProjectileCount
  commentId: F:Global.ShootProjectiveBehavior.SprayProjectileCount
  id: SprayProjectileCount
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: SprayProjectileCount
  nameWithType: ShootProjectiveBehavior.SprayProjectileCount
  fullName: ShootProjectiveBehavior.SprayProjectileCount
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SprayProjectileCount
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Number of projectiles launched when the weapon is 'fired'")]

      public int SprayProjectileCount
    return:
      type: System.Int32
    content.vb: >-
      <Tooltip("Number of projectiles launched when the weapon is 'fired'")>

      Public SprayProjectileCount As Integer
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Number of projectiles launched when the weapon is 'fired'
- uid: Global.ShootProjectiveBehavior.BurstFireCount
  commentId: F:Global.ShootProjectiveBehavior.BurstFireCount
  id: BurstFireCount
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: BurstFireCount
  nameWithType: ShootProjectiveBehavior.BurstFireCount
  fullName: ShootProjectiveBehavior.BurstFireCount
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BurstFireCount
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Number of times the weapon is 'fired' each attack.")]

      public int BurstFireCount
    return:
      type: System.Int32
    content.vb: >-
      <Tooltip("Number of times the weapon is 'fired' each attack.")>

      Public BurstFireCount As Integer
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Number of times the weapon is 'fired' each attack.
- uid: Global.ShootProjectiveBehavior.BurstFireInterval
  commentId: F:Global.ShootProjectiveBehavior.BurstFireInterval
  id: BurstFireInterval
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: BurstFireInterval
  nameWithType: ShootProjectiveBehavior.BurstFireInterval
  fullName: ShootProjectiveBehavior.BurstFireInterval
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BurstFireInterval
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Duration between each weapon fire.")]

      public float BurstFireInterval
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("Duration between each weapon fire.")>

      Public BurstFireInterval As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Duration between each weapon fire.
- uid: Global.ShootProjectiveBehavior.RecomputeAimForEachBurst
  commentId: F:Global.ShootProjectiveBehavior.RecomputeAimForEachBurst
  id: RecomputeAimForEachBurst
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: RecomputeAimForEachBurst
  nameWithType: ShootProjectiveBehavior.RecomputeAimForEachBurst
  fullName: ShootProjectiveBehavior.RecomputeAimForEachBurst
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RecomputeAimForEachBurst
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool RecomputeAimForEachBurst
    return:
      type: System.Boolean
    content.vb: Public RecomputeAimForEachBurst As Boolean
- uid: Global.ShootProjectiveBehavior.Speed
  commentId: F:Global.ShootProjectiveBehavior.Speed
  id: Speed
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: Speed
  nameWithType: ShootProjectiveBehavior.Speed
  fullName: ShootProjectiveBehavior.Speed
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Speed
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Projectile")]

      public float Speed
    return:
      type: System.Single
    content.vb: >-
      <Header("Projectile")>

      Public Speed As Single
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Projectile
- uid: Global.ShootProjectiveBehavior.Lifetime
  commentId: F:Global.ShootProjectiveBehavior.Lifetime
  id: Lifetime
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: Lifetime
  nameWithType: ShootProjectiveBehavior.Lifetime
  fullName: ShootProjectiveBehavior.Lifetime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Lifetime
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float Lifetime
    return:
      type: System.Single
    content.vb: Public Lifetime As Single
- uid: Global.ShootProjectiveBehavior.AxisClip
  commentId: F:Global.ShootProjectiveBehavior.AxisClip
  id: AxisClip
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: AxisClip
  nameWithType: ShootProjectiveBehavior.AxisClip
  fullName: ShootProjectiveBehavior.AxisClip
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AxisClip
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public AuraProjectileMovementBase.AxisClipType AxisClip
    return:
      type: Global.AuraProjectileMovementBase.AxisClipType
    content.vb: Public AxisClip As AuraProjectileMovementBase.AxisClipType
- uid: Global.ShootProjectiveBehavior.AttachToParent
  commentId: F:Global.ShootProjectiveBehavior.AttachToParent
  id: AttachToParent
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: AttachToParent
  nameWithType: ShootProjectiveBehavior.AttachToParent
  fullName: ShootProjectiveBehavior.AttachToParent
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AttachToParent
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool AttachToParent
    return:
      type: System.Boolean
    content.vb: Public AttachToParent As Boolean
- uid: Global.ShootProjectiveBehavior.CanHitSolids
  commentId: F:Global.ShootProjectiveBehavior.CanHitSolids
  id: CanHitSolids
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: CanHitSolids
  nameWithType: ShootProjectiveBehavior.CanHitSolids
  fullName: ShootProjectiveBehavior.CanHitSolids
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CanHitSolids
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 26
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool CanHitSolids
    return:
      type: System.Boolean
    content.vb: Public CanHitSolids As Boolean
- uid: Global.ShootProjectiveBehavior.DestroySelfOnCollision
  commentId: F:Global.ShootProjectiveBehavior.DestroySelfOnCollision
  id: DestroySelfOnCollision
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: DestroySelfOnCollision
  nameWithType: ShootProjectiveBehavior.DestroySelfOnCollision
  fullName: ShootProjectiveBehavior.DestroySelfOnCollision
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DestroySelfOnCollision
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 28
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("CanHitSolids", 1)]

      public bool DestroySelfOnCollision
    return:
      type: System.Boolean
    content.vb: >-
      <ConditionalShow("CanHitSolids", 1)>

      Public DestroySelfOnCollision As Boolean
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: CanHitSolids
    - type: System.Int32
      value: 1
- uid: Global.ShootProjectiveBehavior.ApplyGravity
  commentId: F:Global.ShootProjectiveBehavior.ApplyGravity
  id: ApplyGravity
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: ApplyGravity
  nameWithType: ShootProjectiveBehavior.ApplyGravity
  fullName: ShootProjectiveBehavior.ApplyGravity
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ApplyGravity
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool ApplyGravity
    return:
      type: System.Boolean
    content.vb: Public ApplyGravity As Boolean
- uid: Global.ShootProjectiveBehavior.GravityScale
  commentId: F:Global.ShootProjectiveBehavior.GravityScale
  id: GravityScale
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: GravityScale
  nameWithType: ShootProjectiveBehavior.GravityScale
  fullName: ShootProjectiveBehavior.GravityScale
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GravityScale
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 31
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("ApplyGravity", 1)]

      public float GravityScale
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("ApplyGravity", 1)>

      Public GravityScale As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: ApplyGravity
    - type: System.Int32
      value: 1
- uid: Global.ShootProjectiveBehavior.DrawGizmos(ModularEnemy)
  commentId: M:Global.ShootProjectiveBehavior.DrawGizmos(ModularEnemy)
  id: DrawGizmos(ModularEnemy)
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: DrawGizmos(ModularEnemy)
  nameWithType: ShootProjectiveBehavior.DrawGizmos(ModularEnemy)
  fullName: ShootProjectiveBehavior.DrawGizmos(ModularEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DrawGizmos
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 40
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void DrawGizmos(ModularEnemy enemy)
    parameters:
    - id: enemy
      type: Global.ModularEnemy
    content.vb: Public Overrides Sub DrawGizmos(enemy As ModularEnemy)
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  overload: Global.ShootProjectiveBehavior.DrawGizmos*
- uid: Global.ShootProjectiveBehavior.Start(ModularEnemy)
  commentId: M:Global.ShootProjectiveBehavior.Start(ModularEnemy)
  id: Start(ModularEnemy)
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: Start(ModularEnemy)
  nameWithType: ShootProjectiveBehavior.Start(ModularEnemy)
  fullName: ShootProjectiveBehavior.Start(ModularEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Start
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 45
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void Start(ModularEnemy enemy)
    parameters:
    - id: enemy
      type: Global.ModularEnemy
    content.vb: Public Overrides Sub Start(enemy As ModularEnemy)
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  overload: Global.ShootProjectiveBehavior.Start*
- uid: Global.ShootProjectiveBehavior.OnRestart
  commentId: M:Global.ShootProjectiveBehavior.OnRestart
  id: OnRestart
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: OnRestart()
  nameWithType: ShootProjectiveBehavior.OnRestart()
  fullName: ShootProjectiveBehavior.OnRestart()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnRestart
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 51
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnRestart()
    content.vb: Public Overrides Sub OnRestart()
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
  overload: Global.ShootProjectiveBehavior.OnRestart*
- uid: Global.ShootProjectiveBehavior.OnResetObject(ModularEnemy)
  commentId: M:Global.ShootProjectiveBehavior.OnResetObject(ModularEnemy)
  id: OnResetObject(ModularEnemy)
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: OnResetObject(ModularEnemy)
  nameWithType: ShootProjectiveBehavior.OnResetObject(ModularEnemy)
  fullName: ShootProjectiveBehavior.OnResetObject(ModularEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnResetObject
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 56
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnResetObject(ModularEnemy enemy)
    parameters:
    - id: enemy
      type: Global.ModularEnemy
    content.vb: Public Overrides Sub OnResetObject(enemy As ModularEnemy)
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  overload: Global.ShootProjectiveBehavior.OnResetObject*
- uid: Global.ShootProjectiveBehavior.Init(IntObject)
  commentId: M:Global.ShootProjectiveBehavior.Init(IntObject)
  id: Init(IntObject)
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: Init(IntObject)
  nameWithType: ShootProjectiveBehavior.Init(IntObject)
  fullName: ShootProjectiveBehavior.Init(IntObject)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Init
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 67
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Init(IntObject owner)
    parameters:
    - id: owner
      type: Global.IntObject
    content.vb: Public Sub Init(owner As IntObject)
  overload: Global.ShootProjectiveBehavior.Init*
- uid: Global.ShootProjectiveBehavior.Update
  commentId: M:Global.ShootProjectiveBehavior.Update
  id: Update
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: ShootProjectiveBehavior.Update()
  fullName: ShootProjectiveBehavior.Update()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Update
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 83
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.Update
  overload: Global.ShootProjectiveBehavior.Update*
- uid: Global.ShootProjectiveBehavior.SprayProjectiles(UnityEngine.Vector2)
  commentId: M:Global.ShootProjectiveBehavior.SprayProjectiles(UnityEngine.Vector2)
  id: SprayProjectiles(UnityEngine.Vector2)
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: SprayProjectiles(Vector2)
  nameWithType: ShootProjectiveBehavior.SprayProjectiles(Vector2)
  fullName: ShootProjectiveBehavior.SprayProjectiles(UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SprayProjectiles
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 107
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SprayProjectiles(Vector2 direction)
    parameters:
    - id: direction
      type: UnityEngine.Vector2
    content.vb: Public Sub SprayProjectiles(direction As Vector2)
  overload: Global.ShootProjectiveBehavior.SprayProjectiles*
- uid: Global.ShootProjectiveBehavior.ShootSingleProjectile(UnityEngine.Vector2)
  commentId: M:Global.ShootProjectiveBehavior.ShootSingleProjectile(UnityEngine.Vector2)
  id: ShootSingleProjectile(UnityEngine.Vector2)
  parent: Global.ShootProjectiveBehavior
  langs:
  - csharp
  - vb
  name: ShootSingleProjectile(Vector2)
  nameWithType: ShootProjectiveBehavior.ShootSingleProjectile(Vector2)
  fullName: ShootProjectiveBehavior.ShootSingleProjectile(UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ShootSingleProjectile
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/ShootProjectileBehavior.cs
    startLine: 125
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void ShootSingleProjectile(Vector2 direction)
    parameters:
    - id: direction
      type: UnityEngine.Vector2
    content.vb: Public Sub ShootSingleProjectile(direction As Vector2)
  overload: Global.ShootProjectiveBehavior.ShootSingleProjectile*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.ModularEnemy.EnemyBehaviorInterface
  commentId: T:Global.ModularEnemy.EnemyBehaviorInterface
  name: ModularEnemy.EnemyBehaviorInterface
  nameWithType: ModularEnemy.EnemyBehaviorInterface
  fullName: ModularEnemy.EnemyBehaviorInterface
  spec.csharp:
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: .
  - uid: Global.ModularEnemy.EnemyBehaviorInterface
    name: EnemyBehaviorInterface
  spec.vb:
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: .
  - uid: Global.ModularEnemy.EnemyBehaviorInterface
    name: EnemyBehaviorInterface
- uid: Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  commentId: F:Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: ShowGizmos
  nameWithType: ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  fullName: ModularEnemy.EnemyBehaviorInterface.ShowGizmos
- uid: Global.ModularEnemy.EnemyBehaviorInterface.self
  commentId: F:Global.ModularEnemy.EnemyBehaviorInterface.self
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: self
  nameWithType: ModularEnemy.EnemyBehaviorInterface.self
  fullName: ModularEnemy.EnemyBehaviorInterface.self
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Started
  commentId: P:Global.ModularEnemy.EnemyBehaviorInterface.Started
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: Started
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Started
  fullName: ModularEnemy.EnemyBehaviorInterface.Started
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  isExternal: true
  name: OnKill(ModularEnemy, bool)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, bool)
  fullName: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, bool)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, Boolean)
  fullName.vb: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, Boolean)
  name.vb: OnKill(ModularEnemy, Boolean)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
    name: OnKill
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
    name: OnKill
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: UnityEngine.GameObject[]
  isExternal: true
  name: GameObject[]
  nameWithType: GameObject[]
  fullName: UnityEngine.GameObject[]
  nameWithType.vb: GameObject()
  fullName.vb: UnityEngine.GameObject()
  name.vb: GameObject()
  spec.csharp:
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.AuraProjectileMovementBase.AxisClipType
  commentId: T:Global.AuraProjectileMovementBase.AxisClipType
  name: AuraProjectileMovementBase.AxisClipType
  nameWithType: AuraProjectileMovementBase.AxisClipType
  fullName: AuraProjectileMovementBase.AxisClipType
  spec.csharp:
  - uid: Global.AuraProjectileMovementBase
    name: AuraProjectileMovementBase
  - name: .
  - uid: Global.AuraProjectileMovementBase.AxisClipType
    name: AxisClipType
  spec.vb:
  - uid: Global.AuraProjectileMovementBase
    name: AuraProjectileMovementBase
  - name: .
  - uid: Global.AuraProjectileMovementBase.AxisClipType
    name: AxisClipType
- uid: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: DrawGizmos(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
    name: DrawGizmos
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
    name: DrawGizmos
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.ShootProjectiveBehavior.DrawGizmos*
  commentId: Overload:Global.ShootProjectiveBehavior.DrawGizmos
  name: DrawGizmos
  nameWithType: ShootProjectiveBehavior.DrawGizmos
  fullName: ShootProjectiveBehavior.DrawGizmos
- uid: Global.ModularEnemy
  commentId: T:Global.ModularEnemy
  name: ModularEnemy
  nameWithType: ModularEnemy
  fullName: ModularEnemy
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: Start(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
    name: Start
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
    name: Start
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.ShootProjectiveBehavior.Start*
  commentId: Overload:Global.ShootProjectiveBehavior.Start
  name: Start
  nameWithType: ShootProjectiveBehavior.Start
  fullName: ShootProjectiveBehavior.Start
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: OnRestart()
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnRestart()
  fullName: ModularEnemy.EnemyBehaviorInterface.OnRestart()
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
    name: OnRestart
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
    name: OnRestart
  - name: (
  - name: )
- uid: Global.ShootProjectiveBehavior.OnRestart*
  commentId: Overload:Global.ShootProjectiveBehavior.OnRestart
  name: OnRestart
  nameWithType: ShootProjectiveBehavior.OnRestart
  fullName: ShootProjectiveBehavior.OnRestart
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: OnResetObject(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
    name: OnResetObject
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
    name: OnResetObject
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.ShootProjectiveBehavior.OnResetObject*
  commentId: Overload:Global.ShootProjectiveBehavior.OnResetObject
  name: OnResetObject
  nameWithType: ShootProjectiveBehavior.OnResetObject
  fullName: ShootProjectiveBehavior.OnResetObject
- uid: Global.ShootProjectiveBehavior.Init*
  commentId: Overload:Global.ShootProjectiveBehavior.Init
  name: Init
  nameWithType: ShootProjectiveBehavior.Init
  fullName: ShootProjectiveBehavior.Init
- uid: Global.IntObject
  commentId: T:Global.IntObject
  name: IntObject
  nameWithType: IntObject
  fullName: IntObject
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Update
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.Update
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: Update()
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Update()
  fullName: ModularEnemy.EnemyBehaviorInterface.Update()
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Update
    name: Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Update
    name: Update
  - name: (
  - name: )
- uid: Global.ShootProjectiveBehavior.Update*
  commentId: Overload:Global.ShootProjectiveBehavior.Update
  name: Update
  nameWithType: ShootProjectiveBehavior.Update
  fullName: ShootProjectiveBehavior.Update
- uid: Global.ShootProjectiveBehavior.SprayProjectiles*
  commentId: Overload:Global.ShootProjectiveBehavior.SprayProjectiles
  name: SprayProjectiles
  nameWithType: ShootProjectiveBehavior.SprayProjectiles
  fullName: ShootProjectiveBehavior.SprayProjectiles
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.ShootProjectiveBehavior.ShootSingleProjectile*
  commentId: Overload:Global.ShootProjectiveBehavior.ShootSingleProjectile
  name: ShootSingleProjectile
  nameWithType: ShootProjectiveBehavior.ShootSingleProjectile
  fullName: ShootProjectiveBehavior.ShootSingleProjectile
