### YamlMime:ManagedReference
items:
- uid: Global.Recipe
  commentId: T:Global.Recipe
  id: Recipe
  parent: Global
  children:
  - Global.Recipe.inputItem1
  - Global.Recipe.inputItem2
  - Global.Recipe.isUnlocked
  - Global.Recipe.resultItem
  langs:
  - csharp
  - vb
  name: Recipe
  nameWithType: Recipe
  fullName: Recipe
  type: Class
  source:
    remote:
      path: Assets/User Interface/Inventory/Recipe.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Recipe
    path: ../Assets/User Interface/Inventory/Recipe.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [CreateAssetMenu(fileName = "New Recipe", menuName = "Recipe")]

      public class Recipe : ScriptableObject
    content.vb: >-
      <CreateAssetMenu(fileName:="New Recipe", menuName:="Recipe")>

      Public Class Recipe Inherits ScriptableObject
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: UnityEngine.CreateAssetMenuAttribute
    ctor: UnityEngine.CreateAssetMenuAttribute.#ctor
    arguments: []
    namedArguments:
    - name: fileName
      type: System.String
      value: New Recipe
    - name: menuName
      type: System.String
      value: Recipe
- uid: Global.Recipe.inputItem1
  commentId: F:Global.Recipe.inputItem1
  id: inputItem1
  parent: Global.Recipe
  langs:
  - csharp
  - vb
  name: inputItem1
  nameWithType: Recipe.inputItem1
  fullName: Recipe.inputItem1
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Recipe.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: inputItem1
    path: ../Assets/User Interface/Inventory/Recipe.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Item inputItem1
    return:
      type: Global.Item
    content.vb: Public inputItem1 As Item
- uid: Global.Recipe.inputItem2
  commentId: F:Global.Recipe.inputItem2
  id: inputItem2
  parent: Global.Recipe
  langs:
  - csharp
  - vb
  name: inputItem2
  nameWithType: Recipe.inputItem2
  fullName: Recipe.inputItem2
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Recipe.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: inputItem2
    path: ../Assets/User Interface/Inventory/Recipe.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Item inputItem2
    return:
      type: Global.Item
    content.vb: Public inputItem2 As Item
- uid: Global.Recipe.resultItem
  commentId: F:Global.Recipe.resultItem
  id: resultItem
  parent: Global.Recipe
  langs:
  - csharp
  - vb
  name: resultItem
  nameWithType: Recipe.resultItem
  fullName: Recipe.resultItem
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Recipe.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: resultItem
    path: ../Assets/User Interface/Inventory/Recipe.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Item resultItem
    return:
      type: Global.Item
    content.vb: Public resultItem As Item
- uid: Global.Recipe.isUnlocked
  commentId: F:Global.Recipe.isUnlocked
  id: isUnlocked
  parent: Global.Recipe
  langs:
  - csharp
  - vb
  name: isUnlocked
  nameWithType: Recipe.isUnlocked
  fullName: Recipe.isUnlocked
  type: Field
  source:
    remote:
      path: Assets/User Interface/Inventory/Recipe.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: isUnlocked
    path: ../Assets/User Interface/Inventory/Recipe.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool isUnlocked
    return:
      type: System.Boolean
    content.vb: Public isUnlocked As Boolean
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.Item
  commentId: T:Global.Item
  name: Item
  nameWithType: Item
  fullName: Item
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
