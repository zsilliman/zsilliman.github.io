### YamlMime:ManagedReference
items:
- uid: Global.ProceduralSpawner.PrefabWithWeight
  commentId: T:Global.ProceduralSpawner.PrefabWithWeight
  id: ProceduralSpawner.PrefabWithWeight
  parent: Global
  children:
  - Global.ProceduralSpawner.PrefabWithWeight.CumulativeWeight
  - Global.ProceduralSpawner.PrefabWithWeight.Prefab
  - Global.ProceduralSpawner.PrefabWithWeight.Weight
  langs:
  - csharp
  - vb
  name: ProceduralSpawner.PrefabWithWeight
  nameWithType: ProceduralSpawner.PrefabWithWeight
  fullName: ProceduralSpawner.PrefabWithWeight
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Spawning/ProceduralSpawner.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PrefabWithWeight
    path: ../Assets/Objects & Components/World/Section/Spawning/ProceduralSpawner.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class ProceduralSpawner.PrefabWithWeight
    content.vb: >-
      <Serializable>

      Public Class ProceduralSpawner.PrefabWithWeight
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.ProceduralSpawner.PrefabWithWeight.Prefab
  commentId: F:Global.ProceduralSpawner.PrefabWithWeight.Prefab
  id: Prefab
  parent: Global.ProceduralSpawner.PrefabWithWeight
  langs:
  - csharp
  - vb
  name: Prefab
  nameWithType: ProceduralSpawner.PrefabWithWeight.Prefab
  fullName: ProceduralSpawner.PrefabWithWeight.Prefab
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Spawning/ProceduralSpawner.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Prefab
    path: ../Assets/Objects & Components/World/Section/Spawning/ProceduralSpawner.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public GameObject Prefab
    return:
      type: UnityEngine.GameObject
    content.vb: Public Prefab As GameObject
- uid: Global.ProceduralSpawner.PrefabWithWeight.Weight
  commentId: F:Global.ProceduralSpawner.PrefabWithWeight.Weight
  id: Weight
  parent: Global.ProceduralSpawner.PrefabWithWeight
  langs:
  - csharp
  - vb
  name: Weight
  nameWithType: ProceduralSpawner.PrefabWithWeight.Weight
  fullName: ProceduralSpawner.PrefabWithWeight.Weight
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Spawning/ProceduralSpawner.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Weight
    path: ../Assets/Objects & Components/World/Section/Spawning/ProceduralSpawner.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float Weight
    return:
      type: System.Single
    content.vb: Public Weight As Single
- uid: Global.ProceduralSpawner.PrefabWithWeight.CumulativeWeight
  commentId: F:Global.ProceduralSpawner.PrefabWithWeight.CumulativeWeight
  id: CumulativeWeight
  parent: Global.ProceduralSpawner.PrefabWithWeight
  langs:
  - csharp
  - vb
  name: CumulativeWeight
  nameWithType: ProceduralSpawner.PrefabWithWeight.CumulativeWeight
  fullName: ProceduralSpawner.PrefabWithWeight.CumulativeWeight
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Spawning/ProceduralSpawner.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CumulativeWeight
    path: ../Assets/Objects & Components/World/Section/Spawning/ProceduralSpawner.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [HideInInspector]

      public float CumulativeWeight
    return:
      type: System.Single
    content.vb: >-
      <HideInInspector>

      Public CumulativeWeight As Single
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
