### YamlMime:ManagedReference
items:
- uid: Global.Speaker
  commentId: T:Global.Speaker
  id: Speaker
  parent: Global
  children:
  - Global.Speaker.DrawDebugTextToScreen
  - Global.Speaker.GetScreenPosition
  - Global.Speaker.QuoteAnchorOffset
  - Global.Speaker.QuotePrefab
  - Global.Speaker.RegisterCallbackOnConditionMet(Speaker.SpeakerCondition,Speaker.SpeakerCallback)
  - Global.Speaker.SetText(System.String)
  - Global.Speaker.SetVisible(System.Boolean)
  - Global.Speaker.Visible
  langs:
  - csharp
  - vb
  name: Speaker
  nameWithType: Speaker
  fullName: Speaker
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Speaker.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Speaker
    path: ../Assets/Objects & Components/World/Interactable/Speaker.cs
    startLine: 6
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class Speaker : MonoBehaviour'
    content.vb: Public Class Speaker Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.Speaker.QuotePrefab
  commentId: F:Global.Speaker.QuotePrefab
  id: QuotePrefab
  parent: Global.Speaker
  langs:
  - csharp
  - vb
  name: QuotePrefab
  nameWithType: Speaker.QuotePrefab
  fullName: Speaker.QuotePrefab
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Speaker.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: QuotePrefab
    path: ../Assets/Objects & Components/World/Interactable/Speaker.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public GameObject QuotePrefab
    return:
      type: UnityEngine.GameObject
    content.vb: Public QuotePrefab As GameObject
- uid: Global.Speaker.QuoteAnchorOffset
  commentId: F:Global.Speaker.QuoteAnchorOffset
  id: QuoteAnchorOffset
  parent: Global.Speaker
  langs:
  - csharp
  - vb
  name: QuoteAnchorOffset
  nameWithType: Speaker.QuoteAnchorOffset
  fullName: Speaker.QuoteAnchorOffset
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Speaker.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: QuoteAnchorOffset
    path: ../Assets/Objects & Components/World/Interactable/Speaker.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector3 QuoteAnchorOffset
    return:
      type: UnityEngine.Vector3
    content.vb: Public QuoteAnchorOffset As Vector3
- uid: Global.Speaker.Visible
  commentId: P:Global.Speaker.Visible
  id: Visible
  parent: Global.Speaker
  langs:
  - csharp
  - vb
  name: Visible
  nameWithType: Speaker.Visible
  fullName: Speaker.Visible
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Speaker.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Visible
    path: ../Assets/Objects & Components/World/Interactable/Speaker.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool Visible { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Visible As Boolean
  overload: Global.Speaker.Visible*
- uid: Global.Speaker.DrawDebugTextToScreen
  commentId: M:Global.Speaker.DrawDebugTextToScreen
  id: DrawDebugTextToScreen
  parent: Global.Speaker
  langs:
  - csharp
  - vb
  name: DrawDebugTextToScreen()
  nameWithType: Speaker.DrawDebugTextToScreen()
  fullName: Speaker.DrawDebugTextToScreen()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Speaker.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DrawDebugTextToScreen
    path: ../Assets/Objects & Components/World/Interactable/Speaker.cs
    startLine: 90
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void DrawDebugTextToScreen()
    content.vb: Public Sub DrawDebugTextToScreen()
  overload: Global.Speaker.DrawDebugTextToScreen*
- uid: Global.Speaker.GetScreenPosition
  commentId: M:Global.Speaker.GetScreenPosition
  id: GetScreenPosition
  parent: Global.Speaker
  langs:
  - csharp
  - vb
  name: GetScreenPosition()
  nameWithType: Speaker.GetScreenPosition()
  fullName: Speaker.GetScreenPosition()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Speaker.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetScreenPosition
    path: ../Assets/Objects & Components/World/Interactable/Speaker.cs
    startLine: 95
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector3 GetScreenPosition()
    return:
      type: UnityEngine.Vector3
    content.vb: Public Function GetScreenPosition() As Vector3
  overload: Global.Speaker.GetScreenPosition*
- uid: Global.Speaker.SetVisible(System.Boolean)
  commentId: M:Global.Speaker.SetVisible(System.Boolean)
  id: SetVisible(System.Boolean)
  parent: Global.Speaker
  langs:
  - csharp
  - vb
  name: SetVisible(bool)
  nameWithType: Speaker.SetVisible(bool)
  fullName: Speaker.SetVisible(bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Speaker.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetVisible
    path: ../Assets/Objects & Components/World/Interactable/Speaker.cs
    startLine: 100
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetVisible(bool visibility)
    parameters:
    - id: visibility
      type: System.Boolean
    content.vb: Public Sub SetVisible(visibility As Boolean)
  overload: Global.Speaker.SetVisible*
  nameWithType.vb: Speaker.SetVisible(Boolean)
  fullName.vb: Speaker.SetVisible(Boolean)
  name.vb: SetVisible(Boolean)
- uid: Global.Speaker.SetText(System.String)
  commentId: M:Global.Speaker.SetText(System.String)
  id: SetText(System.String)
  parent: Global.Speaker
  langs:
  - csharp
  - vb
  name: SetText(string)
  nameWithType: Speaker.SetText(string)
  fullName: Speaker.SetText(string)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Speaker.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetText
    path: ../Assets/Objects & Components/World/Interactable/Speaker.cs
    startLine: 124
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetText(string new_text)
    parameters:
    - id: new_text
      type: System.String
    content.vb: Public Sub SetText(new_text As String)
  overload: Global.Speaker.SetText*
  nameWithType.vb: Speaker.SetText(String)
  fullName.vb: Speaker.SetText(String)
  name.vb: SetText(String)
- uid: Global.Speaker.RegisterCallbackOnConditionMet(Speaker.SpeakerCondition,Speaker.SpeakerCallback)
  commentId: M:Global.Speaker.RegisterCallbackOnConditionMet(Speaker.SpeakerCondition,Speaker.SpeakerCallback)
  id: RegisterCallbackOnConditionMet(Speaker.SpeakerCondition,Speaker.SpeakerCallback)
  parent: Global.Speaker
  langs:
  - csharp
  - vb
  name: RegisterCallbackOnConditionMet(SpeakerCondition, SpeakerCallback)
  nameWithType: Speaker.RegisterCallbackOnConditionMet(Speaker.SpeakerCondition, Speaker.SpeakerCallback)
  fullName: Speaker.RegisterCallbackOnConditionMet(Speaker.SpeakerCondition, Speaker.SpeakerCallback)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Speaker.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RegisterCallbackOnConditionMet
    path: ../Assets/Objects & Components/World/Interactable/Speaker.cs
    startLine: 134
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nOnly one condition supported\n"
  example: []
  syntax:
    content: public void RegisterCallbackOnConditionMet(Speaker.SpeakerCondition condition, Speaker.SpeakerCallback callback)
    parameters:
    - id: condition
      type: Global.Speaker.SpeakerCondition
      description: ''
    - id: callback
      type: Global.Speaker.SpeakerCallback
    content.vb: Public Sub RegisterCallbackOnConditionMet(condition As Speaker.SpeakerCondition, callback As Speaker.SpeakerCallback)
  overload: Global.Speaker.RegisterCallbackOnConditionMet*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: Global.Speaker.Visible*
  commentId: Overload:Global.Speaker.Visible
  name: Visible
  nameWithType: Speaker.Visible
  fullName: Speaker.Visible
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.Speaker.DrawDebugTextToScreen*
  commentId: Overload:Global.Speaker.DrawDebugTextToScreen
  name: DrawDebugTextToScreen
  nameWithType: Speaker.DrawDebugTextToScreen
  fullName: Speaker.DrawDebugTextToScreen
- uid: Global.Speaker.GetScreenPosition*
  commentId: Overload:Global.Speaker.GetScreenPosition
  name: GetScreenPosition
  nameWithType: Speaker.GetScreenPosition
  fullName: Speaker.GetScreenPosition
- uid: Global.Speaker.SetVisible*
  commentId: Overload:Global.Speaker.SetVisible
  name: SetVisible
  nameWithType: Speaker.SetVisible
  fullName: Speaker.SetVisible
- uid: Global.Speaker.SetText*
  commentId: Overload:Global.Speaker.SetText
  name: SetText
  nameWithType: Speaker.SetText
  fullName: Speaker.SetText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.Speaker.RegisterCallbackOnConditionMet*
  commentId: Overload:Global.Speaker.RegisterCallbackOnConditionMet
  name: RegisterCallbackOnConditionMet
  nameWithType: Speaker.RegisterCallbackOnConditionMet
  fullName: Speaker.RegisterCallbackOnConditionMet
- uid: Global.Speaker.SpeakerCondition
  commentId: T:Global.Speaker.SpeakerCondition
  name: Speaker.SpeakerCondition
  nameWithType: Speaker.SpeakerCondition
  fullName: Speaker.SpeakerCondition
  spec.csharp:
  - uid: Global.Speaker
    name: Speaker
  - name: .
  - uid: Global.Speaker.SpeakerCondition
    name: SpeakerCondition
  spec.vb:
  - uid: Global.Speaker
    name: Speaker
  - name: .
  - uid: Global.Speaker.SpeakerCondition
    name: SpeakerCondition
- uid: Global.Speaker.SpeakerCallback
  commentId: T:Global.Speaker.SpeakerCallback
  name: Speaker.SpeakerCallback
  nameWithType: Speaker.SpeakerCallback
  fullName: Speaker.SpeakerCallback
  spec.csharp:
  - uid: Global.Speaker
    name: Speaker
  - name: .
  - uid: Global.Speaker.SpeakerCallback
    name: SpeakerCallback
  spec.vb:
  - uid: Global.Speaker
    name: Speaker
  - name: .
  - uid: Global.Speaker.SpeakerCallback
    name: SpeakerCallback
