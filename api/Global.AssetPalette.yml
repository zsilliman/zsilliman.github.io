### YamlMime:ManagedReference
items:
- uid: Global.AssetPalette
  commentId: T:Global.AssetPalette
  id: AssetPalette
  parent: Global
  children:
  - Global.AssetPalette.AddAsset(System.String,System.String)
  - Global.AssetPalette.AddGroup(System.String)
  - Global.AssetPalette.CreatePrefabMapping
  - Global.AssetPalette.enumOptions
  - Global.AssetPalette.GetPrefabAssetArrayFromMapping
  - Global.AssetPalette.IndexOf(System.String,System.String)
  - Global.AssetPalette.JsonAssetPath
  - Global.AssetPalette.PrefabMap
  - Global.AssetPalette.RemoveGroup(System.String)
  - Global.AssetPalette.RemovePrefabFromGroup(System.String,System.String)
  - Global.AssetPalette.RemovePrefabFromGroup(System.String,UnityEngine.GameObject)
  - Global.AssetPalette.WriteToFile
  langs:
  - csharp
  - vb
  name: AssetPalette
  nameWithType: AssetPalette
  fullName: AssetPalette
  type: Class
  source:
    remote:
      path: Assets/Editor/AssetPalette/AssetPalette.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AssetPalette
    path: ../Assets/Editor/AssetPalette/AssetPalette.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp-Editor
  namespace: Global
  syntax:
    content: 'public class AssetPalette : EditorWindow'
    content.vb: Public Class AssetPalette Inherits EditorWindow
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  - UnityEditor.EditorWindow
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.AssetPalette.PrefabMap
  commentId: F:Global.AssetPalette.PrefabMap
  id: PrefabMap
  parent: Global.AssetPalette
  langs:
  - csharp
  - vb
  name: PrefabMap
  nameWithType: AssetPalette.PrefabMap
  fullName: AssetPalette.PrefabMap
  type: Field
  source:
    remote:
      path: Assets/Editor/AssetPalette/AssetPalette.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PrefabMap
    path: ../Assets/Editor/AssetPalette/AssetPalette.cs
    startLine: 37
  assemblies:
  - Assembly-CSharp-Editor
  namespace: Global
  syntax:
    content: public static Dictionary<string, List<AssetPalette.PrefabDatabaseEntry>> PrefabMap
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{AssetPalette.PrefabDatabaseEntry}}
    content.vb: Public Shared PrefabMap As Dictionary(Of String, List(Of AssetPalette.PrefabDatabaseEntry))
- uid: Global.AssetPalette.JsonAssetPath
  commentId: F:Global.AssetPalette.JsonAssetPath
  id: JsonAssetPath
  parent: Global.AssetPalette
  langs:
  - csharp
  - vb
  name: JsonAssetPath
  nameWithType: AssetPalette.JsonAssetPath
  fullName: AssetPalette.JsonAssetPath
  type: Field
  source:
    remote:
      path: Assets/Editor/AssetPalette/AssetPalette.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: JsonAssetPath
    path: ../Assets/Editor/AssetPalette/AssetPalette.cs
    startLine: 38
  assemblies:
  - Assembly-CSharp-Editor
  namespace: Global
  syntax:
    content: public static string JsonAssetPath
    return:
      type: System.String
    content.vb: Public Shared JsonAssetPath As String
- uid: Global.AssetPalette.enumOptions
  commentId: F:Global.AssetPalette.enumOptions
  id: enumOptions
  parent: Global.AssetPalette
  langs:
  - csharp
  - vb
  name: enumOptions
  nameWithType: AssetPalette.enumOptions
  fullName: AssetPalette.enumOptions
  type: Field
  source:
    remote:
      path: Assets/Editor/AssetPalette/AssetPalette.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: enumOptions
    path: ../Assets/Editor/AssetPalette/AssetPalette.cs
    startLine: 39
  assemblies:
  - Assembly-CSharp-Editor
  namespace: Global
  syntax:
    content: public static string[] enumOptions
    return:
      type: System.String[]
    content.vb: Public Shared enumOptions As String()
- uid: Global.AssetPalette.CreatePrefabMapping
  commentId: M:Global.AssetPalette.CreatePrefabMapping
  id: CreatePrefabMapping
  parent: Global.AssetPalette
  langs:
  - csharp
  - vb
  name: CreatePrefabMapping()
  nameWithType: AssetPalette.CreatePrefabMapping()
  fullName: AssetPalette.CreatePrefabMapping()
  type: Method
  source:
    remote:
      path: Assets/Editor/AssetPalette/AssetPalette.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CreatePrefabMapping
    path: ../Assets/Editor/AssetPalette/AssetPalette.cs
    startLine: 41
  assemblies:
  - Assembly-CSharp-Editor
  namespace: Global
  syntax:
    content: public static void CreatePrefabMapping()
    content.vb: Public Shared Sub CreatePrefabMapping()
  overload: Global.AssetPalette.CreatePrefabMapping*
- uid: Global.AssetPalette.GetPrefabAssetArrayFromMapping
  commentId: M:Global.AssetPalette.GetPrefabAssetArrayFromMapping
  id: GetPrefabAssetArrayFromMapping
  parent: Global.AssetPalette
  langs:
  - csharp
  - vb
  name: GetPrefabAssetArrayFromMapping()
  nameWithType: AssetPalette.GetPrefabAssetArrayFromMapping()
  fullName: AssetPalette.GetPrefabAssetArrayFromMapping()
  type: Method
  source:
    remote:
      path: Assets/Editor/AssetPalette/AssetPalette.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetPrefabAssetArrayFromMapping
    path: ../Assets/Editor/AssetPalette/AssetPalette.cs
    startLine: 71
  assemblies:
  - Assembly-CSharp-Editor
  namespace: Global
  syntax:
    content: public static AssetPalette.PrefabAssetArray GetPrefabAssetArrayFromMapping()
    return:
      type: Global.AssetPalette.PrefabAssetArray
    content.vb: Public Shared Function GetPrefabAssetArrayFromMapping() As AssetPalette.PrefabAssetArray
  overload: Global.AssetPalette.GetPrefabAssetArrayFromMapping*
- uid: Global.AssetPalette.IndexOf(System.String,System.String)
  commentId: M:Global.AssetPalette.IndexOf(System.String,System.String)
  id: IndexOf(System.String,System.String)
  parent: Global.AssetPalette
  langs:
  - csharp
  - vb
  name: IndexOf(string, string)
  nameWithType: AssetPalette.IndexOf(string, string)
  fullName: AssetPalette.IndexOf(string, string)
  type: Method
  source:
    remote:
      path: Assets/Editor/AssetPalette/AssetPalette.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IndexOf
    path: ../Assets/Editor/AssetPalette/AssetPalette.cs
    startLine: 93
  assemblies:
  - Assembly-CSharp-Editor
  namespace: Global
  syntax:
    content: public static int IndexOf(string group, string assetPath)
    parameters:
    - id: group
      type: System.String
    - id: assetPath
      type: System.String
    return:
      type: System.Int32
    content.vb: Public Shared Function IndexOf(group As String, assetPath As String) As Integer
  overload: Global.AssetPalette.IndexOf*
  nameWithType.vb: AssetPalette.IndexOf(String, String)
  fullName.vb: AssetPalette.IndexOf(String, String)
  name.vb: IndexOf(String, String)
- uid: Global.AssetPalette.RemovePrefabFromGroup(System.String,UnityEngine.GameObject)
  commentId: M:Global.AssetPalette.RemovePrefabFromGroup(System.String,UnityEngine.GameObject)
  id: RemovePrefabFromGroup(System.String,UnityEngine.GameObject)
  parent: Global.AssetPalette
  langs:
  - csharp
  - vb
  name: RemovePrefabFromGroup(string, GameObject)
  nameWithType: AssetPalette.RemovePrefabFromGroup(string, GameObject)
  fullName: AssetPalette.RemovePrefabFromGroup(string, UnityEngine.GameObject)
  type: Method
  source:
    remote:
      path: Assets/Editor/AssetPalette/AssetPalette.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RemovePrefabFromGroup
    path: ../Assets/Editor/AssetPalette/AssetPalette.cs
    startLine: 107
  assemblies:
  - Assembly-CSharp-Editor
  namespace: Global
  syntax:
    content: public static void RemovePrefabFromGroup(string group, GameObject obj)
    parameters:
    - id: group
      type: System.String
    - id: obj
      type: UnityEngine.GameObject
    content.vb: Public Shared Sub RemovePrefabFromGroup(group As String, obj As GameObject)
  overload: Global.AssetPalette.RemovePrefabFromGroup*
  nameWithType.vb: AssetPalette.RemovePrefabFromGroup(String, GameObject)
  fullName.vb: AssetPalette.RemovePrefabFromGroup(String, UnityEngine.GameObject)
  name.vb: RemovePrefabFromGroup(String, GameObject)
- uid: Global.AssetPalette.RemovePrefabFromGroup(System.String,System.String)
  commentId: M:Global.AssetPalette.RemovePrefabFromGroup(System.String,System.String)
  id: RemovePrefabFromGroup(System.String,System.String)
  parent: Global.AssetPalette
  langs:
  - csharp
  - vb
  name: RemovePrefabFromGroup(string, string)
  nameWithType: AssetPalette.RemovePrefabFromGroup(string, string)
  fullName: AssetPalette.RemovePrefabFromGroup(string, string)
  type: Method
  source:
    remote:
      path: Assets/Editor/AssetPalette/AssetPalette.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RemovePrefabFromGroup
    path: ../Assets/Editor/AssetPalette/AssetPalette.cs
    startLine: 114
  assemblies:
  - Assembly-CSharp-Editor
  namespace: Global
  syntax:
    content: public static void RemovePrefabFromGroup(string group, string assetPath)
    parameters:
    - id: group
      type: System.String
    - id: assetPath
      type: System.String
    content.vb: Public Shared Sub RemovePrefabFromGroup(group As String, assetPath As String)
  overload: Global.AssetPalette.RemovePrefabFromGroup*
  nameWithType.vb: AssetPalette.RemovePrefabFromGroup(String, String)
  fullName.vb: AssetPalette.RemovePrefabFromGroup(String, String)
  name.vb: RemovePrefabFromGroup(String, String)
- uid: Global.AssetPalette.AddAsset(System.String,System.String)
  commentId: M:Global.AssetPalette.AddAsset(System.String,System.String)
  id: AddAsset(System.String,System.String)
  parent: Global.AssetPalette
  langs:
  - csharp
  - vb
  name: AddAsset(string, string)
  nameWithType: AssetPalette.AddAsset(string, string)
  fullName: AssetPalette.AddAsset(string, string)
  type: Method
  source:
    remote:
      path: Assets/Editor/AssetPalette/AssetPalette.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AddAsset
    path: ../Assets/Editor/AssetPalette/AssetPalette.cs
    startLine: 123
  assemblies:
  - Assembly-CSharp-Editor
  namespace: Global
  syntax:
    content: public static void AddAsset(string groupID, string assetPath)
    parameters:
    - id: groupID
      type: System.String
    - id: assetPath
      type: System.String
    content.vb: Public Shared Sub AddAsset(groupID As String, assetPath As String)
  overload: Global.AssetPalette.AddAsset*
  nameWithType.vb: AssetPalette.AddAsset(String, String)
  fullName.vb: AssetPalette.AddAsset(String, String)
  name.vb: AddAsset(String, String)
- uid: Global.AssetPalette.AddGroup(System.String)
  commentId: M:Global.AssetPalette.AddGroup(System.String)
  id: AddGroup(System.String)
  parent: Global.AssetPalette
  langs:
  - csharp
  - vb
  name: AddGroup(string)
  nameWithType: AssetPalette.AddGroup(string)
  fullName: AssetPalette.AddGroup(string)
  type: Method
  source:
    remote:
      path: Assets/Editor/AssetPalette/AssetPalette.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AddGroup
    path: ../Assets/Editor/AssetPalette/AssetPalette.cs
    startLine: 141
  assemblies:
  - Assembly-CSharp-Editor
  namespace: Global
  syntax:
    content: public static void AddGroup(string groupID)
    parameters:
    - id: groupID
      type: System.String
    content.vb: Public Shared Sub AddGroup(groupID As String)
  overload: Global.AssetPalette.AddGroup*
  nameWithType.vb: AssetPalette.AddGroup(String)
  fullName.vb: AssetPalette.AddGroup(String)
  name.vb: AddGroup(String)
- uid: Global.AssetPalette.RemoveGroup(System.String)
  commentId: M:Global.AssetPalette.RemoveGroup(System.String)
  id: RemoveGroup(System.String)
  parent: Global.AssetPalette
  langs:
  - csharp
  - vb
  name: RemoveGroup(string)
  nameWithType: AssetPalette.RemoveGroup(string)
  fullName: AssetPalette.RemoveGroup(string)
  type: Method
  source:
    remote:
      path: Assets/Editor/AssetPalette/AssetPalette.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RemoveGroup
    path: ../Assets/Editor/AssetPalette/AssetPalette.cs
    startLine: 153
  assemblies:
  - Assembly-CSharp-Editor
  namespace: Global
  syntax:
    content: public static void RemoveGroup(string group)
    parameters:
    - id: group
      type: System.String
    content.vb: Public Shared Sub RemoveGroup(group As String)
  overload: Global.AssetPalette.RemoveGroup*
  nameWithType.vb: AssetPalette.RemoveGroup(String)
  fullName.vb: AssetPalette.RemoveGroup(String)
  name.vb: RemoveGroup(String)
- uid: Global.AssetPalette.WriteToFile
  commentId: M:Global.AssetPalette.WriteToFile
  id: WriteToFile
  parent: Global.AssetPalette
  langs:
  - csharp
  - vb
  name: WriteToFile()
  nameWithType: AssetPalette.WriteToFile()
  fullName: AssetPalette.WriteToFile()
  type: Method
  source:
    remote:
      path: Assets/Editor/AssetPalette/AssetPalette.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WriteToFile
    path: ../Assets/Editor/AssetPalette/AssetPalette.cs
    startLine: 187
  assemblies:
  - Assembly-CSharp-Editor
  namespace: Global
  syntax:
    content: public static void WriteToFile()
    content.vb: Public Shared Sub WriteToFile()
  overload: Global.AssetPalette.WriteToFile*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: UnityEditor.EditorWindow
  commentId: T:UnityEditor.EditorWindow
  parent: UnityEditor
  isExternal: true
  name: EditorWindow
  nameWithType: EditorWindow
  fullName: UnityEditor.EditorWindow
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEditor
  commentId: N:UnityEditor
  isExternal: true
  name: UnityEditor
  nameWithType: UnityEditor
  fullName: UnityEditor
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{AssetPalette.PrefabDatabaseEntry}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{AssetPalette.PrefabDatabaseEntry}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<string, List<AssetPalette.PrefabDatabaseEntry>>
  nameWithType: Dictionary<string, List<AssetPalette.PrefabDatabaseEntry>>
  fullName: System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<AssetPalette.PrefabDatabaseEntry>>
  nameWithType.vb: Dictionary(Of String, List(Of AssetPalette.PrefabDatabaseEntry))
  fullName.vb: System.Collections.Generic.Dictionary(Of String, System.Collections.Generic.List(Of AssetPalette.PrefabDatabaseEntry))
  name.vb: Dictionary(Of String, List(Of AssetPalette.PrefabDatabaseEntry))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.AssetPalette
    name: AssetPalette
  - name: .
  - uid: Global.AssetPalette.PrefabDatabaseEntry
    name: PrefabDatabaseEntry
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.AssetPalette
    name: AssetPalette
  - name: .
  - uid: Global.AssetPalette.PrefabDatabaseEntry
    name: PrefabDatabaseEntry
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.String[]
  isExternal: true
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
  - name: (
  - name: )
- uid: Global.AssetPalette.CreatePrefabMapping*
  commentId: Overload:Global.AssetPalette.CreatePrefabMapping
  name: CreatePrefabMapping
  nameWithType: AssetPalette.CreatePrefabMapping
  fullName: AssetPalette.CreatePrefabMapping
- uid: Global.AssetPalette.GetPrefabAssetArrayFromMapping*
  commentId: Overload:Global.AssetPalette.GetPrefabAssetArrayFromMapping
  name: GetPrefabAssetArrayFromMapping
  nameWithType: AssetPalette.GetPrefabAssetArrayFromMapping
  fullName: AssetPalette.GetPrefabAssetArrayFromMapping
- uid: Global.AssetPalette.PrefabAssetArray
  commentId: T:Global.AssetPalette.PrefabAssetArray
  name: AssetPalette.PrefabAssetArray
  nameWithType: AssetPalette.PrefabAssetArray
  fullName: AssetPalette.PrefabAssetArray
  spec.csharp:
  - uid: Global.AssetPalette
    name: AssetPalette
  - name: .
  - uid: Global.AssetPalette.PrefabAssetArray
    name: PrefabAssetArray
  spec.vb:
  - uid: Global.AssetPalette
    name: AssetPalette
  - name: .
  - uid: Global.AssetPalette.PrefabAssetArray
    name: PrefabAssetArray
- uid: Global.AssetPalette.IndexOf*
  commentId: Overload:Global.AssetPalette.IndexOf
  name: IndexOf
  nameWithType: AssetPalette.IndexOf
  fullName: AssetPalette.IndexOf
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.AssetPalette.RemovePrefabFromGroup*
  commentId: Overload:Global.AssetPalette.RemovePrefabFromGroup
  name: RemovePrefabFromGroup
  nameWithType: AssetPalette.RemovePrefabFromGroup
  fullName: AssetPalette.RemovePrefabFromGroup
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: Global.AssetPalette.AddAsset*
  commentId: Overload:Global.AssetPalette.AddAsset
  name: AddAsset
  nameWithType: AssetPalette.AddAsset
  fullName: AssetPalette.AddAsset
- uid: Global.AssetPalette.AddGroup*
  commentId: Overload:Global.AssetPalette.AddGroup
  name: AddGroup
  nameWithType: AssetPalette.AddGroup
  fullName: AssetPalette.AddGroup
- uid: Global.AssetPalette.RemoveGroup*
  commentId: Overload:Global.AssetPalette.RemoveGroup
  name: RemoveGroup
  nameWithType: AssetPalette.RemoveGroup
  fullName: AssetPalette.RemoveGroup
- uid: Global.AssetPalette.WriteToFile*
  commentId: Overload:Global.AssetPalette.WriteToFile
  name: WriteToFile
  nameWithType: AssetPalette.WriteToFile
  fullName: AssetPalette.WriteToFile
