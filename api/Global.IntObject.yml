### YamlMime:ManagedReference
items:
- uid: Global.IntObject
  commentId: T:Global.IntObject
  id: IntObject
  parent: Global
  children:
  - Global.IntObject.AttachedToPlayer
  - Global.IntObject.Awake
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  - Global.IntObject.collider_type
  - Global.IntObject.DestroyOnKill
  - Global.IntObject.DisableObject
  - Global.IntObject.EnableObject
  - Global.IntObject.FindIntColliderState(System.Int32)
  - Global.IntObject.GetCollidable
  - Global.IntObject.GetCollider
  - Global.IntObject.GetColliderState
  - Global.IntObject.GetLocalGameStates
  - Global.IntObject.GetObjectSaveData
  - Global.IntObject.GetStartWorldPosition
  - Global.IntObject.IgnoredObjectsMap
  - Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  - Global.IntObject.Init
  - Global.IntObject.InitialStatus
  - Global.IntObject.int_collider
  - Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  - Global.IntObject.IsInSetPiece
  - Global.IntObject.Kill
  - Global.IntObject.Kill(System.Boolean,System.Single)
  - Global.IntObject.Kill(System.Boolean)
  - Global.IntObject.Kill(System.Single)
  - Global.IntObject.KilledCallback
  - Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  - Global.IntObject.MarkedForKill
  - Global.IntObject.ObjectID
  - Global.IntObject.OnDrawGizmos
  - Global.IntObject.OnKill(System.Boolean)
  - Global.IntObject.OnPostLoadSaveFile
  - Global.IntObject.OptimizeSleepObject
  - Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  - Global.IntObject.Overlaps(IntObject)
  - Global.IntObject.Position
  - Global.IntObject.RayCast(IntRay)
  - Global.IntObject.RecursiveSetCollidable(System.Boolean)
  - Global.IntObject.RegisterKilledCallback(IntObject.Action)
  - Global.IntObject.RegisterSelf
  - Global.IntObject.remainder
  - Global.IntObject.ResetObject
  - Global.IntObject.RespawnBehavior
  - Global.IntObject.RespawnObject
  - Global.IntObject.SaveObject
  - Global.IntObject.section
  - Global.IntObject.SetCollidable(System.Boolean)
  - Global.IntObject.SetColliderState(IntColliderState)
  - Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  - Global.IntObject.SetStatus(ObjectStatus)
  - Global.IntObject.SleepObject
  - Global.IntObject.Start
  - Global.IntObject.StartPosition
  - Global.IntObject.state
  - Global.IntObject.Status
  - Global.IntObject.Translate(UnityEngine.Vector2)
  - Global.IntObject.Translate(UnityEngine.Vector2Int)
  - Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  - Global.IntObject.UnregisterSelf
  - Global.IntObject.Update
  - Global.IntObject.WakeObject
  langs:
  - csharp
  - vb
  name: IntObject
  nameWithType: IntObject
  fullName: IntObject
  type: Class
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IntObject
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 80
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public abstract class IntObject : MonoBehaviour, ISavableObject<IntObjectSaveData>'
    content.vb: Public MustInherit Class IntObject Inherits MonoBehaviour Implements ISavableObject(Of IntObjectSaveData)
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  derivedClasses:
  - Global.AutoMergeAura
  - Global.IntActor
  - Global.IntSolid
  - Global.IntTrigger
  implements:
  - Global.ISavableObject{IntObjectSaveData}
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.IntObject.section
  commentId: P:Global.IntObject.section
  id: section
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: section
  nameWithType: IntObject.section
  fullName: IntObject.section
  type: Property
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: section
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 82
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Section section { get; }
    parameters: []
    return:
      type: Global.Section
    content.vb: Public ReadOnly Property section As Section
  overload: Global.IntObject.section*
- uid: Global.IntObject.state
  commentId: P:Global.IntObject.state
  id: state
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: state
  nameWithType: IntObject.state
  fullName: IntObject.state
  type: Property
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: state
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 84
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntColliderState state { get; }
    parameters: []
    return:
      type: Global.IntColliderState
    content.vb: Protected ReadOnly Property state As IntColliderState
  overload: Global.IntObject.state*
- uid: Global.IntObject.int_collider
  commentId: F:Global.IntObject.int_collider
  id: int_collider
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: int_collider
  nameWithType: IntObject.int_collider
  fullName: IntObject.int_collider
  type: Field
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: int_collider
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 85
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntCollider int_collider
    return:
      type: Global.IntCollider
    content.vb: Protected int_collider As IntCollider
- uid: Global.IntObject.remainder
  commentId: F:Global.IntObject.remainder
  id: remainder
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: remainder
  nameWithType: IntObject.remainder
  fullName: IntObject.remainder
  type: Field
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: remainder
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 86
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Vector2 remainder
    return:
      type: UnityEngine.Vector2
    content.vb: Protected remainder As Vector2
- uid: Global.IntObject.StartPosition
  commentId: F:Global.IntObject.StartPosition
  id: StartPosition
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: StartPosition
  nameWithType: IntObject.StartPosition
  fullName: IntObject.StartPosition
  type: Field
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: StartPosition
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 87
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Vector3 StartPosition
    return:
      type: UnityEngine.Vector3
    content.vb: Protected StartPosition As Vector3
- uid: Global.IntObject.AttachedToPlayer
  commentId: F:Global.IntObject.AttachedToPlayer
  id: AttachedToPlayer
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: AttachedToPlayer
  nameWithType: IntObject.AttachedToPlayer
  fullName: IntObject.AttachedToPlayer
  type: Field
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AttachedToPlayer
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 88
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected bool AttachedToPlayer
    return:
      type: System.Boolean
    content.vb: Protected AttachedToPlayer As Boolean
- uid: Global.IntObject.IgnoredObjectsMap
  commentId: F:Global.IntObject.IgnoredObjectsMap
  id: IgnoredObjectsMap
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: IgnoredObjectsMap
  nameWithType: IntObject.IgnoredObjectsMap
  fullName: IntObject.IgnoredObjectsMap
  type: Field
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IgnoredObjectsMap
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 89
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Dictionary<IntObject, float> IgnoredObjectsMap
    return:
      type: System.Collections.Generic.Dictionary{IntObject,System.Single}
    content.vb: Protected IgnoredObjectsMap As Dictionary(Of IntObject, Single)
- uid: Global.IntObject.KilledCallback
  commentId: F:Global.IntObject.KilledCallback
  id: KilledCallback
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: KilledCallback
  nameWithType: IntObject.KilledCallback
  fullName: IntObject.KilledCallback
  type: Field
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: KilledCallback
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 90
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntObject.Action KilledCallback
    return:
      type: Global.IntObject.Action
    content.vb: Protected KilledCallback As IntObject.Action
- uid: Global.IntObject.Position
  commentId: P:Global.IntObject.Position
  id: Position
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: IntObject.Position
  fullName: IntObject.Position
  type: Property
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Position
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 92
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2Int Position { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2Int
    content.vb: Public ReadOnly Property Position As Vector2Int
  overload: Global.IntObject.Position*
- uid: Global.IntObject.GetStartWorldPosition
  commentId: P:Global.IntObject.GetStartWorldPosition
  id: GetStartWorldPosition
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: GetStartWorldPosition
  nameWithType: IntObject.GetStartWorldPosition
  fullName: IntObject.GetStartWorldPosition
  type: Property
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetStartWorldPosition
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 98
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector3 GetStartWorldPosition { get; }
    parameters: []
    return:
      type: UnityEngine.Vector3
    content.vb: Public ReadOnly Property GetStartWorldPosition As Vector3
  overload: Global.IntObject.GetStartWorldPosition*
- uid: Global.IntObject.collider_type
  commentId: P:Global.IntObject.collider_type
  id: collider_type
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: collider_type
  nameWithType: IntObject.collider_type
  fullName: IntObject.collider_type
  type: Property
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: collider_type
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 99
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public IntCollider.ColliderType collider_type { get; }
    parameters: []
    return:
      type: Global.IntCollider.ColliderType
    content.vb: Public Property collider_type As IntCollider.ColliderType
  overload: Global.IntObject.collider_type*
- uid: Global.IntObject.MarkedForKill
  commentId: P:Global.IntObject.MarkedForKill
  id: MarkedForKill
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: MarkedForKill
  nameWithType: IntObject.MarkedForKill
  fullName: IntObject.MarkedForKill
  type: Property
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MarkedForKill
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 100
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool MarkedForKill { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property MarkedForKill As Boolean
  overload: Global.IntObject.MarkedForKill*
- uid: Global.IntObject.ObjectID
  commentId: F:Global.IntObject.ObjectID
  id: ObjectID
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: ObjectID
  nameWithType: IntObject.ObjectID
  fullName: IntObject.ObjectID
  type: Field
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ObjectID
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 103
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Int Object")]

      public string ObjectID
    return:
      type: System.String
    content.vb: >-
      <Header("Int Object")>

      Public ObjectID As String
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Int Object
- uid: Global.IntObject.DestroyOnKill
  commentId: F:Global.IntObject.DestroyOnKill
  id: DestroyOnKill
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: DestroyOnKill
  nameWithType: IntObject.DestroyOnKill
  fullName: IntObject.DestroyOnKill
  type: Field
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DestroyOnKill
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 104
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool DestroyOnKill
    return:
      type: System.Boolean
    content.vb: Public DestroyOnKill As Boolean
- uid: Global.IntObject.RespawnBehavior
  commentId: F:Global.IntObject.RespawnBehavior
  id: RespawnBehavior
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: RespawnBehavior
  nameWithType: IntObject.RespawnBehavior
  fullName: IntObject.RespawnBehavior
  type: Field
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RespawnBehavior
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 105
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public ObjectRespawnBehavior RespawnBehavior
    return:
      type: Global.ObjectRespawnBehavior
    content.vb: Public RespawnBehavior As ObjectRespawnBehavior
- uid: Global.IntObject.Status
  commentId: F:Global.IntObject.Status
  id: Status
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: IntObject.Status
  fullName: IntObject.Status
  type: Field
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Status
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 107
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public ObjectStatus Status
    return:
      type: Global.ObjectStatus
    content.vb: Public Status As ObjectStatus
- uid: Global.IntObject.InitialStatus
  commentId: F:Global.IntObject.InitialStatus
  id: InitialStatus
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: InitialStatus
  nameWithType: IntObject.InitialStatus
  fullName: IntObject.InitialStatus
  type: Field
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: InitialStatus
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 108
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected ObjectStatus InitialStatus
    return:
      type: Global.ObjectStatus
    content.vb: Protected InitialStatus As ObjectStatus
- uid: Global.IntObject.SaveObject
  commentId: F:Global.IntObject.SaveObject
  id: SaveObject
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: SaveObject
  nameWithType: IntObject.SaveObject
  fullName: IntObject.SaveObject
  type: Field
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SaveObject
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 109
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool SaveObject
    return:
      type: System.Boolean
    content.vb: Public SaveObject As Boolean
- uid: Global.IntObject.IsInSetPiece
  commentId: P:Global.IntObject.IsInSetPiece
  id: IsInSetPiece
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: IsInSetPiece
  nameWithType: IntObject.IsInSetPiece
  fullName: IntObject.IsInSetPiece
  type: Property
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsInSetPiece
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 110
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsInSetPiece { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsInSetPiece As Boolean
  overload: Global.IntObject.IsInSetPiece*
- uid: Global.IntObject.Awake
  commentId: M:Global.IntObject.Awake
  id: Awake
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: Awake()
  nameWithType: IntObject.Awake()
  fullName: IntObject.Awake()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Awake
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 117
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Awake()
    content.vb: Protected Sub Awake()
  overload: Global.IntObject.Awake*
- uid: Global.IntObject.Start
  commentId: M:Global.IntObject.Start
  id: Start
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: IntObject.Start()
  fullName: IntObject.Start()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Start
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 125
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Start()
    content.vb: Protected Sub Start()
  overload: Global.IntObject.Start*
- uid: Global.IntObject.Init
  commentId: M:Global.IntObject.Init
  id: Init
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: IntObject.Init()
  fullName: IntObject.Init()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Init
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 140
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nCall this manually when spawning in a new IntObject that requires collisions to work within the same frame. (typically waits for start to run which could take 1 frame)\n"
  example: []
  syntax:
    content: public virtual void Init()
    content.vb: Public Overridable Sub Init()
  overload: Global.IntObject.Init*
- uid: Global.IntObject.FindIntColliderState(System.Int32)
  commentId: M:Global.IntObject.FindIntColliderState(System.Int32)
  id: FindIntColliderState(System.Int32)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: FindIntColliderState(int)
  nameWithType: IntObject.FindIntColliderState(int)
  fullName: IntObject.FindIntColliderState(int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: FindIntColliderState
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 168
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntColliderState FindIntColliderState(int maxDepth = 10)
    parameters:
    - id: maxDepth
      type: System.Int32
    return:
      type: Global.IntColliderState
    content.vb: Protected Function FindIntColliderState(maxDepth As Integer = 10) As IntColliderState
  overload: Global.IntObject.FindIntColliderState*
  nameWithType.vb: IntObject.FindIntColliderState(Integer)
  fullName.vb: IntObject.FindIntColliderState(Integer)
  name.vb: FindIntColliderState(Integer)
- uid: Global.IntObject.GetLocalGameStates
  commentId: M:Global.IntObject.GetLocalGameStates
  id: GetLocalGameStates
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: GetLocalGameStates()
  nameWithType: IntObject.GetLocalGameStates()
  fullName: IntObject.GetLocalGameStates()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetLocalGameStates
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 194
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected List<string> GetLocalGameStates()
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Protected Function GetLocalGameStates() As List(Of String)
  overload: Global.IntObject.GetLocalGameStates*
- uid: Global.IntObject.RegisterSelf
  commentId: M:Global.IntObject.RegisterSelf
  id: RegisterSelf
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: RegisterSelf()
  nameWithType: IntObject.RegisterSelf()
  fullName: IntObject.RegisterSelf()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RegisterSelf
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 206
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void RegisterSelf()
    content.vb: Protected Overridable Sub RegisterSelf()
  overload: Global.IntObject.RegisterSelf*
- uid: Global.IntObject.UnregisterSelf
  commentId: M:Global.IntObject.UnregisterSelf
  id: UnregisterSelf
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: UnregisterSelf()
  nameWithType: IntObject.UnregisterSelf()
  fullName: IntObject.UnregisterSelf()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UnregisterSelf
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 211
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void UnregisterSelf()
    content.vb: Protected Sub UnregisterSelf()
  overload: Global.IntObject.UnregisterSelf*
- uid: Global.IntObject.RegisterKilledCallback(IntObject.Action)
  commentId: M:Global.IntObject.RegisterKilledCallback(IntObject.Action)
  id: RegisterKilledCallback(IntObject.Action)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: RegisterKilledCallback(Action)
  nameWithType: IntObject.RegisterKilledCallback(IntObject.Action)
  fullName: IntObject.RegisterKilledCallback(IntObject.Action)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RegisterKilledCallback
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 216
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void RegisterKilledCallback(IntObject.Action callback)
    parameters:
    - id: callback
      type: Global.IntObject.Action
    content.vb: Public Sub RegisterKilledCallback(callback As IntObject.Action)
  overload: Global.IntObject.RegisterKilledCallback*
- uid: Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  commentId: M:Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  id: UnregisterKilledCallback(IntObject.Action)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: UnregisterKilledCallback(Action)
  nameWithType: IntObject.UnregisterKilledCallback(IntObject.Action)
  fullName: IntObject.UnregisterKilledCallback(IntObject.Action)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UnregisterKilledCallback
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 221
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UnregisterKilledCallback(IntObject.Action callback)
    parameters:
    - id: callback
      type: Global.IntObject.Action
    content.vb: Public Sub UnregisterKilledCallback(callback As IntObject.Action)
  overload: Global.IntObject.UnregisterKilledCallback*
- uid: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  commentId: M:Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  id: IsContainedInRect(UnityEngine.Rect)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: IsContainedInRect(Rect)
  nameWithType: IntObject.IsContainedInRect(Rect)
  fullName: IntObject.IsContainedInRect(UnityEngine.Rect)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsContainedInRect
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 226
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual bool IsContainedInRect(Rect rect)
    parameters:
    - id: rect
      type: UnityEngine.Rect
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsContainedInRect(rect As Rect) As Boolean
  overload: Global.IntObject.IsContainedInRect*
- uid: Global.IntObject.Update
  commentId: M:Global.IntObject.Update
  id: Update
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: IntObject.Update()
  fullName: IntObject.Update()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Update
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 237
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Update()
    content.vb: Protected Sub Update()
  overload: Global.IntObject.Update*
- uid: Global.IntObject.SetStatus(ObjectStatus)
  commentId: M:Global.IntObject.SetStatus(ObjectStatus)
  id: SetStatus(ObjectStatus)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: SetStatus(ObjectStatus)
  nameWithType: IntObject.SetStatus(ObjectStatus)
  fullName: IntObject.SetStatus(ObjectStatus)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetStatus
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 251
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetStatus(ObjectStatus status)
    parameters:
    - id: status
      type: Global.ObjectStatus
    content.vb: Public Sub SetStatus(status As ObjectStatus)
  overload: Global.IntObject.SetStatus*
- uid: Global.IntObject.OnKill(System.Boolean)
  commentId: M:Global.IntObject.OnKill(System.Boolean)
  id: OnKill(System.Boolean)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: OnKill(bool)
  nameWithType: IntObject.OnKill(bool)
  fullName: IntObject.OnKill(bool)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnKill
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 264
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void OnKill(bool isAnimated)
    parameters:
    - id: isAnimated
      type: System.Boolean
    content.vb: Public Overridable Sub OnKill(isAnimated As Boolean)
  overload: Global.IntObject.OnKill*
  nameWithType.vb: IntObject.OnKill(Boolean)
  fullName.vb: IntObject.OnKill(Boolean)
  name.vb: OnKill(Boolean)
- uid: Global.IntObject.Kill
  commentId: M:Global.IntObject.Kill
  id: Kill
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: Kill()
  nameWithType: IntObject.Kill()
  fullName: IntObject.Kill()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Kill
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 272
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nKills with death animations\n"
  example: []
  syntax:
    content: public void Kill()
    content.vb: Public Sub Kill()
  overload: Global.IntObject.Kill*
- uid: Global.IntObject.Kill(System.Boolean)
  commentId: M:Global.IntObject.Kill(System.Boolean)
  id: Kill(System.Boolean)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: Kill(bool)
  nameWithType: IntObject.Kill(bool)
  fullName: IntObject.Kill(bool)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Kill
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 278
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Kill(bool isAnimated)
    parameters:
    - id: isAnimated
      type: System.Boolean
    content.vb: Public Sub Kill(isAnimated As Boolean)
  overload: Global.IntObject.Kill*
  nameWithType.vb: IntObject.Kill(Boolean)
  fullName.vb: IntObject.Kill(Boolean)
  name.vb: Kill(Boolean)
- uid: Global.IntObject.Kill(System.Single)
  commentId: M:Global.IntObject.Kill(System.Single)
  id: Kill(System.Single)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: Kill(float)
  nameWithType: IntObject.Kill(float)
  fullName: IntObject.Kill(float)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Kill
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 284
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Kill(float duration)
    parameters:
    - id: duration
      type: System.Single
    content.vb: Public Sub Kill(duration As Single)
  overload: Global.IntObject.Kill*
  nameWithType.vb: IntObject.Kill(Single)
  fullName.vb: IntObject.Kill(Single)
  name.vb: Kill(Single)
- uid: Global.IntObject.Kill(System.Boolean,System.Single)
  commentId: M:Global.IntObject.Kill(System.Boolean,System.Single)
  id: Kill(System.Boolean,System.Single)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: Kill(bool, float)
  nameWithType: IntObject.Kill(bool, float)
  fullName: IntObject.Kill(bool, float)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Kill
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 289
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Kill(bool isAnimated, float duration)
    parameters:
    - id: isAnimated
      type: System.Boolean
    - id: duration
      type: System.Single
    content.vb: Public Sub Kill(isAnimated As Boolean, duration As Single)
  overload: Global.IntObject.Kill*
  nameWithType.vb: IntObject.Kill(Boolean, Single)
  fullName.vb: IntObject.Kill(Boolean, Single)
  name.vb: Kill(Boolean, Single)
- uid: Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  commentId: M:Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  id: IgnoreObjectCollisions(IntObject,System.Single)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: IgnoreObjectCollisions(IntObject, float)
  nameWithType: IntObject.IgnoreObjectCollisions(IntObject, float)
  fullName: IntObject.IgnoreObjectCollisions(IntObject, float)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IgnoreObjectCollisions
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 295
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void IgnoreObjectCollisions(IntObject obj, float duration)
    parameters:
    - id: obj
      type: Global.IntObject
    - id: duration
      type: System.Single
    content.vb: Public Sub IgnoreObjectCollisions(obj As IntObject, duration As Single)
  overload: Global.IntObject.IgnoreObjectCollisions*
  nameWithType.vb: IntObject.IgnoreObjectCollisions(IntObject, Single)
  fullName.vb: IntObject.IgnoreObjectCollisions(IntObject, Single)
  name.vb: IgnoreObjectCollisions(IntObject, Single)
- uid: Global.IntObject.SleepObject
  commentId: M:Global.IntObject.SleepObject
  id: SleepObject
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: SleepObject()
  nameWithType: IntObject.SleepObject()
  fullName: IntObject.SleepObject()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SleepObject
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 305
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SleepObject()
    content.vb: Public Sub SleepObject()
  overload: Global.IntObject.SleepObject*
- uid: Global.IntObject.OptimizeSleepObject
  commentId: M:Global.IntObject.OptimizeSleepObject
  id: OptimizeSleepObject
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: OptimizeSleepObject()
  nameWithType: IntObject.OptimizeSleepObject()
  fullName: IntObject.OptimizeSleepObject()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OptimizeSleepObject
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 311
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void OptimizeSleepObject()
    content.vb: Public Sub OptimizeSleepObject()
  overload: Global.IntObject.OptimizeSleepObject*
- uid: Global.IntObject.WakeObject
  commentId: M:Global.IntObject.WakeObject
  id: WakeObject
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: WakeObject()
  nameWithType: IntObject.WakeObject()
  fullName: IntObject.WakeObject()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WakeObject
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 317
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void WakeObject()
    content.vb: Public Sub WakeObject()
  overload: Global.IntObject.WakeObject*
- uid: Global.IntObject.EnableObject
  commentId: M:Global.IntObject.EnableObject
  id: EnableObject
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: EnableObject()
  nameWithType: IntObject.EnableObject()
  fullName: IntObject.EnableObject()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EnableObject
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 323
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void EnableObject()
    content.vb: Public Overridable Sub EnableObject()
  overload: Global.IntObject.EnableObject*
- uid: Global.IntObject.DisableObject
  commentId: M:Global.IntObject.DisableObject
  id: DisableObject
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: DisableObject()
  nameWithType: IntObject.DisableObject()
  fullName: IntObject.DisableObject()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DisableObject
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 329
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void DisableObject()
    content.vb: Public Sub DisableObject()
  overload: Global.IntObject.DisableObject*
- uid: Global.IntObject.RespawnObject
  commentId: M:Global.IntObject.RespawnObject
  id: RespawnObject
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: RespawnObject()
  nameWithType: IntObject.RespawnObject()
  fullName: IntObject.RespawnObject()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RespawnObject
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 335
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void RespawnObject()
    content.vb: Public Overridable Sub RespawnObject()
  overload: Global.IntObject.RespawnObject*
- uid: Global.IntObject.ResetObject
  commentId: M:Global.IntObject.ResetObject
  id: ResetObject
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: ResetObject()
  nameWithType: IntObject.ResetObject()
  fullName: IntObject.ResetObject()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResetObject
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 346
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void ResetObject()
    content.vb: Public Overridable Sub ResetObject()
  overload: Global.IntObject.ResetObject*
- uid: Global.IntObject.RecursiveSetCollidable(System.Boolean)
  commentId: M:Global.IntObject.RecursiveSetCollidable(System.Boolean)
  id: RecursiveSetCollidable(System.Boolean)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: RecursiveSetCollidable(bool)
  nameWithType: IntObject.RecursiveSetCollidable(bool)
  fullName: IntObject.RecursiveSetCollidable(bool)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RecursiveSetCollidable
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 353
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void RecursiveSetCollidable(bool collidable)
    parameters:
    - id: collidable
      type: System.Boolean
    content.vb: Public Sub RecursiveSetCollidable(collidable As Boolean)
  overload: Global.IntObject.RecursiveSetCollidable*
  nameWithType.vb: IntObject.RecursiveSetCollidable(Boolean)
  fullName.vb: IntObject.RecursiveSetCollidable(Boolean)
  name.vb: RecursiveSetCollidable(Boolean)
- uid: Global.IntObject.SetColliderState(IntColliderState)
  commentId: M:Global.IntObject.SetColliderState(IntColliderState)
  id: SetColliderState(IntColliderState)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: SetColliderState(IntColliderState)
  nameWithType: IntObject.SetColliderState(IntColliderState)
  fullName: IntObject.SetColliderState(IntColliderState)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetColliderState
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 377
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetColliderState(IntColliderState NewState)
    parameters:
    - id: NewState
      type: Global.IntColliderState
    content.vb: Public Sub SetColliderState(NewState As IntColliderState)
  overload: Global.IntObject.SetColliderState*
- uid: Global.IntObject.Translate(UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.Translate(UnityEngine.Vector2Int)
  id: Translate(UnityEngine.Vector2Int)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: Translate(Vector2Int)
  nameWithType: IntObject.Translate(Vector2Int)
  fullName: IntObject.Translate(UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Translate
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 382
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Translate(Vector2Int dPos)
    parameters:
    - id: dPos
      type: UnityEngine.Vector2Int
    content.vb: Public Sub Translate(dPos As Vector2Int)
  overload: Global.IntObject.Translate*
- uid: Global.IntObject.Translate(UnityEngine.Vector2)
  commentId: M:Global.IntObject.Translate(UnityEngine.Vector2)
  id: Translate(UnityEngine.Vector2)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: Translate(Vector2)
  nameWithType: IntObject.Translate(Vector2)
  fullName: IntObject.Translate(UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Translate
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 387
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Translate(Vector2 dPos)
    parameters:
    - id: dPos
      type: UnityEngine.Vector2
    content.vb: Public Sub Translate(dPos As Vector2)
  overload: Global.IntObject.Translate*
- uid: Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  id: SetPosition(UnityEngine.Vector2Int)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: SetPosition(Vector2Int)
  nameWithType: IntObject.SetPosition(Vector2Int)
  fullName: IntObject.SetPosition(UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetPosition
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 395
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetPosition(Vector2Int pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2Int
    content.vb: Public Sub SetPosition(pos As Vector2Int)
  overload: Global.IntObject.SetPosition*
- uid: Global.IntObject.SetCollidable(System.Boolean)
  commentId: M:Global.IntObject.SetCollidable(System.Boolean)
  id: SetCollidable(System.Boolean)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: SetCollidable(bool)
  nameWithType: IntObject.SetCollidable(bool)
  fullName: IntObject.SetCollidable(bool)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetCollidable
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 400
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetCollidable(bool IsCollidable)
    parameters:
    - id: IsCollidable
      type: System.Boolean
    content.vb: Public Sub SetCollidable(IsCollidable As Boolean)
  overload: Global.IntObject.SetCollidable*
  nameWithType.vb: IntObject.SetCollidable(Boolean)
  fullName.vb: IntObject.SetCollidable(Boolean)
  name.vb: SetCollidable(Boolean)
- uid: Global.IntObject.GetCollidable
  commentId: M:Global.IntObject.GetCollidable
  id: GetCollidable
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: GetCollidable()
  nameWithType: IntObject.GetCollidable()
  fullName: IntObject.GetCollidable()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetCollidable
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 410
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool GetCollidable()
    return:
      type: System.Boolean
    content.vb: Public Function GetCollidable() As Boolean
  overload: Global.IntObject.GetCollidable*
- uid: Global.IntObject.GetCollider
  commentId: M:Global.IntObject.GetCollider
  id: GetCollider
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: GetCollider()
  nameWithType: IntObject.GetCollider()
  fullName: IntObject.GetCollider()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetCollider
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 417
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public IntCollider GetCollider()
    return:
      type: Global.IntCollider
    content.vb: Public Function GetCollider() As IntCollider
  overload: Global.IntObject.GetCollider*
- uid: Global.IntObject.GetColliderState
  commentId: M:Global.IntObject.GetColliderState
  id: GetColliderState
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: GetColliderState()
  nameWithType: IntObject.GetColliderState()
  fullName: IntObject.GetColliderState()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetColliderState
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 422
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public IntColliderState GetColliderState()
    return:
      type: Global.IntColliderState
    content.vb: Public Function GetColliderState() As IntColliderState
  overload: Global.IntObject.GetColliderState*
- uid: Global.IntObject.Overlaps(IntObject)
  commentId: M:Global.IntObject.Overlaps(IntObject)
  id: Overlaps(IntObject)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: Overlaps(IntObject)
  nameWithType: IntObject.Overlaps(IntObject)
  fullName: IntObject.Overlaps(IntObject)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Overlaps
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 430
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool Overlaps(IntObject other)
    parameters:
    - id: other
      type: Global.IntObject
    return:
      type: System.Boolean
    content.vb: Public Function Overlaps(other As IntObject) As Boolean
  overload: Global.IntObject.Overlaps*
- uid: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  id: Overlaps(IntObject,UnityEngine.Vector2Int)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: Overlaps(IntObject, Vector2Int)
  nameWithType: IntObject.Overlaps(IntObject, Vector2Int)
  fullName: IntObject.Overlaps(IntObject, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Overlaps
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 435
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual bool Overlaps(IntObject other, Vector2Int dPos)
    parameters:
    - id: other
      type: Global.IntObject
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: System.Boolean
    content.vb: Public Overridable Function Overlaps(other As IntObject, dPos As Vector2Int) As Boolean
  overload: Global.IntObject.Overlaps*
- uid: Global.IntObject.RayCast(IntRay)
  commentId: M:Global.IntObject.RayCast(IntRay)
  id: RayCast(IntRay)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: RayCast(IntRay)
  nameWithType: IntObject.RayCast(IntRay)
  fullName: IntObject.RayCast(IntRay)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RayCast
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 442
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Intersection RayCast(IntRay ray)
    parameters:
    - id: ray
      type: Global.IntRay
    return:
      type: Global.Intersection
    content.vb: Public Function RayCast(ray As IntRay) As Intersection
  overload: Global.IntObject.RayCast*
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  id: CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: CollideAt(List<IntSolid>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntSolid>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntSolid>, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CollideAt
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 452
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int CollideAt(List<IntSolid> objects, Vector2Int dPos)
    parameters:
    - id: objects
      type: System.Collections.Generic.List{IntSolid}
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: System.Int32
    content.vb: Public Function CollideAt(objects As List(Of IntSolid), dPos As Vector2Int) As Integer
  overload: Global.IntObject.CollideAt*
  nameWithType.vb: IntObject.CollideAt(List(Of IntSolid), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntSolid), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntSolid), Vector2Int)
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  id: CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: CollideAt(List<IntActor>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntActor>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntActor>, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CollideAt
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 473
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int CollideAt(List<IntActor> actors, Vector2Int dPos)
    parameters:
    - id: actors
      type: System.Collections.Generic.List{IntActor}
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: System.Int32
    content.vb: Public Function CollideAt(actors As List(Of IntActor), dPos As Vector2Int) As Integer
  overload: Global.IntObject.CollideAt*
  nameWithType.vb: IntObject.CollideAt(List(Of IntActor), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntActor), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntActor), Vector2Int)
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  id: CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: CollideAt(List<IntTrigger>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntTrigger>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntTrigger>, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CollideAt
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 483
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int CollideAt(List<IntTrigger> triggers, Vector2Int dPos)
    parameters:
    - id: triggers
      type: System.Collections.Generic.List{IntTrigger}
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: System.Int32
    content.vb: Public Function CollideAt(triggers As List(Of IntTrigger), dPos As Vector2Int) As Integer
  overload: Global.IntObject.CollideAt*
  nameWithType.vb: IntObject.CollideAt(List(Of IntTrigger), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntTrigger), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntTrigger), Vector2Int)
- uid: Global.IntObject.OnDrawGizmos
  commentId: M:Global.IntObject.OnDrawGizmos
  id: OnDrawGizmos
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: OnDrawGizmos()
  nameWithType: IntObject.OnDrawGizmos()
  fullName: IntObject.OnDrawGizmos()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnDrawGizmos
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 493
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void OnDrawGizmos()
    content.vb: Protected Sub OnDrawGizmos()
  overload: Global.IntObject.OnDrawGizmos*
- uid: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  commentId: M:Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  id: LoadObjectSaveData(IntObjectSaveData)
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: LoadObjectSaveData(IntObjectSaveData)
  nameWithType: IntObject.LoadObjectSaveData(IntObjectSaveData)
  fullName: IntObject.LoadObjectSaveData(IntObjectSaveData)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LoadObjectSaveData
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 520
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual bool LoadObjectSaveData(IntObjectSaveData data)
    parameters:
    - id: data
      type: Global.IntObjectSaveData
    return:
      type: System.Boolean
    content.vb: Public Overridable Function LoadObjectSaveData(data As IntObjectSaveData) As Boolean
  overload: Global.IntObject.LoadObjectSaveData*
  implements:
  - Global.ISavableObject{IntObjectSaveData}.LoadObjectSaveData(IntObjectSaveData)
- uid: Global.IntObject.GetObjectSaveData
  commentId: M:Global.IntObject.GetObjectSaveData
  id: GetObjectSaveData
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: GetObjectSaveData()
  nameWithType: IntObject.GetObjectSaveData()
  fullName: IntObject.GetObjectSaveData()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetObjectSaveData
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 547
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual IntObjectSaveData GetObjectSaveData()
    return:
      type: Global.IntObjectSaveData
    content.vb: Public Overridable Function GetObjectSaveData() As IntObjectSaveData
  overload: Global.IntObject.GetObjectSaveData*
  implements:
  - Global.ISavableObject{IntObjectSaveData}.GetObjectSaveData
- uid: Global.IntObject.OnPostLoadSaveFile
  commentId: M:Global.IntObject.OnPostLoadSaveFile
  id: OnPostLoadSaveFile
  parent: Global.IntObject
  langs:
  - csharp
  - vb
  name: OnPostLoadSaveFile()
  nameWithType: IntObject.OnPostLoadSaveFile()
  fullName: IntObject.OnPostLoadSaveFile()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Objects/IntObject.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnPostLoadSaveFile
    path: ../Assets/Framework/Physics/Objects/IntObject.cs
    startLine: 551
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void OnPostLoadSaveFile()
    content.vb: Public Overridable Sub OnPostLoadSaveFile()
  overload: Global.IntObject.OnPostLoadSaveFile*
  implements:
  - Global.ISavableObject{IntObjectSaveData}.OnPostLoadSaveFile
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Global.ISavableObject{IntObjectSaveData}
  commentId: T:Global.ISavableObject{IntObjectSaveData}
  definition: Global.ISavableObject`1
  name: ISavableObject<IntObjectSaveData>
  nameWithType: ISavableObject<IntObjectSaveData>
  fullName: ISavableObject<IntObjectSaveData>
  nameWithType.vb: ISavableObject(Of IntObjectSaveData)
  fullName.vb: ISavableObject(Of IntObjectSaveData)
  name.vb: ISavableObject(Of IntObjectSaveData)
  spec.csharp:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: <
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: '>'
  spec.vb:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ISavableObject`1
  commentId: T:Global.ISavableObject`1
  name: ISavableObject<T>
  nameWithType: ISavableObject<T>
  fullName: ISavableObject<T>
  nameWithType.vb: ISavableObject(Of T)
  fullName.vb: ISavableObject(Of T)
  name.vb: ISavableObject(Of T)
  spec.csharp:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.IntObject.section*
  commentId: Overload:Global.IntObject.section
  name: section
  nameWithType: IntObject.section
  fullName: IntObject.section
- uid: Global.Section
  commentId: T:Global.Section
  name: Section
  nameWithType: Section
  fullName: Section
- uid: Global.IntObject.state*
  commentId: Overload:Global.IntObject.state
  name: state
  nameWithType: IntObject.state
  fullName: IntObject.state
- uid: Global.IntColliderState
  commentId: T:Global.IntColliderState
  name: IntColliderState
  nameWithType: IntColliderState
  fullName: IntColliderState
- uid: Global.IntCollider
  commentId: T:Global.IntCollider
  name: IntCollider
  nameWithType: IntCollider
  fullName: IntCollider
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.Dictionary{IntObject,System.Single}
  commentId: T:System.Collections.Generic.Dictionary{IntObject,System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<IntObject, float>
  nameWithType: Dictionary<IntObject, float>
  fullName: System.Collections.Generic.Dictionary<IntObject, float>
  nameWithType.vb: Dictionary(Of IntObject, Single)
  fullName.vb: System.Collections.Generic.Dictionary(Of IntObject, Single)
  name.vb: Dictionary(Of IntObject, Single)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: Global.IntObject.Action
  commentId: T:Global.IntObject.Action
  name: IntObject.Action
  nameWithType: IntObject.Action
  fullName: IntObject.Action
  spec.csharp:
  - uid: Global.IntObject
    name: IntObject
  - name: .
  - uid: Global.IntObject.Action
    name: Action
  spec.vb:
  - uid: Global.IntObject
    name: IntObject
  - name: .
  - uid: Global.IntObject.Action
    name: Action
- uid: Global.IntObject.Position*
  commentId: Overload:Global.IntObject.Position
  name: Position
  nameWithType: IntObject.Position
  fullName: IntObject.Position
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: Global.IntObject.GetStartWorldPosition*
  commentId: Overload:Global.IntObject.GetStartWorldPosition
  name: GetStartWorldPosition
  nameWithType: IntObject.GetStartWorldPosition
  fullName: IntObject.GetStartWorldPosition
- uid: Global.IntObject.collider_type*
  commentId: Overload:Global.IntObject.collider_type
  name: collider_type
  nameWithType: IntObject.collider_type
  fullName: IntObject.collider_type
- uid: Global.IntCollider.ColliderType
  commentId: T:Global.IntCollider.ColliderType
  name: IntCollider.ColliderType
  nameWithType: IntCollider.ColliderType
  fullName: IntCollider.ColliderType
  spec.csharp:
  - uid: Global.IntCollider
    name: IntCollider
  - name: .
  - uid: Global.IntCollider.ColliderType
    name: ColliderType
  spec.vb:
  - uid: Global.IntCollider
    name: IntCollider
  - name: .
  - uid: Global.IntCollider.ColliderType
    name: ColliderType
- uid: Global.IntObject.MarkedForKill*
  commentId: Overload:Global.IntObject.MarkedForKill
  name: MarkedForKill
  nameWithType: IntObject.MarkedForKill
  fullName: IntObject.MarkedForKill
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.ObjectRespawnBehavior
  commentId: T:Global.ObjectRespawnBehavior
  name: ObjectRespawnBehavior
  nameWithType: ObjectRespawnBehavior
  fullName: ObjectRespawnBehavior
- uid: Global.ObjectStatus
  commentId: T:Global.ObjectStatus
  name: ObjectStatus
  nameWithType: ObjectStatus
  fullName: ObjectStatus
- uid: Global.IntObject.IsInSetPiece*
  commentId: Overload:Global.IntObject.IsInSetPiece
  name: IsInSetPiece
  nameWithType: IntObject.IsInSetPiece
  fullName: IntObject.IsInSetPiece
- uid: Global.IntObject.Awake*
  commentId: Overload:Global.IntObject.Awake
  name: Awake
  nameWithType: IntObject.Awake
  fullName: IntObject.Awake
- uid: Global.IntObject.Start*
  commentId: Overload:Global.IntObject.Start
  name: Start
  nameWithType: IntObject.Start
  fullName: IntObject.Start
- uid: Global.IntObject.Init*
  commentId: Overload:Global.IntObject.Init
  name: Init
  nameWithType: IntObject.Init
  fullName: IntObject.Init
- uid: Global.IntObject.FindIntColliderState*
  commentId: Overload:Global.IntObject.FindIntColliderState
  name: FindIntColliderState
  nameWithType: IntObject.FindIntColliderState
  fullName: IntObject.FindIntColliderState
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.IntObject.GetLocalGameStates*
  commentId: Overload:Global.IntObject.GetLocalGameStates
  name: GetLocalGameStates
  nameWithType: IntObject.GetLocalGameStates
  fullName: IntObject.GetLocalGameStates
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.IntObject.RegisterSelf*
  commentId: Overload:Global.IntObject.RegisterSelf
  name: RegisterSelf
  nameWithType: IntObject.RegisterSelf
  fullName: IntObject.RegisterSelf
- uid: Global.IntObject.UnregisterSelf*
  commentId: Overload:Global.IntObject.UnregisterSelf
  name: UnregisterSelf
  nameWithType: IntObject.UnregisterSelf
  fullName: IntObject.UnregisterSelf
- uid: Global.IntObject.RegisterKilledCallback*
  commentId: Overload:Global.IntObject.RegisterKilledCallback
  name: RegisterKilledCallback
  nameWithType: IntObject.RegisterKilledCallback
  fullName: IntObject.RegisterKilledCallback
- uid: Global.IntObject.UnregisterKilledCallback*
  commentId: Overload:Global.IntObject.UnregisterKilledCallback
  name: UnregisterKilledCallback
  nameWithType: IntObject.UnregisterKilledCallback
  fullName: IntObject.UnregisterKilledCallback
- uid: Global.IntObject.IsContainedInRect*
  commentId: Overload:Global.IntObject.IsContainedInRect
  name: IsContainedInRect
  nameWithType: IntObject.IsContainedInRect
  fullName: IntObject.IsContainedInRect
- uid: UnityEngine.Rect
  commentId: T:UnityEngine.Rect
  parent: UnityEngine
  isExternal: true
  name: Rect
  nameWithType: Rect
  fullName: UnityEngine.Rect
- uid: Global.IntObject.Update*
  commentId: Overload:Global.IntObject.Update
  name: Update
  nameWithType: IntObject.Update
  fullName: IntObject.Update
- uid: Global.IntObject.SetStatus*
  commentId: Overload:Global.IntObject.SetStatus
  name: SetStatus
  nameWithType: IntObject.SetStatus
  fullName: IntObject.SetStatus
- uid: Global.IntObject.OnKill*
  commentId: Overload:Global.IntObject.OnKill
  name: OnKill
  nameWithType: IntObject.OnKill
  fullName: IntObject.OnKill
- uid: Global.IntObject.Kill*
  commentId: Overload:Global.IntObject.Kill
  name: Kill
  nameWithType: IntObject.Kill
  fullName: IntObject.Kill
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.IntObject.IgnoreObjectCollisions*
  commentId: Overload:Global.IntObject.IgnoreObjectCollisions
  name: IgnoreObjectCollisions
  nameWithType: IntObject.IgnoreObjectCollisions
  fullName: IntObject.IgnoreObjectCollisions
- uid: Global.IntObject
  commentId: T:Global.IntObject
  name: IntObject
  nameWithType: IntObject
  fullName: IntObject
- uid: Global.IntObject.SleepObject*
  commentId: Overload:Global.IntObject.SleepObject
  name: SleepObject
  nameWithType: IntObject.SleepObject
  fullName: IntObject.SleepObject
- uid: Global.IntObject.OptimizeSleepObject*
  commentId: Overload:Global.IntObject.OptimizeSleepObject
  name: OptimizeSleepObject
  nameWithType: IntObject.OptimizeSleepObject
  fullName: IntObject.OptimizeSleepObject
- uid: Global.IntObject.WakeObject*
  commentId: Overload:Global.IntObject.WakeObject
  name: WakeObject
  nameWithType: IntObject.WakeObject
  fullName: IntObject.WakeObject
- uid: Global.IntObject.EnableObject*
  commentId: Overload:Global.IntObject.EnableObject
  name: EnableObject
  nameWithType: IntObject.EnableObject
  fullName: IntObject.EnableObject
- uid: Global.IntObject.DisableObject*
  commentId: Overload:Global.IntObject.DisableObject
  name: DisableObject
  nameWithType: IntObject.DisableObject
  fullName: IntObject.DisableObject
- uid: Global.IntObject.RespawnObject*
  commentId: Overload:Global.IntObject.RespawnObject
  name: RespawnObject
  nameWithType: IntObject.RespawnObject
  fullName: IntObject.RespawnObject
- uid: Global.IntObject.ResetObject*
  commentId: Overload:Global.IntObject.ResetObject
  name: ResetObject
  nameWithType: IntObject.ResetObject
  fullName: IntObject.ResetObject
- uid: Global.IntObject.RecursiveSetCollidable*
  commentId: Overload:Global.IntObject.RecursiveSetCollidable
  name: RecursiveSetCollidable
  nameWithType: IntObject.RecursiveSetCollidable
  fullName: IntObject.RecursiveSetCollidable
- uid: Global.IntObject.SetColliderState*
  commentId: Overload:Global.IntObject.SetColliderState
  name: SetColliderState
  nameWithType: IntObject.SetColliderState
  fullName: IntObject.SetColliderState
- uid: Global.IntObject.Translate*
  commentId: Overload:Global.IntObject.Translate
  name: Translate
  nameWithType: IntObject.Translate
  fullName: IntObject.Translate
- uid: Global.IntObject.SetPosition*
  commentId: Overload:Global.IntObject.SetPosition
  name: SetPosition
  nameWithType: IntObject.SetPosition
  fullName: IntObject.SetPosition
- uid: Global.IntObject.SetCollidable*
  commentId: Overload:Global.IntObject.SetCollidable
  name: SetCollidable
  nameWithType: IntObject.SetCollidable
  fullName: IntObject.SetCollidable
- uid: Global.IntObject.GetCollidable*
  commentId: Overload:Global.IntObject.GetCollidable
  name: GetCollidable
  nameWithType: IntObject.GetCollidable
  fullName: IntObject.GetCollidable
- uid: Global.IntObject.GetCollider*
  commentId: Overload:Global.IntObject.GetCollider
  name: GetCollider
  nameWithType: IntObject.GetCollider
  fullName: IntObject.GetCollider
- uid: Global.IntObject.GetColliderState*
  commentId: Overload:Global.IntObject.GetColliderState
  name: GetColliderState
  nameWithType: IntObject.GetColliderState
  fullName: IntObject.GetColliderState
- uid: Global.IntObject.Overlaps*
  commentId: Overload:Global.IntObject.Overlaps
  name: Overlaps
  nameWithType: IntObject.Overlaps
  fullName: IntObject.Overlaps
- uid: Global.IntObject.RayCast*
  commentId: Overload:Global.IntObject.RayCast
  name: RayCast
  nameWithType: IntObject.RayCast
  fullName: IntObject.RayCast
- uid: Global.IntRay
  commentId: T:Global.IntRay
  name: IntRay
  nameWithType: IntRay
  fullName: IntRay
- uid: Global.Intersection
  commentId: T:Global.Intersection
  name: Intersection
  nameWithType: Intersection
  fullName: Intersection
- uid: Global.IntObject.CollideAt*
  commentId: Overload:Global.IntObject.CollideAt
  name: CollideAt
  nameWithType: IntObject.CollideAt
  fullName: IntObject.CollideAt
- uid: System.Collections.Generic.List{IntSolid}
  commentId: T:System.Collections.Generic.List{IntSolid}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IntSolid>
  nameWithType: List<IntSolid>
  fullName: System.Collections.Generic.List<IntSolid>
  nameWithType.vb: List(Of IntSolid)
  fullName.vb: System.Collections.Generic.List(Of IntSolid)
  name.vb: List(Of IntSolid)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntSolid
    name: IntSolid
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: System.Collections.Generic.List{IntActor}
  commentId: T:System.Collections.Generic.List{IntActor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IntActor>
  nameWithType: List<IntActor>
  fullName: System.Collections.Generic.List<IntActor>
  nameWithType.vb: List(Of IntActor)
  fullName.vb: System.Collections.Generic.List(Of IntActor)
  name.vb: List(Of IntActor)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntActor
    name: IntActor
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntActor
    name: IntActor
  - name: )
- uid: System.Collections.Generic.List{IntTrigger}
  commentId: T:System.Collections.Generic.List{IntTrigger}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IntTrigger>
  nameWithType: List<IntTrigger>
  fullName: System.Collections.Generic.List<IntTrigger>
  nameWithType.vb: List(Of IntTrigger)
  fullName.vb: System.Collections.Generic.List(Of IntTrigger)
  name.vb: List(Of IntTrigger)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
- uid: Global.IntObject.OnDrawGizmos*
  commentId: Overload:Global.IntObject.OnDrawGizmos
  name: OnDrawGizmos
  nameWithType: IntObject.OnDrawGizmos
  fullName: IntObject.OnDrawGizmos
- uid: Global.IntObject.LoadObjectSaveData*
  commentId: Overload:Global.IntObject.LoadObjectSaveData
  name: LoadObjectSaveData
  nameWithType: IntObject.LoadObjectSaveData
  fullName: IntObject.LoadObjectSaveData
- uid: Global.ISavableObject{IntObjectSaveData}.LoadObjectSaveData(IntObjectSaveData)
  commentId: M:Global.ISavableObject{IntObjectSaveData}.LoadObjectSaveData(IntObjectSaveData)
  parent: Global.ISavableObject{IntObjectSaveData}
  definition: Global.ISavableObject`1.LoadObjectSaveData(`0)
  name: LoadObjectSaveData(IntObjectSaveData)
  nameWithType: ISavableObject<IntObjectSaveData>.LoadObjectSaveData(IntObjectSaveData)
  fullName: ISavableObject<IntObjectSaveData>.LoadObjectSaveData(IntObjectSaveData)
  nameWithType.vb: ISavableObject(Of IntObjectSaveData).LoadObjectSaveData(IntObjectSaveData)
  fullName.vb: ISavableObject(Of IntObjectSaveData).LoadObjectSaveData(IntObjectSaveData)
  spec.csharp:
  - uid: Global.ISavableObject{IntObjectSaveData}.LoadObjectSaveData(IntObjectSaveData)
    name: LoadObjectSaveData
  - name: (
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
  spec.vb:
  - uid: Global.ISavableObject{IntObjectSaveData}.LoadObjectSaveData(IntObjectSaveData)
    name: LoadObjectSaveData
  - name: (
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
- uid: Global.IntObjectSaveData
  commentId: T:Global.IntObjectSaveData
  name: IntObjectSaveData
  nameWithType: IntObjectSaveData
  fullName: IntObjectSaveData
- uid: Global.ISavableObject`1.LoadObjectSaveData(`0)
  commentId: M:Global.ISavableObject`1.LoadObjectSaveData(`0)
  name: LoadObjectSaveData(T)
  nameWithType: ISavableObject<T>.LoadObjectSaveData(T)
  fullName: ISavableObject<T>.LoadObjectSaveData(T)
  nameWithType.vb: ISavableObject(Of T).LoadObjectSaveData(T)
  fullName.vb: ISavableObject(Of T).LoadObjectSaveData(T)
  spec.csharp:
  - uid: Global.ISavableObject`1.LoadObjectSaveData(`0)
    name: LoadObjectSaveData
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Global.ISavableObject`1.LoadObjectSaveData(`0)
    name: LoadObjectSaveData
  - name: (
  - name: T
  - name: )
- uid: Global.IntObject.GetObjectSaveData*
  commentId: Overload:Global.IntObject.GetObjectSaveData
  name: GetObjectSaveData
  nameWithType: IntObject.GetObjectSaveData
  fullName: IntObject.GetObjectSaveData
- uid: Global.ISavableObject{IntObjectSaveData}.GetObjectSaveData
  commentId: M:Global.ISavableObject{IntObjectSaveData}.GetObjectSaveData
  parent: Global.ISavableObject{IntObjectSaveData}
  definition: Global.ISavableObject`1.GetObjectSaveData
  name: GetObjectSaveData()
  nameWithType: ISavableObject<IntObjectSaveData>.GetObjectSaveData()
  fullName: ISavableObject<IntObjectSaveData>.GetObjectSaveData()
  nameWithType.vb: ISavableObject(Of IntObjectSaveData).GetObjectSaveData()
  fullName.vb: ISavableObject(Of IntObjectSaveData).GetObjectSaveData()
  spec.csharp:
  - uid: Global.ISavableObject{IntObjectSaveData}.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ISavableObject{IntObjectSaveData}.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
- uid: Global.ISavableObject`1.GetObjectSaveData
  commentId: M:Global.ISavableObject`1.GetObjectSaveData
  name: GetObjectSaveData()
  nameWithType: ISavableObject<T>.GetObjectSaveData()
  fullName: ISavableObject<T>.GetObjectSaveData()
  nameWithType.vb: ISavableObject(Of T).GetObjectSaveData()
  fullName.vb: ISavableObject(Of T).GetObjectSaveData()
  spec.csharp:
  - uid: Global.ISavableObject`1.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ISavableObject`1.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
- uid: Global.IntObject.OnPostLoadSaveFile*
  commentId: Overload:Global.IntObject.OnPostLoadSaveFile
  name: OnPostLoadSaveFile
  nameWithType: IntObject.OnPostLoadSaveFile
  fullName: IntObject.OnPostLoadSaveFile
- uid: Global.ISavableObject{IntObjectSaveData}.OnPostLoadSaveFile
  commentId: M:Global.ISavableObject{IntObjectSaveData}.OnPostLoadSaveFile
  parent: Global.ISavableObject{IntObjectSaveData}
  definition: Global.ISavableObject`1.OnPostLoadSaveFile
  name: OnPostLoadSaveFile()
  nameWithType: ISavableObject<IntObjectSaveData>.OnPostLoadSaveFile()
  fullName: ISavableObject<IntObjectSaveData>.OnPostLoadSaveFile()
  nameWithType.vb: ISavableObject(Of IntObjectSaveData).OnPostLoadSaveFile()
  fullName.vb: ISavableObject(Of IntObjectSaveData).OnPostLoadSaveFile()
  spec.csharp:
  - uid: Global.ISavableObject{IntObjectSaveData}.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ISavableObject{IntObjectSaveData}.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
- uid: Global.ISavableObject`1.OnPostLoadSaveFile
  commentId: M:Global.ISavableObject`1.OnPostLoadSaveFile
  name: OnPostLoadSaveFile()
  nameWithType: ISavableObject<T>.OnPostLoadSaveFile()
  fullName: ISavableObject<T>.OnPostLoadSaveFile()
  nameWithType.vb: ISavableObject(Of T).OnPostLoadSaveFile()
  fullName.vb: ISavableObject(Of T).OnPostLoadSaveFile()
  spec.csharp:
  - uid: Global.ISavableObject`1.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ISavableObject`1.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
