### YamlMime:ManagedReference
items:
- uid: Global.ReflectionItem
  commentId: T:Global.ReflectionItem
  id: ReflectionItem
  parent: Global
  children:
  - Global.ReflectionItem.#ctor(System.Object,System.Object,System.String)
  - Global.ReflectionItem.#ctor(System.Object,System.Type,System.String)
  - Global.ReflectionItem.BaseMaster
  - Global.ReflectionItem.GetMethodNameFromTarget
  - Global.ReflectionItem.GetParametersFromTarget
  - Global.ReflectionItem.GetStaticClass
  - Global.ReflectionItem.GetValue
  - Global.ReflectionItem.Master
  - Global.ReflectionItem.MasterType
  - Global.ReflectionItem.ReflectionItemType
  - Global.ReflectionItem.Target
  langs:
  - csharp
  - vb
  name: ReflectionItem
  nameWithType: ReflectionItem
  fullName: ReflectionItem
  type: Class
  source:
    remote:
      path: Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ReflectionItem
    path: ../Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public class ReflectionItem
    content.vb: Public Class ReflectionItem
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.ReflectionItem.ReflectionItemType
  commentId: F:Global.ReflectionItem.ReflectionItemType
  id: ReflectionItemType
  parent: Global.ReflectionItem
  langs:
  - csharp
  - vb
  name: ReflectionItemType
  nameWithType: ReflectionItem.ReflectionItemType
  fullName: ReflectionItem.ReflectionItemType
  type: Field
  source:
    remote:
      path: Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ReflectionItemType
    path: ../Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public ReflectionItemType ReflectionItemType
    return:
      type: Global.ReflectionItemType
    content.vb: Public ReflectionItemType As ReflectionItemType
- uid: Global.ReflectionItem.BaseMaster
  commentId: F:Global.ReflectionItem.BaseMaster
  id: BaseMaster
  parent: Global.ReflectionItem
  langs:
  - csharp
  - vb
  name: BaseMaster
  nameWithType: ReflectionItem.BaseMaster
  fullName: ReflectionItem.BaseMaster
  type: Field
  source:
    remote:
      path: Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BaseMaster
    path: ../Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public object BaseMaster
    return:
      type: System.Object
    content.vb: Public BaseMaster As Object
- uid: Global.ReflectionItem.Master
  commentId: F:Global.ReflectionItem.Master
  id: Master
  parent: Global.ReflectionItem
  langs:
  - csharp
  - vb
  name: Master
  nameWithType: ReflectionItem.Master
  fullName: ReflectionItem.Master
  type: Field
  source:
    remote:
      path: Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Master
    path: ../Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public object Master
    return:
      type: System.Object
    content.vb: Public Master As Object
- uid: Global.ReflectionItem.MasterType
  commentId: F:Global.ReflectionItem.MasterType
  id: MasterType
  parent: Global.ReflectionItem
  langs:
  - csharp
  - vb
  name: MasterType
  nameWithType: ReflectionItem.MasterType
  fullName: ReflectionItem.MasterType
  type: Field
  source:
    remote:
      path: Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MasterType
    path: ../Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Type MasterType
    return:
      type: System.Type
    content.vb: Public MasterType As Type
- uid: Global.ReflectionItem.Target
  commentId: F:Global.ReflectionItem.Target
  id: Target
  parent: Global.ReflectionItem
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: ReflectionItem.Target
  fullName: ReflectionItem.Target
  type: Field
  source:
    remote:
      path: Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Target
    path: ../Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public string Target
    return:
      type: System.String
    content.vb: Public Target As String
- uid: Global.ReflectionItem.#ctor(System.Object,System.Object,System.String)
  commentId: M:Global.ReflectionItem.#ctor(System.Object,System.Object,System.String)
  id: '#ctor(System.Object,System.Object,System.String)'
  parent: Global.ReflectionItem
  langs:
  - csharp
  - vb
  name: ReflectionItem(object, object, string)
  nameWithType: ReflectionItem.ReflectionItem(object, object, string)
  fullName: ReflectionItem.ReflectionItem(object, object, string)
  type: Constructor
  source:
    remote:
      path: Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: .ctor
    path: ../Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public ReflectionItem(object baseMaster, object master, string target)
    parameters:
    - id: baseMaster
      type: System.Object
    - id: master
      type: System.Object
    - id: target
      type: System.String
    content.vb: Public Sub New(baseMaster As Object, master As Object, target As String)
  overload: Global.ReflectionItem.#ctor*
  nameWithType.vb: ReflectionItem.New(Object, Object, String)
  fullName.vb: ReflectionItem.New(Object, Object, String)
  name.vb: New(Object, Object, String)
- uid: Global.ReflectionItem.#ctor(System.Object,System.Type,System.String)
  commentId: M:Global.ReflectionItem.#ctor(System.Object,System.Type,System.String)
  id: '#ctor(System.Object,System.Type,System.String)'
  parent: Global.ReflectionItem
  langs:
  - csharp
  - vb
  name: ReflectionItem(object, Type, string)
  nameWithType: ReflectionItem.ReflectionItem(object, Type, string)
  fullName: ReflectionItem.ReflectionItem(object, System.Type, string)
  type: Constructor
  source:
    remote:
      path: Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: .ctor
    path: ../Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
    startLine: 33
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public ReflectionItem(object baseMaster, Type masterType, string target)
    parameters:
    - id: baseMaster
      type: System.Object
    - id: masterType
      type: System.Type
    - id: target
      type: System.String
    content.vb: Public Sub New(baseMaster As Object, masterType As Type, target As String)
  overload: Global.ReflectionItem.#ctor*
  nameWithType.vb: ReflectionItem.New(Object, Type, String)
  fullName.vb: ReflectionItem.New(Object, System.Type, String)
  name.vb: New(Object, Type, String)
- uid: Global.ReflectionItem.GetValue
  commentId: M:Global.ReflectionItem.GetValue
  id: GetValue
  parent: Global.ReflectionItem
  langs:
  - csharp
  - vb
  name: GetValue()
  nameWithType: ReflectionItem.GetValue()
  fullName: ReflectionItem.GetValue()
  type: Method
  source:
    remote:
      path: Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetValue
    path: ../Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
    startLine: 81
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public object GetValue()
    return:
      type: System.Object
    content.vb: Public Function GetValue() As Object
  overload: Global.ReflectionItem.GetValue*
- uid: Global.ReflectionItem.GetStaticClass
  commentId: M:Global.ReflectionItem.GetStaticClass
  id: GetStaticClass
  parent: Global.ReflectionItem
  langs:
  - csharp
  - vb
  name: GetStaticClass()
  nameWithType: ReflectionItem.GetStaticClass()
  fullName: ReflectionItem.GetStaticClass()
  type: Method
  source:
    remote:
      path: Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetStaticClass
    path: ../Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
    startLine: 110
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Type GetStaticClass()
    return:
      type: System.Type
    content.vb: Public Function GetStaticClass() As Type
  overload: Global.ReflectionItem.GetStaticClass*
- uid: Global.ReflectionItem.GetMethodNameFromTarget
  commentId: M:Global.ReflectionItem.GetMethodNameFromTarget
  id: GetMethodNameFromTarget
  parent: Global.ReflectionItem
  langs:
  - csharp
  - vb
  name: GetMethodNameFromTarget()
  nameWithType: ReflectionItem.GetMethodNameFromTarget()
  fullName: ReflectionItem.GetMethodNameFromTarget()
  type: Method
  source:
    remote:
      path: Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetMethodNameFromTarget
    path: ../Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
    startLine: 182
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public string GetMethodNameFromTarget()
    return:
      type: System.String
    content.vb: Public Function GetMethodNameFromTarget() As String
  overload: Global.ReflectionItem.GetMethodNameFromTarget*
- uid: Global.ReflectionItem.GetParametersFromTarget
  commentId: M:Global.ReflectionItem.GetParametersFromTarget
  id: GetParametersFromTarget
  parent: Global.ReflectionItem
  langs:
  - csharp
  - vb
  name: GetParametersFromTarget()
  nameWithType: ReflectionItem.GetParametersFromTarget()
  fullName: ReflectionItem.GetParametersFromTarget()
  type: Method
  source:
    remote:
      path: Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetParametersFromTarget
    path: ../Assets/DropdownAttributes/Core/Scripts/AdvancedReflection/ReflectionItem.cs
    startLine: 192
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public object[] GetParametersFromTarget()
    return:
      type: System.Object[]
    content.vb: Public Function GetParametersFromTarget() As Object()
  overload: Global.ReflectionItem.GetParametersFromTarget*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.ReflectionItemType
  commentId: T:Global.ReflectionItemType
  name: ReflectionItemType
  nameWithType: ReflectionItemType
  fullName: ReflectionItemType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.ReflectionItem.#ctor*
  commentId: Overload:Global.ReflectionItem.#ctor
  name: ReflectionItem
  nameWithType: ReflectionItem.ReflectionItem
  fullName: ReflectionItem.ReflectionItem
  nameWithType.vb: ReflectionItem.New
  fullName.vb: ReflectionItem.New
  name.vb: New
- uid: Global.ReflectionItem.GetValue*
  commentId: Overload:Global.ReflectionItem.GetValue
  name: GetValue
  nameWithType: ReflectionItem.GetValue
  fullName: ReflectionItem.GetValue
- uid: Global.ReflectionItem.GetStaticClass*
  commentId: Overload:Global.ReflectionItem.GetStaticClass
  name: GetStaticClass
  nameWithType: ReflectionItem.GetStaticClass
  fullName: ReflectionItem.GetStaticClass
- uid: Global.ReflectionItem.GetMethodNameFromTarget*
  commentId: Overload:Global.ReflectionItem.GetMethodNameFromTarget
  name: GetMethodNameFromTarget
  nameWithType: ReflectionItem.GetMethodNameFromTarget
  fullName: ReflectionItem.GetMethodNameFromTarget
- uid: Global.ReflectionItem.GetParametersFromTarget*
  commentId: Overload:Global.ReflectionItem.GetParametersFromTarget
  name: GetParametersFromTarget
  nameWithType: ReflectionItem.GetParametersFromTarget
  fullName: ReflectionItem.GetParametersFromTarget
- uid: System.Object[]
  isExternal: true
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
  - name: (
  - name: )
