### YamlMime:ManagedReference
items:
- uid: Global.IntBasePlatformer
  commentId: T:Global.IntBasePlatformer
  id: IntBasePlatformer
  parent: Global
  children:
  - Global.IntBasePlatformer.Ability
  - Global.IntBasePlatformer.AirDecelerationScalar
  - Global.IntBasePlatformer.AllowCastAura
  - Global.IntBasePlatformer.AllowDash
  - Global.IntBasePlatformer.AllowDoubleJump
  - Global.IntBasePlatformer.AllowDoubleJumpReset
  - Global.IntBasePlatformer.AllowHover
  - Global.IntBasePlatformer.AllowInteract
  - Global.IntBasePlatformer.AllowJump
  - Global.IntBasePlatformer.AllowSwimJumps
  - Global.IntBasePlatformer.AllowWalk
  - Global.IntBasePlatformer.AllowWallJump
  - Global.IntBasePlatformer.Animate
  - Global.IntBasePlatformer.animator
  - Global.IntBasePlatformer.AuraMaterial
  - Global.IntBasePlatformer.BindFunctionToDash(IntObject.Action)
  - Global.IntBasePlatformer.BindFunctionToDoubleJump(IntObject.Action)
  - Global.IntBasePlatformer.BindFunctionToSingleJump(IntObject.Action)
  - Global.IntBasePlatformer.BindFunctionToWallJump(IntObject.Action)
  - Global.IntBasePlatformer.Bump(UnityEngine.Vector2,UnityEngine.Vector2)
  - Global.IntBasePlatformer.Bump(UnityEngine.Vector2)
  - Global.IntBasePlatformer.Bumped
  - Global.IntBasePlatformer.Bumped_t
  - Global.IntBasePlatformer.BumpScale
  - Global.IntBasePlatformer.BumpTime
  - Global.IntBasePlatformer.BumpUpdate
  - Global.IntBasePlatformer.CanDash
  - Global.IntBasePlatformer.CanHover
  - Global.IntBasePlatformer.CanJump
  - Global.IntBasePlatformer.CarryMomentum
  - Global.IntBasePlatformer.changingweapon
  - Global.IntBasePlatformer.ChargeAttack
  - Global.IntBasePlatformer.currentAnimatorState
  - Global.IntBasePlatformer.currentState
  - Global.IntBasePlatformer.dampingFactor
  - Global.IntBasePlatformer.Dash_t
  - Global.IntBasePlatformer.Dash_t_unscaled
  - Global.IntBasePlatformer.Dash(UnityEngine.Vector2)
  - Global.IntBasePlatformer.DashBinding
  - Global.IntBasePlatformer.DashDecelerationTime
  - Global.IntBasePlatformer.DashDirection
  - Global.IntBasePlatformer.DashDistRange
  - Global.IntBasePlatformer.Dashed
  - Global.IntBasePlatformer.DashGlideCurrentTime
  - Global.IntBasePlatformer.DashGlided
  - Global.IntBasePlatformer.DashMaxGlideTime
  - Global.IntBasePlatformer.DashMomentumDamp
  - Global.IntBasePlatformer.DashOpacityBlendTime
  - Global.IntBasePlatformer.DashRelease
  - Global.IntBasePlatformer.DashReleased
  - Global.IntBasePlatformer.DashReleasedTime
  - Global.IntBasePlatformer.DashReloadTime
  - Global.IntBasePlatformer.DashReset
  - Global.IntBasePlatformer.DashSpeed
  - Global.IntBasePlatformer.DashWindowBounds
  - Global.IntBasePlatformer.DoubleJumpBinding
  - Global.IntBasePlatformer.DoubleJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  - Global.IntBasePlatformer.DoubleJumped
  - Global.IntBasePlatformer.DoubleJumpGravity
  - Global.IntBasePlatformer.DoubleJumpHeight
  - Global.IntBasePlatformer.DoubleJumpLateral
  - Global.IntBasePlatformer.DoubleJumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  - Global.IntBasePlatformer.DoubleJumpReleaseGravityScale
  - Global.IntBasePlatformer.DoubleJumpReleaseVelocityScale
  - Global.IntBasePlatformer.DoubleJumpReset
  - Global.IntBasePlatformer.DoubleJumpVelocity
  - Global.IntBasePlatformer.EndDash
  - Global.IntBasePlatformer.EndRespawnState
  - Global.IntBasePlatformer.Equipment
  - Global.IntBasePlatformer.FallGravityScale
  - Global.IntBasePlatformer.FallLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  - Global.IntBasePlatformer.FastDecelleration
  - Global.IntBasePlatformer.FirstAura
  - Global.IntBasePlatformer.fsm
  - Global.IntBasePlatformer.GetAnimator
  - Global.IntBasePlatformer.GetDashDirection
  - Global.IntBasePlatformer.GetFlipX
  - Global.IntBasePlatformer.GetLookDirection
  - Global.IntBasePlatformer.GetOverlappingActors
  - Global.IntBasePlatformer.GetOverlappingTriggers
  - Global.IntBasePlatformer.GetStateMachine
  - Global.IntBasePlatformer.GetVelocity
  - Global.IntBasePlatformer.GetWallSide
  - Global.IntBasePlatformer.Gravity
  - Global.IntBasePlatformer.GroundedCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  - Global.IntBasePlatformer.GroundedSlideDecelerationScalar
  - Global.IntBasePlatformer.HandleWind
  - Global.IntBasePlatformer.HitStop(System.Single,System.Single,System.Boolean)
  - Global.IntBasePlatformer.HitStopUpdate
  - Global.IntBasePlatformer.Hover_t_unscaled
  - Global.IntBasePlatformer.HoverRelease
  - Global.IntBasePlatformer.HoverReleased
  - Global.IntBasePlatformer.HoverTimeScale
  - Global.IntBasePlatformer.HoverTimeScaleBlendTime
  - Global.IntBasePlatformer.Initialize
  - Global.IntBasePlatformer.InitialState
  - Global.IntBasePlatformer.InterruptHover
  - Global.IntBasePlatformer.InvisibileWarning
  - Global.IntBasePlatformer.InvisibilityCountdown
  - Global.IntBasePlatformer.invisibilityMaterial
  - Global.IntBasePlatformer.Invisible
  - Global.IntBasePlatformer.IsAttacking
  - Global.IntBasePlatformer.IsCharged
  - Global.IntBasePlatformer.IsFast
  - Global.IntBasePlatformer.IsGrounded
  - Global.IntBasePlatformer.IsHovering
  - Global.IntBasePlatformer.ishurt
  - Global.IntBasePlatformer.IsInvisible
  - Global.IntBasePlatformer.IsOnWall
  - Global.IntBasePlatformer.IsWindy
  - Global.IntBasePlatformer.Jump
  - Global.IntBasePlatformer.JumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  - Global.IntBasePlatformer.jumpDust
  - Global.IntBasePlatformer.JumpHeight
  - Global.IntBasePlatformer.JumpLateral
  - Global.IntBasePlatformer.JumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  - Global.IntBasePlatformer.JumpRelease
  - Global.IntBasePlatformer.JumpReleased
  - Global.IntBasePlatformer.JumpReleaseGravityScale
  - Global.IntBasePlatformer.JumpReleaseVelocityScale
  - Global.IntBasePlatformer.JumpVelocity
  - Global.IntBasePlatformer.JumpWindowBounds
  - Global.IntBasePlatformer.landDust
  - Global.IntBasePlatformer.last_state
  - Global.IntBasePlatformer.LateralInput
  - Global.IntBasePlatformer.LateralInputRaw
  - Global.IntBasePlatformer.LateralSpeed
  - Global.IntBasePlatformer.Loadout
  - Global.IntBasePlatformer.MaxBumpSpeed
  - Global.IntBasePlatformer.MaxDashHoldTime
  - Global.IntBasePlatformer.MaxDashHoverTime
  - Global.IntBasePlatformer.MaxFallSpeed
  - Global.IntBasePlatformer.MaxSuperJumpLateralSpeed
  - Global.IntBasePlatformer.MaxSuperJumpVerticalSpeed
  - Global.IntBasePlatformer.MaxWallSlideSpeed
  - Global.IntBasePlatformer.MaxWindInducedSpeed
  - Global.IntBasePlatformer.MaxWindInducedSpeedGrounded
  - Global.IntBasePlatformer.MinBumpSpeedX
  - Global.IntBasePlatformer.MinBumpVelY
  - Global.IntBasePlatformer.MinDashHoldTime
  - Global.IntBasePlatformer.minVelocityForLandCrouch
  - Global.IntBasePlatformer.OnAttackCharged
  - Global.IntBasePlatformer.OnAttackChargeUnused
  - Global.IntBasePlatformer.OnCollideX(IntSolid)
  - Global.IntBasePlatformer.OnCollideY(IntSolid)
  - Global.IntBasePlatformer.OnDeath(System.Boolean)
  - Global.IntBasePlatformer.OnDrawDebugGizmos
  - Global.IntBasePlatformer.OnFirstFrame
  - Global.IntBasePlatformer.OnRespawnInsidePlatform(SpecialPlatform)
  - Global.IntBasePlatformer.OnTakeDamage
  - Global.IntBasePlatformer.PLAYER_AIRDASH
  - Global.IntBasePlatformer.PLAYER_DEATH
  - Global.IntBasePlatformer.PLAYER_DOUBLEJUMP
  - Global.IntBasePlatformer.PLAYER_DOWNDASH
  - Global.IntBasePlatformer.PLAYER_DOWNDIAGDASH
  - Global.IntBasePlatformer.PLAYER_FALL
  - Global.IntBasePlatformer.PLAYER_GROUNDDASH
  - Global.IntBasePlatformer.PLAYER_HURT
  - Global.IntBasePlatformer.PLAYER_IDLE
  - Global.IntBasePlatformer.PLAYER_JUMPPREP
  - Global.IntBasePlatformer.PLAYER_LAND
  - Global.IntBasePlatformer.PLAYER_RESPAWN
  - Global.IntBasePlatformer.PLAYER_RISE
  - Global.IntBasePlatformer.PLAYER_SPRINT
  - Global.IntBasePlatformer.PLAYER_SWITCHWEAPON
  - Global.IntBasePlatformer.PLAYER_UPDASH
  - Global.IntBasePlatformer.PLAYER_UPDIAGDASH
  - Global.IntBasePlatformer.PLAYER_WALLJUMP
  - Global.IntBasePlatformer.PLAYER_WALLJUMPFALLTRANSITION
  - Global.IntBasePlatformer.PLAYER_WALLJUMPFALLTURNTRANSITION
  - Global.IntBasePlatformer.PLAYER_WALLSLIDE
  - Global.IntBasePlatformer.PLAYER_WALLSLIDEPREP
  - Global.IntBasePlatformer.PostInputUpdate
  - Global.IntBasePlatformer.PreInputUpdate
  - Global.IntBasePlatformer.recoveryTime
  - Global.IntBasePlatformer.ReleaseAttack
  - Global.IntBasePlatformer.ResetDash
  - Global.IntBasePlatformer.ResetDoubleJump
  - Global.IntBasePlatformer.ResetState
  - Global.IntBasePlatformer.Respawn(System.Boolean)
  - Global.IntBasePlatformer.RespawnedInsidePlatform
  - Global.IntBasePlatformer.SetInvisibility(System.Boolean)
  - Global.IntBasePlatformer.SetInvisibilityWarning(System.Boolean)
  - Global.IntBasePlatformer.SetLateralInput(System.Single)
  - Global.IntBasePlatformer.SetLateralInputRawValue(System.Single)
  - Global.IntBasePlatformer.SetLateralInputValue(System.Single)
  - Global.IntBasePlatformer.SetVelocity(UnityEngine.Vector2)
  - Global.IntBasePlatformer.Shedding
  - Global.IntBasePlatformer.SheddingDirection
  - Global.IntBasePlatformer.ShedSpores
  - Global.IntBasePlatformer.ShouldAttackChargeReset
  - Global.IntBasePlatformer.SingleJumpBinding
  - Global.IntBasePlatformer.SpawnAura
  - Global.IntBasePlatformer.sprite
  - Global.IntBasePlatformer.SquishGlideLimit
  - Global.IntBasePlatformer.Start
  - Global.IntBasePlatformer.Stats
  - Global.IntBasePlatformer.SwimJumpInterval
  - Global.IntBasePlatformer.TimeSinceLastDash
  - Global.IntBasePlatformer.ToeHitForgivenessHeight
  - Global.IntBasePlatformer.Update
  - Global.IntBasePlatformer.UpdateDashDirection(UnityEngine.Vector2)
  - Global.IntBasePlatformer.UpdateInput
  - Global.IntBasePlatformer.velocity
  - Global.IntBasePlatformer.WallJumpBinding
  - Global.IntBasePlatformer.WallJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  - Global.IntBasePlatformer.WallJumpDashDistance
  - Global.IntBasePlatformer.WallJumpDashVelocity
  - Global.IntBasePlatformer.WallJumpDirection
  - Global.IntBasePlatformer.walljumpDust
  - Global.IntBasePlatformer.WallJumped
  - Global.IntBasePlatformer.WallJumped_t
  - Global.IntBasePlatformer.WallJumpGravity
  - Global.IntBasePlatformer.WallJumpHeight
  - Global.IntBasePlatformer.WallJumpInputDisableDuration
  - Global.IntBasePlatformer.WallJumpLateralDistance
  - Global.IntBasePlatformer.WallJumpLateralSpeed
  - Global.IntBasePlatformer.WallJumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  - Global.IntBasePlatformer.WallJumpLevel
  - Global.IntBasePlatformer.WallJumpRecoveryAcceleration
  - Global.IntBasePlatformer.WallJumpUpdate
  - Global.IntBasePlatformer.WallJumpVerticalSpeed
  - Global.IntBasePlatformer.WallJumpWindowBounds
  - Global.IntBasePlatformer.WallSlideAccelerationScalar
  - Global.IntBasePlatformer.WallSlideDeccelerationScalar
  - Global.IntBasePlatformer.WeakWallJumpDashDistance
  - Global.IntBasePlatformer.WeakWallJumpDashVelocity
  - Global.IntBasePlatformer.WeakWallJumpGravity
  - Global.IntBasePlatformer.WeakWallJumpHeight
  - Global.IntBasePlatformer.WeakWallJumpLateralDistance
  - Global.IntBasePlatformer.WeakWallJumpLateralSpeed
  - Global.IntBasePlatformer.WeakWallJumpVerticalSpeed
  - Global.IntBasePlatformer.weaponswitchTime
  - Global.IntBasePlatformer.WindForceWhenGroundedScalar
  - Global.IntBasePlatformer.WindLateralDampeningFactor
  langs:
  - csharp
  - vb
  name: IntBasePlatformer
  nameWithType: IntBasePlatformer
  fullName: IntBasePlatformer
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IntBasePlatformer
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [RequireComponent(typeof(WeaponController))]

      [RequireComponent(typeof(PlayerStats))]

      public abstract class IntBasePlatformer : IntActor, ISavableObject<IntObjectSaveData>, IEntity
    content.vb: >-
      <RequireComponent(GetType(WeaponController))>

      <RequireComponent(GetType(PlayerStats))>

      Public MustInherit Class IntBasePlatformer Inherits IntActor Implements ISavableObject(Of IntObjectSaveData), IEntity
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - Global.IntObject
  - Global.IntActor
  derivedClasses:
  - Global.Player
  implements:
  - Global.ISavableObject{IntObjectSaveData}
  - Global.IEntity
  inheritedMembers:
  - Global.IntActor.HurtBySpike
  - Global.IntActor.aabb
  - Global.IntActor.Left
  - Global.IntActor.Right
  - Global.IntActor.Top
  - Global.IntActor.Bottom
  - Global.IntActor.Size
  - Global.IntActor.WindInfluence
  - Global.IntActor.OnTakeDamageCallback
  - Global.IntActor.RidingSolid
  - Global.IntActor.RidingTangent
  - Global.IntActor.RidingNormal
  - Global.IntActor.IsRidingFlatSurface
  - Global.IntActor.Awake
  - Global.IntActor.ManualInit
  - Global.IntActor.GetAABBIntCollider
  - Global.IntActor.EnsureAABBIntColliderSet
  - Global.IntActor.IsRiding(IntSolid)
  - Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
  - Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
  - Global.IntActor.IsTouchingWall(IntSolid)
  - Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
  - Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  - Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  - Global.IntActor.OnTakeDamage(System.Int32)
  - Global.IntActor.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  - Global.IntActor.ResetAuraCollisionMap
  - Global.IntActor.ResetActorCollisionMap
  - Global.IntActor.ResetCollisionMap
  - Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
  - Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
  - Global.IntActor.GetCollisionMapValue(IntObject)
  - Global.IntActor.Squish(IntSolid)
  - Global.IntActor.OnTriggerStart(IntTrigger)
  - Global.IntActor.OnTriggerEnd(IntTrigger)
  - Global.IntActor.OnActor(IntActor)
  - Global.IntActor.CheckGrounded
  - Global.IntActor.GroundActor
  - Global.IntActor.CheckOnWall
  - Global.IntActor.DropDownOneWay
  - Global.IntActor.activeWater
  - Global.IntActor.GetSubmergedPercentage
  - Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
  - Global.IntActor.IsInWater
  - Global.IntActor.OnEnterWater(WaterComponent,System.Single)
  - Global.IntActor.OnExitWater(WaterComponent)
  - Global.IntActor.ApplyWind(UnityEngine.Vector2)
  - Global.IntActor.RemoveWind
  - Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
  - Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
  - Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
  - Global.IntActor.NotifyObjectKilled(IntObject)
  - Global.IntActor.OnSpike(IntSolid)
  - Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.CheckActorInteractableCollisions
  - Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
  - Global.IntObject.section
  - Global.IntObject.state
  - Global.IntObject.int_collider
  - Global.IntObject.remainder
  - Global.IntObject.StartPosition
  - Global.IntObject.AttachedToPlayer
  - Global.IntObject.IgnoredObjectsMap
  - Global.IntObject.KilledCallback
  - Global.IntObject.Position
  - Global.IntObject.GetStartWorldPosition
  - Global.IntObject.collider_type
  - Global.IntObject.MarkedForKill
  - Global.IntObject.ObjectID
  - Global.IntObject.DestroyOnKill
  - Global.IntObject.RespawnBehavior
  - Global.IntObject.Status
  - Global.IntObject.InitialStatus
  - Global.IntObject.SaveObject
  - Global.IntObject.IsInSetPiece
  - Global.IntObject.Init
  - Global.IntObject.FindIntColliderState(System.Int32)
  - Global.IntObject.GetLocalGameStates
  - Global.IntObject.RegisterSelf
  - Global.IntObject.UnregisterSelf
  - Global.IntObject.RegisterKilledCallback(IntObject.Action)
  - Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  - Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  - Global.IntObject.SetStatus(ObjectStatus)
  - Global.IntObject.OnKill(System.Boolean)
  - Global.IntObject.Kill
  - Global.IntObject.Kill(System.Boolean)
  - Global.IntObject.Kill(System.Single)
  - Global.IntObject.Kill(System.Boolean,System.Single)
  - Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  - Global.IntObject.SleepObject
  - Global.IntObject.OptimizeSleepObject
  - Global.IntObject.WakeObject
  - Global.IntObject.EnableObject
  - Global.IntObject.DisableObject
  - Global.IntObject.RespawnObject
  - Global.IntObject.ResetObject
  - Global.IntObject.RecursiveSetCollidable(System.Boolean)
  - Global.IntObject.SetColliderState(IntColliderState)
  - Global.IntObject.Translate(UnityEngine.Vector2Int)
  - Global.IntObject.Translate(UnityEngine.Vector2)
  - Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  - Global.IntObject.SetCollidable(System.Boolean)
  - Global.IntObject.GetCollidable
  - Global.IntObject.GetCollider
  - Global.IntObject.GetColliderState
  - Global.IntObject.Overlaps(IntObject)
  - Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  - Global.IntObject.RayCast(IntRay)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  - Global.IntObject.OnDrawGizmos
  - Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  - Global.IntObject.GetObjectSaveData
  - Global.IntObject.OnPostLoadSaveFile
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: UnityEngine.RequireComponent
    ctor: UnityEngine.RequireComponent.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Global.WeaponController
  - type: UnityEngine.RequireComponent
    ctor: UnityEngine.RequireComponent.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Global.PlayerStats
- uid: Global.IntBasePlatformer.currentState
  commentId: P:Global.IntBasePlatformer.currentState
  id: currentState
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: currentState
  nameWithType: IntBasePlatformer.currentState
  fullName: IntBasePlatformer.currentState
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: currentState
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 20
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public IntBasePlatformer.PlatformerState currentState { get; }
    parameters: []
    return:
      type: Global.IntBasePlatformer.PlatformerState
    content.vb: Public ReadOnly Property currentState As IntBasePlatformer.PlatformerState
  overload: Global.IntBasePlatformer.currentState*
- uid: Global.IntBasePlatformer.AllowWalk
  commentId: F:Global.IntBasePlatformer.AllowWalk
  id: AllowWalk
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: AllowWalk
  nameWithType: IntBasePlatformer.AllowWalk
  fullName: IntBasePlatformer.AllowWalk
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AllowWalk
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Movement Toggles")]

      public bool AllowWalk
    return:
      type: System.Boolean
    content.vb: >-
      <Header("Movement Toggles")>

      Public AllowWalk As Boolean
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Movement Toggles
- uid: Global.IntBasePlatformer.AllowJump
  commentId: F:Global.IntBasePlatformer.AllowJump
  id: AllowJump
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: AllowJump
  nameWithType: IntBasePlatformer.AllowJump
  fullName: IntBasePlatformer.AllowJump
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AllowJump
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool AllowJump
    return:
      type: System.Boolean
    content.vb: Public AllowJump As Boolean
- uid: Global.IntBasePlatformer.AllowDoubleJump
  commentId: F:Global.IntBasePlatformer.AllowDoubleJump
  id: AllowDoubleJump
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: AllowDoubleJump
  nameWithType: IntBasePlatformer.AllowDoubleJump
  fullName: IntBasePlatformer.AllowDoubleJump
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AllowDoubleJump
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool AllowDoubleJump
    return:
      type: System.Boolean
    content.vb: Public AllowDoubleJump As Boolean
- uid: Global.IntBasePlatformer.AllowDoubleJumpReset
  commentId: F:Global.IntBasePlatformer.AllowDoubleJumpReset
  id: AllowDoubleJumpReset
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: AllowDoubleJumpReset
  nameWithType: IntBasePlatformer.AllowDoubleJumpReset
  fullName: IntBasePlatformer.AllowDoubleJumpReset
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AllowDoubleJumpReset
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 26
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool AllowDoubleJumpReset
    return:
      type: System.Boolean
    content.vb: Public AllowDoubleJumpReset As Boolean
- uid: Global.IntBasePlatformer.AllowSwimJumps
  commentId: F:Global.IntBasePlatformer.AllowSwimJumps
  id: AllowSwimJumps
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: AllowSwimJumps
  nameWithType: IntBasePlatformer.AllowSwimJumps
  fullName: IntBasePlatformer.AllowSwimJumps
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AllowSwimJumps
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool AllowSwimJumps
    return:
      type: System.Boolean
    content.vb: Public AllowSwimJumps As Boolean
- uid: Global.IntBasePlatformer.AllowDash
  commentId: F:Global.IntBasePlatformer.AllowDash
  id: AllowDash
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: AllowDash
  nameWithType: IntBasePlatformer.AllowDash
  fullName: IntBasePlatformer.AllowDash
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AllowDash
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 28
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool AllowDash
    return:
      type: System.Boolean
    content.vb: Public AllowDash As Boolean
- uid: Global.IntBasePlatformer.AllowWallJump
  commentId: P:Global.IntBasePlatformer.AllowWallJump
  id: AllowWallJump
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: AllowWallJump
  nameWithType: IntBasePlatformer.AllowWallJump
  fullName: IntBasePlatformer.AllowWallJump
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AllowWallJump
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool AllowWallJump { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AllowWallJump As Boolean
  overload: Global.IntBasePlatformer.AllowWallJump*
- uid: Global.IntBasePlatformer.AllowInteract
  commentId: F:Global.IntBasePlatformer.AllowInteract
  id: AllowInteract
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: AllowInteract
  nameWithType: IntBasePlatformer.AllowInteract
  fullName: IntBasePlatformer.AllowInteract
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AllowInteract
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 30
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool AllowInteract
    return:
      type: System.Boolean
    content.vb: Public AllowInteract As Boolean
- uid: Global.IntBasePlatformer.AllowCastAura
  commentId: F:Global.IntBasePlatformer.AllowCastAura
  id: AllowCastAura
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: AllowCastAura
  nameWithType: IntBasePlatformer.AllowCastAura
  fullName: IntBasePlatformer.AllowCastAura
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AllowCastAura
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 31
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool AllowCastAura
    return:
      type: System.Boolean
    content.vb: Public AllowCastAura As Boolean
- uid: Global.IntBasePlatformer.AllowHover
  commentId: F:Global.IntBasePlatformer.AllowHover
  id: AllowHover
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: AllowHover
  nameWithType: IntBasePlatformer.AllowHover
  fullName: IntBasePlatformer.AllowHover
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AllowHover
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 32
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool AllowHover
    return:
      type: System.Boolean
    content.vb: Public AllowHover As Boolean
- uid: Global.IntBasePlatformer.WallJumpLevel
  commentId: F:Global.IntBasePlatformer.WallJumpLevel
  id: WallJumpLevel
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WallJumpLevel
  nameWithType: IntBasePlatformer.WallJumpLevel
  fullName: IntBasePlatformer.WallJumpLevel
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WallJumpLevel
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 33
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int WallJumpLevel
    return:
      type: System.Int32
    content.vb: Public WallJumpLevel As Integer
- uid: Global.IntBasePlatformer.MaxFallSpeed
  commentId: F:Global.IntBasePlatformer.MaxFallSpeed
  id: MaxFallSpeed
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: MaxFallSpeed
  nameWithType: IntBasePlatformer.MaxFallSpeed
  fullName: IntBasePlatformer.MaxFallSpeed
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxFallSpeed
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 37
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Movement and Jumping")]

      public float MaxFallSpeed
    return:
      type: System.Single
    content.vb: >-
      <Header("Movement and Jumping")>

      Public MaxFallSpeed As Single
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Movement and Jumping
- uid: Global.IntBasePlatformer.FallGravityScale
  commentId: F:Global.IntBasePlatformer.FallGravityScale
  id: FallGravityScale
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: FallGravityScale
  nameWithType: IntBasePlatformer.FallGravityScale
  fullName: IntBasePlatformer.FallGravityScale
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: FallGravityScale
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 38
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float FallGravityScale
    return:
      type: System.Single
    content.vb: Public FallGravityScale As Single
- uid: Global.IntBasePlatformer.LateralSpeed
  commentId: F:Global.IntBasePlatformer.LateralSpeed
  id: LateralSpeed
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: LateralSpeed
  nameWithType: IntBasePlatformer.LateralSpeed
  fullName: IntBasePlatformer.LateralSpeed
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LateralSpeed
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 39
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float LateralSpeed
    return:
      type: System.Single
    content.vb: Public LateralSpeed As Single
- uid: Global.IntBasePlatformer.JumpLateral
  commentId: F:Global.IntBasePlatformer.JumpLateral
  id: JumpLateral
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: JumpLateral
  nameWithType: IntBasePlatformer.JumpLateral
  fullName: IntBasePlatformer.JumpLateral
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: JumpLateral
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 40
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float JumpLateral
    return:
      type: System.Single
    content.vb: Public JumpLateral As Single
- uid: Global.IntBasePlatformer.JumpHeight
  commentId: F:Global.IntBasePlatformer.JumpHeight
  id: JumpHeight
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: JumpHeight
  nameWithType: IntBasePlatformer.JumpHeight
  fullName: IntBasePlatformer.JumpHeight
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: JumpHeight
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 41
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float JumpHeight
    return:
      type: System.Single
    content.vb: Public JumpHeight As Single
- uid: Global.IntBasePlatformer.JumpReleaseGravityScale
  commentId: F:Global.IntBasePlatformer.JumpReleaseGravityScale
  id: JumpReleaseGravityScale
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: JumpReleaseGravityScale
  nameWithType: IntBasePlatformer.JumpReleaseGravityScale
  fullName: IntBasePlatformer.JumpReleaseGravityScale
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: JumpReleaseGravityScale
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 42
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float JumpReleaseGravityScale
    return:
      type: System.Single
    content.vb: Public JumpReleaseGravityScale As Single
- uid: Global.IntBasePlatformer.JumpReleaseVelocityScale
  commentId: F:Global.IntBasePlatformer.JumpReleaseVelocityScale
  id: JumpReleaseVelocityScale
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: JumpReleaseVelocityScale
  nameWithType: IntBasePlatformer.JumpReleaseVelocityScale
  fullName: IntBasePlatformer.JumpReleaseVelocityScale
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: JumpReleaseVelocityScale
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 43
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float JumpReleaseVelocityScale
    return:
      type: System.Single
    content.vb: Public JumpReleaseVelocityScale As Single
- uid: Global.IntBasePlatformer.DoubleJumpLateral
  commentId: F:Global.IntBasePlatformer.DoubleJumpLateral
  id: DoubleJumpLateral
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DoubleJumpLateral
  nameWithType: IntBasePlatformer.DoubleJumpLateral
  fullName: IntBasePlatformer.DoubleJumpLateral
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DoubleJumpLateral
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 44
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float DoubleJumpLateral
    return:
      type: System.Single
    content.vb: Public DoubleJumpLateral As Single
- uid: Global.IntBasePlatformer.DoubleJumpHeight
  commentId: F:Global.IntBasePlatformer.DoubleJumpHeight
  id: DoubleJumpHeight
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DoubleJumpHeight
  nameWithType: IntBasePlatformer.DoubleJumpHeight
  fullName: IntBasePlatformer.DoubleJumpHeight
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DoubleJumpHeight
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 45
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float DoubleJumpHeight
    return:
      type: System.Single
    content.vb: Public DoubleJumpHeight As Single
- uid: Global.IntBasePlatformer.DoubleJumpReleaseGravityScale
  commentId: F:Global.IntBasePlatformer.DoubleJumpReleaseGravityScale
  id: DoubleJumpReleaseGravityScale
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DoubleJumpReleaseGravityScale
  nameWithType: IntBasePlatformer.DoubleJumpReleaseGravityScale
  fullName: IntBasePlatformer.DoubleJumpReleaseGravityScale
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DoubleJumpReleaseGravityScale
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 46
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float DoubleJumpReleaseGravityScale
    return:
      type: System.Single
    content.vb: Public DoubleJumpReleaseGravityScale As Single
- uid: Global.IntBasePlatformer.DoubleJumpReleaseVelocityScale
  commentId: F:Global.IntBasePlatformer.DoubleJumpReleaseVelocityScale
  id: DoubleJumpReleaseVelocityScale
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DoubleJumpReleaseVelocityScale
  nameWithType: IntBasePlatformer.DoubleJumpReleaseVelocityScale
  fullName: IntBasePlatformer.DoubleJumpReleaseVelocityScale
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DoubleJumpReleaseVelocityScale
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 47
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float DoubleJumpReleaseVelocityScale
    return:
      type: System.Single
    content.vb: Public DoubleJumpReleaseVelocityScale As Single
- uid: Global.IntBasePlatformer.MaxSuperJumpLateralSpeed
  commentId: F:Global.IntBasePlatformer.MaxSuperJumpLateralSpeed
  id: MaxSuperJumpLateralSpeed
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: MaxSuperJumpLateralSpeed
  nameWithType: IntBasePlatformer.MaxSuperJumpLateralSpeed
  fullName: IntBasePlatformer.MaxSuperJumpLateralSpeed
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxSuperJumpLateralSpeed
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 48
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float MaxSuperJumpLateralSpeed
    return:
      type: System.Single
    content.vb: Public MaxSuperJumpLateralSpeed As Single
- uid: Global.IntBasePlatformer.MaxSuperJumpVerticalSpeed
  commentId: F:Global.IntBasePlatformer.MaxSuperJumpVerticalSpeed
  id: MaxSuperJumpVerticalSpeed
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: MaxSuperJumpVerticalSpeed
  nameWithType: IntBasePlatformer.MaxSuperJumpVerticalSpeed
  fullName: IntBasePlatformer.MaxSuperJumpVerticalSpeed
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxSuperJumpVerticalSpeed
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 49
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float MaxSuperJumpVerticalSpeed
    return:
      type: System.Single
    content.vb: Public MaxSuperJumpVerticalSpeed As Single
- uid: Global.IntBasePlatformer.FastDecelleration
  commentId: F:Global.IntBasePlatformer.FastDecelleration
  id: FastDecelleration
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: FastDecelleration
  nameWithType: IntBasePlatformer.FastDecelleration
  fullName: IntBasePlatformer.FastDecelleration
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: FastDecelleration
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 50
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float FastDecelleration
    return:
      type: System.Single
    content.vb: Public FastDecelleration As Single
- uid: Global.IntBasePlatformer.ToeHitForgivenessHeight
  commentId: F:Global.IntBasePlatformer.ToeHitForgivenessHeight
  id: ToeHitForgivenessHeight
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: ToeHitForgivenessHeight
  nameWithType: IntBasePlatformer.ToeHitForgivenessHeight
  fullName: IntBasePlatformer.ToeHitForgivenessHeight
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ToeHitForgivenessHeight
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 51
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int ToeHitForgivenessHeight
    return:
      type: System.Int32
    content.vb: Public ToeHitForgivenessHeight As Integer
- uid: Global.IntBasePlatformer.SwimJumpInterval
  commentId: F:Global.IntBasePlatformer.SwimJumpInterval
  id: SwimJumpInterval
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: SwimJumpInterval
  nameWithType: IntBasePlatformer.SwimJumpInterval
  fullName: IntBasePlatformer.SwimJumpInterval
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SwimJumpInterval
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 53
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("How much time the player needs to wait between swim jumps")]

      public float SwimJumpInterval
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("How much time the player needs to wait between swim jumps")>

      Public SwimJumpInterval As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: How much time the player needs to wait between swim jumps
- uid: Global.IntBasePlatformer.DoubleJumpReset
  commentId: F:Global.IntBasePlatformer.DoubleJumpReset
  id: DoubleJumpReset
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DoubleJumpReset
  nameWithType: IntBasePlatformer.DoubleJumpReset
  fullName: IntBasePlatformer.DoubleJumpReset
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DoubleJumpReset
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 54
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected bool DoubleJumpReset
    return:
      type: System.Boolean
    content.vb: Protected DoubleJumpReset As Boolean
- uid: Global.IntBasePlatformer.WallJumpHeight
  commentId: F:Global.IntBasePlatformer.WallJumpHeight
  id: WallJumpHeight
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WallJumpHeight
  nameWithType: IntBasePlatformer.WallJumpHeight
  fullName: IntBasePlatformer.WallJumpHeight
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WallJumpHeight
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 58
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Wall Jump")]

      public float WallJumpHeight
    return:
      type: System.Single
    content.vb: >-
      <Header("Wall Jump")>

      Public WallJumpHeight As Single
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Wall Jump
- uid: Global.IntBasePlatformer.WallJumpLateralDistance
  commentId: F:Global.IntBasePlatformer.WallJumpLateralDistance
  id: WallJumpLateralDistance
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WallJumpLateralDistance
  nameWithType: IntBasePlatformer.WallJumpLateralDistance
  fullName: IntBasePlatformer.WallJumpLateralDistance
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WallJumpLateralDistance
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 59
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float WallJumpLateralDistance
    return:
      type: System.Single
    content.vb: Public WallJumpLateralDistance As Single
- uid: Global.IntBasePlatformer.WallJumpLateralSpeed
  commentId: F:Global.IntBasePlatformer.WallJumpLateralSpeed
  id: WallJumpLateralSpeed
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WallJumpLateralSpeed
  nameWithType: IntBasePlatformer.WallJumpLateralSpeed
  fullName: IntBasePlatformer.WallJumpLateralSpeed
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WallJumpLateralSpeed
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 60
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float WallJumpLateralSpeed
    return:
      type: System.Single
    content.vb: Public WallJumpLateralSpeed As Single
- uid: Global.IntBasePlatformer.WallJumpDashVelocity
  commentId: F:Global.IntBasePlatformer.WallJumpDashVelocity
  id: WallJumpDashVelocity
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WallJumpDashVelocity
  nameWithType: IntBasePlatformer.WallJumpDashVelocity
  fullName: IntBasePlatformer.WallJumpDashVelocity
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WallJumpDashVelocity
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 61
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2 WallJumpDashVelocity
    return:
      type: UnityEngine.Vector2
    content.vb: Public WallJumpDashVelocity As Vector2
- uid: Global.IntBasePlatformer.WallJumpDashDistance
  commentId: F:Global.IntBasePlatformer.WallJumpDashDistance
  id: WallJumpDashDistance
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WallJumpDashDistance
  nameWithType: IntBasePlatformer.WallJumpDashDistance
  fullName: IntBasePlatformer.WallJumpDashDistance
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WallJumpDashDistance
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 62
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float WallJumpDashDistance
    return:
      type: System.Single
    content.vb: Public WallJumpDashDistance As Single
- uid: Global.IntBasePlatformer.MaxWallSlideSpeed
  commentId: F:Global.IntBasePlatformer.MaxWallSlideSpeed
  id: MaxWallSlideSpeed
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: MaxWallSlideSpeed
  nameWithType: IntBasePlatformer.MaxWallSlideSpeed
  fullName: IntBasePlatformer.MaxWallSlideSpeed
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxWallSlideSpeed
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 63
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float MaxWallSlideSpeed
    return:
      type: System.Single
    content.vb: Public MaxWallSlideSpeed As Single
- uid: Global.IntBasePlatformer.WallSlideAccelerationScalar
  commentId: F:Global.IntBasePlatformer.WallSlideAccelerationScalar
  id: WallSlideAccelerationScalar
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WallSlideAccelerationScalar
  nameWithType: IntBasePlatformer.WallSlideAccelerationScalar
  fullName: IntBasePlatformer.WallSlideAccelerationScalar
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WallSlideAccelerationScalar
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 64
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float WallSlideAccelerationScalar
    return:
      type: System.Single
    content.vb: Public WallSlideAccelerationScalar As Single
- uid: Global.IntBasePlatformer.WallSlideDeccelerationScalar
  commentId: F:Global.IntBasePlatformer.WallSlideDeccelerationScalar
  id: WallSlideDeccelerationScalar
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WallSlideDeccelerationScalar
  nameWithType: IntBasePlatformer.WallSlideDeccelerationScalar
  fullName: IntBasePlatformer.WallSlideDeccelerationScalar
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WallSlideDeccelerationScalar
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 65
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float WallSlideDeccelerationScalar
    return:
      type: System.Single
    content.vb: Public WallSlideDeccelerationScalar As Single
- uid: Global.IntBasePlatformer.WallJumpRecoveryAcceleration
  commentId: F:Global.IntBasePlatformer.WallJumpRecoveryAcceleration
  id: WallJumpRecoveryAcceleration
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WallJumpRecoveryAcceleration
  nameWithType: IntBasePlatformer.WallJumpRecoveryAcceleration
  fullName: IntBasePlatformer.WallJumpRecoveryAcceleration
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WallJumpRecoveryAcceleration
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 66
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float WallJumpRecoveryAcceleration
    return:
      type: System.Single
    content.vb: Public WallJumpRecoveryAcceleration As Single
- uid: Global.IntBasePlatformer.WallJumpInputDisableDuration
  commentId: F:Global.IntBasePlatformer.WallJumpInputDisableDuration
  id: WallJumpInputDisableDuration
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WallJumpInputDisableDuration
  nameWithType: IntBasePlatformer.WallJumpInputDisableDuration
  fullName: IntBasePlatformer.WallJumpInputDisableDuration
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WallJumpInputDisableDuration
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 67
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float WallJumpInputDisableDuration
    return:
      type: System.Single
    content.vb: Public WallJumpInputDisableDuration As Single
- uid: Global.IntBasePlatformer.WeakWallJumpHeight
  commentId: F:Global.IntBasePlatformer.WeakWallJumpHeight
  id: WeakWallJumpHeight
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WeakWallJumpHeight
  nameWithType: IntBasePlatformer.WeakWallJumpHeight
  fullName: IntBasePlatformer.WeakWallJumpHeight
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WeakWallJumpHeight
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 70
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Weak Wall Jump")]

      public float WeakWallJumpHeight
    return:
      type: System.Single
    content.vb: >-
      <Header("Weak Wall Jump")>

      Public WeakWallJumpHeight As Single
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Weak Wall Jump
- uid: Global.IntBasePlatformer.WeakWallJumpLateralDistance
  commentId: F:Global.IntBasePlatformer.WeakWallJumpLateralDistance
  id: WeakWallJumpLateralDistance
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WeakWallJumpLateralDistance
  nameWithType: IntBasePlatformer.WeakWallJumpLateralDistance
  fullName: IntBasePlatformer.WeakWallJumpLateralDistance
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WeakWallJumpLateralDistance
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 71
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float WeakWallJumpLateralDistance
    return:
      type: System.Single
    content.vb: Public WeakWallJumpLateralDistance As Single
- uid: Global.IntBasePlatformer.WeakWallJumpLateralSpeed
  commentId: F:Global.IntBasePlatformer.WeakWallJumpLateralSpeed
  id: WeakWallJumpLateralSpeed
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WeakWallJumpLateralSpeed
  nameWithType: IntBasePlatformer.WeakWallJumpLateralSpeed
  fullName: IntBasePlatformer.WeakWallJumpLateralSpeed
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WeakWallJumpLateralSpeed
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 72
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float WeakWallJumpLateralSpeed
    return:
      type: System.Single
    content.vb: Public WeakWallJumpLateralSpeed As Single
- uid: Global.IntBasePlatformer.WeakWallJumpDashVelocity
  commentId: F:Global.IntBasePlatformer.WeakWallJumpDashVelocity
  id: WeakWallJumpDashVelocity
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WeakWallJumpDashVelocity
  nameWithType: IntBasePlatformer.WeakWallJumpDashVelocity
  fullName: IntBasePlatformer.WeakWallJumpDashVelocity
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WeakWallJumpDashVelocity
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 73
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2 WeakWallJumpDashVelocity
    return:
      type: UnityEngine.Vector2
    content.vb: Public WeakWallJumpDashVelocity As Vector2
- uid: Global.IntBasePlatformer.WeakWallJumpDashDistance
  commentId: F:Global.IntBasePlatformer.WeakWallJumpDashDistance
  id: WeakWallJumpDashDistance
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WeakWallJumpDashDistance
  nameWithType: IntBasePlatformer.WeakWallJumpDashDistance
  fullName: IntBasePlatformer.WeakWallJumpDashDistance
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WeakWallJumpDashDistance
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 74
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float WeakWallJumpDashDistance
    return:
      type: System.Single
    content.vb: Public WeakWallJumpDashDistance As Single
- uid: Global.IntBasePlatformer.WallJumped
  commentId: F:Global.IntBasePlatformer.WallJumped
  id: WallJumped
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WallJumped
  nameWithType: IntBasePlatformer.WallJumped
  fullName: IntBasePlatformer.WallJumped
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WallJumped
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 77
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected bool WallJumped
    return:
      type: System.Boolean
    content.vb: Protected WallJumped As Boolean
- uid: Global.IntBasePlatformer.WallJumped_t
  commentId: F:Global.IntBasePlatformer.WallJumped_t
  id: WallJumped_t
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WallJumped_t
  nameWithType: IntBasePlatformer.WallJumped_t
  fullName: IntBasePlatformer.WallJumped_t
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WallJumped_t
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 78
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float WallJumped_t
    return:
      type: System.Single
    content.vb: Protected WallJumped_t As Single
- uid: Global.IntBasePlatformer.WallJumpDirection
  commentId: F:Global.IntBasePlatformer.WallJumpDirection
  id: WallJumpDirection
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WallJumpDirection
  nameWithType: IntBasePlatformer.WallJumpDirection
  fullName: IntBasePlatformer.WallJumpDirection
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WallJumpDirection
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 79
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntBasePlatformer.WallJumpType WallJumpDirection
    return:
      type: Global.IntBasePlatformer.WallJumpType
    content.vb: Protected WallJumpDirection As IntBasePlatformer.WallJumpType
- uid: Global.IntBasePlatformer.AuraMaterial
  commentId: F:Global.IntBasePlatformer.AuraMaterial
  id: AuraMaterial
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: AuraMaterial
  nameWithType: IntBasePlatformer.AuraMaterial
  fullName: IntBasePlatformer.AuraMaterial
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AuraMaterial
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 82
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Material AuraMaterial
    return:
      type: UnityEngine.Material
    content.vb: Public AuraMaterial As Material
- uid: Global.IntBasePlatformer.DashDistRange
  commentId: F:Global.IntBasePlatformer.DashDistRange
  id: DashDistRange
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DashDistRange
  nameWithType: IntBasePlatformer.DashDistRange
  fullName: IntBasePlatformer.DashDistRange
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DashDistRange
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 86
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Dashing")]

      public Vector2 DashDistRange
    return:
      type: UnityEngine.Vector2
    content.vb: >-
      <Header("Dashing")>

      Public DashDistRange As Vector2
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Dashing
- uid: Global.IntBasePlatformer.MaxDashHoldTime
  commentId: F:Global.IntBasePlatformer.MaxDashHoldTime
  id: MaxDashHoldTime
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: MaxDashHoldTime
  nameWithType: IntBasePlatformer.MaxDashHoldTime
  fullName: IntBasePlatformer.MaxDashHoldTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxDashHoldTime
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 87
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float MaxDashHoldTime
    return:
      type: System.Single
    content.vb: Public MaxDashHoldTime As Single
- uid: Global.IntBasePlatformer.DashDecelerationTime
  commentId: F:Global.IntBasePlatformer.DashDecelerationTime
  id: DashDecelerationTime
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DashDecelerationTime
  nameWithType: IntBasePlatformer.DashDecelerationTime
  fullName: IntBasePlatformer.DashDecelerationTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DashDecelerationTime
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 88
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2 DashDecelerationTime
    return:
      type: UnityEngine.Vector2
    content.vb: Public DashDecelerationTime As Vector2
- uid: Global.IntBasePlatformer.DashOpacityBlendTime
  commentId: F:Global.IntBasePlatformer.DashOpacityBlendTime
  id: DashOpacityBlendTime
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DashOpacityBlendTime
  nameWithType: IntBasePlatformer.DashOpacityBlendTime
  fullName: IntBasePlatformer.DashOpacityBlendTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DashOpacityBlendTime
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 89
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float DashOpacityBlendTime
    return:
      type: System.Single
    content.vb: Public DashOpacityBlendTime As Single
- uid: Global.IntBasePlatformer.DashReloadTime
  commentId: F:Global.IntBasePlatformer.DashReloadTime
  id: DashReloadTime
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DashReloadTime
  nameWithType: IntBasePlatformer.DashReloadTime
  fullName: IntBasePlatformer.DashReloadTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DashReloadTime
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 90
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float DashReloadTime
    return:
      type: System.Single
    content.vb: Public DashReloadTime As Single
- uid: Global.IntBasePlatformer.DashMaxGlideTime
  commentId: F:Global.IntBasePlatformer.DashMaxGlideTime
  id: DashMaxGlideTime
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DashMaxGlideTime
  nameWithType: IntBasePlatformer.DashMaxGlideTime
  fullName: IntBasePlatformer.DashMaxGlideTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DashMaxGlideTime
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 91
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float DashMaxGlideTime
    return:
      type: System.Single
    content.vb: Public DashMaxGlideTime As Single
- uid: Global.IntBasePlatformer.DashMomentumDamp
  commentId: F:Global.IntBasePlatformer.DashMomentumDamp
  id: DashMomentumDamp
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DashMomentumDamp
  nameWithType: IntBasePlatformer.DashMomentumDamp
  fullName: IntBasePlatformer.DashMomentumDamp
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DashMomentumDamp
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 92
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2 DashMomentumDamp
    return:
      type: UnityEngine.Vector2
    content.vb: Public DashMomentumDamp As Vector2
- uid: Global.IntBasePlatformer.MaxDashHoverTime
  commentId: F:Global.IntBasePlatformer.MaxDashHoverTime
  id: MaxDashHoverTime
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: MaxDashHoverTime
  nameWithType: IntBasePlatformer.MaxDashHoverTime
  fullName: IntBasePlatformer.MaxDashHoverTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxDashHoverTime
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 94
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("AllowHover", 1)]

      [Tooltip("How long the player can 'hover' in place at the end of a dash (uses unscaled game time)")]

      public float MaxDashHoverTime
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("AllowHover", 1)>

      <Tooltip("How long the player can 'hover' in place at the end of a dash (uses unscaled game time)")>

      Public MaxDashHoverTime As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: AllowHover
    - type: System.Int32
      value: 1
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: How long the player can 'hover' in place at the end of a dash (uses unscaled game time)
- uid: Global.IntBasePlatformer.HoverTimeScale
  commentId: F:Global.IntBasePlatformer.HoverTimeScale
  id: HoverTimeScale
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: HoverTimeScale
  nameWithType: IntBasePlatformer.HoverTimeScale
  fullName: IntBasePlatformer.HoverTimeScale
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: HoverTimeScale
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 96
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("AllowHover", 1)]

      [Tooltip("While the player is hovering, how much slow-mo do we add?")]

      public float HoverTimeScale
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("AllowHover", 1)>

      <Tooltip("While the player is hovering, how much slow-mo do we add?")>

      Public HoverTimeScale As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: AllowHover
    - type: System.Int32
      value: 1
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: While the player is hovering, how much slow-mo do we add?
- uid: Global.IntBasePlatformer.HoverTimeScaleBlendTime
  commentId: F:Global.IntBasePlatformer.HoverTimeScaleBlendTime
  id: HoverTimeScaleBlendTime
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: HoverTimeScaleBlendTime
  nameWithType: IntBasePlatformer.HoverTimeScaleBlendTime
  fullName: IntBasePlatformer.HoverTimeScaleBlendTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: HoverTimeScaleBlendTime
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 98
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("AllowHover", 1)]

      [Tooltip("While entering slow-mo due to hover, do we gradually blend (val > 0)? or immediately jump (val <= 0)? (uses unscaled game time)")]

      public float HoverTimeScaleBlendTime
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("AllowHover", 1)>

      <Tooltip("While entering slow-mo due to hover, do we gradually blend (val > 0)? or immediately jump (val <= 0)? (uses unscaled game time)")>

      Public HoverTimeScaleBlendTime As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: AllowHover
    - type: System.Int32
      value: 1
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: While entering slow-mo due to hover, do we gradually blend (val > 0)? or immediately jump (val <= 0)? (uses unscaled game time)
- uid: Global.IntBasePlatformer.MaxWindInducedSpeed
  commentId: F:Global.IntBasePlatformer.MaxWindInducedSpeed
  id: MaxWindInducedSpeed
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: MaxWindInducedSpeed
  nameWithType: IntBasePlatformer.MaxWindInducedSpeed
  fullName: IntBasePlatformer.MaxWindInducedSpeed
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxWindInducedSpeed
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 102
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Wind")]

      public float MaxWindInducedSpeed
    return:
      type: System.Single
    content.vb: >-
      <Header("Wind")>

      Public MaxWindInducedSpeed As Single
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Wind
- uid: Global.IntBasePlatformer.MaxWindInducedSpeedGrounded
  commentId: F:Global.IntBasePlatformer.MaxWindInducedSpeedGrounded
  id: MaxWindInducedSpeedGrounded
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: MaxWindInducedSpeedGrounded
  nameWithType: IntBasePlatformer.MaxWindInducedSpeedGrounded
  fullName: IntBasePlatformer.MaxWindInducedSpeedGrounded
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxWindInducedSpeedGrounded
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 103
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float MaxWindInducedSpeedGrounded
    return:
      type: System.Single
    content.vb: Public MaxWindInducedSpeedGrounded As Single
- uid: Global.IntBasePlatformer.WindForceWhenGroundedScalar
  commentId: F:Global.IntBasePlatformer.WindForceWhenGroundedScalar
  id: WindForceWhenGroundedScalar
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WindForceWhenGroundedScalar
  nameWithType: IntBasePlatformer.WindForceWhenGroundedScalar
  fullName: IntBasePlatformer.WindForceWhenGroundedScalar
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WindForceWhenGroundedScalar
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 104
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float WindForceWhenGroundedScalar
    return:
      type: System.Single
    content.vb: Public WindForceWhenGroundedScalar As Single
- uid: Global.IntBasePlatformer.WindLateralDampeningFactor
  commentId: F:Global.IntBasePlatformer.WindLateralDampeningFactor
  id: WindLateralDampeningFactor
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WindLateralDampeningFactor
  nameWithType: IntBasePlatformer.WindLateralDampeningFactor
  fullName: IntBasePlatformer.WindLateralDampeningFactor
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WindLateralDampeningFactor
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 105
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float WindLateralDampeningFactor
    return:
      type: System.Single
    content.vb: Public WindLateralDampeningFactor As Single
- uid: Global.IntBasePlatformer.GroundedSlideDecelerationScalar
  commentId: F:Global.IntBasePlatformer.GroundedSlideDecelerationScalar
  id: GroundedSlideDecelerationScalar
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: GroundedSlideDecelerationScalar
  nameWithType: IntBasePlatformer.GroundedSlideDecelerationScalar
  fullName: IntBasePlatformer.GroundedSlideDecelerationScalar
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GroundedSlideDecelerationScalar
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 109
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Momentum & Movement")]

      public float GroundedSlideDecelerationScalar
    return:
      type: System.Single
    content.vb: >-
      <Header("Momentum & Movement")>

      Public GroundedSlideDecelerationScalar As Single
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Momentum & Movement
- uid: Global.IntBasePlatformer.AirDecelerationScalar
  commentId: F:Global.IntBasePlatformer.AirDecelerationScalar
  id: AirDecelerationScalar
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: AirDecelerationScalar
  nameWithType: IntBasePlatformer.AirDecelerationScalar
  fullName: IntBasePlatformer.AirDecelerationScalar
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AirDecelerationScalar
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 110
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float AirDecelerationScalar
    return:
      type: System.Single
    content.vb: Public AirDecelerationScalar As Single
- uid: Global.IntBasePlatformer.LateralInput
  commentId: F:Global.IntBasePlatformer.LateralInput
  id: LateralInput
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: LateralInput
  nameWithType: IntBasePlatformer.LateralInput
  fullName: IntBasePlatformer.LateralInput
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LateralInput
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 111
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float LateralInput
    return:
      type: System.Single
    content.vb: Protected LateralInput As Single
- uid: Global.IntBasePlatformer.LateralInputRaw
  commentId: F:Global.IntBasePlatformer.LateralInputRaw
  id: LateralInputRaw
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: LateralInputRaw
  nameWithType: IntBasePlatformer.LateralInputRaw
  fullName: IntBasePlatformer.LateralInputRaw
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LateralInputRaw
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 112
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float LateralInputRaw
    return:
      type: System.Single
    content.vb: Protected LateralInputRaw As Single
- uid: Global.IntBasePlatformer.dampingFactor
  commentId: F:Global.IntBasePlatformer.dampingFactor
  id: dampingFactor
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: dampingFactor
  nameWithType: IntBasePlatformer.dampingFactor
  fullName: IntBasePlatformer.dampingFactor
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: dampingFactor
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 115
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float dampingFactor
    return:
      type: System.Single
    content.vb: Protected dampingFactor As Single
- uid: Global.IntBasePlatformer.Shedding
  commentId: F:Global.IntBasePlatformer.Shedding
  id: Shedding
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: Shedding
  nameWithType: IntBasePlatformer.Shedding
  fullName: IntBasePlatformer.Shedding
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Shedding
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 118
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected bool Shedding
    return:
      type: System.Boolean
    content.vb: Protected Shedding As Boolean
- uid: Global.IntBasePlatformer.SheddingDirection
  commentId: F:Global.IntBasePlatformer.SheddingDirection
  id: SheddingDirection
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: SheddingDirection
  nameWithType: IntBasePlatformer.SheddingDirection
  fullName: IntBasePlatformer.SheddingDirection
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SheddingDirection
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 119
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Vector2 SheddingDirection
    return:
      type: UnityEngine.Vector2
    content.vb: Protected SheddingDirection As Vector2
- uid: Global.IntBasePlatformer.InitialState
  commentId: F:Global.IntBasePlatformer.InitialState
  id: InitialState
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: InitialState
  nameWithType: IntBasePlatformer.InitialState
  fullName: IntBasePlatformer.InitialState
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: InitialState
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 122
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public IntBasePlatformer.PlatformerState InitialState
    return:
      type: Global.IntBasePlatformer.PlatformerState
    content.vb: Public InitialState As IntBasePlatformer.PlatformerState
- uid: Global.IntBasePlatformer.IsAttacking
  commentId: P:Global.IntBasePlatformer.IsAttacking
  id: IsAttacking
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: IsAttacking
  nameWithType: IntBasePlatformer.IsAttacking
  fullName: IntBasePlatformer.IsAttacking
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsAttacking
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 123
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsAttacking { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAttacking As Boolean
  overload: Global.IntBasePlatformer.IsAttacking*
- uid: Global.IntBasePlatformer.invisibilityMaterial
  commentId: F:Global.IntBasePlatformer.invisibilityMaterial
  id: invisibilityMaterial
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: invisibilityMaterial
  nameWithType: IntBasePlatformer.invisibilityMaterial
  fullName: IntBasePlatformer.invisibilityMaterial
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: invisibilityMaterial
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 126
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Material invisibilityMaterial
    return:
      type: UnityEngine.Material
    content.vb: Public invisibilityMaterial As Material
- uid: Global.IntBasePlatformer.InvisibilityCountdown
  commentId: F:Global.IntBasePlatformer.InvisibilityCountdown
  id: InvisibilityCountdown
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: InvisibilityCountdown
  nameWithType: IntBasePlatformer.InvisibilityCountdown
  fullName: IntBasePlatformer.InvisibilityCountdown
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: InvisibilityCountdown
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 131
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public GameObject InvisibilityCountdown
    return:
      type: UnityEngine.GameObject
    content.vb: Public InvisibilityCountdown As GameObject
- uid: Global.IntBasePlatformer.currentAnimatorState
  commentId: F:Global.IntBasePlatformer.currentAnimatorState
  id: currentAnimatorState
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: currentAnimatorState
  nameWithType: IntBasePlatformer.currentAnimatorState
  fullName: IntBasePlatformer.currentAnimatorState
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: currentAnimatorState
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 132
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected string currentAnimatorState
    return:
      type: System.String
    content.vb: Protected currentAnimatorState As String
- uid: Global.IntBasePlatformer.ishurt
  commentId: F:Global.IntBasePlatformer.ishurt
  id: ishurt
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: ishurt
  nameWithType: IntBasePlatformer.ishurt
  fullName: IntBasePlatformer.ishurt
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ishurt
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 133
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected bool ishurt
    return:
      type: System.Boolean
    content.vb: Protected ishurt As Boolean
- uid: Global.IntBasePlatformer.changingweapon
  commentId: F:Global.IntBasePlatformer.changingweapon
  id: changingweapon
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: changingweapon
  nameWithType: IntBasePlatformer.changingweapon
  fullName: IntBasePlatformer.changingweapon
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: changingweapon
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 134
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool changingweapon
    return:
      type: System.Boolean
    content.vb: Public changingweapon As Boolean
- uid: Global.IntBasePlatformer.recoveryTime
  commentId: F:Global.IntBasePlatformer.recoveryTime
  id: recoveryTime
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: recoveryTime
  nameWithType: IntBasePlatformer.recoveryTime
  fullName: IntBasePlatformer.recoveryTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: recoveryTime
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 136
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Animation State Machine")]

      public float recoveryTime
    return:
      type: System.Single
    content.vb: >-
      <Header("Animation State Machine")>

      Public recoveryTime As Single
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Animation State Machine
- uid: Global.IntBasePlatformer.weaponswitchTime
  commentId: F:Global.IntBasePlatformer.weaponswitchTime
  id: weaponswitchTime
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: weaponswitchTime
  nameWithType: IntBasePlatformer.weaponswitchTime
  fullName: IntBasePlatformer.weaponswitchTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: weaponswitchTime
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 137
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float weaponswitchTime
    return:
      type: System.Single
    content.vb: Public weaponswitchTime As Single
- uid: Global.IntBasePlatformer.minVelocityForLandCrouch
  commentId: F:Global.IntBasePlatformer.minVelocityForLandCrouch
  id: minVelocityForLandCrouch
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: minVelocityForLandCrouch
  nameWithType: IntBasePlatformer.minVelocityForLandCrouch
  fullName: IntBasePlatformer.minVelocityForLandCrouch
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: minVelocityForLandCrouch
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 138
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float minVelocityForLandCrouch
    return:
      type: System.Single
    content.vb: Public minVelocityForLandCrouch As Single
- uid: Global.IntBasePlatformer.landDust
  commentId: F:Global.IntBasePlatformer.landDust
  id: landDust
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: landDust
  nameWithType: IntBasePlatformer.landDust
  fullName: IntBasePlatformer.landDust
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: landDust
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 141
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public GameObject landDust
    return:
      type: UnityEngine.GameObject
    content.vb: Public landDust As GameObject
- uid: Global.IntBasePlatformer.jumpDust
  commentId: F:Global.IntBasePlatformer.jumpDust
  id: jumpDust
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: jumpDust
  nameWithType: IntBasePlatformer.jumpDust
  fullName: IntBasePlatformer.jumpDust
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: jumpDust
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 142
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public GameObject jumpDust
    return:
      type: UnityEngine.GameObject
    content.vb: Public jumpDust As GameObject
- uid: Global.IntBasePlatformer.walljumpDust
  commentId: F:Global.IntBasePlatformer.walljumpDust
  id: walljumpDust
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: walljumpDust
  nameWithType: IntBasePlatformer.walljumpDust
  fullName: IntBasePlatformer.walljumpDust
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: walljumpDust
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 143
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public GameObject walljumpDust
    return:
      type: UnityEngine.GameObject
    content.vb: Public walljumpDust As GameObject
- uid: Global.IntBasePlatformer.PLAYER_IDLE
  commentId: F:Global.IntBasePlatformer.PLAYER_IDLE
  id: PLAYER_IDLE
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PLAYER_IDLE
  nameWithType: IntBasePlatformer.PLAYER_IDLE
  fullName: IntBasePlatformer.PLAYER_IDLE
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PLAYER_IDLE
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 148
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string PLAYER_IDLE = "idle"
    return:
      type: System.String
    content.vb: Public Const PLAYER_IDLE As String = "idle"
- uid: Global.IntBasePlatformer.PLAYER_SPRINT
  commentId: F:Global.IntBasePlatformer.PLAYER_SPRINT
  id: PLAYER_SPRINT
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PLAYER_SPRINT
  nameWithType: IntBasePlatformer.PLAYER_SPRINT
  fullName: IntBasePlatformer.PLAYER_SPRINT
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PLAYER_SPRINT
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 149
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string PLAYER_SPRINT = "sprint"
    return:
      type: System.String
    content.vb: Public Const PLAYER_SPRINT As String = "sprint"
- uid: Global.IntBasePlatformer.PLAYER_JUMPPREP
  commentId: F:Global.IntBasePlatformer.PLAYER_JUMPPREP
  id: PLAYER_JUMPPREP
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PLAYER_JUMPPREP
  nameWithType: IntBasePlatformer.PLAYER_JUMPPREP
  fullName: IntBasePlatformer.PLAYER_JUMPPREP
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PLAYER_JUMPPREP
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 150
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string PLAYER_JUMPPREP = "jumpprep"
    return:
      type: System.String
    content.vb: Public Const PLAYER_JUMPPREP As String = "jumpprep"
- uid: Global.IntBasePlatformer.PLAYER_RISE
  commentId: F:Global.IntBasePlatformer.PLAYER_RISE
  id: PLAYER_RISE
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PLAYER_RISE
  nameWithType: IntBasePlatformer.PLAYER_RISE
  fullName: IntBasePlatformer.PLAYER_RISE
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PLAYER_RISE
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 151
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string PLAYER_RISE = "rise"
    return:
      type: System.String
    content.vb: Public Const PLAYER_RISE As String = "rise"
- uid: Global.IntBasePlatformer.PLAYER_DOUBLEJUMP
  commentId: F:Global.IntBasePlatformer.PLAYER_DOUBLEJUMP
  id: PLAYER_DOUBLEJUMP
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PLAYER_DOUBLEJUMP
  nameWithType: IntBasePlatformer.PLAYER_DOUBLEJUMP
  fullName: IntBasePlatformer.PLAYER_DOUBLEJUMP
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PLAYER_DOUBLEJUMP
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 152
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string PLAYER_DOUBLEJUMP = "doublejump"
    return:
      type: System.String
    content.vb: Public Const PLAYER_DOUBLEJUMP As String = "doublejump"
- uid: Global.IntBasePlatformer.PLAYER_FALL
  commentId: F:Global.IntBasePlatformer.PLAYER_FALL
  id: PLAYER_FALL
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PLAYER_FALL
  nameWithType: IntBasePlatformer.PLAYER_FALL
  fullName: IntBasePlatformer.PLAYER_FALL
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PLAYER_FALL
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 154
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string PLAYER_FALL = "fall"
    return:
      type: System.String
    content.vb: Public Const PLAYER_FALL As String = "fall"
- uid: Global.IntBasePlatformer.PLAYER_LAND
  commentId: F:Global.IntBasePlatformer.PLAYER_LAND
  id: PLAYER_LAND
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PLAYER_LAND
  nameWithType: IntBasePlatformer.PLAYER_LAND
  fullName: IntBasePlatformer.PLAYER_LAND
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PLAYER_LAND
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 155
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string PLAYER_LAND = "land"
    return:
      type: System.String
    content.vb: Public Const PLAYER_LAND As String = "land"
- uid: Global.IntBasePlatformer.PLAYER_GROUNDDASH
  commentId: F:Global.IntBasePlatformer.PLAYER_GROUNDDASH
  id: PLAYER_GROUNDDASH
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PLAYER_GROUNDDASH
  nameWithType: IntBasePlatformer.PLAYER_GROUNDDASH
  fullName: IntBasePlatformer.PLAYER_GROUNDDASH
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PLAYER_GROUNDDASH
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 156
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string PLAYER_GROUNDDASH = "grounddash"
    return:
      type: System.String
    content.vb: Public Const PLAYER_GROUNDDASH As String = "grounddash"
- uid: Global.IntBasePlatformer.PLAYER_AIRDASH
  commentId: F:Global.IntBasePlatformer.PLAYER_AIRDASH
  id: PLAYER_AIRDASH
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PLAYER_AIRDASH
  nameWithType: IntBasePlatformer.PLAYER_AIRDASH
  fullName: IntBasePlatformer.PLAYER_AIRDASH
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PLAYER_AIRDASH
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 157
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string PLAYER_AIRDASH = "airdash"
    return:
      type: System.String
    content.vb: Public Const PLAYER_AIRDASH As String = "airdash"
- uid: Global.IntBasePlatformer.PLAYER_UPDASH
  commentId: F:Global.IntBasePlatformer.PLAYER_UPDASH
  id: PLAYER_UPDASH
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PLAYER_UPDASH
  nameWithType: IntBasePlatformer.PLAYER_UPDASH
  fullName: IntBasePlatformer.PLAYER_UPDASH
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PLAYER_UPDASH
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 158
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string PLAYER_UPDASH = "updash"
    return:
      type: System.String
    content.vb: Public Const PLAYER_UPDASH As String = "updash"
- uid: Global.IntBasePlatformer.PLAYER_DOWNDASH
  commentId: F:Global.IntBasePlatformer.PLAYER_DOWNDASH
  id: PLAYER_DOWNDASH
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PLAYER_DOWNDASH
  nameWithType: IntBasePlatformer.PLAYER_DOWNDASH
  fullName: IntBasePlatformer.PLAYER_DOWNDASH
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PLAYER_DOWNDASH
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 159
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string PLAYER_DOWNDASH = "downdash"
    return:
      type: System.String
    content.vb: Public Const PLAYER_DOWNDASH As String = "downdash"
- uid: Global.IntBasePlatformer.PLAYER_UPDIAGDASH
  commentId: F:Global.IntBasePlatformer.PLAYER_UPDIAGDASH
  id: PLAYER_UPDIAGDASH
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PLAYER_UPDIAGDASH
  nameWithType: IntBasePlatformer.PLAYER_UPDIAGDASH
  fullName: IntBasePlatformer.PLAYER_UPDIAGDASH
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PLAYER_UPDIAGDASH
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 160
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string PLAYER_UPDIAGDASH = "updiagdash"
    return:
      type: System.String
    content.vb: Public Const PLAYER_UPDIAGDASH As String = "updiagdash"
- uid: Global.IntBasePlatformer.PLAYER_DOWNDIAGDASH
  commentId: F:Global.IntBasePlatformer.PLAYER_DOWNDIAGDASH
  id: PLAYER_DOWNDIAGDASH
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PLAYER_DOWNDIAGDASH
  nameWithType: IntBasePlatformer.PLAYER_DOWNDIAGDASH
  fullName: IntBasePlatformer.PLAYER_DOWNDIAGDASH
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PLAYER_DOWNDIAGDASH
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 161
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string PLAYER_DOWNDIAGDASH = "downdiagdash"
    return:
      type: System.String
    content.vb: Public Const PLAYER_DOWNDIAGDASH As String = "downdiagdash"
- uid: Global.IntBasePlatformer.PLAYER_HURT
  commentId: F:Global.IntBasePlatformer.PLAYER_HURT
  id: PLAYER_HURT
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PLAYER_HURT
  nameWithType: IntBasePlatformer.PLAYER_HURT
  fullName: IntBasePlatformer.PLAYER_HURT
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PLAYER_HURT
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 162
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string PLAYER_HURT = "hurt"
    return:
      type: System.String
    content.vb: Public Const PLAYER_HURT As String = "hurt"
- uid: Global.IntBasePlatformer.PLAYER_SWITCHWEAPON
  commentId: F:Global.IntBasePlatformer.PLAYER_SWITCHWEAPON
  id: PLAYER_SWITCHWEAPON
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PLAYER_SWITCHWEAPON
  nameWithType: IntBasePlatformer.PLAYER_SWITCHWEAPON
  fullName: IntBasePlatformer.PLAYER_SWITCHWEAPON
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PLAYER_SWITCHWEAPON
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 163
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string PLAYER_SWITCHWEAPON = "weaponswitch"
    return:
      type: System.String
    content.vb: Public Const PLAYER_SWITCHWEAPON As String = "weaponswitch"
- uid: Global.IntBasePlatformer.PLAYER_DEATH
  commentId: F:Global.IntBasePlatformer.PLAYER_DEATH
  id: PLAYER_DEATH
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PLAYER_DEATH
  nameWithType: IntBasePlatformer.PLAYER_DEATH
  fullName: IntBasePlatformer.PLAYER_DEATH
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PLAYER_DEATH
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 164
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string PLAYER_DEATH = "death"
    return:
      type: System.String
    content.vb: Public Const PLAYER_DEATH As String = "death"
- uid: Global.IntBasePlatformer.PLAYER_RESPAWN
  commentId: F:Global.IntBasePlatformer.PLAYER_RESPAWN
  id: PLAYER_RESPAWN
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PLAYER_RESPAWN
  nameWithType: IntBasePlatformer.PLAYER_RESPAWN
  fullName: IntBasePlatformer.PLAYER_RESPAWN
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PLAYER_RESPAWN
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 165
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string PLAYER_RESPAWN = "respawn"
    return:
      type: System.String
    content.vb: Public Const PLAYER_RESPAWN As String = "respawn"
- uid: Global.IntBasePlatformer.PLAYER_WALLSLIDE
  commentId: F:Global.IntBasePlatformer.PLAYER_WALLSLIDE
  id: PLAYER_WALLSLIDE
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PLAYER_WALLSLIDE
  nameWithType: IntBasePlatformer.PLAYER_WALLSLIDE
  fullName: IntBasePlatformer.PLAYER_WALLSLIDE
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PLAYER_WALLSLIDE
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 166
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string PLAYER_WALLSLIDE = "wallslide"
    return:
      type: System.String
    content.vb: Public Const PLAYER_WALLSLIDE As String = "wallslide"
- uid: Global.IntBasePlatformer.PLAYER_WALLSLIDEPREP
  commentId: F:Global.IntBasePlatformer.PLAYER_WALLSLIDEPREP
  id: PLAYER_WALLSLIDEPREP
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PLAYER_WALLSLIDEPREP
  nameWithType: IntBasePlatformer.PLAYER_WALLSLIDEPREP
  fullName: IntBasePlatformer.PLAYER_WALLSLIDEPREP
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PLAYER_WALLSLIDEPREP
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 167
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string PLAYER_WALLSLIDEPREP = "wallslideprep"
    return:
      type: System.String
    content.vb: Public Const PLAYER_WALLSLIDEPREP As String = "wallslideprep"
- uid: Global.IntBasePlatformer.PLAYER_WALLJUMP
  commentId: F:Global.IntBasePlatformer.PLAYER_WALLJUMP
  id: PLAYER_WALLJUMP
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PLAYER_WALLJUMP
  nameWithType: IntBasePlatformer.PLAYER_WALLJUMP
  fullName: IntBasePlatformer.PLAYER_WALLJUMP
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PLAYER_WALLJUMP
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 168
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string PLAYER_WALLJUMP = "walljump"
    return:
      type: System.String
    content.vb: Public Const PLAYER_WALLJUMP As String = "walljump"
- uid: Global.IntBasePlatformer.PLAYER_WALLJUMPFALLTRANSITION
  commentId: F:Global.IntBasePlatformer.PLAYER_WALLJUMPFALLTRANSITION
  id: PLAYER_WALLJUMPFALLTRANSITION
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PLAYER_WALLJUMPFALLTRANSITION
  nameWithType: IntBasePlatformer.PLAYER_WALLJUMPFALLTRANSITION
  fullName: IntBasePlatformer.PLAYER_WALLJUMPFALLTRANSITION
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PLAYER_WALLJUMPFALLTRANSITION
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 169
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string PLAYER_WALLJUMPFALLTRANSITION = "walljumpfalltransition"
    return:
      type: System.String
    content.vb: Public Const PLAYER_WALLJUMPFALLTRANSITION As String = "walljumpfalltransition"
- uid: Global.IntBasePlatformer.PLAYER_WALLJUMPFALLTURNTRANSITION
  commentId: F:Global.IntBasePlatformer.PLAYER_WALLJUMPFALLTURNTRANSITION
  id: PLAYER_WALLJUMPFALLTURNTRANSITION
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PLAYER_WALLJUMPFALLTURNTRANSITION
  nameWithType: IntBasePlatformer.PLAYER_WALLJUMPFALLTURNTRANSITION
  fullName: IntBasePlatformer.PLAYER_WALLJUMPFALLTURNTRANSITION
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PLAYER_WALLJUMPFALLTURNTRANSITION
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 170
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public const string PLAYER_WALLJUMPFALLTURNTRANSITION = "walljumpfallturntransition"
    return:
      type: System.String
    content.vb: Public Const PLAYER_WALLJUMPFALLTURNTRANSITION As String = "walljumpfallturntransition"
- uid: Global.IntBasePlatformer.JumpWindowBounds
  commentId: F:Global.IntBasePlatformer.JumpWindowBounds
  id: JumpWindowBounds
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: JumpWindowBounds
  nameWithType: IntBasePlatformer.JumpWindowBounds
  fullName: IntBasePlatformer.JumpWindowBounds
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: JumpWindowBounds
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 184
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2Int JumpWindowBounds
    return:
      type: UnityEngine.Vector2Int
    content.vb: Public JumpWindowBounds As Vector2Int
- uid: Global.IntBasePlatformer.DashWindowBounds
  commentId: F:Global.IntBasePlatformer.DashWindowBounds
  id: DashWindowBounds
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DashWindowBounds
  nameWithType: IntBasePlatformer.DashWindowBounds
  fullName: IntBasePlatformer.DashWindowBounds
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DashWindowBounds
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 185
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2Int DashWindowBounds
    return:
      type: UnityEngine.Vector2Int
    content.vb: Public DashWindowBounds As Vector2Int
- uid: Global.IntBasePlatformer.WallJumpWindowBounds
  commentId: F:Global.IntBasePlatformer.WallJumpWindowBounds
  id: WallJumpWindowBounds
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WallJumpWindowBounds
  nameWithType: IntBasePlatformer.WallJumpWindowBounds
  fullName: IntBasePlatformer.WallJumpWindowBounds
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WallJumpWindowBounds
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 186
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2Int WallJumpWindowBounds
    return:
      type: UnityEngine.Vector2Int
    content.vb: Public WallJumpWindowBounds As Vector2Int
- uid: Global.IntBasePlatformer.Stats
  commentId: P:Global.IntBasePlatformer.Stats
  id: Stats
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: Stats
  nameWithType: IntBasePlatformer.Stats
  fullName: IntBasePlatformer.Stats
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Stats
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 189
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public PlayerStats Stats { get; protected set; }
    parameters: []
    return:
      type: Global.PlayerStats
    content.vb: Public Property Stats As PlayerStats
  overload: Global.IntBasePlatformer.Stats*
- uid: Global.IntBasePlatformer.BumpTime
  commentId: F:Global.IntBasePlatformer.BumpTime
  id: BumpTime
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: BumpTime
  nameWithType: IntBasePlatformer.BumpTime
  fullName: IntBasePlatformer.BumpTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BumpTime
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 193
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Bump")]

      public float BumpTime
    return:
      type: System.Single
    content.vb: >-
      <Header("Bump")>

      Public BumpTime As Single
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Bump
- uid: Global.IntBasePlatformer.BumpScale
  commentId: F:Global.IntBasePlatformer.BumpScale
  id: BumpScale
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: BumpScale
  nameWithType: IntBasePlatformer.BumpScale
  fullName: IntBasePlatformer.BumpScale
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BumpScale
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 194
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2 BumpScale
    return:
      type: UnityEngine.Vector2
    content.vb: Public BumpScale As Vector2
- uid: Global.IntBasePlatformer.MinBumpVelY
  commentId: F:Global.IntBasePlatformer.MinBumpVelY
  id: MinBumpVelY
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: MinBumpVelY
  nameWithType: IntBasePlatformer.MinBumpVelY
  fullName: IntBasePlatformer.MinBumpVelY
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MinBumpVelY
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 195
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float MinBumpVelY
    return:
      type: System.Single
    content.vb: Public MinBumpVelY As Single
- uid: Global.IntBasePlatformer.MinBumpSpeedX
  commentId: F:Global.IntBasePlatformer.MinBumpSpeedX
  id: MinBumpSpeedX
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: MinBumpSpeedX
  nameWithType: IntBasePlatformer.MinBumpSpeedX
  fullName: IntBasePlatformer.MinBumpSpeedX
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MinBumpSpeedX
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 196
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float MinBumpSpeedX
    return:
      type: System.Single
    content.vb: Public MinBumpSpeedX As Single
- uid: Global.IntBasePlatformer.MaxBumpSpeed
  commentId: F:Global.IntBasePlatformer.MaxBumpSpeed
  id: MaxBumpSpeed
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: MaxBumpSpeed
  nameWithType: IntBasePlatformer.MaxBumpSpeed
  fullName: IntBasePlatformer.MaxBumpSpeed
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxBumpSpeed
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 197
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2 MaxBumpSpeed
    return:
      type: UnityEngine.Vector2
    content.vb: Public MaxBumpSpeed As Vector2
- uid: Global.IntBasePlatformer.Bumped
  commentId: F:Global.IntBasePlatformer.Bumped
  id: Bumped
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: Bumped
  nameWithType: IntBasePlatformer.Bumped
  fullName: IntBasePlatformer.Bumped
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Bumped
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 198
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected bool Bumped
    return:
      type: System.Boolean
    content.vb: Protected Bumped As Boolean
- uid: Global.IntBasePlatformer.Bumped_t
  commentId: F:Global.IntBasePlatformer.Bumped_t
  id: Bumped_t
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: Bumped_t
  nameWithType: IntBasePlatformer.Bumped_t
  fullName: IntBasePlatformer.Bumped_t
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Bumped_t
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 199
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float Bumped_t
    return:
      type: System.Single
    content.vb: Protected Bumped_t As Single
- uid: Global.IntBasePlatformer.fsm
  commentId: F:Global.IntBasePlatformer.fsm
  id: fsm
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: fsm
  nameWithType: IntBasePlatformer.fsm
  fullName: IntBasePlatformer.fsm
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: fsm
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 201
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected StateMachine<IntBasePlatformer.PlatformerState> fsm
    return:
      type: Global.StateMachine{IntBasePlatformer.PlatformerState}
    content.vb: Protected fsm As StateMachine(Of IntBasePlatformer.PlatformerState)
- uid: Global.IntBasePlatformer.last_state
  commentId: F:Global.IntBasePlatformer.last_state
  id: last_state
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: last_state
  nameWithType: IntBasePlatformer.last_state
  fullName: IntBasePlatformer.last_state
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: last_state
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 202
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntBasePlatformer.PlatformerState last_state
    return:
      type: Global.IntBasePlatformer.PlatformerState
    content.vb: Protected last_state As IntBasePlatformer.PlatformerState
- uid: Global.IntBasePlatformer.Gravity
  commentId: F:Global.IntBasePlatformer.Gravity
  id: Gravity
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: Gravity
  nameWithType: IntBasePlatformer.Gravity
  fullName: IntBasePlatformer.Gravity
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Gravity
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 203
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float Gravity
    return:
      type: System.Single
    content.vb: Protected Gravity As Single
- uid: Global.IntBasePlatformer.JumpVelocity
  commentId: F:Global.IntBasePlatformer.JumpVelocity
  id: JumpVelocity
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: JumpVelocity
  nameWithType: IntBasePlatformer.JumpVelocity
  fullName: IntBasePlatformer.JumpVelocity
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: JumpVelocity
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 204
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float JumpVelocity
    return:
      type: System.Single
    content.vb: Protected JumpVelocity As Single
- uid: Global.IntBasePlatformer.DoubleJumpGravity
  commentId: F:Global.IntBasePlatformer.DoubleJumpGravity
  id: DoubleJumpGravity
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DoubleJumpGravity
  nameWithType: IntBasePlatformer.DoubleJumpGravity
  fullName: IntBasePlatformer.DoubleJumpGravity
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DoubleJumpGravity
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 205
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float DoubleJumpGravity
    return:
      type: System.Single
    content.vb: Protected DoubleJumpGravity As Single
- uid: Global.IntBasePlatformer.DoubleJumpVelocity
  commentId: F:Global.IntBasePlatformer.DoubleJumpVelocity
  id: DoubleJumpVelocity
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DoubleJumpVelocity
  nameWithType: IntBasePlatformer.DoubleJumpVelocity
  fullName: IntBasePlatformer.DoubleJumpVelocity
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DoubleJumpVelocity
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 206
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float DoubleJumpVelocity
    return:
      type: System.Single
    content.vb: Protected DoubleJumpVelocity As Single
- uid: Global.IntBasePlatformer.WallJumpVerticalSpeed
  commentId: F:Global.IntBasePlatformer.WallJumpVerticalSpeed
  id: WallJumpVerticalSpeed
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WallJumpVerticalSpeed
  nameWithType: IntBasePlatformer.WallJumpVerticalSpeed
  fullName: IntBasePlatformer.WallJumpVerticalSpeed
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WallJumpVerticalSpeed
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 207
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float WallJumpVerticalSpeed
    return:
      type: System.Single
    content.vb: Protected WallJumpVerticalSpeed As Single
- uid: Global.IntBasePlatformer.WallJumpGravity
  commentId: F:Global.IntBasePlatformer.WallJumpGravity
  id: WallJumpGravity
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WallJumpGravity
  nameWithType: IntBasePlatformer.WallJumpGravity
  fullName: IntBasePlatformer.WallJumpGravity
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WallJumpGravity
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 208
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float WallJumpGravity
    return:
      type: System.Single
    content.vb: Protected WallJumpGravity As Single
- uid: Global.IntBasePlatformer.WeakWallJumpVerticalSpeed
  commentId: F:Global.IntBasePlatformer.WeakWallJumpVerticalSpeed
  id: WeakWallJumpVerticalSpeed
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WeakWallJumpVerticalSpeed
  nameWithType: IntBasePlatformer.WeakWallJumpVerticalSpeed
  fullName: IntBasePlatformer.WeakWallJumpVerticalSpeed
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WeakWallJumpVerticalSpeed
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 209
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float WeakWallJumpVerticalSpeed
    return:
      type: System.Single
    content.vb: Protected WeakWallJumpVerticalSpeed As Single
- uid: Global.IntBasePlatformer.WeakWallJumpGravity
  commentId: F:Global.IntBasePlatformer.WeakWallJumpGravity
  id: WeakWallJumpGravity
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WeakWallJumpGravity
  nameWithType: IntBasePlatformer.WeakWallJumpGravity
  fullName: IntBasePlatformer.WeakWallJumpGravity
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WeakWallJumpGravity
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 210
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float WeakWallJumpGravity
    return:
      type: System.Single
    content.vb: Protected WeakWallJumpGravity As Single
- uid: Global.IntBasePlatformer.IsGrounded
  commentId: P:Global.IntBasePlatformer.IsGrounded
  id: IsGrounded
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: IsGrounded
  nameWithType: IntBasePlatformer.IsGrounded
  fullName: IntBasePlatformer.IsGrounded
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsGrounded
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 211
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsGrounded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsGrounded As Boolean
  overload: Global.IntBasePlatformer.IsGrounded*
- uid: Global.IntBasePlatformer.GetWallSide
  commentId: P:Global.IntBasePlatformer.GetWallSide
  id: GetWallSide
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: GetWallSide
  nameWithType: IntBasePlatformer.GetWallSide
  fullName: IntBasePlatformer.GetWallSide
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetWallSide
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 212
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public IntMath.Direction GetWallSide { get; }
    parameters: []
    return:
      type: Global.IntMath.Direction
    content.vb: Public Property GetWallSide As IntMath.Direction
  overload: Global.IntBasePlatformer.GetWallSide*
- uid: Global.IntBasePlatformer.IsOnWall
  commentId: P:Global.IntBasePlatformer.IsOnWall
  id: IsOnWall
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: IsOnWall
  nameWithType: IntBasePlatformer.IsOnWall
  fullName: IntBasePlatformer.IsOnWall
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsOnWall
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 214
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsOnWall { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOnWall As Boolean
  overload: Global.IntBasePlatformer.IsOnWall*
- uid: Global.IntBasePlatformer.JumpReleased
  commentId: F:Global.IntBasePlatformer.JumpReleased
  id: JumpReleased
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: JumpReleased
  nameWithType: IntBasePlatformer.JumpReleased
  fullName: IntBasePlatformer.JumpReleased
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: JumpReleased
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 215
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected bool JumpReleased
    return:
      type: System.Boolean
    content.vb: Protected JumpReleased As Boolean
- uid: Global.IntBasePlatformer.velocity
  commentId: F:Global.IntBasePlatformer.velocity
  id: velocity
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: velocity
  nameWithType: IntBasePlatformer.velocity
  fullName: IntBasePlatformer.velocity
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: velocity
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 216
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Vector2 velocity
    return:
      type: UnityEngine.Vector2
    content.vb: Protected velocity As Vector2
- uid: Global.IntBasePlatformer.DashDirection
  commentId: P:Global.IntBasePlatformer.DashDirection
  id: DashDirection
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DashDirection
  nameWithType: IntBasePlatformer.DashDirection
  fullName: IntBasePlatformer.DashDirection
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DashDirection
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 217
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Vector2 DashDirection { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Protected Property DashDirection As Vector2
  overload: Global.IntBasePlatformer.DashDirection*
- uid: Global.IntBasePlatformer.DashSpeed
  commentId: F:Global.IntBasePlatformer.DashSpeed
  id: DashSpeed
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DashSpeed
  nameWithType: IntBasePlatformer.DashSpeed
  fullName: IntBasePlatformer.DashSpeed
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DashSpeed
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 218
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float DashSpeed
    return:
      type: System.Single
    content.vb: Protected DashSpeed As Single
- uid: Global.IntBasePlatformer.Dash_t
  commentId: F:Global.IntBasePlatformer.Dash_t
  id: Dash_t
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: Dash_t
  nameWithType: IntBasePlatformer.Dash_t
  fullName: IntBasePlatformer.Dash_t
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Dash_t
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 219
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float Dash_t
    return:
      type: System.Single
    content.vb: Protected Dash_t As Single
- uid: Global.IntBasePlatformer.Dash_t_unscaled
  commentId: F:Global.IntBasePlatformer.Dash_t_unscaled
  id: Dash_t_unscaled
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: Dash_t_unscaled
  nameWithType: IntBasePlatformer.Dash_t_unscaled
  fullName: IntBasePlatformer.Dash_t_unscaled
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Dash_t_unscaled
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 220
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float Dash_t_unscaled
    return:
      type: System.Single
    content.vb: Protected Dash_t_unscaled As Single
- uid: Global.IntBasePlatformer.Hover_t_unscaled
  commentId: F:Global.IntBasePlatformer.Hover_t_unscaled
  id: Hover_t_unscaled
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: Hover_t_unscaled
  nameWithType: IntBasePlatformer.Hover_t_unscaled
  fullName: IntBasePlatformer.Hover_t_unscaled
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Hover_t_unscaled
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 221
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float Hover_t_unscaled
    return:
      type: System.Single
    content.vb: Protected Hover_t_unscaled As Single
- uid: Global.IntBasePlatformer.MinDashHoldTime
  commentId: F:Global.IntBasePlatformer.MinDashHoldTime
  id: MinDashHoldTime
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: MinDashHoldTime
  nameWithType: IntBasePlatformer.MinDashHoldTime
  fullName: IntBasePlatformer.MinDashHoldTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MinDashHoldTime
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 222
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float MinDashHoldTime
    return:
      type: System.Single
    content.vb: Protected MinDashHoldTime As Single
- uid: Global.IntBasePlatformer.DashReleasedTime
  commentId: F:Global.IntBasePlatformer.DashReleasedTime
  id: DashReleasedTime
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DashReleasedTime
  nameWithType: IntBasePlatformer.DashReleasedTime
  fullName: IntBasePlatformer.DashReleasedTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DashReleasedTime
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 223
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float DashReleasedTime
    return:
      type: System.Single
    content.vb: Protected DashReleasedTime As Single
- uid: Global.IntBasePlatformer.TimeSinceLastDash
  commentId: F:Global.IntBasePlatformer.TimeSinceLastDash
  id: TimeSinceLastDash
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: TimeSinceLastDash
  nameWithType: IntBasePlatformer.TimeSinceLastDash
  fullName: IntBasePlatformer.TimeSinceLastDash
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TimeSinceLastDash
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 224
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float TimeSinceLastDash
    return:
      type: System.Single
    content.vb: Protected TimeSinceLastDash As Single
- uid: Global.IntBasePlatformer.Dashed
  commentId: F:Global.IntBasePlatformer.Dashed
  id: Dashed
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: Dashed
  nameWithType: IntBasePlatformer.Dashed
  fullName: IntBasePlatformer.Dashed
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Dashed
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 225
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected bool Dashed
    return:
      type: System.Boolean
    content.vb: Protected Dashed As Boolean
- uid: Global.IntBasePlatformer.DashReset
  commentId: F:Global.IntBasePlatformer.DashReset
  id: DashReset
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DashReset
  nameWithType: IntBasePlatformer.DashReset
  fullName: IntBasePlatformer.DashReset
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DashReset
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 226
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected bool DashReset
    return:
      type: System.Boolean
    content.vb: Protected DashReset As Boolean
- uid: Global.IntBasePlatformer.DashReleased
  commentId: F:Global.IntBasePlatformer.DashReleased
  id: DashReleased
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DashReleased
  nameWithType: IntBasePlatformer.DashReleased
  fullName: IntBasePlatformer.DashReleased
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DashReleased
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 227
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected bool DashReleased
    return:
      type: System.Boolean
    content.vb: Protected DashReleased As Boolean
- uid: Global.IntBasePlatformer.HoverReleased
  commentId: F:Global.IntBasePlatformer.HoverReleased
  id: HoverReleased
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: HoverReleased
  nameWithType: IntBasePlatformer.HoverReleased
  fullName: IntBasePlatformer.HoverReleased
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: HoverReleased
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 228
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected bool HoverReleased
    return:
      type: System.Boolean
    content.vb: Protected HoverReleased As Boolean
- uid: Global.IntBasePlatformer.IsHovering
  commentId: F:Global.IntBasePlatformer.IsHovering
  id: IsHovering
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: IsHovering
  nameWithType: IntBasePlatformer.IsHovering
  fullName: IntBasePlatformer.IsHovering
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsHovering
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 229
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected bool IsHovering
    return:
      type: System.Boolean
    content.vb: Protected IsHovering As Boolean
- uid: Global.IntBasePlatformer.DoubleJumped
  commentId: F:Global.IntBasePlatformer.DoubleJumped
  id: DoubleJumped
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DoubleJumped
  nameWithType: IntBasePlatformer.DoubleJumped
  fullName: IntBasePlatformer.DoubleJumped
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DoubleJumped
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 230
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected bool DoubleJumped
    return:
      type: System.Boolean
    content.vb: Protected DoubleJumped As Boolean
- uid: Global.IntBasePlatformer.FirstAura
  commentId: F:Global.IntBasePlatformer.FirstAura
  id: FirstAura
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: FirstAura
  nameWithType: IntBasePlatformer.FirstAura
  fullName: IntBasePlatformer.FirstAura
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: FirstAura
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 231
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Aura FirstAura
    return:
      type: Global.Aura
    content.vb: Protected FirstAura As Aura
- uid: Global.IntBasePlatformer.DashGlided
  commentId: F:Global.IntBasePlatformer.DashGlided
  id: DashGlided
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DashGlided
  nameWithType: IntBasePlatformer.DashGlided
  fullName: IntBasePlatformer.DashGlided
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DashGlided
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 232
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected bool DashGlided
    return:
      type: System.Boolean
    content.vb: Protected DashGlided As Boolean
- uid: Global.IntBasePlatformer.DashGlideCurrentTime
  commentId: F:Global.IntBasePlatformer.DashGlideCurrentTime
  id: DashGlideCurrentTime
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DashGlideCurrentTime
  nameWithType: IntBasePlatformer.DashGlideCurrentTime
  fullName: IntBasePlatformer.DashGlideCurrentTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DashGlideCurrentTime
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 233
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float DashGlideCurrentTime
    return:
      type: System.Single
    content.vb: Protected DashGlideCurrentTime As Single
- uid: Global.IntBasePlatformer.CarryMomentum
  commentId: F:Global.IntBasePlatformer.CarryMomentum
  id: CarryMomentum
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: CarryMomentum
  nameWithType: IntBasePlatformer.CarryMomentum
  fullName: IntBasePlatformer.CarryMomentum
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CarryMomentum
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 234
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected bool CarryMomentum
    return:
      type: System.Boolean
    content.vb: Protected CarryMomentum As Boolean
- uid: Global.IntBasePlatformer.animator
  commentId: F:Global.IntBasePlatformer.animator
  id: animator
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: animator
  nameWithType: IntBasePlatformer.animator
  fullName: IntBasePlatformer.animator
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: animator
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 236
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Animator animator
    return:
      type: UnityEngine.Animator
    content.vb: Protected animator As Animator
- uid: Global.IntBasePlatformer.sprite
  commentId: F:Global.IntBasePlatformer.sprite
  id: sprite
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: sprite
  nameWithType: IntBasePlatformer.sprite
  fullName: IntBasePlatformer.sprite
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: sprite
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 237
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected SpriteRenderer sprite
    return:
      type: UnityEngine.SpriteRenderer
    content.vb: Protected sprite As SpriteRenderer
- uid: Global.IntBasePlatformer.Equipment
  commentId: F:Global.IntBasePlatformer.Equipment
  id: Equipment
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: Equipment
  nameWithType: IntBasePlatformer.Equipment
  fullName: IntBasePlatformer.Equipment
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Equipment
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 248
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Weapons")]

      protected PlayerEquipment Equipment
    return:
      type: Global.PlayerEquipment
    content.vb: >-
      <Header("Weapons")>

      Protected Equipment As PlayerEquipment
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Weapons
- uid: Global.IntBasePlatformer.Loadout
  commentId: F:Global.IntBasePlatformer.Loadout
  id: Loadout
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: Loadout
  nameWithType: IntBasePlatformer.Loadout
  fullName: IntBasePlatformer.Loadout
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Loadout
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 250
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [HideInInspector]

      public WeaponController Loadout
    return:
      type: Global.WeaponController
    content.vb: >-
      <HideInInspector>

      Public Loadout As WeaponController
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.IntBasePlatformer.Ability
  commentId: F:Global.IntBasePlatformer.Ability
  id: Ability
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: Ability
  nameWithType: IntBasePlatformer.Ability
  fullName: IntBasePlatformer.Ability
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Ability
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 251
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public AbilityController Ability
    return:
      type: Global.AbilityController
    content.vb: Public Ability As AbilityController
- uid: Global.IntBasePlatformer.Invisible
  commentId: F:Global.IntBasePlatformer.Invisible
  id: Invisible
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: Invisible
  nameWithType: IntBasePlatformer.Invisible
  fullName: IntBasePlatformer.Invisible
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Invisible
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 252
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool Invisible
    return:
      type: System.Boolean
    content.vb: Public Invisible As Boolean
- uid: Global.IntBasePlatformer.InvisibileWarning
  commentId: F:Global.IntBasePlatformer.InvisibileWarning
  id: InvisibileWarning
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: InvisibileWarning
  nameWithType: IntBasePlatformer.InvisibileWarning
  fullName: IntBasePlatformer.InvisibileWarning
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: InvisibileWarning
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 253
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool InvisibileWarning
    return:
      type: System.Boolean
    content.vb: Public InvisibileWarning As Boolean
- uid: Global.IntBasePlatformer.RespawnedInsidePlatform
  commentId: F:Global.IntBasePlatformer.RespawnedInsidePlatform
  id: RespawnedInsidePlatform
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: RespawnedInsidePlatform
  nameWithType: IntBasePlatformer.RespawnedInsidePlatform
  fullName: IntBasePlatformer.RespawnedInsidePlatform
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RespawnedInsidePlatform
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 256
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected bool RespawnedInsidePlatform
    return:
      type: System.Boolean
    content.vb: Protected RespawnedInsidePlatform As Boolean
- uid: Global.IntBasePlatformer.SquishGlideLimit
  commentId: F:Global.IntBasePlatformer.SquishGlideLimit
  id: SquishGlideLimit
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: SquishGlideLimit
  nameWithType: IntBasePlatformer.SquishGlideLimit
  fullName: IntBasePlatformer.SquishGlideLimit
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SquishGlideLimit
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 257
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected int SquishGlideLimit
    return:
      type: System.Int32
    content.vb: Protected SquishGlideLimit As Integer
- uid: Global.IntBasePlatformer.Start
  commentId: M:Global.IntBasePlatformer.Start
  id: Start
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: IntBasePlatformer.Start()
  fullName: IntBasePlatformer.Start()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Start
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 264
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Start()
    content.vb: Protected Sub Start()
  overload: Global.IntBasePlatformer.Start*
- uid: Global.IntBasePlatformer.ResetState
  commentId: M:Global.IntBasePlatformer.ResetState
  id: ResetState
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: ResetState()
  nameWithType: IntBasePlatformer.ResetState()
  fullName: IntBasePlatformer.ResetState()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResetState
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 357
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void ResetState()
    content.vb: Protected Overridable Sub ResetState()
  overload: Global.IntBasePlatformer.ResetState*
- uid: Global.IntBasePlatformer.OnDeath(System.Boolean)
  commentId: M:Global.IntBasePlatformer.OnDeath(System.Boolean)
  id: OnDeath(System.Boolean)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: OnDeath(bool)
  nameWithType: IntBasePlatformer.OnDeath(bool)
  fullName: IntBasePlatformer.OnDeath(bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnDeath
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 390
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void OnDeath(bool MajorRespawn)
    parameters:
    - id: MajorRespawn
      type: System.Boolean
    content.vb: Public Overridable Sub OnDeath(MajorRespawn As Boolean)
  overload: Global.IntBasePlatformer.OnDeath*
  nameWithType.vb: IntBasePlatformer.OnDeath(Boolean)
  fullName.vb: IntBasePlatformer.OnDeath(Boolean)
  name.vb: OnDeath(Boolean)
- uid: Global.IntBasePlatformer.OnTakeDamage
  commentId: M:Global.IntBasePlatformer.OnTakeDamage
  id: OnTakeDamage
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: OnTakeDamage()
  nameWithType: IntBasePlatformer.OnTakeDamage()
  fullName: IntBasePlatformer.OnTakeDamage()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnTakeDamage
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 399
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void OnTakeDamage()
    content.vb: Public Overridable Sub OnTakeDamage()
  overload: Global.IntBasePlatformer.OnTakeDamage*
- uid: Global.IntBasePlatformer.Respawn(System.Boolean)
  commentId: M:Global.IntBasePlatformer.Respawn(System.Boolean)
  id: Respawn(System.Boolean)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: Respawn(bool)
  nameWithType: IntBasePlatformer.Respawn(bool)
  fullName: IntBasePlatformer.Respawn(bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Respawn
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 411
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void Respawn(bool major)
    parameters:
    - id: major
      type: System.Boolean
    content.vb: Public Overridable Sub Respawn(major As Boolean)
  overload: Global.IntBasePlatformer.Respawn*
  nameWithType.vb: IntBasePlatformer.Respawn(Boolean)
  fullName.vb: IntBasePlatformer.Respawn(Boolean)
  name.vb: Respawn(Boolean)
- uid: Global.IntBasePlatformer.EndRespawnState
  commentId: M:Global.IntBasePlatformer.EndRespawnState
  id: EndRespawnState
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: EndRespawnState()
  nameWithType: IntBasePlatformer.EndRespawnState()
  fullName: IntBasePlatformer.EndRespawnState()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EndRespawnState
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 424
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void EndRespawnState()
    content.vb: Public Sub EndRespawnState()
  overload: Global.IntBasePlatformer.EndRespawnState*
- uid: Global.IntBasePlatformer.SingleJumpBinding
  commentId: F:Global.IntBasePlatformer.SingleJumpBinding
  id: SingleJumpBinding
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: SingleJumpBinding
  nameWithType: IntBasePlatformer.SingleJumpBinding
  fullName: IntBasePlatformer.SingleJumpBinding
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SingleJumpBinding
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 433
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntObject.Action SingleJumpBinding
    return:
      type: Global.IntObject.Action
    content.vb: Protected SingleJumpBinding As IntObject.Action
- uid: Global.IntBasePlatformer.DoubleJumpBinding
  commentId: F:Global.IntBasePlatformer.DoubleJumpBinding
  id: DoubleJumpBinding
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DoubleJumpBinding
  nameWithType: IntBasePlatformer.DoubleJumpBinding
  fullName: IntBasePlatformer.DoubleJumpBinding
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DoubleJumpBinding
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 433
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntObject.Action DoubleJumpBinding
    return:
      type: Global.IntObject.Action
    content.vb: Protected DoubleJumpBinding As IntObject.Action
- uid: Global.IntBasePlatformer.WallJumpBinding
  commentId: F:Global.IntBasePlatformer.WallJumpBinding
  id: WallJumpBinding
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WallJumpBinding
  nameWithType: IntBasePlatformer.WallJumpBinding
  fullName: IntBasePlatformer.WallJumpBinding
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WallJumpBinding
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 433
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntObject.Action WallJumpBinding
    return:
      type: Global.IntObject.Action
    content.vb: Protected WallJumpBinding As IntObject.Action
- uid: Global.IntBasePlatformer.DashBinding
  commentId: F:Global.IntBasePlatformer.DashBinding
  id: DashBinding
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DashBinding
  nameWithType: IntBasePlatformer.DashBinding
  fullName: IntBasePlatformer.DashBinding
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DashBinding
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 434
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntObject.Action DashBinding
    return:
      type: Global.IntObject.Action
    content.vb: Protected DashBinding As IntObject.Action
- uid: Global.IntBasePlatformer.BindFunctionToWallJump(IntObject.Action)
  commentId: M:Global.IntBasePlatformer.BindFunctionToWallJump(IntObject.Action)
  id: BindFunctionToWallJump(IntObject.Action)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: BindFunctionToWallJump(Action)
  nameWithType: IntBasePlatformer.BindFunctionToWallJump(IntObject.Action)
  fullName: IntBasePlatformer.BindFunctionToWallJump(IntObject.Action)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BindFunctionToWallJump
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 436
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void BindFunctionToWallJump(IntObject.Action callback)
    parameters:
    - id: callback
      type: Global.IntObject.Action
    content.vb: Public Sub BindFunctionToWallJump(callback As IntObject.Action)
  overload: Global.IntBasePlatformer.BindFunctionToWallJump*
- uid: Global.IntBasePlatformer.BindFunctionToDoubleJump(IntObject.Action)
  commentId: M:Global.IntBasePlatformer.BindFunctionToDoubleJump(IntObject.Action)
  id: BindFunctionToDoubleJump(IntObject.Action)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: BindFunctionToDoubleJump(Action)
  nameWithType: IntBasePlatformer.BindFunctionToDoubleJump(IntObject.Action)
  fullName: IntBasePlatformer.BindFunctionToDoubleJump(IntObject.Action)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BindFunctionToDoubleJump
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 441
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void BindFunctionToDoubleJump(IntObject.Action callback)
    parameters:
    - id: callback
      type: Global.IntObject.Action
    content.vb: Public Sub BindFunctionToDoubleJump(callback As IntObject.Action)
  overload: Global.IntBasePlatformer.BindFunctionToDoubleJump*
- uid: Global.IntBasePlatformer.BindFunctionToSingleJump(IntObject.Action)
  commentId: M:Global.IntBasePlatformer.BindFunctionToSingleJump(IntObject.Action)
  id: BindFunctionToSingleJump(IntObject.Action)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: BindFunctionToSingleJump(Action)
  nameWithType: IntBasePlatformer.BindFunctionToSingleJump(IntObject.Action)
  fullName: IntBasePlatformer.BindFunctionToSingleJump(IntObject.Action)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BindFunctionToSingleJump
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 446
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void BindFunctionToSingleJump(IntObject.Action callback)
    parameters:
    - id: callback
      type: Global.IntObject.Action
    content.vb: Public Sub BindFunctionToSingleJump(callback As IntObject.Action)
  overload: Global.IntBasePlatformer.BindFunctionToSingleJump*
- uid: Global.IntBasePlatformer.BindFunctionToDash(IntObject.Action)
  commentId: M:Global.IntBasePlatformer.BindFunctionToDash(IntObject.Action)
  id: BindFunctionToDash(IntObject.Action)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: BindFunctionToDash(Action)
  nameWithType: IntBasePlatformer.BindFunctionToDash(IntObject.Action)
  fullName: IntBasePlatformer.BindFunctionToDash(IntObject.Action)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BindFunctionToDash
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 451
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void BindFunctionToDash(IntObject.Action callback)
    parameters:
    - id: callback
      type: Global.IntObject.Action
    content.vb: Public Sub BindFunctionToDash(callback As IntObject.Action)
  overload: Global.IntBasePlatformer.BindFunctionToDash*
- uid: Global.IntBasePlatformer.GetFlipX
  commentId: M:Global.IntBasePlatformer.GetFlipX
  id: GetFlipX
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: GetFlipX()
  nameWithType: IntBasePlatformer.GetFlipX()
  fullName: IntBasePlatformer.GetFlipX()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetFlipX
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 456
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool GetFlipX()
    return:
      type: System.Boolean
    content.vb: Public Function GetFlipX() As Boolean
  overload: Global.IntBasePlatformer.GetFlipX*
- uid: Global.IntBasePlatformer.GetLookDirection
  commentId: M:Global.IntBasePlatformer.GetLookDirection
  id: GetLookDirection
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: GetLookDirection()
  nameWithType: IntBasePlatformer.GetLookDirection()
  fullName: IntBasePlatformer.GetLookDirection()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetLookDirection
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 461
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int GetLookDirection()
    return:
      type: System.Int32
    content.vb: Public Function GetLookDirection() As Integer
  overload: Global.IntBasePlatformer.GetLookDirection*
- uid: Global.IntBasePlatformer.GetAnimator
  commentId: M:Global.IntBasePlatformer.GetAnimator
  id: GetAnimator
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: GetAnimator()
  nameWithType: IntBasePlatformer.GetAnimator()
  fullName: IntBasePlatformer.GetAnimator()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetAnimator
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 466
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Animator GetAnimator()
    return:
      type: UnityEngine.Animator
    content.vb: Public Function GetAnimator() As Animator
  overload: Global.IntBasePlatformer.GetAnimator*
- uid: Global.IntBasePlatformer.Initialize
  commentId: M:Global.IntBasePlatformer.Initialize
  id: Initialize
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: IntBasePlatformer.Initialize()
  fullName: IntBasePlatformer.Initialize()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Initialize
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 528
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Initialize()
    content.vb: Public Sub Initialize()
  overload: Global.IntBasePlatformer.Initialize*
  implements:
  - Global.IEntity.Initialize
- uid: Global.IntBasePlatformer.OnFirstFrame
  commentId: M:Global.IntBasePlatformer.OnFirstFrame
  id: OnFirstFrame
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: OnFirstFrame()
  nameWithType: IntBasePlatformer.OnFirstFrame()
  fullName: IntBasePlatformer.OnFirstFrame()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnFirstFrame
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 530
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void OnFirstFrame()
    content.vb: Public Sub OnFirstFrame()
  overload: Global.IntBasePlatformer.OnFirstFrame*
  implements:
  - Global.IEntity.OnFirstFrame
- uid: Global.IntBasePlatformer.OnDrawDebugGizmos
  commentId: M:Global.IntBasePlatformer.OnDrawDebugGizmos
  id: OnDrawDebugGizmos
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: OnDrawDebugGizmos()
  nameWithType: IntBasePlatformer.OnDrawDebugGizmos()
  fullName: IntBasePlatformer.OnDrawDebugGizmos()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnDrawDebugGizmos
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 532
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void OnDrawDebugGizmos()
    content.vb: Public Sub OnDrawDebugGizmos()
  overload: Global.IntBasePlatformer.OnDrawDebugGizmos*
  implements:
  - Global.IEntity.OnDrawDebugGizmos
- uid: Global.IntBasePlatformer.Animate
  commentId: M:Global.IntBasePlatformer.Animate
  id: Animate
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: Animate()
  nameWithType: IntBasePlatformer.Animate()
  fullName: IntBasePlatformer.Animate()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Animate
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 555
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void Animate()
    content.vb: Public Overridable Sub Animate()
  overload: Global.IntBasePlatformer.Animate*
  implements:
  - Global.IEntity.Animate
- uid: Global.IntBasePlatformer.PreInputUpdate
  commentId: M:Global.IntBasePlatformer.PreInputUpdate
  id: PreInputUpdate
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PreInputUpdate()
  nameWithType: IntBasePlatformer.PreInputUpdate()
  fullName: IntBasePlatformer.PreInputUpdate()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PreInputUpdate
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 779
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void PreInputUpdate()
    content.vb: Public Sub PreInputUpdate()
  overload: Global.IntBasePlatformer.PreInputUpdate*
  implements:
  - Global.IEntity.PreInputUpdate
- uid: Global.IntBasePlatformer.UpdateInput
  commentId: M:Global.IntBasePlatformer.UpdateInput
  id: UpdateInput
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: UpdateInput()
  nameWithType: IntBasePlatformer.UpdateInput()
  fullName: IntBasePlatformer.UpdateInput()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UpdateInput
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 862
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nPush off the input gathering on to the sub class. Child classes will provide input.\n"
  example: []
  syntax:
    content: public abstract void UpdateInput()
    content.vb: Public MustOverride Sub UpdateInput()
  overload: Global.IntBasePlatformer.UpdateInput*
  implements:
  - Global.IEntity.UpdateInput
- uid: Global.IntBasePlatformer.SetLateralInputValue(System.Single)
  commentId: M:Global.IntBasePlatformer.SetLateralInputValue(System.Single)
  id: SetLateralInputValue(System.Single)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: SetLateralInputValue(float)
  nameWithType: IntBasePlatformer.SetLateralInputValue(float)
  fullName: IntBasePlatformer.SetLateralInputValue(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetLateralInputValue
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 867
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nForce the player to reset any input smoothing that might be programmed in\n"
  example: []
  syntax:
    content: protected abstract void SetLateralInputValue(float value)
    parameters:
    - id: value
      type: System.Single
    content.vb: Protected MustOverride Sub SetLateralInputValue(value As Single)
  overload: Global.IntBasePlatformer.SetLateralInputValue*
  nameWithType.vb: IntBasePlatformer.SetLateralInputValue(Single)
  fullName.vb: IntBasePlatformer.SetLateralInputValue(Single)
  name.vb: SetLateralInputValue(Single)
- uid: Global.IntBasePlatformer.PostInputUpdate
  commentId: M:Global.IntBasePlatformer.PostInputUpdate
  id: PostInputUpdate
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: PostInputUpdate()
  nameWithType: IntBasePlatformer.PostInputUpdate()
  fullName: IntBasePlatformer.PostInputUpdate()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PostInputUpdate
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 869
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void PostInputUpdate()
    content.vb: Public Overridable Sub PostInputUpdate()
  overload: Global.IntBasePlatformer.PostInputUpdate*
  implements:
  - Global.IEntity.PostInputUpdate
- uid: Global.IntBasePlatformer.Update
  commentId: M:Global.IntBasePlatformer.Update
  id: Update
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: IntBasePlatformer.Update()
  fullName: IntBasePlatformer.Update()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Update
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1022
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Update()
    content.vb: Protected Sub Update()
  overload: Global.IntBasePlatformer.Update*
- uid: Global.IntBasePlatformer.SetLateralInput(System.Single)
  commentId: M:Global.IntBasePlatformer.SetLateralInput(System.Single)
  id: SetLateralInput(System.Single)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: SetLateralInput(float)
  nameWithType: IntBasePlatformer.SetLateralInput(float)
  fullName: IntBasePlatformer.SetLateralInput(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetLateralInput
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1091
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetLateralInput(float lateralInput)
    parameters:
    - id: lateralInput
      type: System.Single
    content.vb: Public Sub SetLateralInput(lateralInput As Single)
  overload: Global.IntBasePlatformer.SetLateralInput*
  nameWithType.vb: IntBasePlatformer.SetLateralInput(Single)
  fullName.vb: IntBasePlatformer.SetLateralInput(Single)
  name.vb: SetLateralInput(Single)
- uid: Global.IntBasePlatformer.SetLateralInputRawValue(System.Single)
  commentId: M:Global.IntBasePlatformer.SetLateralInputRawValue(System.Single)
  id: SetLateralInputRawValue(System.Single)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: SetLateralInputRawValue(float)
  nameWithType: IntBasePlatformer.SetLateralInputRawValue(float)
  fullName: IntBasePlatformer.SetLateralInputRawValue(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetLateralInputRawValue
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1111
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetLateralInputRawValue(float lateralInputRaw)
    parameters:
    - id: lateralInputRaw
      type: System.Single
    content.vb: Public Sub SetLateralInputRawValue(lateralInputRaw As Single)
  overload: Global.IntBasePlatformer.SetLateralInputRawValue*
  nameWithType.vb: IntBasePlatformer.SetLateralInputRawValue(Single)
  fullName.vb: IntBasePlatformer.SetLateralInputRawValue(Single)
  name.vb: SetLateralInputRawValue(Single)
- uid: Global.IntBasePlatformer.HandleWind
  commentId: M:Global.IntBasePlatformer.HandleWind
  id: HandleWind
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: HandleWind()
  nameWithType: IntBasePlatformer.HandleWind()
  fullName: IntBasePlatformer.HandleWind()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: HandleWind
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1120
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void HandleWind()
    content.vb: Protected Sub HandleWind()
  overload: Global.IntBasePlatformer.HandleWind*
- uid: Global.IntBasePlatformer.IsWindy
  commentId: M:Global.IntBasePlatformer.IsWindy
  id: IsWindy
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: IsWindy()
  nameWithType: IntBasePlatformer.IsWindy()
  fullName: IntBasePlatformer.IsWindy()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsWindy
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1141
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected bool IsWindy()
    return:
      type: System.Boolean
    content.vb: Protected Function IsWindy() As Boolean
  overload: Global.IntBasePlatformer.IsWindy*
- uid: Global.IntBasePlatformer.IsFast
  commentId: M:Global.IntBasePlatformer.IsFast
  id: IsFast
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: IsFast()
  nameWithType: IntBasePlatformer.IsFast()
  fullName: IntBasePlatformer.IsFast()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsFast
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1146
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected bool IsFast()
    return:
      type: System.Boolean
    content.vb: Protected Function IsFast() As Boolean
  overload: Global.IntBasePlatformer.IsFast*
- uid: Global.IntBasePlatformer.Bump(UnityEngine.Vector2)
  commentId: M:Global.IntBasePlatformer.Bump(UnityEngine.Vector2)
  id: Bump(UnityEngine.Vector2)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: Bump(Vector2)
  nameWithType: IntBasePlatformer.Bump(Vector2)
  fullName: IntBasePlatformer.Bump(UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Bump
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1155
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Bump(Vector2 objectVelocity)
    parameters:
    - id: objectVelocity
      type: UnityEngine.Vector2
    content.vb: Protected Sub Bump(objectVelocity As Vector2)
  overload: Global.IntBasePlatformer.Bump*
- uid: Global.IntBasePlatformer.Bump(UnityEngine.Vector2,UnityEngine.Vector2)
  commentId: M:Global.IntBasePlatformer.Bump(UnityEngine.Vector2,UnityEngine.Vector2)
  id: Bump(UnityEngine.Vector2,UnityEngine.Vector2)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: Bump(Vector2, Vector2)
  nameWithType: IntBasePlatformer.Bump(Vector2, Vector2)
  fullName: IntBasePlatformer.Bump(UnityEngine.Vector2, UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Bump
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1160
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Bump(Vector2 objectVelocity, Vector2 relativeScale)
    parameters:
    - id: objectVelocity
      type: UnityEngine.Vector2
    - id: relativeScale
      type: UnityEngine.Vector2
    content.vb: Protected Sub Bump(objectVelocity As Vector2, relativeScale As Vector2)
  overload: Global.IntBasePlatformer.Bump*
- uid: Global.IntBasePlatformer.BumpUpdate
  commentId: M:Global.IntBasePlatformer.BumpUpdate
  id: BumpUpdate
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: BumpUpdate()
  nameWithType: IntBasePlatformer.BumpUpdate()
  fullName: IntBasePlatformer.BumpUpdate()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BumpUpdate
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1181
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void BumpUpdate()
    content.vb: Protected Sub BumpUpdate()
  overload: Global.IntBasePlatformer.BumpUpdate*
- uid: Global.IntBasePlatformer.WallJumpUpdate
  commentId: M:Global.IntBasePlatformer.WallJumpUpdate
  id: WallJumpUpdate
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WallJumpUpdate()
  nameWithType: IntBasePlatformer.WallJumpUpdate()
  fullName: IntBasePlatformer.WallJumpUpdate()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WallJumpUpdate
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1193
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void WallJumpUpdate()
    content.vb: Protected Sub WallJumpUpdate()
  overload: Global.IntBasePlatformer.WallJumpUpdate*
- uid: Global.IntBasePlatformer.HitStop(System.Single,System.Single,System.Boolean)
  commentId: M:Global.IntBasePlatformer.HitStop(System.Single,System.Single,System.Boolean)
  id: HitStop(System.Single,System.Single,System.Boolean)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: HitStop(float, float, bool)
  nameWithType: IntBasePlatformer.HitStop(float, float, bool)
  fullName: IntBasePlatformer.HitStop(float, float, bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: HitStop
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1263
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void HitStop(float hitstopTime, float timescale = 0, bool overridable = false)
    parameters:
    - id: hitstopTime
      type: System.Single
    - id: timescale
      type: System.Single
    - id: overridable
      type: System.Boolean
    content.vb: Public Sub HitStop(hitstopTime As Single, timescale As Single = 0, [overridable] As Boolean = False)
  overload: Global.IntBasePlatformer.HitStop*
  nameWithType.vb: IntBasePlatformer.HitStop(Single, Single, Boolean)
  fullName.vb: IntBasePlatformer.HitStop(Single, Single, Boolean)
  name.vb: HitStop(Single, Single, Boolean)
- uid: Global.IntBasePlatformer.HitStopUpdate
  commentId: M:Global.IntBasePlatformer.HitStopUpdate
  id: HitStopUpdate
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: HitStopUpdate()
  nameWithType: IntBasePlatformer.HitStopUpdate()
  fullName: IntBasePlatformer.HitStopUpdate()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: HitStopUpdate
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1272
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void HitStopUpdate()
    content.vb: Protected Sub HitStopUpdate()
  overload: Global.IntBasePlatformer.HitStopUpdate*
- uid: Global.IntBasePlatformer.GetDashDirection
  commentId: M:Global.IntBasePlatformer.GetDashDirection
  id: GetDashDirection
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: GetDashDirection()
  nameWithType: IntBasePlatformer.GetDashDirection()
  fullName: IntBasePlatformer.GetDashDirection()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetDashDirection
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1289
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2 GetDashDirection()
    return:
      type: UnityEngine.Vector2
    content.vb: Public Function GetDashDirection() As Vector2
  overload: Global.IntBasePlatformer.GetDashDirection*
- uid: Global.IntBasePlatformer.CanDash
  commentId: M:Global.IntBasePlatformer.CanDash
  id: CanDash
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: CanDash()
  nameWithType: IntBasePlatformer.CanDash()
  fullName: IntBasePlatformer.CanDash()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CanDash
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1295
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool CanDash()
    return:
      type: System.Boolean
    content.vb: Public Function CanDash() As Boolean
  overload: Global.IntBasePlatformer.CanDash*
- uid: Global.IntBasePlatformer.CanHover
  commentId: M:Global.IntBasePlatformer.CanHover
  id: CanHover
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: CanHover()
  nameWithType: IntBasePlatformer.CanHover()
  fullName: IntBasePlatformer.CanHover()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CanHover
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1300
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool CanHover()
    return:
      type: System.Boolean
    content.vb: Public Function CanHover() As Boolean
  overload: Global.IntBasePlatformer.CanHover*
- uid: Global.IntBasePlatformer.InterruptHover
  commentId: M:Global.IntBasePlatformer.InterruptHover
  id: InterruptHover
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: InterruptHover()
  nameWithType: IntBasePlatformer.InterruptHover()
  fullName: IntBasePlatformer.InterruptHover()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: InterruptHover
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1305
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void InterruptHover()
    content.vb: Public Sub InterruptHover()
  overload: Global.IntBasePlatformer.InterruptHover*
- uid: Global.IntBasePlatformer.EndDash
  commentId: M:Global.IntBasePlatformer.EndDash
  id: EndDash
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: EndDash()
  nameWithType: IntBasePlatformer.EndDash()
  fullName: IntBasePlatformer.EndDash()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EndDash
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1314
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void EndDash()
    content.vb: Protected Sub EndDash()
  overload: Global.IntBasePlatformer.EndDash*
- uid: Global.IntBasePlatformer.ResetDash
  commentId: M:Global.IntBasePlatformer.ResetDash
  id: ResetDash
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: ResetDash()
  nameWithType: IntBasePlatformer.ResetDash()
  fullName: IntBasePlatformer.ResetDash()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResetDash
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1382
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void ResetDash()
    content.vb: Public Sub ResetDash()
  overload: Global.IntBasePlatformer.ResetDash*
- uid: Global.IntBasePlatformer.Dash(UnityEngine.Vector2)
  commentId: M:Global.IntBasePlatformer.Dash(UnityEngine.Vector2)
  id: Dash(UnityEngine.Vector2)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: Dash(Vector2)
  nameWithType: IntBasePlatformer.Dash(Vector2)
  fullName: IntBasePlatformer.Dash(UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Dash
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1387
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Dash(Vector2 direction)
    parameters:
    - id: direction
      type: UnityEngine.Vector2
    content.vb: Public Sub Dash(direction As Vector2)
  overload: Global.IntBasePlatformer.Dash*
- uid: Global.IntBasePlatformer.DashRelease
  commentId: M:Global.IntBasePlatformer.DashRelease
  id: DashRelease
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DashRelease()
  nameWithType: IntBasePlatformer.DashRelease()
  fullName: IntBasePlatformer.DashRelease()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DashRelease
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1399
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void DashRelease()
    content.vb: Public Sub DashRelease()
  overload: Global.IntBasePlatformer.DashRelease*
- uid: Global.IntBasePlatformer.HoverRelease
  commentId: M:Global.IntBasePlatformer.HoverRelease
  id: HoverRelease
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: HoverRelease()
  nameWithType: IntBasePlatformer.HoverRelease()
  fullName: IntBasePlatformer.HoverRelease()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: HoverRelease
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1408
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void HoverRelease()
    content.vb: Public Sub HoverRelease()
  overload: Global.IntBasePlatformer.HoverRelease*
- uid: Global.IntBasePlatformer.UpdateDashDirection(UnityEngine.Vector2)
  commentId: M:Global.IntBasePlatformer.UpdateDashDirection(UnityEngine.Vector2)
  id: UpdateDashDirection(UnityEngine.Vector2)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: UpdateDashDirection(Vector2)
  nameWithType: IntBasePlatformer.UpdateDashDirection(Vector2)
  fullName: IntBasePlatformer.UpdateDashDirection(UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UpdateDashDirection
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1416
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void UpdateDashDirection(Vector2 direction)
    parameters:
    - id: direction
      type: UnityEngine.Vector2
    content.vb: Protected Sub UpdateDashDirection(direction As Vector2)
  overload: Global.IntBasePlatformer.UpdateDashDirection*
- uid: Global.IntBasePlatformer.CanJump
  commentId: M:Global.IntBasePlatformer.CanJump
  id: CanJump
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: CanJump()
  nameWithType: IntBasePlatformer.CanJump()
  fullName: IntBasePlatformer.CanJump()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CanJump
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1452
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected bool CanJump()
    return:
      type: System.Boolean
    content.vb: Protected Function CanJump() As Boolean
  overload: Global.IntBasePlatformer.CanJump*
- uid: Global.IntBasePlatformer.JumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  commentId: M:Global.IntBasePlatformer.JumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  id: JumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: JumpCallback(PlatformerState, PlatformerState)
  nameWithType: IntBasePlatformer.JumpCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  fullName: IntBasePlatformer.JumpCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: JumpCallback
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1480
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void JumpCallback(IntBasePlatformer.PlatformerState from, IntBasePlatformer.PlatformerState to)
    parameters:
    - id: from
      type: Global.IntBasePlatformer.PlatformerState
    - id: to
      type: Global.IntBasePlatformer.PlatformerState
    content.vb: Protected Overridable Sub JumpCallback(from As IntBasePlatformer.PlatformerState, [to] As IntBasePlatformer.PlatformerState)
  overload: Global.IntBasePlatformer.JumpCallback*
- uid: Global.IntBasePlatformer.DoubleJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  commentId: M:Global.IntBasePlatformer.DoubleJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  id: DoubleJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DoubleJumpCallback(PlatformerState, PlatformerState)
  nameWithType: IntBasePlatformer.DoubleJumpCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  fullName: IntBasePlatformer.DoubleJumpCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DoubleJumpCallback
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1503
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void DoubleJumpCallback(IntBasePlatformer.PlatformerState from, IntBasePlatformer.PlatformerState to)
    parameters:
    - id: from
      type: Global.IntBasePlatformer.PlatformerState
    - id: to
      type: Global.IntBasePlatformer.PlatformerState
    content.vb: Protected Overridable Sub DoubleJumpCallback(from As IntBasePlatformer.PlatformerState, [to] As IntBasePlatformer.PlatformerState)
  overload: Global.IntBasePlatformer.DoubleJumpCallback*
- uid: Global.IntBasePlatformer.WallJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  commentId: M:Global.IntBasePlatformer.WallJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  id: WallJumpCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WallJumpCallback(PlatformerState, PlatformerState)
  nameWithType: IntBasePlatformer.WallJumpCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  fullName: IntBasePlatformer.WallJumpCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WallJumpCallback
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1520
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void WallJumpCallback(IntBasePlatformer.PlatformerState from, IntBasePlatformer.PlatformerState to)
    parameters:
    - id: from
      type: Global.IntBasePlatformer.PlatformerState
    - id: to
      type: Global.IntBasePlatformer.PlatformerState
    content.vb: Protected Overridable Sub WallJumpCallback(from As IntBasePlatformer.PlatformerState, [to] As IntBasePlatformer.PlatformerState)
  overload: Global.IntBasePlatformer.WallJumpCallback*
- uid: Global.IntBasePlatformer.JumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  commentId: M:Global.IntBasePlatformer.JumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  id: JumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: JumpLeaveCallback(PlatformerState, PlatformerState)
  nameWithType: IntBasePlatformer.JumpLeaveCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  fullName: IntBasePlatformer.JumpLeaveCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: JumpLeaveCallback
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1556
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void JumpLeaveCallback(IntBasePlatformer.PlatformerState from, IntBasePlatformer.PlatformerState to)
    parameters:
    - id: from
      type: Global.IntBasePlatformer.PlatformerState
    - id: to
      type: Global.IntBasePlatformer.PlatformerState
    content.vb: Protected Overridable Sub JumpLeaveCallback(from As IntBasePlatformer.PlatformerState, [to] As IntBasePlatformer.PlatformerState)
  overload: Global.IntBasePlatformer.JumpLeaveCallback*
- uid: Global.IntBasePlatformer.DoubleJumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  commentId: M:Global.IntBasePlatformer.DoubleJumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  id: DoubleJumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: DoubleJumpLeaveCallback(PlatformerState, PlatformerState)
  nameWithType: IntBasePlatformer.DoubleJumpLeaveCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  fullName: IntBasePlatformer.DoubleJumpLeaveCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DoubleJumpLeaveCallback
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1564
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void DoubleJumpLeaveCallback(IntBasePlatformer.PlatformerState from, IntBasePlatformer.PlatformerState to)
    parameters:
    - id: from
      type: Global.IntBasePlatformer.PlatformerState
    - id: to
      type: Global.IntBasePlatformer.PlatformerState
    content.vb: Protected Overridable Sub DoubleJumpLeaveCallback(from As IntBasePlatformer.PlatformerState, [to] As IntBasePlatformer.PlatformerState)
  overload: Global.IntBasePlatformer.DoubleJumpLeaveCallback*
- uid: Global.IntBasePlatformer.WallJumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  commentId: M:Global.IntBasePlatformer.WallJumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  id: WallJumpLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: WallJumpLeaveCallback(PlatformerState, PlatformerState)
  nameWithType: IntBasePlatformer.WallJumpLeaveCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  fullName: IntBasePlatformer.WallJumpLeaveCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WallJumpLeaveCallback
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1574
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void WallJumpLeaveCallback(IntBasePlatformer.PlatformerState from, IntBasePlatformer.PlatformerState to)
    parameters:
    - id: from
      type: Global.IntBasePlatformer.PlatformerState
    - id: to
      type: Global.IntBasePlatformer.PlatformerState
    content.vb: Protected Overridable Sub WallJumpLeaveCallback(from As IntBasePlatformer.PlatformerState, [to] As IntBasePlatformer.PlatformerState)
  overload: Global.IntBasePlatformer.WallJumpLeaveCallback*
- uid: Global.IntBasePlatformer.FallLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  commentId: M:Global.IntBasePlatformer.FallLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  id: FallLeaveCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: FallLeaveCallback(PlatformerState, PlatformerState)
  nameWithType: IntBasePlatformer.FallLeaveCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  fullName: IntBasePlatformer.FallLeaveCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: FallLeaveCallback
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1583
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void FallLeaveCallback(IntBasePlatformer.PlatformerState from, IntBasePlatformer.PlatformerState to)
    parameters:
    - id: from
      type: Global.IntBasePlatformer.PlatformerState
    - id: to
      type: Global.IntBasePlatformer.PlatformerState
    content.vb: Protected Overridable Sub FallLeaveCallback(from As IntBasePlatformer.PlatformerState, [to] As IntBasePlatformer.PlatformerState)
  overload: Global.IntBasePlatformer.FallLeaveCallback*
- uid: Global.IntBasePlatformer.GroundedCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  commentId: M:Global.IntBasePlatformer.GroundedCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  id: GroundedCallback(IntBasePlatformer.PlatformerState,IntBasePlatformer.PlatformerState)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: GroundedCallback(PlatformerState, PlatformerState)
  nameWithType: IntBasePlatformer.GroundedCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  fullName: IntBasePlatformer.GroundedCallback(IntBasePlatformer.PlatformerState, IntBasePlatformer.PlatformerState)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GroundedCallback
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1591
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void GroundedCallback(IntBasePlatformer.PlatformerState from, IntBasePlatformer.PlatformerState to)
    parameters:
    - id: from
      type: Global.IntBasePlatformer.PlatformerState
    - id: to
      type: Global.IntBasePlatformer.PlatformerState
    content.vb: Protected Overridable Sub GroundedCallback(from As IntBasePlatformer.PlatformerState, [to] As IntBasePlatformer.PlatformerState)
  overload: Global.IntBasePlatformer.GroundedCallback*
- uid: Global.IntBasePlatformer.Jump
  commentId: M:Global.IntBasePlatformer.Jump
  id: Jump
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: Jump()
  nameWithType: IntBasePlatformer.Jump()
  fullName: IntBasePlatformer.Jump()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Jump
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1601
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Jump()
    content.vb: Public Sub Jump()
  overload: Global.IntBasePlatformer.Jump*
- uid: Global.IntBasePlatformer.JumpRelease
  commentId: M:Global.IntBasePlatformer.JumpRelease
  id: JumpRelease
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: JumpRelease()
  nameWithType: IntBasePlatformer.JumpRelease()
  fullName: IntBasePlatformer.JumpRelease()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: JumpRelease
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1623
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void JumpRelease()
    content.vb: Public Sub JumpRelease()
  overload: Global.IntBasePlatformer.JumpRelease*
- uid: Global.IntBasePlatformer.ResetDoubleJump
  commentId: M:Global.IntBasePlatformer.ResetDoubleJump
  id: ResetDoubleJump
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: ResetDoubleJump()
  nameWithType: IntBasePlatformer.ResetDoubleJump()
  fullName: IntBasePlatformer.ResetDoubleJump()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResetDoubleJump
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1645
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void ResetDoubleJump()
    content.vb: Public Sub ResetDoubleJump()
  overload: Global.IntBasePlatformer.ResetDoubleJump*
- uid: Global.IntBasePlatformer.ShouldAttackChargeReset
  commentId: M:Global.IntBasePlatformer.ShouldAttackChargeReset
  id: ShouldAttackChargeReset
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: ShouldAttackChargeReset()
  nameWithType: IntBasePlatformer.ShouldAttackChargeReset()
  fullName: IntBasePlatformer.ShouldAttackChargeReset()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ShouldAttackChargeReset
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1659
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual bool ShouldAttackChargeReset()
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function ShouldAttackChargeReset() As Boolean
  overload: Global.IntBasePlatformer.ShouldAttackChargeReset*
- uid: Global.IntBasePlatformer.ChargeAttack
  commentId: M:Global.IntBasePlatformer.ChargeAttack
  id: ChargeAttack
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: ChargeAttack()
  nameWithType: IntBasePlatformer.ChargeAttack()
  fullName: IntBasePlatformer.ChargeAttack()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ChargeAttack
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1664
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void ChargeAttack()
    content.vb: Protected Sub ChargeAttack()
  overload: Global.IntBasePlatformer.ChargeAttack*
- uid: Global.IntBasePlatformer.IsCharged
  commentId: M:Global.IntBasePlatformer.IsCharged
  id: IsCharged
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: IsCharged()
  nameWithType: IntBasePlatformer.IsCharged()
  fullName: IntBasePlatformer.IsCharged()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsCharged
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1673
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsCharged()
    return:
      type: System.Boolean
    content.vb: Public Function IsCharged() As Boolean
  overload: Global.IntBasePlatformer.IsCharged*
- uid: Global.IntBasePlatformer.ReleaseAttack
  commentId: M:Global.IntBasePlatformer.ReleaseAttack
  id: ReleaseAttack
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: ReleaseAttack()
  nameWithType: IntBasePlatformer.ReleaseAttack()
  fullName: IntBasePlatformer.ReleaseAttack()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ReleaseAttack
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1678
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void ReleaseAttack()
    content.vb: Public Sub ReleaseAttack()
  overload: Global.IntBasePlatformer.ReleaseAttack*
- uid: Global.IntBasePlatformer.OnAttackChargeUnused
  commentId: M:Global.IntBasePlatformer.OnAttackChargeUnused
  id: OnAttackChargeUnused
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: OnAttackChargeUnused()
  nameWithType: IntBasePlatformer.OnAttackChargeUnused()
  fullName: IntBasePlatformer.OnAttackChargeUnused()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnAttackChargeUnused
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1685
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void OnAttackChargeUnused()
    content.vb: Protected Overridable Sub OnAttackChargeUnused()
  overload: Global.IntBasePlatformer.OnAttackChargeUnused*
- uid: Global.IntBasePlatformer.OnAttackCharged
  commentId: M:Global.IntBasePlatformer.OnAttackCharged
  id: OnAttackCharged
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: OnAttackCharged()
  nameWithType: IntBasePlatformer.OnAttackCharged()
  fullName: IntBasePlatformer.OnAttackCharged()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnAttackCharged
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1687
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void OnAttackCharged()
    content.vb: Protected Overridable Sub OnAttackCharged()
  overload: Global.IntBasePlatformer.OnAttackCharged*
- uid: Global.IntBasePlatformer.SetInvisibility(System.Boolean)
  commentId: M:Global.IntBasePlatformer.SetInvisibility(System.Boolean)
  id: SetInvisibility(System.Boolean)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: SetInvisibility(bool)
  nameWithType: IntBasePlatformer.SetInvisibility(bool)
  fullName: IntBasePlatformer.SetInvisibility(bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetInvisibility
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1702
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetInvisibility(bool Invisible)
    parameters:
    - id: Invisible
      type: System.Boolean
    content.vb: Public Sub SetInvisibility(Invisible As Boolean)
  overload: Global.IntBasePlatformer.SetInvisibility*
  nameWithType.vb: IntBasePlatformer.SetInvisibility(Boolean)
  fullName.vb: IntBasePlatformer.SetInvisibility(Boolean)
  name.vb: SetInvisibility(Boolean)
- uid: Global.IntBasePlatformer.SetInvisibilityWarning(System.Boolean)
  commentId: M:Global.IntBasePlatformer.SetInvisibilityWarning(System.Boolean)
  id: SetInvisibilityWarning(System.Boolean)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: SetInvisibilityWarning(bool)
  nameWithType: IntBasePlatformer.SetInvisibilityWarning(bool)
  fullName: IntBasePlatformer.SetInvisibilityWarning(bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetInvisibilityWarning
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1708
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetInvisibilityWarning(bool Warning)
    parameters:
    - id: Warning
      type: System.Boolean
    content.vb: Public Sub SetInvisibilityWarning(Warning As Boolean)
  overload: Global.IntBasePlatformer.SetInvisibilityWarning*
  nameWithType.vb: IntBasePlatformer.SetInvisibilityWarning(Boolean)
  fullName.vb: IntBasePlatformer.SetInvisibilityWarning(Boolean)
  name.vb: SetInvisibilityWarning(Boolean)
- uid: Global.IntBasePlatformer.IsInvisible
  commentId: M:Global.IntBasePlatformer.IsInvisible
  id: IsInvisible
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: IsInvisible()
  nameWithType: IntBasePlatformer.IsInvisible()
  fullName: IntBasePlatformer.IsInvisible()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsInvisible
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1713
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsInvisible()
    return:
      type: System.Boolean
    content.vb: Public Function IsInvisible() As Boolean
  overload: Global.IntBasePlatformer.IsInvisible*
- uid: Global.IntBasePlatformer.GetVelocity
  commentId: M:Global.IntBasePlatformer.GetVelocity
  id: GetVelocity
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: GetVelocity()
  nameWithType: IntBasePlatformer.GetVelocity()
  fullName: IntBasePlatformer.GetVelocity()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetVelocity
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1718
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override Vector2 GetVelocity()
    return:
      type: UnityEngine.Vector2
    content.vb: Public Overrides Function GetVelocity() As Vector2
  overridden: Global.IntActor.GetVelocity
  overload: Global.IntBasePlatformer.GetVelocity*
- uid: Global.IntBasePlatformer.SetVelocity(UnityEngine.Vector2)
  commentId: M:Global.IntBasePlatformer.SetVelocity(UnityEngine.Vector2)
  id: SetVelocity(UnityEngine.Vector2)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: SetVelocity(Vector2)
  nameWithType: IntBasePlatformer.SetVelocity(Vector2)
  fullName: IntBasePlatformer.SetVelocity(UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetVelocity
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1723
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetVelocity(Vector2 new_velocity)
    parameters:
    - id: new_velocity
      type: UnityEngine.Vector2
    content.vb: Public Sub SetVelocity(new_velocity As Vector2)
  overload: Global.IntBasePlatformer.SetVelocity*
- uid: Global.IntBasePlatformer.GetStateMachine
  commentId: M:Global.IntBasePlatformer.GetStateMachine
  id: GetStateMachine
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: GetStateMachine()
  nameWithType: IntBasePlatformer.GetStateMachine()
  fullName: IntBasePlatformer.GetStateMachine()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetStateMachine
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1728
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public StateMachine<IntBasePlatformer.PlatformerState> GetStateMachine()
    return:
      type: Global.StateMachine{IntBasePlatformer.PlatformerState}
    content.vb: Public Function GetStateMachine() As StateMachine(Of IntBasePlatformer.PlatformerState)
  overload: Global.IntBasePlatformer.GetStateMachine*
- uid: Global.IntBasePlatformer.SpawnAura
  commentId: M:Global.IntBasePlatformer.SpawnAura
  id: SpawnAura
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: SpawnAura()
  nameWithType: IntBasePlatformer.SpawnAura()
  fullName: IntBasePlatformer.SpawnAura()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SpawnAura
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1737
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public GameObject SpawnAura()
    return:
      type: UnityEngine.GameObject
    content.vb: Public Function SpawnAura() As GameObject
  overload: Global.IntBasePlatformer.SpawnAura*
  implements:
  - Global.IEntity.SpawnAura
- uid: Global.IntBasePlatformer.ShedSpores
  commentId: M:Global.IntBasePlatformer.ShedSpores
  id: ShedSpores
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: ShedSpores()
  nameWithType: IntBasePlatformer.ShedSpores()
  fullName: IntBasePlatformer.ShedSpores()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ShedSpores
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1749
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nRemove all spores that are currently attached\n"
  example: []
  syntax:
    content: public void ShedSpores()
    content.vb: Public Sub ShedSpores()
  overload: Global.IntBasePlatformer.ShedSpores*
- uid: Global.IntBasePlatformer.GetOverlappingActors
  commentId: M:Global.IntBasePlatformer.GetOverlappingActors
  id: GetOverlappingActors
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: GetOverlappingActors()
  nameWithType: IntBasePlatformer.GetOverlappingActors()
  fullName: IntBasePlatformer.GetOverlappingActors()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetOverlappingActors
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1759
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected List<IntActor> GetOverlappingActors()
    return:
      type: System.Collections.Generic.List{IntActor}
    content.vb: Protected Function GetOverlappingActors() As List(Of IntActor)
  overload: Global.IntBasePlatformer.GetOverlappingActors*
- uid: Global.IntBasePlatformer.GetOverlappingTriggers
  commentId: M:Global.IntBasePlatformer.GetOverlappingTriggers
  id: GetOverlappingTriggers
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: GetOverlappingTriggers()
  nameWithType: IntBasePlatformer.GetOverlappingTriggers()
  fullName: IntBasePlatformer.GetOverlappingTriggers()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetOverlappingTriggers
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1770
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected List<IntTrigger> GetOverlappingTriggers()
    return:
      type: System.Collections.Generic.List{IntTrigger}
    content.vb: Protected Function GetOverlappingTriggers() As List(Of IntTrigger)
  overload: Global.IntBasePlatformer.GetOverlappingTriggers*
- uid: Global.IntBasePlatformer.OnRespawnInsidePlatform(SpecialPlatform)
  commentId: M:Global.IntBasePlatformer.OnRespawnInsidePlatform(SpecialPlatform)
  id: OnRespawnInsidePlatform(SpecialPlatform)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: OnRespawnInsidePlatform(SpecialPlatform)
  nameWithType: IntBasePlatformer.OnRespawnInsidePlatform(SpecialPlatform)
  fullName: IntBasePlatformer.OnRespawnInsidePlatform(SpecialPlatform)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnRespawnInsidePlatform
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1781
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void OnRespawnInsidePlatform(SpecialPlatform platform)
    parameters:
    - id: platform
      type: Global.SpecialPlatform
    content.vb: Public Overridable Sub OnRespawnInsidePlatform(platform As SpecialPlatform)
  overload: Global.IntBasePlatformer.OnRespawnInsidePlatform*
- uid: Global.IntBasePlatformer.OnCollideX(IntSolid)
  commentId: M:Global.IntBasePlatformer.OnCollideX(IntSolid)
  id: OnCollideX(IntSolid)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: OnCollideX(IntSolid)
  nameWithType: IntBasePlatformer.OnCollideX(IntSolid)
  fullName: IntBasePlatformer.OnCollideX(IntSolid)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnCollideX
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1808
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void OnCollideX(IntSolid solid)
    parameters:
    - id: solid
      type: Global.IntSolid
    content.vb: Protected Overridable Sub OnCollideX(solid As IntSolid)
  overload: Global.IntBasePlatformer.OnCollideX*
- uid: Global.IntBasePlatformer.OnCollideY(IntSolid)
  commentId: M:Global.IntBasePlatformer.OnCollideY(IntSolid)
  id: OnCollideY(IntSolid)
  parent: Global.IntBasePlatformer
  langs:
  - csharp
  - vb
  name: OnCollideY(IntSolid)
  nameWithType: IntBasePlatformer.OnCollideY(IntSolid)
  fullName: IntBasePlatformer.OnCollideY(IntSolid)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnCollideY
    path: ../Assets/Objects & Components/Entities/Player/IntBasePlatformer.cs
    startLine: 1822
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void OnCollideY(IntSolid solid)
    parameters:
    - id: solid
      type: Global.IntSolid
    content.vb: Protected Overridable Sub OnCollideY(solid As IntSolid)
  overload: Global.IntBasePlatformer.OnCollideY*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Global.IntObject
  commentId: T:Global.IntObject
  name: IntObject
  nameWithType: IntObject
  fullName: IntObject
- uid: Global.IntActor
  commentId: T:Global.IntActor
  name: IntActor
  nameWithType: IntActor
  fullName: IntActor
- uid: Global.ISavableObject{IntObjectSaveData}
  commentId: T:Global.ISavableObject{IntObjectSaveData}
  definition: Global.ISavableObject`1
  name: ISavableObject<IntObjectSaveData>
  nameWithType: ISavableObject<IntObjectSaveData>
  fullName: ISavableObject<IntObjectSaveData>
  nameWithType.vb: ISavableObject(Of IntObjectSaveData)
  fullName.vb: ISavableObject(Of IntObjectSaveData)
  name.vb: ISavableObject(Of IntObjectSaveData)
  spec.csharp:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: <
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: '>'
  spec.vb:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
- uid: Global.IEntity
  commentId: T:Global.IEntity
  name: IEntity
  nameWithType: IEntity
  fullName: IEntity
- uid: Global.IntActor.HurtBySpike
  commentId: F:Global.IntActor.HurtBySpike
  parent: Global.IntActor
  name: HurtBySpike
  nameWithType: IntActor.HurtBySpike
  fullName: IntActor.HurtBySpike
- uid: Global.IntActor.aabb
  commentId: F:Global.IntActor.aabb
  parent: Global.IntActor
  name: aabb
  nameWithType: IntActor.aabb
  fullName: IntActor.aabb
- uid: Global.IntActor.Left
  commentId: P:Global.IntActor.Left
  parent: Global.IntActor
  name: Left
  nameWithType: IntActor.Left
  fullName: IntActor.Left
- uid: Global.IntActor.Right
  commentId: P:Global.IntActor.Right
  parent: Global.IntActor
  name: Right
  nameWithType: IntActor.Right
  fullName: IntActor.Right
- uid: Global.IntActor.Top
  commentId: P:Global.IntActor.Top
  parent: Global.IntActor
  name: Top
  nameWithType: IntActor.Top
  fullName: IntActor.Top
- uid: Global.IntActor.Bottom
  commentId: P:Global.IntActor.Bottom
  parent: Global.IntActor
  name: Bottom
  nameWithType: IntActor.Bottom
  fullName: IntActor.Bottom
- uid: Global.IntActor.Size
  commentId: P:Global.IntActor.Size
  parent: Global.IntActor
  name: Size
  nameWithType: IntActor.Size
  fullName: IntActor.Size
- uid: Global.IntActor.WindInfluence
  commentId: F:Global.IntActor.WindInfluence
  parent: Global.IntActor
  name: WindInfluence
  nameWithType: IntActor.WindInfluence
  fullName: IntActor.WindInfluence
- uid: Global.IntActor.OnTakeDamageCallback
  commentId: F:Global.IntActor.OnTakeDamageCallback
  parent: Global.IntActor
  name: OnTakeDamageCallback
  nameWithType: IntActor.OnTakeDamageCallback
  fullName: IntActor.OnTakeDamageCallback
- uid: Global.IntActor.RidingSolid
  commentId: P:Global.IntActor.RidingSolid
  parent: Global.IntActor
  name: RidingSolid
  nameWithType: IntActor.RidingSolid
  fullName: IntActor.RidingSolid
- uid: Global.IntActor.RidingTangent
  commentId: P:Global.IntActor.RidingTangent
  parent: Global.IntActor
  name: RidingTangent
  nameWithType: IntActor.RidingTangent
  fullName: IntActor.RidingTangent
- uid: Global.IntActor.RidingNormal
  commentId: P:Global.IntActor.RidingNormal
  parent: Global.IntActor
  name: RidingNormal
  nameWithType: IntActor.RidingNormal
  fullName: IntActor.RidingNormal
- uid: Global.IntActor.IsRidingFlatSurface
  commentId: P:Global.IntActor.IsRidingFlatSurface
  parent: Global.IntActor
  name: IsRidingFlatSurface
  nameWithType: IntActor.IsRidingFlatSurface
  fullName: IntActor.IsRidingFlatSurface
- uid: Global.IntActor.Awake
  commentId: M:Global.IntActor.Awake
  parent: Global.IntActor
  name: Awake()
  nameWithType: IntActor.Awake()
  fullName: IntActor.Awake()
  spec.csharp:
  - uid: Global.IntActor.Awake
    name: Awake
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.Awake
    name: Awake
  - name: (
  - name: )
- uid: Global.IntActor.ManualInit
  commentId: M:Global.IntActor.ManualInit
  parent: Global.IntActor
  name: ManualInit()
  nameWithType: IntActor.ManualInit()
  fullName: IntActor.ManualInit()
  spec.csharp:
  - uid: Global.IntActor.ManualInit
    name: ManualInit
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.ManualInit
    name: ManualInit
  - name: (
  - name: )
- uid: Global.IntActor.GetAABBIntCollider
  commentId: M:Global.IntActor.GetAABBIntCollider
  parent: Global.IntActor
  name: GetAABBIntCollider()
  nameWithType: IntActor.GetAABBIntCollider()
  fullName: IntActor.GetAABBIntCollider()
  spec.csharp:
  - uid: Global.IntActor.GetAABBIntCollider
    name: GetAABBIntCollider
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetAABBIntCollider
    name: GetAABBIntCollider
  - name: (
  - name: )
- uid: Global.IntActor.EnsureAABBIntColliderSet
  commentId: M:Global.IntActor.EnsureAABBIntColliderSet
  parent: Global.IntActor
  name: EnsureAABBIntColliderSet()
  nameWithType: IntActor.EnsureAABBIntColliderSet()
  fullName: IntActor.EnsureAABBIntColliderSet()
  spec.csharp:
  - uid: Global.IntActor.EnsureAABBIntColliderSet
    name: EnsureAABBIntColliderSet
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.EnsureAABBIntColliderSet
    name: EnsureAABBIntColliderSet
  - name: (
  - name: )
- uid: Global.IntActor.IsRiding(IntSolid)
  commentId: M:Global.IntActor.IsRiding(IntSolid)
  parent: Global.IntActor
  name: IsRiding(IntSolid)
  nameWithType: IntActor.IsRiding(IntSolid)
  fullName: IntActor.IsRiding(IntSolid)
  spec.csharp:
  - uid: Global.IntActor.IsRiding(IntSolid)
    name: IsRiding
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.IntActor.IsRiding(IntSolid)
    name: IsRiding
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
  commentId: M:Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
  parent: Global.IntActor
  isExternal: true
  name: IsWalkingFlatOrUphill(Vector2)
  nameWithType: IntActor.IsWalkingFlatOrUphill(Vector2)
  fullName: IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
    name: IsWalkingFlatOrUphill
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
    name: IsWalkingFlatOrUphill
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
  commentId: M:Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
  parent: Global.IntActor
  isExternal: true
  name: GetEffectiveVelocity(Vector2)
  nameWithType: IntActor.GetEffectiveVelocity(Vector2)
  fullName: IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
    name: GetEffectiveVelocity
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
    name: GetEffectiveVelocity
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntActor.IsTouchingWall(IntSolid)
  commentId: M:Global.IntActor.IsTouchingWall(IntSolid)
  parent: Global.IntActor
  name: IsTouchingWall(IntSolid)
  nameWithType: IntActor.IsTouchingWall(IntSolid)
  fullName: IntActor.IsTouchingWall(IntSolid)
  spec.csharp:
  - uid: Global.IntActor.IsTouchingWall(IntSolid)
    name: IsTouchingWall
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.IntActor.IsTouchingWall(IntSolid)
    name: IsTouchingWall
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
  commentId: M:Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
  parent: Global.IntActor
  isExternal: true
  name: SolidContainsPoint(Vector2Int)
  nameWithType: IntActor.SolidContainsPoint(Vector2Int)
  fullName: IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
    name: SolidContainsPoint
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
    name: SolidContainsPoint
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  commentId: M:Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  parent: Global.IntActor
  name: RegisterOnTakeDamageCallback(Action)
  nameWithType: IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  fullName: IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
    name: RegisterOnTakeDamageCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
    name: RegisterOnTakeDamageCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  commentId: M:Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  parent: Global.IntActor
  name: UnregisterOnTakeDamageCallback(Action)
  nameWithType: IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  fullName: IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
    name: UnregisterOnTakeDamageCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
    name: UnregisterOnTakeDamageCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntActor.OnTakeDamage(System.Int32)
  commentId: M:Global.IntActor.OnTakeDamage(System.Int32)
  parent: Global.IntActor
  isExternal: true
  name: OnTakeDamage(int)
  nameWithType: IntActor.OnTakeDamage(int)
  fullName: IntActor.OnTakeDamage(int)
  nameWithType.vb: IntActor.OnTakeDamage(Integer)
  fullName.vb: IntActor.OnTakeDamage(Integer)
  name.vb: OnTakeDamage(Integer)
  spec.csharp:
  - uid: Global.IntActor.OnTakeDamage(System.Int32)
    name: OnTakeDamage
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnTakeDamage(System.Int32)
    name: OnTakeDamage
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Global.IntActor.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  commentId: M:Global.IntActor.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  parent: Global.IntActor
  isExternal: true
  name: TakeDamage(int, bool, bool, DamageType)
  nameWithType: IntActor.TakeDamage(int, bool, bool, DamageType)
  fullName: IntActor.TakeDamage(int, bool, bool, DamageType)
  nameWithType.vb: IntActor.TakeDamage(Integer, Boolean, Boolean, DamageType)
  fullName.vb: IntActor.TakeDamage(Integer, Boolean, Boolean, DamageType)
  name.vb: TakeDamage(Integer, Boolean, Boolean, DamageType)
  spec.csharp:
  - uid: Global.IntActor.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
    name: TakeDamage
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.DamageType
    name: DamageType
  - name: )
  spec.vb:
  - uid: Global.IntActor.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
    name: TakeDamage
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.DamageType
    name: DamageType
  - name: )
- uid: Global.IntActor.ResetAuraCollisionMap
  commentId: M:Global.IntActor.ResetAuraCollisionMap
  parent: Global.IntActor
  name: ResetAuraCollisionMap()
  nameWithType: IntActor.ResetAuraCollisionMap()
  fullName: IntActor.ResetAuraCollisionMap()
  spec.csharp:
  - uid: Global.IntActor.ResetAuraCollisionMap
    name: ResetAuraCollisionMap
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResetAuraCollisionMap
    name: ResetAuraCollisionMap
  - name: (
  - name: )
- uid: Global.IntActor.ResetActorCollisionMap
  commentId: M:Global.IntActor.ResetActorCollisionMap
  parent: Global.IntActor
  name: ResetActorCollisionMap()
  nameWithType: IntActor.ResetActorCollisionMap()
  fullName: IntActor.ResetActorCollisionMap()
  spec.csharp:
  - uid: Global.IntActor.ResetActorCollisionMap
    name: ResetActorCollisionMap
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResetActorCollisionMap
    name: ResetActorCollisionMap
  - name: (
  - name: )
- uid: Global.IntActor.ResetCollisionMap
  commentId: M:Global.IntActor.ResetCollisionMap
  parent: Global.IntActor
  name: ResetCollisionMap()
  nameWithType: IntActor.ResetCollisionMap()
  fullName: IntActor.ResetCollisionMap()
  spec.csharp:
  - uid: Global.IntActor.ResetCollisionMap
    name: ResetCollisionMap
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResetCollisionMap
    name: ResetCollisionMap
  - name: (
  - name: )
- uid: Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
  commentId: M:Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
  parent: Global.IntActor
  isExternal: true
  name: ResetCollisionsAfterTime(IntObject, float)
  nameWithType: IntActor.ResetCollisionsAfterTime(IntObject, float)
  fullName: IntActor.ResetCollisionsAfterTime(IntObject, float)
  nameWithType.vb: IntActor.ResetCollisionsAfterTime(IntObject, Single)
  fullName.vb: IntActor.ResetCollisionsAfterTime(IntObject, Single)
  name.vb: ResetCollisionsAfterTime(IntObject, Single)
  spec.csharp:
  - uid: Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
    name: ResetCollisionsAfterTime
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
    name: ResetCollisionsAfterTime
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
  commentId: M:Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
  parent: Global.IntActor
  isExternal: true
  name: SetCollisionMapValue(IntObject, bool)
  nameWithType: IntActor.SetCollisionMapValue(IntObject, bool)
  fullName: IntActor.SetCollisionMapValue(IntObject, bool)
  nameWithType.vb: IntActor.SetCollisionMapValue(IntObject, Boolean)
  fullName.vb: IntActor.SetCollisionMapValue(IntObject, Boolean)
  name.vb: SetCollisionMapValue(IntObject, Boolean)
  spec.csharp:
  - uid: Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
    name: SetCollisionMapValue
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
    name: SetCollisionMapValue
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntActor.GetCollisionMapValue(IntObject)
  commentId: M:Global.IntActor.GetCollisionMapValue(IntObject)
  parent: Global.IntActor
  name: GetCollisionMapValue(IntObject)
  nameWithType: IntActor.GetCollisionMapValue(IntObject)
  fullName: IntActor.GetCollisionMapValue(IntObject)
  spec.csharp:
  - uid: Global.IntActor.GetCollisionMapValue(IntObject)
    name: GetCollisionMapValue
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetCollisionMapValue(IntObject)
    name: GetCollisionMapValue
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
- uid: Global.IntActor.Squish(IntSolid)
  commentId: M:Global.IntActor.Squish(IntSolid)
  parent: Global.IntActor
  name: Squish(IntSolid)
  nameWithType: IntActor.Squish(IntSolid)
  fullName: IntActor.Squish(IntSolid)
  spec.csharp:
  - uid: Global.IntActor.Squish(IntSolid)
    name: Squish
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.IntActor.Squish(IntSolid)
    name: Squish
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.IntActor.OnTriggerStart(IntTrigger)
  commentId: M:Global.IntActor.OnTriggerStart(IntTrigger)
  parent: Global.IntActor
  name: OnTriggerStart(IntTrigger)
  nameWithType: IntActor.OnTriggerStart(IntTrigger)
  fullName: IntActor.OnTriggerStart(IntTrigger)
  spec.csharp:
  - uid: Global.IntActor.OnTriggerStart(IntTrigger)
    name: OnTriggerStart
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnTriggerStart(IntTrigger)
    name: OnTriggerStart
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
- uid: Global.IntActor.OnTriggerEnd(IntTrigger)
  commentId: M:Global.IntActor.OnTriggerEnd(IntTrigger)
  parent: Global.IntActor
  name: OnTriggerEnd(IntTrigger)
  nameWithType: IntActor.OnTriggerEnd(IntTrigger)
  fullName: IntActor.OnTriggerEnd(IntTrigger)
  spec.csharp:
  - uid: Global.IntActor.OnTriggerEnd(IntTrigger)
    name: OnTriggerEnd
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnTriggerEnd(IntTrigger)
    name: OnTriggerEnd
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
- uid: Global.IntActor.OnActor(IntActor)
  commentId: M:Global.IntActor.OnActor(IntActor)
  parent: Global.IntActor
  name: OnActor(IntActor)
  nameWithType: IntActor.OnActor(IntActor)
  fullName: IntActor.OnActor(IntActor)
  spec.csharp:
  - uid: Global.IntActor.OnActor(IntActor)
    name: OnActor
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnActor(IntActor)
    name: OnActor
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
- uid: Global.IntActor.CheckGrounded
  commentId: M:Global.IntActor.CheckGrounded
  parent: Global.IntActor
  name: CheckGrounded()
  nameWithType: IntActor.CheckGrounded()
  fullName: IntActor.CheckGrounded()
  spec.csharp:
  - uid: Global.IntActor.CheckGrounded
    name: CheckGrounded
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.CheckGrounded
    name: CheckGrounded
  - name: (
  - name: )
- uid: Global.IntActor.GroundActor
  commentId: M:Global.IntActor.GroundActor
  parent: Global.IntActor
  name: GroundActor()
  nameWithType: IntActor.GroundActor()
  fullName: IntActor.GroundActor()
  spec.csharp:
  - uid: Global.IntActor.GroundActor
    name: GroundActor
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.GroundActor
    name: GroundActor
  - name: (
  - name: )
- uid: Global.IntActor.CheckOnWall
  commentId: M:Global.IntActor.CheckOnWall
  parent: Global.IntActor
  name: CheckOnWall()
  nameWithType: IntActor.CheckOnWall()
  fullName: IntActor.CheckOnWall()
  spec.csharp:
  - uid: Global.IntActor.CheckOnWall
    name: CheckOnWall
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.CheckOnWall
    name: CheckOnWall
  - name: (
  - name: )
- uid: Global.IntActor.DropDownOneWay
  commentId: M:Global.IntActor.DropDownOneWay
  parent: Global.IntActor
  name: DropDownOneWay()
  nameWithType: IntActor.DropDownOneWay()
  fullName: IntActor.DropDownOneWay()
  spec.csharp:
  - uid: Global.IntActor.DropDownOneWay
    name: DropDownOneWay
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.DropDownOneWay
    name: DropDownOneWay
  - name: (
  - name: )
- uid: Global.IntActor.activeWater
  commentId: P:Global.IntActor.activeWater
  parent: Global.IntActor
  name: activeWater
  nameWithType: IntActor.activeWater
  fullName: IntActor.activeWater
- uid: Global.IntActor.GetSubmergedPercentage
  commentId: M:Global.IntActor.GetSubmergedPercentage
  parent: Global.IntActor
  name: GetSubmergedPercentage()
  nameWithType: IntActor.GetSubmergedPercentage()
  fullName: IntActor.GetSubmergedPercentage()
  spec.csharp:
  - uid: Global.IntActor.GetSubmergedPercentage
    name: GetSubmergedPercentage
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetSubmergedPercentage
    name: GetSubmergedPercentage
  - name: (
  - name: )
- uid: Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
  commentId: M:Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
  parent: Global.IntActor
  isExternal: true
  name: GetSubmergedPercentage(Vector2Int)
  nameWithType: IntActor.GetSubmergedPercentage(Vector2Int)
  fullName: IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
    name: GetSubmergedPercentage
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
    name: GetSubmergedPercentage
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntActor.IsInWater
  commentId: P:Global.IntActor.IsInWater
  parent: Global.IntActor
  name: IsInWater
  nameWithType: IntActor.IsInWater
  fullName: IntActor.IsInWater
- uid: Global.IntActor.OnEnterWater(WaterComponent,System.Single)
  commentId: M:Global.IntActor.OnEnterWater(WaterComponent,System.Single)
  parent: Global.IntActor
  isExternal: true
  name: OnEnterWater(WaterComponent, float)
  nameWithType: IntActor.OnEnterWater(WaterComponent, float)
  fullName: IntActor.OnEnterWater(WaterComponent, float)
  nameWithType.vb: IntActor.OnEnterWater(WaterComponent, Single)
  fullName.vb: IntActor.OnEnterWater(WaterComponent, Single)
  name.vb: OnEnterWater(WaterComponent, Single)
  spec.csharp:
  - uid: Global.IntActor.OnEnterWater(WaterComponent,System.Single)
    name: OnEnterWater
  - name: (
  - uid: Global.WaterComponent
    name: WaterComponent
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnEnterWater(WaterComponent,System.Single)
    name: OnEnterWater
  - name: (
  - uid: Global.WaterComponent
    name: WaterComponent
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntActor.OnExitWater(WaterComponent)
  commentId: M:Global.IntActor.OnExitWater(WaterComponent)
  parent: Global.IntActor
  name: OnExitWater(WaterComponent)
  nameWithType: IntActor.OnExitWater(WaterComponent)
  fullName: IntActor.OnExitWater(WaterComponent)
  spec.csharp:
  - uid: Global.IntActor.OnExitWater(WaterComponent)
    name: OnExitWater
  - name: (
  - uid: Global.WaterComponent
    name: WaterComponent
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnExitWater(WaterComponent)
    name: OnExitWater
  - name: (
  - uid: Global.WaterComponent
    name: WaterComponent
  - name: )
- uid: Global.IntActor.ApplyWind(UnityEngine.Vector2)
  commentId: M:Global.IntActor.ApplyWind(UnityEngine.Vector2)
  parent: Global.IntActor
  isExternal: true
  name: ApplyWind(Vector2)
  nameWithType: IntActor.ApplyWind(Vector2)
  fullName: IntActor.ApplyWind(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntActor.ApplyWind(UnityEngine.Vector2)
    name: ApplyWind
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.ApplyWind(UnityEngine.Vector2)
    name: ApplyWind
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntActor.RemoveWind
  commentId: M:Global.IntActor.RemoveWind
  parent: Global.IntActor
  name: RemoveWind()
  nameWithType: IntActor.RemoveWind()
  fullName: IntActor.RemoveWind()
  spec.csharp:
  - uid: Global.IntActor.RemoveWind
    name: RemoveWind
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.RemoveWind
    name: RemoveWind
  - name: (
  - name: )
- uid: Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: ResolvePosition(Vector2, float, int, bool, bool, ActorAction, TriggerAction)
  nameWithType: IntActor.ResolvePosition(Vector2, float, int, bool, bool, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.ResolvePosition(UnityEngine.Vector2, float, int, bool, bool, IntObject.ActorAction, IntObject.TriggerAction)
  nameWithType.vb: IntActor.ResolvePosition(Vector2, Single, Integer, Boolean, Boolean, IntObject.ActorAction, IntObject.TriggerAction)
  fullName.vb: IntActor.ResolvePosition(UnityEngine.Vector2, Single, Integer, Boolean, Boolean, IntObject.ActorAction, IntObject.TriggerAction)
  name.vb: ResolvePosition(Vector2, Single, Integer, Boolean, Boolean, ActorAction, TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
    name: ResolvePosition
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
    name: ResolvePosition
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
  commentId: M:Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
  parent: Global.IntActor
  isExternal: true
  name: ResolvePositionNoSlide(Vector2Int)
  nameWithType: IntActor.ResolvePositionNoSlide(Vector2Int)
  fullName: IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
    name: ResolvePositionNoSlide
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
    name: ResolvePositionNoSlide
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
  commentId: M:Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
  parent: Global.IntActor
  isExternal: true
  name: EfficientMove(Vector2, SolidAction, SolidAction)
  nameWithType: IntActor.EfficientMove(Vector2, IntObject.SolidAction, IntObject.SolidAction)
  fullName: IntActor.EfficientMove(UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction)
  spec.csharp:
  - uid: Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
    name: EfficientMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
    name: EfficientMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
- uid: Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: MoveX(float, SolidAction, ActorAction, TriggerAction)
  nameWithType: IntActor.MoveX(float, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.MoveX(float, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  nameWithType.vb: IntActor.MoveX(Single, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName.vb: IntActor.MoveX(Single, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  name.vb: MoveX(Single, SolidAction, ActorAction, TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: MoveX
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: MoveX
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: MoveY(float, SolidAction, ActorAction, TriggerAction)
  nameWithType: IntActor.MoveY(float, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.MoveY(float, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  nameWithType.vb: IntActor.MoveY(Single, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName.vb: IntActor.MoveY(Single, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  name.vb: MoveY(Single, SolidAction, ActorAction, TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: MoveY
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: MoveY
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
  commentId: M:Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
  parent: Global.IntActor
  isExternal: true
  name: getIntersectParameters(int, float, float, float)
  nameWithType: IntActor.getIntersectParameters(int, float, float, float)
  fullName: IntActor.getIntersectParameters(int, float, float, float)
  nameWithType.vb: IntActor.getIntersectParameters(Integer, Single, Single, Single)
  fullName.vb: IntActor.getIntersectParameters(Integer, Single, Single, Single)
  name.vb: getIntersectParameters(Integer, Single, Single, Single)
  spec.csharp:
  - uid: Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
    name: getIntersectParameters
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
    name: getIntersectParameters
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntActor.NotifyObjectKilled(IntObject)
  commentId: M:Global.IntActor.NotifyObjectKilled(IntObject)
  parent: Global.IntActor
  name: NotifyObjectKilled(IntObject)
  nameWithType: IntActor.NotifyObjectKilled(IntObject)
  fullName: IntActor.NotifyObjectKilled(IntObject)
  spec.csharp:
  - uid: Global.IntActor.NotifyObjectKilled(IntObject)
    name: NotifyObjectKilled
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
  spec.vb:
  - uid: Global.IntActor.NotifyObjectKilled(IntObject)
    name: NotifyObjectKilled
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
- uid: Global.IntActor.OnSpike(IntSolid)
  commentId: M:Global.IntActor.OnSpike(IntSolid)
  parent: Global.IntActor
  name: OnSpike(IntSolid)
  nameWithType: IntActor.OnSpike(IntSolid)
  fullName: IntActor.OnSpike(IntSolid)
  spec.csharp:
  - uid: Global.IntActor.OnSpike(IntSolid)
    name: OnSpike
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnSpike(IntSolid)
    name: OnSpike
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: SlantMove(Vector2, ActorAction, TriggerAction)
  nameWithType: IntActor.SlantMove(Vector2, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.SlantMove(UnityEngine.Vector2, IntObject.ActorAction, IntObject.TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
    name: SlantMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
    name: SlantMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  name: CheckActorTriggerCollisions(ActorAction, TriggerAction)
  nameWithType: IntActor.CheckActorTriggerCollisions(IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.CheckActorTriggerCollisions(IntObject.ActorAction, IntObject.TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
    name: CheckActorTriggerCollisions
  - name: (
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
    name: CheckActorTriggerCollisions
  - name: (
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.CheckActorInteractableCollisions
  commentId: M:Global.IntActor.CheckActorInteractableCollisions
  parent: Global.IntActor
  name: CheckActorInteractableCollisions()
  nameWithType: IntActor.CheckActorInteractableCollisions()
  fullName: IntActor.CheckActorInteractableCollisions()
  spec.csharp:
  - uid: Global.IntActor.CheckActorInteractableCollisions
    name: CheckActorInteractableCollisions
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.CheckActorInteractableCollisions
    name: CheckActorInteractableCollisions
  - name: (
  - name: )
- uid: Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: SimpleMove(Vector2, SolidAction, SolidAction, ActorAction, TriggerAction)
  nameWithType: IntActor.SimpleMove(Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.SimpleMove(UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: SimpleMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: SimpleMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
  commentId: M:Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
  parent: Global.IntActor
  isExternal: true
  name: ComplexMove(Vector2, SolidAction, SolidAction, ActorAction, TriggerAction, int)
  nameWithType: IntActor.ComplexMove(Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction, int)
  fullName: IntActor.ComplexMove(UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction, int)
  nameWithType.vb: IntActor.ComplexMove(Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction, Integer)
  fullName.vb: IntActor.ComplexMove(UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction, Integer)
  name.vb: ComplexMove(Vector2, SolidAction, SolidAction, ActorAction, TriggerAction, Integer)
  spec.csharp:
  - uid: Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
    name: ComplexMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
    name: ComplexMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Global.IntObject.section
  commentId: P:Global.IntObject.section
  parent: Global.IntObject
  name: section
  nameWithType: IntObject.section
  fullName: IntObject.section
- uid: Global.IntObject.state
  commentId: P:Global.IntObject.state
  parent: Global.IntObject
  name: state
  nameWithType: IntObject.state
  fullName: IntObject.state
- uid: Global.IntObject.int_collider
  commentId: F:Global.IntObject.int_collider
  parent: Global.IntObject
  name: int_collider
  nameWithType: IntObject.int_collider
  fullName: IntObject.int_collider
- uid: Global.IntObject.remainder
  commentId: F:Global.IntObject.remainder
  parent: Global.IntObject
  name: remainder
  nameWithType: IntObject.remainder
  fullName: IntObject.remainder
- uid: Global.IntObject.StartPosition
  commentId: F:Global.IntObject.StartPosition
  parent: Global.IntObject
  name: StartPosition
  nameWithType: IntObject.StartPosition
  fullName: IntObject.StartPosition
- uid: Global.IntObject.AttachedToPlayer
  commentId: F:Global.IntObject.AttachedToPlayer
  parent: Global.IntObject
  name: AttachedToPlayer
  nameWithType: IntObject.AttachedToPlayer
  fullName: IntObject.AttachedToPlayer
- uid: Global.IntObject.IgnoredObjectsMap
  commentId: F:Global.IntObject.IgnoredObjectsMap
  parent: Global.IntObject
  name: IgnoredObjectsMap
  nameWithType: IntObject.IgnoredObjectsMap
  fullName: IntObject.IgnoredObjectsMap
- uid: Global.IntObject.KilledCallback
  commentId: F:Global.IntObject.KilledCallback
  parent: Global.IntObject
  name: KilledCallback
  nameWithType: IntObject.KilledCallback
  fullName: IntObject.KilledCallback
- uid: Global.IntObject.Position
  commentId: P:Global.IntObject.Position
  parent: Global.IntObject
  name: Position
  nameWithType: IntObject.Position
  fullName: IntObject.Position
- uid: Global.IntObject.GetStartWorldPosition
  commentId: P:Global.IntObject.GetStartWorldPosition
  parent: Global.IntObject
  name: GetStartWorldPosition
  nameWithType: IntObject.GetStartWorldPosition
  fullName: IntObject.GetStartWorldPosition
- uid: Global.IntObject.collider_type
  commentId: P:Global.IntObject.collider_type
  parent: Global.IntObject
  name: collider_type
  nameWithType: IntObject.collider_type
  fullName: IntObject.collider_type
- uid: Global.IntObject.MarkedForKill
  commentId: P:Global.IntObject.MarkedForKill
  parent: Global.IntObject
  name: MarkedForKill
  nameWithType: IntObject.MarkedForKill
  fullName: IntObject.MarkedForKill
- uid: Global.IntObject.ObjectID
  commentId: F:Global.IntObject.ObjectID
  parent: Global.IntObject
  name: ObjectID
  nameWithType: IntObject.ObjectID
  fullName: IntObject.ObjectID
- uid: Global.IntObject.DestroyOnKill
  commentId: F:Global.IntObject.DestroyOnKill
  parent: Global.IntObject
  name: DestroyOnKill
  nameWithType: IntObject.DestroyOnKill
  fullName: IntObject.DestroyOnKill
- uid: Global.IntObject.RespawnBehavior
  commentId: F:Global.IntObject.RespawnBehavior
  parent: Global.IntObject
  name: RespawnBehavior
  nameWithType: IntObject.RespawnBehavior
  fullName: IntObject.RespawnBehavior
- uid: Global.IntObject.Status
  commentId: F:Global.IntObject.Status
  parent: Global.IntObject
  name: Status
  nameWithType: IntObject.Status
  fullName: IntObject.Status
- uid: Global.IntObject.InitialStatus
  commentId: F:Global.IntObject.InitialStatus
  parent: Global.IntObject
  name: InitialStatus
  nameWithType: IntObject.InitialStatus
  fullName: IntObject.InitialStatus
- uid: Global.IntObject.SaveObject
  commentId: F:Global.IntObject.SaveObject
  parent: Global.IntObject
  name: SaveObject
  nameWithType: IntObject.SaveObject
  fullName: IntObject.SaveObject
- uid: Global.IntObject.IsInSetPiece
  commentId: P:Global.IntObject.IsInSetPiece
  parent: Global.IntObject
  name: IsInSetPiece
  nameWithType: IntObject.IsInSetPiece
  fullName: IntObject.IsInSetPiece
- uid: Global.IntObject.Init
  commentId: M:Global.IntObject.Init
  parent: Global.IntObject
  name: Init()
  nameWithType: IntObject.Init()
  fullName: IntObject.Init()
  spec.csharp:
  - uid: Global.IntObject.Init
    name: Init
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.Init
    name: Init
  - name: (
  - name: )
- uid: Global.IntObject.FindIntColliderState(System.Int32)
  commentId: M:Global.IntObject.FindIntColliderState(System.Int32)
  parent: Global.IntObject
  isExternal: true
  name: FindIntColliderState(int)
  nameWithType: IntObject.FindIntColliderState(int)
  fullName: IntObject.FindIntColliderState(int)
  nameWithType.vb: IntObject.FindIntColliderState(Integer)
  fullName.vb: IntObject.FindIntColliderState(Integer)
  name.vb: FindIntColliderState(Integer)
  spec.csharp:
  - uid: Global.IntObject.FindIntColliderState(System.Int32)
    name: FindIntColliderState
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.FindIntColliderState(System.Int32)
    name: FindIntColliderState
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Global.IntObject.GetLocalGameStates
  commentId: M:Global.IntObject.GetLocalGameStates
  parent: Global.IntObject
  name: GetLocalGameStates()
  nameWithType: IntObject.GetLocalGameStates()
  fullName: IntObject.GetLocalGameStates()
  spec.csharp:
  - uid: Global.IntObject.GetLocalGameStates
    name: GetLocalGameStates
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetLocalGameStates
    name: GetLocalGameStates
  - name: (
  - name: )
- uid: Global.IntObject.RegisterSelf
  commentId: M:Global.IntObject.RegisterSelf
  parent: Global.IntObject
  name: RegisterSelf()
  nameWithType: IntObject.RegisterSelf()
  fullName: IntObject.RegisterSelf()
  spec.csharp:
  - uid: Global.IntObject.RegisterSelf
    name: RegisterSelf
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.RegisterSelf
    name: RegisterSelf
  - name: (
  - name: )
- uid: Global.IntObject.UnregisterSelf
  commentId: M:Global.IntObject.UnregisterSelf
  parent: Global.IntObject
  name: UnregisterSelf()
  nameWithType: IntObject.UnregisterSelf()
  fullName: IntObject.UnregisterSelf()
  spec.csharp:
  - uid: Global.IntObject.UnregisterSelf
    name: UnregisterSelf
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.UnregisterSelf
    name: UnregisterSelf
  - name: (
  - name: )
- uid: Global.IntObject.RegisterKilledCallback(IntObject.Action)
  commentId: M:Global.IntObject.RegisterKilledCallback(IntObject.Action)
  parent: Global.IntObject
  name: RegisterKilledCallback(Action)
  nameWithType: IntObject.RegisterKilledCallback(IntObject.Action)
  fullName: IntObject.RegisterKilledCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntObject.RegisterKilledCallback(IntObject.Action)
    name: RegisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntObject.RegisterKilledCallback(IntObject.Action)
    name: RegisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  commentId: M:Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  parent: Global.IntObject
  name: UnregisterKilledCallback(Action)
  nameWithType: IntObject.UnregisterKilledCallback(IntObject.Action)
  fullName: IntObject.UnregisterKilledCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntObject.UnregisterKilledCallback(IntObject.Action)
    name: UnregisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntObject.UnregisterKilledCallback(IntObject.Action)
    name: UnregisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  commentId: M:Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  parent: Global.IntObject
  isExternal: true
  name: IsContainedInRect(Rect)
  nameWithType: IntObject.IsContainedInRect(Rect)
  fullName: IntObject.IsContainedInRect(UnityEngine.Rect)
  spec.csharp:
  - uid: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
    name: IsContainedInRect
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
    name: IsContainedInRect
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: )
- uid: Global.IntObject.SetStatus(ObjectStatus)
  commentId: M:Global.IntObject.SetStatus(ObjectStatus)
  parent: Global.IntObject
  name: SetStatus(ObjectStatus)
  nameWithType: IntObject.SetStatus(ObjectStatus)
  fullName: IntObject.SetStatus(ObjectStatus)
  spec.csharp:
  - uid: Global.IntObject.SetStatus(ObjectStatus)
    name: SetStatus
  - name: (
  - uid: Global.ObjectStatus
    name: ObjectStatus
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetStatus(ObjectStatus)
    name: SetStatus
  - name: (
  - uid: Global.ObjectStatus
    name: ObjectStatus
  - name: )
- uid: Global.IntObject.OnKill(System.Boolean)
  commentId: M:Global.IntObject.OnKill(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: OnKill(bool)
  nameWithType: IntObject.OnKill(bool)
  fullName: IntObject.OnKill(bool)
  nameWithType.vb: IntObject.OnKill(Boolean)
  fullName.vb: IntObject.OnKill(Boolean)
  name.vb: OnKill(Boolean)
  spec.csharp:
  - uid: Global.IntObject.OnKill(System.Boolean)
    name: OnKill
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.OnKill(System.Boolean)
    name: OnKill
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.Kill
  commentId: M:Global.IntObject.Kill
  parent: Global.IntObject
  name: Kill()
  nameWithType: IntObject.Kill()
  fullName: IntObject.Kill()
  spec.csharp:
  - uid: Global.IntObject.Kill
    name: Kill
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill
    name: Kill
  - name: (
  - name: )
- uid: Global.IntObject.Kill(System.Boolean)
  commentId: M:Global.IntObject.Kill(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: Kill(bool)
  nameWithType: IntObject.Kill(bool)
  fullName: IntObject.Kill(bool)
  nameWithType.vb: IntObject.Kill(Boolean)
  fullName.vb: IntObject.Kill(Boolean)
  name.vb: Kill(Boolean)
  spec.csharp:
  - uid: Global.IntObject.Kill(System.Boolean)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill(System.Boolean)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.Kill(System.Single)
  commentId: M:Global.IntObject.Kill(System.Single)
  parent: Global.IntObject
  isExternal: true
  name: Kill(float)
  nameWithType: IntObject.Kill(float)
  fullName: IntObject.Kill(float)
  nameWithType.vb: IntObject.Kill(Single)
  fullName.vb: IntObject.Kill(Single)
  name.vb: Kill(Single)
  spec.csharp:
  - uid: Global.IntObject.Kill(System.Single)
    name: Kill
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill(System.Single)
    name: Kill
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntObject.Kill(System.Boolean,System.Single)
  commentId: M:Global.IntObject.Kill(System.Boolean,System.Single)
  parent: Global.IntObject
  isExternal: true
  name: Kill(bool, float)
  nameWithType: IntObject.Kill(bool, float)
  fullName: IntObject.Kill(bool, float)
  nameWithType.vb: IntObject.Kill(Boolean, Single)
  fullName.vb: IntObject.Kill(Boolean, Single)
  name.vb: Kill(Boolean, Single)
  spec.csharp:
  - uid: Global.IntObject.Kill(System.Boolean,System.Single)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill(System.Boolean,System.Single)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  commentId: M:Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  parent: Global.IntObject
  isExternal: true
  name: IgnoreObjectCollisions(IntObject, float)
  nameWithType: IntObject.IgnoreObjectCollisions(IntObject, float)
  fullName: IntObject.IgnoreObjectCollisions(IntObject, float)
  nameWithType.vb: IntObject.IgnoreObjectCollisions(IntObject, Single)
  fullName.vb: IntObject.IgnoreObjectCollisions(IntObject, Single)
  name.vb: IgnoreObjectCollisions(IntObject, Single)
  spec.csharp:
  - uid: Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
    name: IgnoreObjectCollisions
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
    name: IgnoreObjectCollisions
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntObject.SleepObject
  commentId: M:Global.IntObject.SleepObject
  parent: Global.IntObject
  name: SleepObject()
  nameWithType: IntObject.SleepObject()
  fullName: IntObject.SleepObject()
  spec.csharp:
  - uid: Global.IntObject.SleepObject
    name: SleepObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.SleepObject
    name: SleepObject
  - name: (
  - name: )
- uid: Global.IntObject.OptimizeSleepObject
  commentId: M:Global.IntObject.OptimizeSleepObject
  parent: Global.IntObject
  name: OptimizeSleepObject()
  nameWithType: IntObject.OptimizeSleepObject()
  fullName: IntObject.OptimizeSleepObject()
  spec.csharp:
  - uid: Global.IntObject.OptimizeSleepObject
    name: OptimizeSleepObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.OptimizeSleepObject
    name: OptimizeSleepObject
  - name: (
  - name: )
- uid: Global.IntObject.WakeObject
  commentId: M:Global.IntObject.WakeObject
  parent: Global.IntObject
  name: WakeObject()
  nameWithType: IntObject.WakeObject()
  fullName: IntObject.WakeObject()
  spec.csharp:
  - uid: Global.IntObject.WakeObject
    name: WakeObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.WakeObject
    name: WakeObject
  - name: (
  - name: )
- uid: Global.IntObject.EnableObject
  commentId: M:Global.IntObject.EnableObject
  parent: Global.IntObject
  name: EnableObject()
  nameWithType: IntObject.EnableObject()
  fullName: IntObject.EnableObject()
  spec.csharp:
  - uid: Global.IntObject.EnableObject
    name: EnableObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.EnableObject
    name: EnableObject
  - name: (
  - name: )
- uid: Global.IntObject.DisableObject
  commentId: M:Global.IntObject.DisableObject
  parent: Global.IntObject
  name: DisableObject()
  nameWithType: IntObject.DisableObject()
  fullName: IntObject.DisableObject()
  spec.csharp:
  - uid: Global.IntObject.DisableObject
    name: DisableObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.DisableObject
    name: DisableObject
  - name: (
  - name: )
- uid: Global.IntObject.RespawnObject
  commentId: M:Global.IntObject.RespawnObject
  parent: Global.IntObject
  name: RespawnObject()
  nameWithType: IntObject.RespawnObject()
  fullName: IntObject.RespawnObject()
  spec.csharp:
  - uid: Global.IntObject.RespawnObject
    name: RespawnObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.RespawnObject
    name: RespawnObject
  - name: (
  - name: )
- uid: Global.IntObject.ResetObject
  commentId: M:Global.IntObject.ResetObject
  parent: Global.IntObject
  name: ResetObject()
  nameWithType: IntObject.ResetObject()
  fullName: IntObject.ResetObject()
  spec.csharp:
  - uid: Global.IntObject.ResetObject
    name: ResetObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.ResetObject
    name: ResetObject
  - name: (
  - name: )
- uid: Global.IntObject.RecursiveSetCollidable(System.Boolean)
  commentId: M:Global.IntObject.RecursiveSetCollidable(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: RecursiveSetCollidable(bool)
  nameWithType: IntObject.RecursiveSetCollidable(bool)
  fullName: IntObject.RecursiveSetCollidable(bool)
  nameWithType.vb: IntObject.RecursiveSetCollidable(Boolean)
  fullName.vb: IntObject.RecursiveSetCollidable(Boolean)
  name.vb: RecursiveSetCollidable(Boolean)
  spec.csharp:
  - uid: Global.IntObject.RecursiveSetCollidable(System.Boolean)
    name: RecursiveSetCollidable
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.RecursiveSetCollidable(System.Boolean)
    name: RecursiveSetCollidable
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.SetColliderState(IntColliderState)
  commentId: M:Global.IntObject.SetColliderState(IntColliderState)
  parent: Global.IntObject
  name: SetColliderState(IntColliderState)
  nameWithType: IntObject.SetColliderState(IntColliderState)
  fullName: IntObject.SetColliderState(IntColliderState)
  spec.csharp:
  - uid: Global.IntObject.SetColliderState(IntColliderState)
    name: SetColliderState
  - name: (
  - uid: Global.IntColliderState
    name: IntColliderState
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetColliderState(IntColliderState)
    name: SetColliderState
  - name: (
  - uid: Global.IntColliderState
    name: IntColliderState
  - name: )
- uid: Global.IntObject.Translate(UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.Translate(UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: Translate(Vector2Int)
  nameWithType: IntObject.Translate(Vector2Int)
  fullName: IntObject.Translate(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2Int)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2Int)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.Translate(UnityEngine.Vector2)
  commentId: M:Global.IntObject.Translate(UnityEngine.Vector2)
  parent: Global.IntObject
  isExternal: true
  name: Translate(Vector2)
  nameWithType: IntObject.Translate(Vector2)
  fullName: IntObject.Translate(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: SetPosition(Vector2Int)
  nameWithType: IntObject.SetPosition(Vector2Int)
  fullName: IntObject.SetPosition(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.SetPosition(UnityEngine.Vector2Int)
    name: SetPosition
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetPosition(UnityEngine.Vector2Int)
    name: SetPosition
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.SetCollidable(System.Boolean)
  commentId: M:Global.IntObject.SetCollidable(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: SetCollidable(bool)
  nameWithType: IntObject.SetCollidable(bool)
  fullName: IntObject.SetCollidable(bool)
  nameWithType.vb: IntObject.SetCollidable(Boolean)
  fullName.vb: IntObject.SetCollidable(Boolean)
  name.vb: SetCollidable(Boolean)
  spec.csharp:
  - uid: Global.IntObject.SetCollidable(System.Boolean)
    name: SetCollidable
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetCollidable(System.Boolean)
    name: SetCollidable
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.GetCollidable
  commentId: M:Global.IntObject.GetCollidable
  parent: Global.IntObject
  name: GetCollidable()
  nameWithType: IntObject.GetCollidable()
  fullName: IntObject.GetCollidable()
  spec.csharp:
  - uid: Global.IntObject.GetCollidable
    name: GetCollidable
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetCollidable
    name: GetCollidable
  - name: (
  - name: )
- uid: Global.IntObject.GetCollider
  commentId: M:Global.IntObject.GetCollider
  parent: Global.IntObject
  name: GetCollider()
  nameWithType: IntObject.GetCollider()
  fullName: IntObject.GetCollider()
  spec.csharp:
  - uid: Global.IntObject.GetCollider
    name: GetCollider
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetCollider
    name: GetCollider
  - name: (
  - name: )
- uid: Global.IntObject.GetColliderState
  commentId: M:Global.IntObject.GetColliderState
  parent: Global.IntObject
  name: GetColliderState()
  nameWithType: IntObject.GetColliderState()
  fullName: IntObject.GetColliderState()
  spec.csharp:
  - uid: Global.IntObject.GetColliderState
    name: GetColliderState
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetColliderState
    name: GetColliderState
  - name: (
  - name: )
- uid: Global.IntObject.Overlaps(IntObject)
  commentId: M:Global.IntObject.Overlaps(IntObject)
  parent: Global.IntObject
  name: Overlaps(IntObject)
  nameWithType: IntObject.Overlaps(IntObject)
  fullName: IntObject.Overlaps(IntObject)
  spec.csharp:
  - uid: Global.IntObject.Overlaps(IntObject)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
  spec.vb:
  - uid: Global.IntObject.Overlaps(IntObject)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
- uid: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: Overlaps(IntObject, Vector2Int)
  nameWithType: IntObject.Overlaps(IntObject, Vector2Int)
  fullName: IntObject.Overlaps(IntObject, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.RayCast(IntRay)
  commentId: M:Global.IntObject.RayCast(IntRay)
  parent: Global.IntObject
  name: RayCast(IntRay)
  nameWithType: IntObject.RayCast(IntRay)
  fullName: IntObject.RayCast(IntRay)
  spec.csharp:
  - uid: Global.IntObject.RayCast(IntRay)
    name: RayCast
  - name: (
  - uid: Global.IntRay
    name: IntRay
  - name: )
  spec.vb:
  - uid: Global.IntObject.RayCast(IntRay)
    name: RayCast
  - name: (
  - uid: Global.IntRay
    name: IntRay
  - name: )
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: CollideAt(List<IntSolid>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntSolid>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntSolid>, UnityEngine.Vector2Int)
  nameWithType.vb: IntObject.CollideAt(List(Of IntSolid), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntSolid), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntSolid), Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntSolid
    name: IntSolid
  - name: '>'
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: CollideAt(List<IntActor>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntActor>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntActor>, UnityEngine.Vector2Int)
  nameWithType.vb: IntObject.CollideAt(List(Of IntActor), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntActor), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntActor), Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntActor
    name: IntActor
  - name: '>'
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntActor
    name: IntActor
  - name: )
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: CollideAt(List<IntTrigger>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntTrigger>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntTrigger>, UnityEngine.Vector2Int)
  nameWithType.vb: IntObject.CollideAt(List(Of IntTrigger), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntTrigger), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntTrigger), Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: '>'
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.OnDrawGizmos
  commentId: M:Global.IntObject.OnDrawGizmos
  parent: Global.IntObject
  name: OnDrawGizmos()
  nameWithType: IntObject.OnDrawGizmos()
  fullName: IntObject.OnDrawGizmos()
  spec.csharp:
  - uid: Global.IntObject.OnDrawGizmos
    name: OnDrawGizmos
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.OnDrawGizmos
    name: OnDrawGizmos
  - name: (
  - name: )
- uid: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  commentId: M:Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  parent: Global.IntObject
  name: LoadObjectSaveData(IntObjectSaveData)
  nameWithType: IntObject.LoadObjectSaveData(IntObjectSaveData)
  fullName: IntObject.LoadObjectSaveData(IntObjectSaveData)
  spec.csharp:
  - uid: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
    name: LoadObjectSaveData
  - name: (
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
  spec.vb:
  - uid: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
    name: LoadObjectSaveData
  - name: (
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
- uid: Global.IntObject.GetObjectSaveData
  commentId: M:Global.IntObject.GetObjectSaveData
  parent: Global.IntObject
  name: GetObjectSaveData()
  nameWithType: IntObject.GetObjectSaveData()
  fullName: IntObject.GetObjectSaveData()
  spec.csharp:
  - uid: Global.IntObject.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
- uid: Global.IntObject.OnPostLoadSaveFile
  commentId: M:Global.IntObject.OnPostLoadSaveFile
  parent: Global.IntObject
  name: OnPostLoadSaveFile()
  nameWithType: IntObject.OnPostLoadSaveFile()
  fullName: IntObject.OnPostLoadSaveFile()
  spec.csharp:
  - uid: Global.IntObject.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ISavableObject`1
  commentId: T:Global.ISavableObject`1
  name: ISavableObject<T>
  nameWithType: ISavableObject<T>
  fullName: ISavableObject<T>
  nameWithType.vb: ISavableObject(Of T)
  fullName.vb: ISavableObject(Of T)
  name.vb: ISavableObject(Of T)
  spec.csharp:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.IntBasePlatformer.currentState*
  commentId: Overload:Global.IntBasePlatformer.currentState
  name: currentState
  nameWithType: IntBasePlatformer.currentState
  fullName: IntBasePlatformer.currentState
- uid: Global.IntBasePlatformer.PlatformerState
  commentId: T:Global.IntBasePlatformer.PlatformerState
  name: IntBasePlatformer.PlatformerState
  nameWithType: IntBasePlatformer.PlatformerState
  fullName: IntBasePlatformer.PlatformerState
  spec.csharp:
  - uid: Global.IntBasePlatformer
    name: IntBasePlatformer
  - name: .
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  spec.vb:
  - uid: Global.IntBasePlatformer
    name: IntBasePlatformer
  - name: .
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.IntBasePlatformer.AllowWallJump*
  commentId: Overload:Global.IntBasePlatformer.AllowWallJump
  name: AllowWallJump
  nameWithType: IntBasePlatformer.AllowWallJump
  fullName: IntBasePlatformer.AllowWallJump
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.IntBasePlatformer.WallJumpType
  commentId: T:Global.IntBasePlatformer.WallJumpType
  name: IntBasePlatformer.WallJumpType
  nameWithType: IntBasePlatformer.WallJumpType
  fullName: IntBasePlatformer.WallJumpType
  spec.csharp:
  - uid: Global.IntBasePlatformer
    name: IntBasePlatformer
  - name: .
  - uid: Global.IntBasePlatformer.WallJumpType
    name: WallJumpType
  spec.vb:
  - uid: Global.IntBasePlatformer
    name: IntBasePlatformer
  - name: .
  - uid: Global.IntBasePlatformer.WallJumpType
    name: WallJumpType
- uid: UnityEngine.Material
  commentId: T:UnityEngine.Material
  parent: UnityEngine
  isExternal: true
  name: Material
  nameWithType: Material
  fullName: UnityEngine.Material
- uid: Global.IntBasePlatformer.IsAttacking*
  commentId: Overload:Global.IntBasePlatformer.IsAttacking
  name: IsAttacking
  nameWithType: IntBasePlatformer.IsAttacking
  fullName: IntBasePlatformer.IsAttacking
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: Global.IntBasePlatformer.Stats*
  commentId: Overload:Global.IntBasePlatformer.Stats
  name: Stats
  nameWithType: IntBasePlatformer.Stats
  fullName: IntBasePlatformer.Stats
- uid: Global.PlayerStats
  commentId: T:Global.PlayerStats
  name: PlayerStats
  nameWithType: PlayerStats
  fullName: PlayerStats
- uid: Global.StateMachine{IntBasePlatformer.PlatformerState}
  commentId: T:Global.StateMachine{IntBasePlatformer.PlatformerState}
  definition: Global.StateMachine`1
  name: StateMachine<IntBasePlatformer.PlatformerState>
  nameWithType: StateMachine<IntBasePlatformer.PlatformerState>
  fullName: StateMachine<IntBasePlatformer.PlatformerState>
  nameWithType.vb: StateMachine(Of IntBasePlatformer.PlatformerState)
  fullName.vb: StateMachine(Of IntBasePlatformer.PlatformerState)
  name.vb: StateMachine(Of IntBasePlatformer.PlatformerState)
  spec.csharp:
  - uid: Global.StateMachine`1
    name: StateMachine
  - name: <
  - uid: Global.IntBasePlatformer
    name: IntBasePlatformer
  - name: .
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: '>'
  spec.vb:
  - uid: Global.StateMachine`1
    name: StateMachine
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntBasePlatformer
    name: IntBasePlatformer
  - name: .
  - uid: Global.IntBasePlatformer.PlatformerState
    name: PlatformerState
  - name: )
- uid: Global.StateMachine`1
  commentId: T:Global.StateMachine`1
  name: StateMachine<T>
  nameWithType: StateMachine<T>
  fullName: StateMachine<T>
  nameWithType.vb: StateMachine(Of T)
  fullName.vb: StateMachine(Of T)
  name.vb: StateMachine(Of T)
  spec.csharp:
  - uid: Global.StateMachine`1
    name: StateMachine
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.StateMachine`1
    name: StateMachine
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.IntBasePlatformer.IsGrounded*
  commentId: Overload:Global.IntBasePlatformer.IsGrounded
  name: IsGrounded
  nameWithType: IntBasePlatformer.IsGrounded
  fullName: IntBasePlatformer.IsGrounded
- uid: Global.IntBasePlatformer.GetWallSide*
  commentId: Overload:Global.IntBasePlatformer.GetWallSide
  name: GetWallSide
  nameWithType: IntBasePlatformer.GetWallSide
  fullName: IntBasePlatformer.GetWallSide
- uid: Global.IntMath.Direction
  commentId: T:Global.IntMath.Direction
  name: IntMath.Direction
  nameWithType: IntMath.Direction
  fullName: IntMath.Direction
  spec.csharp:
  - uid: Global.IntMath
    name: IntMath
  - name: .
  - uid: Global.IntMath.Direction
    name: Direction
  spec.vb:
  - uid: Global.IntMath
    name: IntMath
  - name: .
  - uid: Global.IntMath.Direction
    name: Direction
- uid: Global.IntBasePlatformer.IsOnWall*
  commentId: Overload:Global.IntBasePlatformer.IsOnWall
  name: IsOnWall
  nameWithType: IntBasePlatformer.IsOnWall
  fullName: IntBasePlatformer.IsOnWall
- uid: Global.IntBasePlatformer.DashDirection*
  commentId: Overload:Global.IntBasePlatformer.DashDirection
  name: DashDirection
  nameWithType: IntBasePlatformer.DashDirection
  fullName: IntBasePlatformer.DashDirection
- uid: Global.Aura
  commentId: T:Global.Aura
  name: Aura
  nameWithType: Aura
  fullName: Aura
- uid: UnityEngine.Animator
  commentId: T:UnityEngine.Animator
  parent: UnityEngine
  isExternal: true
  name: Animator
  nameWithType: Animator
  fullName: UnityEngine.Animator
- uid: UnityEngine.SpriteRenderer
  commentId: T:UnityEngine.SpriteRenderer
  parent: UnityEngine
  isExternal: true
  name: SpriteRenderer
  nameWithType: SpriteRenderer
  fullName: UnityEngine.SpriteRenderer
- uid: Global.PlayerEquipment
  commentId: T:Global.PlayerEquipment
  name: PlayerEquipment
  nameWithType: PlayerEquipment
  fullName: PlayerEquipment
- uid: Global.WeaponController
  commentId: T:Global.WeaponController
  name: WeaponController
  nameWithType: WeaponController
  fullName: WeaponController
- uid: Global.AbilityController
  commentId: T:Global.AbilityController
  name: AbilityController
  nameWithType: AbilityController
  fullName: AbilityController
- uid: Global.IntBasePlatformer.Start*
  commentId: Overload:Global.IntBasePlatformer.Start
  name: Start
  nameWithType: IntBasePlatformer.Start
  fullName: IntBasePlatformer.Start
- uid: Global.IntBasePlatformer.ResetState*
  commentId: Overload:Global.IntBasePlatformer.ResetState
  name: ResetState
  nameWithType: IntBasePlatformer.ResetState
  fullName: IntBasePlatformer.ResetState
- uid: Global.IntBasePlatformer.OnDeath*
  commentId: Overload:Global.IntBasePlatformer.OnDeath
  name: OnDeath
  nameWithType: IntBasePlatformer.OnDeath
  fullName: IntBasePlatformer.OnDeath
- uid: Global.IntBasePlatformer.OnTakeDamage*
  commentId: Overload:Global.IntBasePlatformer.OnTakeDamage
  name: OnTakeDamage
  nameWithType: IntBasePlatformer.OnTakeDamage
  fullName: IntBasePlatformer.OnTakeDamage
- uid: Global.IntBasePlatformer.Respawn*
  commentId: Overload:Global.IntBasePlatformer.Respawn
  name: Respawn
  nameWithType: IntBasePlatformer.Respawn
  fullName: IntBasePlatformer.Respawn
- uid: Global.IntBasePlatformer.EndRespawnState*
  commentId: Overload:Global.IntBasePlatformer.EndRespawnState
  name: EndRespawnState
  nameWithType: IntBasePlatformer.EndRespawnState
  fullName: IntBasePlatformer.EndRespawnState
- uid: Global.IntObject.Action
  commentId: T:Global.IntObject.Action
  name: IntObject.Action
  nameWithType: IntObject.Action
  fullName: IntObject.Action
  spec.csharp:
  - uid: Global.IntObject
    name: IntObject
  - name: .
  - uid: Global.IntObject.Action
    name: Action
  spec.vb:
  - uid: Global.IntObject
    name: IntObject
  - name: .
  - uid: Global.IntObject.Action
    name: Action
- uid: Global.IntBasePlatformer.BindFunctionToWallJump*
  commentId: Overload:Global.IntBasePlatformer.BindFunctionToWallJump
  name: BindFunctionToWallJump
  nameWithType: IntBasePlatformer.BindFunctionToWallJump
  fullName: IntBasePlatformer.BindFunctionToWallJump
- uid: Global.IntBasePlatformer.BindFunctionToDoubleJump*
  commentId: Overload:Global.IntBasePlatformer.BindFunctionToDoubleJump
  name: BindFunctionToDoubleJump
  nameWithType: IntBasePlatformer.BindFunctionToDoubleJump
  fullName: IntBasePlatformer.BindFunctionToDoubleJump
- uid: Global.IntBasePlatformer.BindFunctionToSingleJump*
  commentId: Overload:Global.IntBasePlatformer.BindFunctionToSingleJump
  name: BindFunctionToSingleJump
  nameWithType: IntBasePlatformer.BindFunctionToSingleJump
  fullName: IntBasePlatformer.BindFunctionToSingleJump
- uid: Global.IntBasePlatformer.BindFunctionToDash*
  commentId: Overload:Global.IntBasePlatformer.BindFunctionToDash
  name: BindFunctionToDash
  nameWithType: IntBasePlatformer.BindFunctionToDash
  fullName: IntBasePlatformer.BindFunctionToDash
- uid: Global.IntBasePlatformer.GetFlipX*
  commentId: Overload:Global.IntBasePlatformer.GetFlipX
  name: GetFlipX
  nameWithType: IntBasePlatformer.GetFlipX
  fullName: IntBasePlatformer.GetFlipX
- uid: Global.IntBasePlatformer.GetLookDirection*
  commentId: Overload:Global.IntBasePlatformer.GetLookDirection
  name: GetLookDirection
  nameWithType: IntBasePlatformer.GetLookDirection
  fullName: IntBasePlatformer.GetLookDirection
- uid: Global.IntBasePlatformer.GetAnimator*
  commentId: Overload:Global.IntBasePlatformer.GetAnimator
  name: GetAnimator
  nameWithType: IntBasePlatformer.GetAnimator
  fullName: IntBasePlatformer.GetAnimator
- uid: Global.IntBasePlatformer.Initialize*
  commentId: Overload:Global.IntBasePlatformer.Initialize
  name: Initialize
  nameWithType: IntBasePlatformer.Initialize
  fullName: IntBasePlatformer.Initialize
- uid: Global.IEntity.Initialize
  commentId: M:Global.IEntity.Initialize
  parent: Global.IEntity
  name: Initialize()
  nameWithType: IEntity.Initialize()
  fullName: IEntity.Initialize()
  spec.csharp:
  - uid: Global.IEntity.Initialize
    name: Initialize
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IEntity.Initialize
    name: Initialize
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.OnFirstFrame*
  commentId: Overload:Global.IntBasePlatformer.OnFirstFrame
  name: OnFirstFrame
  nameWithType: IntBasePlatformer.OnFirstFrame
  fullName: IntBasePlatformer.OnFirstFrame
- uid: Global.IEntity.OnFirstFrame
  commentId: M:Global.IEntity.OnFirstFrame
  parent: Global.IEntity
  name: OnFirstFrame()
  nameWithType: IEntity.OnFirstFrame()
  fullName: IEntity.OnFirstFrame()
  spec.csharp:
  - uid: Global.IEntity.OnFirstFrame
    name: OnFirstFrame
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IEntity.OnFirstFrame
    name: OnFirstFrame
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.OnDrawDebugGizmos*
  commentId: Overload:Global.IntBasePlatformer.OnDrawDebugGizmos
  name: OnDrawDebugGizmos
  nameWithType: IntBasePlatformer.OnDrawDebugGizmos
  fullName: IntBasePlatformer.OnDrawDebugGizmos
- uid: Global.IEntity.OnDrawDebugGizmos
  commentId: M:Global.IEntity.OnDrawDebugGizmos
  parent: Global.IEntity
  name: OnDrawDebugGizmos()
  nameWithType: IEntity.OnDrawDebugGizmos()
  fullName: IEntity.OnDrawDebugGizmos()
  spec.csharp:
  - uid: Global.IEntity.OnDrawDebugGizmos
    name: OnDrawDebugGizmos
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IEntity.OnDrawDebugGizmos
    name: OnDrawDebugGizmos
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.Animate*
  commentId: Overload:Global.IntBasePlatformer.Animate
  name: Animate
  nameWithType: IntBasePlatformer.Animate
  fullName: IntBasePlatformer.Animate
- uid: Global.IEntity.Animate
  commentId: M:Global.IEntity.Animate
  parent: Global.IEntity
  name: Animate()
  nameWithType: IEntity.Animate()
  fullName: IEntity.Animate()
  spec.csharp:
  - uid: Global.IEntity.Animate
    name: Animate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IEntity.Animate
    name: Animate
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.PreInputUpdate*
  commentId: Overload:Global.IntBasePlatformer.PreInputUpdate
  name: PreInputUpdate
  nameWithType: IntBasePlatformer.PreInputUpdate
  fullName: IntBasePlatformer.PreInputUpdate
- uid: Global.IEntity.PreInputUpdate
  commentId: M:Global.IEntity.PreInputUpdate
  parent: Global.IEntity
  name: PreInputUpdate()
  nameWithType: IEntity.PreInputUpdate()
  fullName: IEntity.PreInputUpdate()
  spec.csharp:
  - uid: Global.IEntity.PreInputUpdate
    name: PreInputUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IEntity.PreInputUpdate
    name: PreInputUpdate
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.UpdateInput*
  commentId: Overload:Global.IntBasePlatformer.UpdateInput
  name: UpdateInput
  nameWithType: IntBasePlatformer.UpdateInput
  fullName: IntBasePlatformer.UpdateInput
- uid: Global.IEntity.UpdateInput
  commentId: M:Global.IEntity.UpdateInput
  parent: Global.IEntity
  name: UpdateInput()
  nameWithType: IEntity.UpdateInput()
  fullName: IEntity.UpdateInput()
  spec.csharp:
  - uid: Global.IEntity.UpdateInput
    name: UpdateInput
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IEntity.UpdateInput
    name: UpdateInput
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.SetLateralInputValue*
  commentId: Overload:Global.IntBasePlatformer.SetLateralInputValue
  name: SetLateralInputValue
  nameWithType: IntBasePlatformer.SetLateralInputValue
  fullName: IntBasePlatformer.SetLateralInputValue
- uid: Global.IntBasePlatformer.PostInputUpdate*
  commentId: Overload:Global.IntBasePlatformer.PostInputUpdate
  name: PostInputUpdate
  nameWithType: IntBasePlatformer.PostInputUpdate
  fullName: IntBasePlatformer.PostInputUpdate
- uid: Global.IEntity.PostInputUpdate
  commentId: M:Global.IEntity.PostInputUpdate
  parent: Global.IEntity
  name: PostInputUpdate()
  nameWithType: IEntity.PostInputUpdate()
  fullName: IEntity.PostInputUpdate()
  spec.csharp:
  - uid: Global.IEntity.PostInputUpdate
    name: PostInputUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IEntity.PostInputUpdate
    name: PostInputUpdate
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.Update*
  commentId: Overload:Global.IntBasePlatformer.Update
  name: Update
  nameWithType: IntBasePlatformer.Update
  fullName: IntBasePlatformer.Update
- uid: Global.IntBasePlatformer.SetLateralInput*
  commentId: Overload:Global.IntBasePlatformer.SetLateralInput
  name: SetLateralInput
  nameWithType: IntBasePlatformer.SetLateralInput
  fullName: IntBasePlatformer.SetLateralInput
- uid: Global.IntBasePlatformer.SetLateralInputRawValue*
  commentId: Overload:Global.IntBasePlatformer.SetLateralInputRawValue
  name: SetLateralInputRawValue
  nameWithType: IntBasePlatformer.SetLateralInputRawValue
  fullName: IntBasePlatformer.SetLateralInputRawValue
- uid: Global.IntBasePlatformer.HandleWind*
  commentId: Overload:Global.IntBasePlatformer.HandleWind
  name: HandleWind
  nameWithType: IntBasePlatformer.HandleWind
  fullName: IntBasePlatformer.HandleWind
- uid: Global.IntBasePlatformer.IsWindy*
  commentId: Overload:Global.IntBasePlatformer.IsWindy
  name: IsWindy
  nameWithType: IntBasePlatformer.IsWindy
  fullName: IntBasePlatformer.IsWindy
- uid: Global.IntBasePlatformer.IsFast*
  commentId: Overload:Global.IntBasePlatformer.IsFast
  name: IsFast
  nameWithType: IntBasePlatformer.IsFast
  fullName: IntBasePlatformer.IsFast
- uid: Global.IntBasePlatformer.Bump*
  commentId: Overload:Global.IntBasePlatformer.Bump
  name: Bump
  nameWithType: IntBasePlatformer.Bump
  fullName: IntBasePlatformer.Bump
- uid: Global.IntBasePlatformer.BumpUpdate*
  commentId: Overload:Global.IntBasePlatformer.BumpUpdate
  name: BumpUpdate
  nameWithType: IntBasePlatformer.BumpUpdate
  fullName: IntBasePlatformer.BumpUpdate
- uid: Global.IntBasePlatformer.WallJumpUpdate*
  commentId: Overload:Global.IntBasePlatformer.WallJumpUpdate
  name: WallJumpUpdate
  nameWithType: IntBasePlatformer.WallJumpUpdate
  fullName: IntBasePlatformer.WallJumpUpdate
- uid: Global.IntBasePlatformer.HitStop*
  commentId: Overload:Global.IntBasePlatformer.HitStop
  name: HitStop
  nameWithType: IntBasePlatformer.HitStop
  fullName: IntBasePlatformer.HitStop
- uid: Global.IntBasePlatformer.HitStopUpdate*
  commentId: Overload:Global.IntBasePlatformer.HitStopUpdate
  name: HitStopUpdate
  nameWithType: IntBasePlatformer.HitStopUpdate
  fullName: IntBasePlatformer.HitStopUpdate
- uid: Global.IntBasePlatformer.GetDashDirection*
  commentId: Overload:Global.IntBasePlatformer.GetDashDirection
  name: GetDashDirection
  nameWithType: IntBasePlatformer.GetDashDirection
  fullName: IntBasePlatformer.GetDashDirection
- uid: Global.IntBasePlatformer.CanDash*
  commentId: Overload:Global.IntBasePlatformer.CanDash
  name: CanDash
  nameWithType: IntBasePlatformer.CanDash
  fullName: IntBasePlatformer.CanDash
- uid: Global.IntBasePlatformer.CanHover*
  commentId: Overload:Global.IntBasePlatformer.CanHover
  name: CanHover
  nameWithType: IntBasePlatformer.CanHover
  fullName: IntBasePlatformer.CanHover
- uid: Global.IntBasePlatformer.InterruptHover*
  commentId: Overload:Global.IntBasePlatformer.InterruptHover
  name: InterruptHover
  nameWithType: IntBasePlatformer.InterruptHover
  fullName: IntBasePlatformer.InterruptHover
- uid: Global.IntBasePlatformer.EndDash*
  commentId: Overload:Global.IntBasePlatformer.EndDash
  name: EndDash
  nameWithType: IntBasePlatformer.EndDash
  fullName: IntBasePlatformer.EndDash
- uid: Global.IntBasePlatformer.ResetDash*
  commentId: Overload:Global.IntBasePlatformer.ResetDash
  name: ResetDash
  nameWithType: IntBasePlatformer.ResetDash
  fullName: IntBasePlatformer.ResetDash
- uid: Global.IntBasePlatformer.Dash*
  commentId: Overload:Global.IntBasePlatformer.Dash
  name: Dash
  nameWithType: IntBasePlatformer.Dash
  fullName: IntBasePlatformer.Dash
- uid: Global.IntBasePlatformer.DashRelease*
  commentId: Overload:Global.IntBasePlatformer.DashRelease
  name: DashRelease
  nameWithType: IntBasePlatformer.DashRelease
  fullName: IntBasePlatformer.DashRelease
- uid: Global.IntBasePlatformer.HoverRelease*
  commentId: Overload:Global.IntBasePlatformer.HoverRelease
  name: HoverRelease
  nameWithType: IntBasePlatformer.HoverRelease
  fullName: IntBasePlatformer.HoverRelease
- uid: Global.IntBasePlatformer.UpdateDashDirection*
  commentId: Overload:Global.IntBasePlatformer.UpdateDashDirection
  name: UpdateDashDirection
  nameWithType: IntBasePlatformer.UpdateDashDirection
  fullName: IntBasePlatformer.UpdateDashDirection
- uid: Global.IntBasePlatformer.CanJump*
  commentId: Overload:Global.IntBasePlatformer.CanJump
  name: CanJump
  nameWithType: IntBasePlatformer.CanJump
  fullName: IntBasePlatformer.CanJump
- uid: Global.IntBasePlatformer.JumpCallback*
  commentId: Overload:Global.IntBasePlatformer.JumpCallback
  name: JumpCallback
  nameWithType: IntBasePlatformer.JumpCallback
  fullName: IntBasePlatformer.JumpCallback
- uid: Global.IntBasePlatformer.DoubleJumpCallback*
  commentId: Overload:Global.IntBasePlatformer.DoubleJumpCallback
  name: DoubleJumpCallback
  nameWithType: IntBasePlatformer.DoubleJumpCallback
  fullName: IntBasePlatformer.DoubleJumpCallback
- uid: Global.IntBasePlatformer.WallJumpCallback*
  commentId: Overload:Global.IntBasePlatformer.WallJumpCallback
  name: WallJumpCallback
  nameWithType: IntBasePlatformer.WallJumpCallback
  fullName: IntBasePlatformer.WallJumpCallback
- uid: Global.IntBasePlatformer.JumpLeaveCallback*
  commentId: Overload:Global.IntBasePlatformer.JumpLeaveCallback
  name: JumpLeaveCallback
  nameWithType: IntBasePlatformer.JumpLeaveCallback
  fullName: IntBasePlatformer.JumpLeaveCallback
- uid: Global.IntBasePlatformer.DoubleJumpLeaveCallback*
  commentId: Overload:Global.IntBasePlatformer.DoubleJumpLeaveCallback
  name: DoubleJumpLeaveCallback
  nameWithType: IntBasePlatformer.DoubleJumpLeaveCallback
  fullName: IntBasePlatformer.DoubleJumpLeaveCallback
- uid: Global.IntBasePlatformer.WallJumpLeaveCallback*
  commentId: Overload:Global.IntBasePlatformer.WallJumpLeaveCallback
  name: WallJumpLeaveCallback
  nameWithType: IntBasePlatformer.WallJumpLeaveCallback
  fullName: IntBasePlatformer.WallJumpLeaveCallback
- uid: Global.IntBasePlatformer.FallLeaveCallback*
  commentId: Overload:Global.IntBasePlatformer.FallLeaveCallback
  name: FallLeaveCallback
  nameWithType: IntBasePlatformer.FallLeaveCallback
  fullName: IntBasePlatformer.FallLeaveCallback
- uid: Global.IntBasePlatformer.GroundedCallback*
  commentId: Overload:Global.IntBasePlatformer.GroundedCallback
  name: GroundedCallback
  nameWithType: IntBasePlatformer.GroundedCallback
  fullName: IntBasePlatformer.GroundedCallback
- uid: Global.IntBasePlatformer.Jump*
  commentId: Overload:Global.IntBasePlatformer.Jump
  name: Jump
  nameWithType: IntBasePlatformer.Jump
  fullName: IntBasePlatformer.Jump
- uid: Global.IntBasePlatformer.JumpRelease*
  commentId: Overload:Global.IntBasePlatformer.JumpRelease
  name: JumpRelease
  nameWithType: IntBasePlatformer.JumpRelease
  fullName: IntBasePlatformer.JumpRelease
- uid: Global.IntBasePlatformer.ResetDoubleJump*
  commentId: Overload:Global.IntBasePlatformer.ResetDoubleJump
  name: ResetDoubleJump
  nameWithType: IntBasePlatformer.ResetDoubleJump
  fullName: IntBasePlatformer.ResetDoubleJump
- uid: Global.IntBasePlatformer.ShouldAttackChargeReset*
  commentId: Overload:Global.IntBasePlatformer.ShouldAttackChargeReset
  name: ShouldAttackChargeReset
  nameWithType: IntBasePlatformer.ShouldAttackChargeReset
  fullName: IntBasePlatformer.ShouldAttackChargeReset
- uid: Global.IntBasePlatformer.ChargeAttack*
  commentId: Overload:Global.IntBasePlatformer.ChargeAttack
  name: ChargeAttack
  nameWithType: IntBasePlatformer.ChargeAttack
  fullName: IntBasePlatformer.ChargeAttack
- uid: Global.IntBasePlatformer.IsCharged*
  commentId: Overload:Global.IntBasePlatformer.IsCharged
  name: IsCharged
  nameWithType: IntBasePlatformer.IsCharged
  fullName: IntBasePlatformer.IsCharged
- uid: Global.IntBasePlatformer.ReleaseAttack*
  commentId: Overload:Global.IntBasePlatformer.ReleaseAttack
  name: ReleaseAttack
  nameWithType: IntBasePlatformer.ReleaseAttack
  fullName: IntBasePlatformer.ReleaseAttack
- uid: Global.IntBasePlatformer.OnAttackChargeUnused*
  commentId: Overload:Global.IntBasePlatformer.OnAttackChargeUnused
  name: OnAttackChargeUnused
  nameWithType: IntBasePlatformer.OnAttackChargeUnused
  fullName: IntBasePlatformer.OnAttackChargeUnused
- uid: Global.IntBasePlatformer.OnAttackCharged*
  commentId: Overload:Global.IntBasePlatformer.OnAttackCharged
  name: OnAttackCharged
  nameWithType: IntBasePlatformer.OnAttackCharged
  fullName: IntBasePlatformer.OnAttackCharged
- uid: Global.IntBasePlatformer.SetInvisibility*
  commentId: Overload:Global.IntBasePlatformer.SetInvisibility
  name: SetInvisibility
  nameWithType: IntBasePlatformer.SetInvisibility
  fullName: IntBasePlatformer.SetInvisibility
- uid: Global.IntBasePlatformer.SetInvisibilityWarning*
  commentId: Overload:Global.IntBasePlatformer.SetInvisibilityWarning
  name: SetInvisibilityWarning
  nameWithType: IntBasePlatformer.SetInvisibilityWarning
  fullName: IntBasePlatformer.SetInvisibilityWarning
- uid: Global.IntBasePlatformer.IsInvisible*
  commentId: Overload:Global.IntBasePlatformer.IsInvisible
  name: IsInvisible
  nameWithType: IntBasePlatformer.IsInvisible
  fullName: IntBasePlatformer.IsInvisible
- uid: Global.IntActor.GetVelocity
  commentId: M:Global.IntActor.GetVelocity
  parent: Global.IntActor
  name: GetVelocity()
  nameWithType: IntActor.GetVelocity()
  fullName: IntActor.GetVelocity()
  spec.csharp:
  - uid: Global.IntActor.GetVelocity
    name: GetVelocity
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetVelocity
    name: GetVelocity
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.GetVelocity*
  commentId: Overload:Global.IntBasePlatformer.GetVelocity
  name: GetVelocity
  nameWithType: IntBasePlatformer.GetVelocity
  fullName: IntBasePlatformer.GetVelocity
- uid: Global.IntBasePlatformer.SetVelocity*
  commentId: Overload:Global.IntBasePlatformer.SetVelocity
  name: SetVelocity
  nameWithType: IntBasePlatformer.SetVelocity
  fullName: IntBasePlatformer.SetVelocity
- uid: Global.IntBasePlatformer.GetStateMachine*
  commentId: Overload:Global.IntBasePlatformer.GetStateMachine
  name: GetStateMachine
  nameWithType: IntBasePlatformer.GetStateMachine
  fullName: IntBasePlatformer.GetStateMachine
- uid: Global.IntBasePlatformer.SpawnAura*
  commentId: Overload:Global.IntBasePlatformer.SpawnAura
  name: SpawnAura
  nameWithType: IntBasePlatformer.SpawnAura
  fullName: IntBasePlatformer.SpawnAura
- uid: Global.IEntity.SpawnAura
  commentId: M:Global.IEntity.SpawnAura
  parent: Global.IEntity
  name: SpawnAura()
  nameWithType: IEntity.SpawnAura()
  fullName: IEntity.SpawnAura()
  spec.csharp:
  - uid: Global.IEntity.SpawnAura
    name: SpawnAura
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IEntity.SpawnAura
    name: SpawnAura
  - name: (
  - name: )
- uid: Global.IntBasePlatformer.ShedSpores*
  commentId: Overload:Global.IntBasePlatformer.ShedSpores
  name: ShedSpores
  nameWithType: IntBasePlatformer.ShedSpores
  fullName: IntBasePlatformer.ShedSpores
- uid: Global.IntBasePlatformer.GetOverlappingActors*
  commentId: Overload:Global.IntBasePlatformer.GetOverlappingActors
  name: GetOverlappingActors
  nameWithType: IntBasePlatformer.GetOverlappingActors
  fullName: IntBasePlatformer.GetOverlappingActors
- uid: System.Collections.Generic.List{IntActor}
  commentId: T:System.Collections.Generic.List{IntActor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IntActor>
  nameWithType: List<IntActor>
  fullName: System.Collections.Generic.List<IntActor>
  nameWithType.vb: List(Of IntActor)
  fullName.vb: System.Collections.Generic.List(Of IntActor)
  name.vb: List(Of IntActor)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntActor
    name: IntActor
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntActor
    name: IntActor
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: Global.IntBasePlatformer.GetOverlappingTriggers*
  commentId: Overload:Global.IntBasePlatformer.GetOverlappingTriggers
  name: GetOverlappingTriggers
  nameWithType: IntBasePlatformer.GetOverlappingTriggers
  fullName: IntBasePlatformer.GetOverlappingTriggers
- uid: System.Collections.Generic.List{IntTrigger}
  commentId: T:System.Collections.Generic.List{IntTrigger}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IntTrigger>
  nameWithType: List<IntTrigger>
  fullName: System.Collections.Generic.List<IntTrigger>
  nameWithType.vb: List(Of IntTrigger)
  fullName.vb: System.Collections.Generic.List(Of IntTrigger)
  name.vb: List(Of IntTrigger)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
- uid: Global.IntBasePlatformer.OnRespawnInsidePlatform*
  commentId: Overload:Global.IntBasePlatformer.OnRespawnInsidePlatform
  name: OnRespawnInsidePlatform
  nameWithType: IntBasePlatformer.OnRespawnInsidePlatform
  fullName: IntBasePlatformer.OnRespawnInsidePlatform
- uid: Global.SpecialPlatform
  commentId: T:Global.SpecialPlatform
  name: SpecialPlatform
  nameWithType: SpecialPlatform
  fullName: SpecialPlatform
- uid: Global.IntBasePlatformer.OnCollideX*
  commentId: Overload:Global.IntBasePlatformer.OnCollideX
  name: OnCollideX
  nameWithType: IntBasePlatformer.OnCollideX
  fullName: IntBasePlatformer.OnCollideX
- uid: Global.IntSolid
  commentId: T:Global.IntSolid
  name: IntSolid
  nameWithType: IntSolid
  fullName: IntSolid
- uid: Global.IntBasePlatformer.OnCollideY*
  commentId: Overload:Global.IntBasePlatformer.OnCollideY
  name: OnCollideY
  nameWithType: IntBasePlatformer.OnCollideY
  fullName: IntBasePlatformer.OnCollideY
