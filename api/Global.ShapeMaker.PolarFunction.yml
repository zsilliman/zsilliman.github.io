### YamlMime:ManagedReference
items:
- uid: Global.ShapeMaker.PolarFunction
  commentId: T:Global.ShapeMaker.PolarFunction
  id: ShapeMaker.PolarFunction
  parent: Global
  children: []
  langs:
  - csharp
  - vb
  name: ShapeMaker.PolarFunction
  nameWithType: ShapeMaker.PolarFunction
  fullName: ShapeMaker.PolarFunction
  type: Delegate
  source:
    remote:
      path: Assets/Objects & Components/Entities/Auras/AuraMerging/AuraShape/ShapeMaker.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PolarFunction
    path: ../Assets/Objects & Components/Entities/Auras/AuraMerging/AuraShape/ShapeMaker.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nA polar function used to define a custom shape. \n"
  example: []
  syntax:
    content: public delegate float ShapeMaker.PolarFunction(float theta)
    parameters:
    - id: theta
      type: System.Single
      description: theta range in degrees, usually in range [0, 360]
    return:
      type: System.Single
      description: a point given parameter theta
    content.vb: Public Delegate Function ShapeMaker.PolarFunction(theta As Single) As Single
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
references:
- uid: Global
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
