### YamlMime:ManagedReference
items:
- uid: Global.KeepDistanceBehavior
  commentId: T:Global.KeepDistanceBehavior
  id: KeepDistanceBehavior
  parent: Global
  children:
  - Global.KeepDistanceBehavior.Acceleration
  - Global.KeepDistanceBehavior.BunnyHop
  - Global.KeepDistanceBehavior.BunnyHopGravityScale
  - Global.KeepDistanceBehavior.BunnyHopHeight
  - Global.KeepDistanceBehavior.BunnyHopStallTime
  - Global.KeepDistanceBehavior.Distance
  - Global.KeepDistanceBehavior.DrawGizmos(ModularEnemy)
  - Global.KeepDistanceBehavior.GetBestAvailableCorner(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  - Global.KeepDistanceBehavior.InstantTrigger
  - Global.KeepDistanceBehavior.MaxDistance
  - Global.KeepDistanceBehavior.MaxJumpTileHeight
  - Global.KeepDistanceBehavior.OnRestart
  - Global.KeepDistanceBehavior.OriginOffset
  - Global.KeepDistanceBehavior.RepelAcceleration
  - Global.KeepDistanceBehavior.RepelDistance
  - Global.KeepDistanceBehavior.RepelGround
  - Global.KeepDistanceBehavior.RepelGroundDistance
  - Global.KeepDistanceBehavior.RepelGroundIntensity
  - Global.KeepDistanceBehavior.RepelOtherActors
  - Global.KeepDistanceBehavior.Speed
  - Global.KeepDistanceBehavior.Start(ModularEnemy)
  - Global.KeepDistanceBehavior.TriggerOnMaxDistance
  - Global.KeepDistanceBehavior.Update
  - Global.KeepDistanceBehavior.UpdateBunnyHop
  - Global.KeepDistanceBehavior.UpdateFlying
  - Global.KeepDistanceBehavior.UpdateGrounded
  - Global.KeepDistanceBehavior.UseBothAxes
  langs:
  - csharp
  - vb
  name: KeepDistanceBehavior
  nameWithType: KeepDistanceBehavior
  fullName: KeepDistanceBehavior
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: KeepDistanceBehavior
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class KeepDistanceBehavior : ModularEnemy.EnemyBehaviorInterface
    content.vb: >-
      <Serializable>

      Public Class KeepDistanceBehavior Inherits ModularEnemy.EnemyBehaviorInterface
  inheritance:
  - System.Object
  - Global.ModularEnemy.EnemyBehaviorInterface
  inheritedMembers:
  - Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  - Global.ModularEnemy.EnemyBehaviorInterface.self
  - Global.ModularEnemy.EnemyBehaviorInterface.Started
  - Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
  - Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.KeepDistanceBehavior.Distance
  commentId: F:Global.KeepDistanceBehavior.Distance
  id: Distance
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: Distance
  nameWithType: KeepDistanceBehavior.Distance
  fullName: KeepDistanceBehavior.Distance
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Distance
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float Distance
    return:
      type: System.Single
    content.vb: Public Distance As Single
- uid: Global.KeepDistanceBehavior.UseBothAxes
  commentId: F:Global.KeepDistanceBehavior.UseBothAxes
  id: UseBothAxes
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: UseBothAxes
  nameWithType: KeepDistanceBehavior.UseBothAxes
  fullName: KeepDistanceBehavior.UseBothAxes
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UseBothAxes
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Whether distance should be measured on X axis or X and Y Axes. (Only used for grounded enemies)")]

      public bool UseBothAxes
    return:
      type: System.Boolean
    content.vb: >-
      <Tooltip("Whether distance should be measured on X axis or X and Y Axes. (Only used for grounded enemies)")>

      Public UseBothAxes As Boolean
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Whether distance should be measured on X axis or X and Y Axes. (Only used for grounded enemies)
- uid: Global.KeepDistanceBehavior.OriginOffset
  commentId: F:Global.KeepDistanceBehavior.OriginOffset
  id: OriginOffset
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: OriginOffset
  nameWithType: KeepDistanceBehavior.OriginOffset
  fullName: KeepDistanceBehavior.OriginOffset
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OriginOffset
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2Int OriginOffset
    return:
      type: UnityEngine.Vector2Int
    content.vb: Public OriginOffset As Vector2Int
- uid: Global.KeepDistanceBehavior.Speed
  commentId: F:Global.KeepDistanceBehavior.Speed
  id: Speed
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: Speed
  nameWithType: KeepDistanceBehavior.Speed
  fullName: KeepDistanceBehavior.Speed
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Speed
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float Speed
    return:
      type: System.Single
    content.vb: Public Speed As Single
- uid: Global.KeepDistanceBehavior.Acceleration
  commentId: F:Global.KeepDistanceBehavior.Acceleration
  id: Acceleration
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: Acceleration
  nameWithType: KeepDistanceBehavior.Acceleration
  fullName: KeepDistanceBehavior.Acceleration
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Acceleration
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("BunnyHop", 0)]

      public float Acceleration
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("BunnyHop", 0)>

      Public Acceleration As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: BunnyHop
    - type: System.Int32
      value: 0
- uid: Global.KeepDistanceBehavior.BunnyHop
  commentId: F:Global.KeepDistanceBehavior.BunnyHop
  id: BunnyHop
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: BunnyHop
  nameWithType: KeepDistanceBehavior.BunnyHop
  fullName: KeepDistanceBehavior.BunnyHop
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BunnyHop
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Only relevent if CanFly is false")]

      public bool BunnyHop
    return:
      type: System.Boolean
    content.vb: >-
      <Tooltip("Only relevent if CanFly is false")>

      Public BunnyHop As Boolean
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Only relevent if CanFly is false
- uid: Global.KeepDistanceBehavior.BunnyHopHeight
  commentId: F:Global.KeepDistanceBehavior.BunnyHopHeight
  id: BunnyHopHeight
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: BunnyHopHeight
  nameWithType: KeepDistanceBehavior.BunnyHopHeight
  fullName: KeepDistanceBehavior.BunnyHopHeight
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BunnyHopHeight
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("BunnyHop", 1)]

      [Tooltip("Only relevent if CanFly is false")]

      public float BunnyHopHeight
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("BunnyHop", 1)>

      <Tooltip("Only relevent if CanFly is false")>

      Public BunnyHopHeight As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: BunnyHop
    - type: System.Int32
      value: 1
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Only relevent if CanFly is false
- uid: Global.KeepDistanceBehavior.BunnyHopGravityScale
  commentId: F:Global.KeepDistanceBehavior.BunnyHopGravityScale
  id: BunnyHopGravityScale
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: BunnyHopGravityScale
  nameWithType: KeepDistanceBehavior.BunnyHopGravityScale
  fullName: KeepDistanceBehavior.BunnyHopGravityScale
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BunnyHopGravityScale
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("BunnyHop", 1)]

      [Tooltip("Scales how quickly the bunny descends and ascends when jumping. Only relevent if CanFly is false")]

      public float BunnyHopGravityScale
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("BunnyHop", 1)>

      <Tooltip("Scales how quickly the bunny descends and ascends when jumping. Only relevent if CanFly is false")>

      Public BunnyHopGravityScale As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: BunnyHop
    - type: System.Int32
      value: 1
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Scales how quickly the bunny descends and ascends when jumping. Only relevent if CanFly is false
- uid: Global.KeepDistanceBehavior.BunnyHopStallTime
  commentId: F:Global.KeepDistanceBehavior.BunnyHopStallTime
  id: BunnyHopStallTime
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: BunnyHopStallTime
  nameWithType: KeepDistanceBehavior.BunnyHopStallTime
  fullName: KeepDistanceBehavior.BunnyHopStallTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BunnyHopStallTime
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 21
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("BunnyHop", 1)]

      [Tooltip("Bunny pauses between each hop. Only relevent if CanFly is false")]

      public float BunnyHopStallTime
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("BunnyHop", 1)>

      <Tooltip("Bunny pauses between each hop. Only relevent if CanFly is false")>

      Public BunnyHopStallTime As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: BunnyHop
    - type: System.Int32
      value: 1
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Bunny pauses between each hop. Only relevent if CanFly is false
- uid: Global.KeepDistanceBehavior.MaxJumpTileHeight
  commentId: F:Global.KeepDistanceBehavior.MaxJumpTileHeight
  id: MaxJumpTileHeight
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: MaxJumpTileHeight
  nameWithType: KeepDistanceBehavior.MaxJumpTileHeight
  fullName: KeepDistanceBehavior.MaxJumpTileHeight
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxJumpTileHeight
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("BunnyHop", 0)]

      [Tooltip("Only relevent if CanFly is false")]

      public int MaxJumpTileHeight
    return:
      type: System.Int32
    content.vb: >-
      <ConditionalShow("BunnyHop", 0)>

      <Tooltip("Only relevent if CanFly is false")>

      Public MaxJumpTileHeight As Integer
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: BunnyHop
    - type: System.Int32
      value: 0
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Only relevent if CanFly is false
- uid: Global.KeepDistanceBehavior.InstantTrigger
  commentId: F:Global.KeepDistanceBehavior.InstantTrigger
  id: InstantTrigger
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: InstantTrigger
  nameWithType: KeepDistanceBehavior.InstantTrigger
  fullName: KeepDistanceBehavior.InstantTrigger
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: InstantTrigger
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool InstantTrigger
    return:
      type: System.Boolean
    content.vb: Public InstantTrigger As Boolean
- uid: Global.KeepDistanceBehavior.RepelOtherActors
  commentId: F:Global.KeepDistanceBehavior.RepelOtherActors
  id: RepelOtherActors
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: RepelOtherActors
  nameWithType: KeepDistanceBehavior.RepelOtherActors
  fullName: KeepDistanceBehavior.RepelOtherActors
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RepelOtherActors
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 26
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool RepelOtherActors
    return:
      type: System.Boolean
    content.vb: Public RepelOtherActors As Boolean
- uid: Global.KeepDistanceBehavior.RepelDistance
  commentId: F:Global.KeepDistanceBehavior.RepelDistance
  id: RepelDistance
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: RepelDistance
  nameWithType: KeepDistanceBehavior.RepelDistance
  fullName: KeepDistanceBehavior.RepelDistance
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RepelDistance
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 28
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("RepelOtherActors", 1)]

      public float RepelDistance
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("RepelOtherActors", 1)>

      Public RepelDistance As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: RepelOtherActors
    - type: System.Int32
      value: 1
- uid: Global.KeepDistanceBehavior.RepelAcceleration
  commentId: F:Global.KeepDistanceBehavior.RepelAcceleration
  id: RepelAcceleration
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: RepelAcceleration
  nameWithType: KeepDistanceBehavior.RepelAcceleration
  fullName: KeepDistanceBehavior.RepelAcceleration
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RepelAcceleration
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 30
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("RepelOtherActors", 1)]

      public float RepelAcceleration
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("RepelOtherActors", 1)>

      Public RepelAcceleration As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: RepelOtherActors
    - type: System.Int32
      value: 1
- uid: Global.KeepDistanceBehavior.RepelGround
  commentId: F:Global.KeepDistanceBehavior.RepelGround
  id: RepelGround
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: RepelGround
  nameWithType: KeepDistanceBehavior.RepelGround
  fullName: KeepDistanceBehavior.RepelGround
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RepelGround
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 32
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool RepelGround
    return:
      type: System.Boolean
    content.vb: Public RepelGround As Boolean
- uid: Global.KeepDistanceBehavior.RepelGroundDistance
  commentId: F:Global.KeepDistanceBehavior.RepelGroundDistance
  id: RepelGroundDistance
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: RepelGroundDistance
  nameWithType: KeepDistanceBehavior.RepelGroundDistance
  fullName: KeepDistanceBehavior.RepelGroundDistance
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RepelGroundDistance
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 34
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("RepelGround", 1)]

      public float RepelGroundDistance
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("RepelGround", 1)>

      Public RepelGroundDistance As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: RepelGround
    - type: System.Int32
      value: 1
- uid: Global.KeepDistanceBehavior.RepelGroundIntensity
  commentId: F:Global.KeepDistanceBehavior.RepelGroundIntensity
  id: RepelGroundIntensity
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: RepelGroundIntensity
  nameWithType: KeepDistanceBehavior.RepelGroundIntensity
  fullName: KeepDistanceBehavior.RepelGroundIntensity
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RepelGroundIntensity
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 36
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("RepelGround", 1)]

      public float RepelGroundIntensity
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("RepelGround", 1)>

      Public RepelGroundIntensity As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: RepelGround
    - type: System.Int32
      value: 1
- uid: Global.KeepDistanceBehavior.TriggerOnMaxDistance
  commentId: F:Global.KeepDistanceBehavior.TriggerOnMaxDistance
  id: TriggerOnMaxDistance
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: TriggerOnMaxDistance
  nameWithType: KeepDistanceBehavior.TriggerOnMaxDistance
  fullName: KeepDistanceBehavior.TriggerOnMaxDistance
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TriggerOnMaxDistance
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 39
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool TriggerOnMaxDistance
    return:
      type: System.Boolean
    content.vb: Public TriggerOnMaxDistance As Boolean
- uid: Global.KeepDistanceBehavior.MaxDistance
  commentId: F:Global.KeepDistanceBehavior.MaxDistance
  id: MaxDistance
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: MaxDistance
  nameWithType: KeepDistanceBehavior.MaxDistance
  fullName: KeepDistanceBehavior.MaxDistance
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxDistance
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 41
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("TriggerOnMaxDistance", 1)]

      public float MaxDistance
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("TriggerOnMaxDistance", 1)>

      Public MaxDistance As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: TriggerOnMaxDistance
    - type: System.Int32
      value: 1
- uid: Global.KeepDistanceBehavior.DrawGizmos(ModularEnemy)
  commentId: M:Global.KeepDistanceBehavior.DrawGizmos(ModularEnemy)
  id: DrawGizmos(ModularEnemy)
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: DrawGizmos(ModularEnemy)
  nameWithType: KeepDistanceBehavior.DrawGizmos(ModularEnemy)
  fullName: KeepDistanceBehavior.DrawGizmos(ModularEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DrawGizmos
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 59
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void DrawGizmos(ModularEnemy enemy)
    parameters:
    - id: enemy
      type: Global.ModularEnemy
    content.vb: Public Overrides Sub DrawGizmos(enemy As ModularEnemy)
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  overload: Global.KeepDistanceBehavior.DrawGizmos*
- uid: Global.KeepDistanceBehavior.OnRestart
  commentId: M:Global.KeepDistanceBehavior.OnRestart
  id: OnRestart
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: OnRestart()
  nameWithType: KeepDistanceBehavior.OnRestart()
  fullName: KeepDistanceBehavior.OnRestart()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnRestart
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 68
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnRestart()
    content.vb: Public Overrides Sub OnRestart()
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
  overload: Global.KeepDistanceBehavior.OnRestart*
- uid: Global.KeepDistanceBehavior.Start(ModularEnemy)
  commentId: M:Global.KeepDistanceBehavior.Start(ModularEnemy)
  id: Start(ModularEnemy)
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: Start(ModularEnemy)
  nameWithType: KeepDistanceBehavior.Start(ModularEnemy)
  fullName: KeepDistanceBehavior.Start(ModularEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Start
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 76
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void Start(ModularEnemy enemy)
    parameters:
    - id: enemy
      type: Global.ModularEnemy
    content.vb: Public Overrides Sub Start(enemy As ModularEnemy)
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  overload: Global.KeepDistanceBehavior.Start*
- uid: Global.KeepDistanceBehavior.Update
  commentId: M:Global.KeepDistanceBehavior.Update
  id: Update
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: KeepDistanceBehavior.Update()
  fullName: KeepDistanceBehavior.Update()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Update
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 89
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.Update
  overload: Global.KeepDistanceBehavior.Update*
- uid: Global.KeepDistanceBehavior.UpdateFlying
  commentId: M:Global.KeepDistanceBehavior.UpdateFlying
  id: UpdateFlying
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: UpdateFlying()
  nameWithType: KeepDistanceBehavior.UpdateFlying()
  fullName: KeepDistanceBehavior.UpdateFlying()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UpdateFlying
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 138
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void UpdateFlying()
    content.vb: Protected Sub UpdateFlying()
  overload: Global.KeepDistanceBehavior.UpdateFlying*
- uid: Global.KeepDistanceBehavior.UpdateBunnyHop
  commentId: M:Global.KeepDistanceBehavior.UpdateBunnyHop
  id: UpdateBunnyHop
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: UpdateBunnyHop()
  nameWithType: KeepDistanceBehavior.UpdateBunnyHop()
  fullName: KeepDistanceBehavior.UpdateBunnyHop()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UpdateBunnyHop
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 183
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void UpdateBunnyHop()
    content.vb: Protected Sub UpdateBunnyHop()
  overload: Global.KeepDistanceBehavior.UpdateBunnyHop*
- uid: Global.KeepDistanceBehavior.UpdateGrounded
  commentId: M:Global.KeepDistanceBehavior.UpdateGrounded
  id: UpdateGrounded
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: UpdateGrounded()
  nameWithType: KeepDistanceBehavior.UpdateGrounded()
  fullName: KeepDistanceBehavior.UpdateGrounded()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UpdateGrounded
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 220
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void UpdateGrounded()
    content.vb: Protected Sub UpdateGrounded()
  overload: Global.KeepDistanceBehavior.UpdateGrounded*
- uid: Global.KeepDistanceBehavior.GetBestAvailableCorner(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  commentId: M:Global.KeepDistanceBehavior.GetBestAvailableCorner(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  id: GetBestAvailableCorner(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  parent: Global.KeepDistanceBehavior
  langs:
  - csharp
  - vb
  name: GetBestAvailableCorner(Vector2Int, Vector2Int)
  nameWithType: KeepDistanceBehavior.GetBestAvailableCorner(Vector2Int, Vector2Int)
  fullName: KeepDistanceBehavior.GetBestAvailableCorner(UnityEngine.Vector2Int, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetBestAvailableCorner
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Prep/KeepDistanceBehavior.cs
    startLine: 311
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Vector2 GetBestAvailableCorner(Vector2Int selfPos, Vector2Int targetPos)
    parameters:
    - id: selfPos
      type: UnityEngine.Vector2Int
    - id: targetPos
      type: UnityEngine.Vector2Int
    return:
      type: UnityEngine.Vector2
    content.vb: Protected Function GetBestAvailableCorner(selfPos As Vector2Int, targetPos As Vector2Int) As Vector2
  overload: Global.KeepDistanceBehavior.GetBestAvailableCorner*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.ModularEnemy.EnemyBehaviorInterface
  commentId: T:Global.ModularEnemy.EnemyBehaviorInterface
  name: ModularEnemy.EnemyBehaviorInterface
  nameWithType: ModularEnemy.EnemyBehaviorInterface
  fullName: ModularEnemy.EnemyBehaviorInterface
  spec.csharp:
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: .
  - uid: Global.ModularEnemy.EnemyBehaviorInterface
    name: EnemyBehaviorInterface
  spec.vb:
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: .
  - uid: Global.ModularEnemy.EnemyBehaviorInterface
    name: EnemyBehaviorInterface
- uid: Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  commentId: F:Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: ShowGizmos
  nameWithType: ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  fullName: ModularEnemy.EnemyBehaviorInterface.ShowGizmos
- uid: Global.ModularEnemy.EnemyBehaviorInterface.self
  commentId: F:Global.ModularEnemy.EnemyBehaviorInterface.self
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: self
  nameWithType: ModularEnemy.EnemyBehaviorInterface.self
  fullName: ModularEnemy.EnemyBehaviorInterface.self
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Started
  commentId: P:Global.ModularEnemy.EnemyBehaviorInterface.Started
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: Started
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Started
  fullName: ModularEnemy.EnemyBehaviorInterface.Started
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  isExternal: true
  name: OnKill(ModularEnemy, bool)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, bool)
  fullName: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, bool)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, Boolean)
  fullName.vb: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, Boolean)
  name.vb: OnKill(ModularEnemy, Boolean)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
    name: OnKill
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
    name: OnKill
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: OnResetObject(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
    name: OnResetObject
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
    name: OnResetObject
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: DrawGizmos(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
    name: DrawGizmos
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
    name: DrawGizmos
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.KeepDistanceBehavior.DrawGizmos*
  commentId: Overload:Global.KeepDistanceBehavior.DrawGizmos
  name: DrawGizmos
  nameWithType: KeepDistanceBehavior.DrawGizmos
  fullName: KeepDistanceBehavior.DrawGizmos
- uid: Global.ModularEnemy
  commentId: T:Global.ModularEnemy
  name: ModularEnemy
  nameWithType: ModularEnemy
  fullName: ModularEnemy
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: OnRestart()
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnRestart()
  fullName: ModularEnemy.EnemyBehaviorInterface.OnRestart()
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
    name: OnRestart
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
    name: OnRestart
  - name: (
  - name: )
- uid: Global.KeepDistanceBehavior.OnRestart*
  commentId: Overload:Global.KeepDistanceBehavior.OnRestart
  name: OnRestart
  nameWithType: KeepDistanceBehavior.OnRestart
  fullName: KeepDistanceBehavior.OnRestart
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: Start(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
    name: Start
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
    name: Start
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.KeepDistanceBehavior.Start*
  commentId: Overload:Global.KeepDistanceBehavior.Start
  name: Start
  nameWithType: KeepDistanceBehavior.Start
  fullName: KeepDistanceBehavior.Start
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Update
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.Update
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: Update()
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Update()
  fullName: ModularEnemy.EnemyBehaviorInterface.Update()
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Update
    name: Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Update
    name: Update
  - name: (
  - name: )
- uid: Global.KeepDistanceBehavior.Update*
  commentId: Overload:Global.KeepDistanceBehavior.Update
  name: Update
  nameWithType: KeepDistanceBehavior.Update
  fullName: KeepDistanceBehavior.Update
- uid: Global.KeepDistanceBehavior.UpdateFlying*
  commentId: Overload:Global.KeepDistanceBehavior.UpdateFlying
  name: UpdateFlying
  nameWithType: KeepDistanceBehavior.UpdateFlying
  fullName: KeepDistanceBehavior.UpdateFlying
- uid: Global.KeepDistanceBehavior.UpdateBunnyHop*
  commentId: Overload:Global.KeepDistanceBehavior.UpdateBunnyHop
  name: UpdateBunnyHop
  nameWithType: KeepDistanceBehavior.UpdateBunnyHop
  fullName: KeepDistanceBehavior.UpdateBunnyHop
- uid: Global.KeepDistanceBehavior.UpdateGrounded*
  commentId: Overload:Global.KeepDistanceBehavior.UpdateGrounded
  name: UpdateGrounded
  nameWithType: KeepDistanceBehavior.UpdateGrounded
  fullName: KeepDistanceBehavior.UpdateGrounded
- uid: Global.KeepDistanceBehavior.GetBestAvailableCorner*
  commentId: Overload:Global.KeepDistanceBehavior.GetBestAvailableCorner
  name: GetBestAvailableCorner
  nameWithType: KeepDistanceBehavior.GetBestAvailableCorner
  fullName: KeepDistanceBehavior.GetBestAvailableCorner
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
