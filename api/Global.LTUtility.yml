### YamlMime:ManagedReference
items:
- uid: Global.LTUtility
  commentId: T:Global.LTUtility
  id: LTUtility
  parent: Global
  children:
  - Global.LTUtility.reverse(UnityEngine.Vector3[])
  langs:
  - csharp
  - vb
  name: LTUtility
  nameWithType: LTUtility
  fullName: LTUtility
  type: Class
  source:
    remote:
      path: Assets/LeanTween/Framework/LeanTween.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LTUtility
    path: ../Assets/LeanTween/Framework/LeanTween.cs
    startLine: 2865
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public class LTUtility
    content.vb: Public Class LTUtility
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.LTUtility.reverse(UnityEngine.Vector3[])
  commentId: M:Global.LTUtility.reverse(UnityEngine.Vector3[])
  id: reverse(UnityEngine.Vector3[])
  parent: Global.LTUtility
  langs:
  - csharp
  - vb
  name: reverse(Vector3[])
  nameWithType: LTUtility.reverse(Vector3[])
  fullName: LTUtility.reverse(UnityEngine.Vector3[])
  type: Method
  source:
    remote:
      path: Assets/LeanTween/Framework/LeanTween.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: reverse
    path: ../Assets/LeanTween/Framework/LeanTween.cs
    startLine: 2867
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static Vector3[] reverse(Vector3[] arr)
    parameters:
    - id: arr
      type: UnityEngine.Vector3[]
    return:
      type: UnityEngine.Vector3[]
    content.vb: Public Shared Function reverse(arr As Vector3()) As Vector3()
  overload: Global.LTUtility.reverse*
  nameWithType.vb: LTUtility.reverse(Vector3())
  fullName.vb: LTUtility.reverse(UnityEngine.Vector3())
  name.vb: reverse(Vector3())
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.LTUtility.reverse*
  commentId: Overload:Global.LTUtility.reverse
  name: reverse
  nameWithType: LTUtility.reverse
  fullName: LTUtility.reverse
- uid: UnityEngine.Vector3[]
  isExternal: true
  name: Vector3[]
  nameWithType: Vector3[]
  fullName: UnityEngine.Vector3[]
  nameWithType.vb: Vector3()
  fullName.vb: UnityEngine.Vector3()
  name.vb: Vector3()
  spec.csharp:
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: (
  - name: )
