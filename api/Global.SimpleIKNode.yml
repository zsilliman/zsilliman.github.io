### YamlMime:ManagedReference
items:
- uid: Global.SimpleIKNode
  commentId: T:Global.SimpleIKNode
  id: SimpleIKNode
  parent: Global
  children:
  - Global.SimpleIKNode.#ctor(UnityEngine.Vector2,System.Single,SimpleIKNode,SimpleIKNode)
  - Global.SimpleIKNode.AllowedBend
  - Global.SimpleIKNode.AngularVelocity
  - Global.SimpleIKNode.BoneToParentLength
  - Global.SimpleIKNode.BuildFromEdgeIntCollider(EdgeIntCollider,System.Collections.Generic.List{SimpleIKNode},System.Single)
  - Global.SimpleIKNode.Child
  - Global.SimpleIKNode.ComputeAngleToChild
  - Global.SimpleIKNode.FlushToEdgeIntCollider(EdgeIntCollider,System.Collections.Generic.List{SimpleIKNode})
  - Global.SimpleIKNode.LastAngularVelocity0
  - Global.SimpleIKNode.LastAngularVelocity1
  - Global.SimpleIKNode.LastAngularVelocity2
  - Global.SimpleIKNode.obj
  - Global.SimpleIKNode.Parent
  - Global.SimpleIKNode.Position
  - Global.SimpleIKNode.PropogateMotion
  - Global.SimpleIKNode.RotateAboutParent(System.Single)
  - Global.SimpleIKNode.SetChild(SimpleIKNode)
  - Global.SimpleIKNode.SetRotation(System.Single)
  langs:
  - csharp
  - vb
  name: SimpleIKNode
  nameWithType: SimpleIKNode
  fullName: SimpleIKNode
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SimpleIKNode
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public class SimpleIKNode
    content.vb: Public Class SimpleIKNode
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.SimpleIKNode.Position
  commentId: F:Global.SimpleIKNode.Position
  id: Position
  parent: Global.SimpleIKNode
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: SimpleIKNode.Position
  fullName: SimpleIKNode.Position
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Position
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
    startLine: 6
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Vector2 Position
    return:
      type: UnityEngine.Vector2
    content.vb: Protected Position As Vector2
- uid: Global.SimpleIKNode.AngularVelocity
  commentId: F:Global.SimpleIKNode.AngularVelocity
  id: AngularVelocity
  parent: Global.SimpleIKNode
  langs:
  - csharp
  - vb
  name: AngularVelocity
  nameWithType: SimpleIKNode.AngularVelocity
  fullName: SimpleIKNode.AngularVelocity
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AngularVelocity
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float AngularVelocity
    return:
      type: System.Single
    content.vb: Protected AngularVelocity As Single
- uid: Global.SimpleIKNode.LastAngularVelocity0
  commentId: F:Global.SimpleIKNode.LastAngularVelocity0
  id: LastAngularVelocity0
  parent: Global.SimpleIKNode
  langs:
  - csharp
  - vb
  name: LastAngularVelocity0
  nameWithType: SimpleIKNode.LastAngularVelocity0
  fullName: SimpleIKNode.LastAngularVelocity0
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LastAngularVelocity0
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float LastAngularVelocity0
    return:
      type: System.Single
    content.vb: Protected LastAngularVelocity0 As Single
- uid: Global.SimpleIKNode.LastAngularVelocity1
  commentId: F:Global.SimpleIKNode.LastAngularVelocity1
  id: LastAngularVelocity1
  parent: Global.SimpleIKNode
  langs:
  - csharp
  - vb
  name: LastAngularVelocity1
  nameWithType: SimpleIKNode.LastAngularVelocity1
  fullName: SimpleIKNode.LastAngularVelocity1
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LastAngularVelocity1
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float LastAngularVelocity1
    return:
      type: System.Single
    content.vb: Protected LastAngularVelocity1 As Single
- uid: Global.SimpleIKNode.LastAngularVelocity2
  commentId: F:Global.SimpleIKNode.LastAngularVelocity2
  id: LastAngularVelocity2
  parent: Global.SimpleIKNode
  langs:
  - csharp
  - vb
  name: LastAngularVelocity2
  nameWithType: SimpleIKNode.LastAngularVelocity2
  fullName: SimpleIKNode.LastAngularVelocity2
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LastAngularVelocity2
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float LastAngularVelocity2
    return:
      type: System.Single
    content.vb: Protected LastAngularVelocity2 As Single
- uid: Global.SimpleIKNode.Parent
  commentId: F:Global.SimpleIKNode.Parent
  id: Parent
  parent: Global.SimpleIKNode
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: SimpleIKNode.Parent
  fullName: SimpleIKNode.Parent
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Parent
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected SimpleIKNode Parent
    return:
      type: Global.SimpleIKNode
    content.vb: Protected Parent As SimpleIKNode
- uid: Global.SimpleIKNode.Child
  commentId: F:Global.SimpleIKNode.Child
  id: Child
  parent: Global.SimpleIKNode
  langs:
  - csharp
  - vb
  name: Child
  nameWithType: SimpleIKNode.Child
  fullName: SimpleIKNode.Child
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Child
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected SimpleIKNode Child
    return:
      type: Global.SimpleIKNode
    content.vb: Protected Child As SimpleIKNode
- uid: Global.SimpleIKNode.BoneToParentLength
  commentId: F:Global.SimpleIKNode.BoneToParentLength
  id: BoneToParentLength
  parent: Global.SimpleIKNode
  langs:
  - csharp
  - vb
  name: BoneToParentLength
  nameWithType: SimpleIKNode.BoneToParentLength
  fullName: SimpleIKNode.BoneToParentLength
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BoneToParentLength
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float BoneToParentLength
    return:
      type: System.Single
    content.vb: Protected BoneToParentLength As Single
- uid: Global.SimpleIKNode.AllowedBend
  commentId: F:Global.SimpleIKNode.AllowedBend
  id: AllowedBend
  parent: Global.SimpleIKNode
  langs:
  - csharp
  - vb
  name: AllowedBend
  nameWithType: SimpleIKNode.AllowedBend
  fullName: SimpleIKNode.AllowedBend
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AllowedBend
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float AllowedBend
    return:
      type: System.Single
    content.vb: Protected AllowedBend As Single
- uid: Global.SimpleIKNode.obj
  commentId: F:Global.SimpleIKNode.obj
  id: obj
  parent: Global.SimpleIKNode
  langs:
  - csharp
  - vb
  name: obj
  nameWithType: SimpleIKNode.obj
  fullName: SimpleIKNode.obj
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: obj
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected GameObject obj
    return:
      type: UnityEngine.GameObject
    content.vb: Protected obj As GameObject
- uid: Global.SimpleIKNode.#ctor(UnityEngine.Vector2,System.Single,SimpleIKNode,SimpleIKNode)
  commentId: M:Global.SimpleIKNode.#ctor(UnityEngine.Vector2,System.Single,SimpleIKNode,SimpleIKNode)
  id: '#ctor(UnityEngine.Vector2,System.Single,SimpleIKNode,SimpleIKNode)'
  parent: Global.SimpleIKNode
  langs:
  - csharp
  - vb
  name: SimpleIKNode(Vector2, float, SimpleIKNode, SimpleIKNode)
  nameWithType: SimpleIKNode.SimpleIKNode(Vector2, float, SimpleIKNode, SimpleIKNode)
  fullName: SimpleIKNode.SimpleIKNode(UnityEngine.Vector2, float, SimpleIKNode, SimpleIKNode)
  type: Constructor
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: .ctor
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public SimpleIKNode(Vector2 position, float allowedBend, SimpleIKNode parent, SimpleIKNode child = null)
    parameters:
    - id: position
      type: UnityEngine.Vector2
    - id: allowedBend
      type: System.Single
    - id: parent
      type: Global.SimpleIKNode
    - id: child
      type: Global.SimpleIKNode
    content.vb: Public Sub New(position As Vector2, allowedBend As Single, parent As SimpleIKNode, child As SimpleIKNode = Nothing)
  overload: Global.SimpleIKNode.#ctor*
  nameWithType.vb: SimpleIKNode.New(Vector2, Single, SimpleIKNode, SimpleIKNode)
  fullName.vb: SimpleIKNode.New(UnityEngine.Vector2, Single, SimpleIKNode, SimpleIKNode)
  name.vb: New(Vector2, Single, SimpleIKNode, SimpleIKNode)
- uid: Global.SimpleIKNode.SetChild(SimpleIKNode)
  commentId: M:Global.SimpleIKNode.SetChild(SimpleIKNode)
  id: SetChild(SimpleIKNode)
  parent: Global.SimpleIKNode
  langs:
  - csharp
  - vb
  name: SetChild(SimpleIKNode)
  nameWithType: SimpleIKNode.SetChild(SimpleIKNode)
  fullName: SimpleIKNode.SetChild(SimpleIKNode)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetChild
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
    startLine: 33
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetChild(SimpleIKNode child)
    parameters:
    - id: child
      type: Global.SimpleIKNode
    content.vb: Public Sub SetChild(child As SimpleIKNode)
  overload: Global.SimpleIKNode.SetChild*
- uid: Global.SimpleIKNode.ComputeAngleToChild
  commentId: M:Global.SimpleIKNode.ComputeAngleToChild
  id: ComputeAngleToChild
  parent: Global.SimpleIKNode
  langs:
  - csharp
  - vb
  name: ComputeAngleToChild()
  nameWithType: SimpleIKNode.ComputeAngleToChild()
  fullName: SimpleIKNode.ComputeAngleToChild()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ComputeAngleToChild
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
    startLine: 39
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float ComputeAngleToChild()
    return:
      type: System.Single
    content.vb: Protected Function ComputeAngleToChild() As Single
  overload: Global.SimpleIKNode.ComputeAngleToChild*
- uid: Global.SimpleIKNode.PropogateMotion
  commentId: M:Global.SimpleIKNode.PropogateMotion
  id: PropogateMotion
  parent: Global.SimpleIKNode
  langs:
  - csharp
  - vb
  name: PropogateMotion()
  nameWithType: SimpleIKNode.PropogateMotion()
  fullName: SimpleIKNode.PropogateMotion()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PropogateMotion
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
    startLine: 48
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void PropogateMotion()
    content.vb: Public Sub PropogateMotion()
  overload: Global.SimpleIKNode.PropogateMotion*
- uid: Global.SimpleIKNode.RotateAboutParent(System.Single)
  commentId: M:Global.SimpleIKNode.RotateAboutParent(System.Single)
  id: RotateAboutParent(System.Single)
  parent: Global.SimpleIKNode
  langs:
  - csharp
  - vb
  name: RotateAboutParent(float)
  nameWithType: SimpleIKNode.RotateAboutParent(float)
  fullName: SimpleIKNode.RotateAboutParent(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RotateAboutParent
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
    startLine: 96
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void RotateAboutParent(float theta)
    parameters:
    - id: theta
      type: System.Single
    content.vb: Public Sub RotateAboutParent(theta As Single)
  overload: Global.SimpleIKNode.RotateAboutParent*
  nameWithType.vb: SimpleIKNode.RotateAboutParent(Single)
  fullName.vb: SimpleIKNode.RotateAboutParent(Single)
  name.vb: RotateAboutParent(Single)
- uid: Global.SimpleIKNode.SetRotation(System.Single)
  commentId: M:Global.SimpleIKNode.SetRotation(System.Single)
  id: SetRotation(System.Single)
  parent: Global.SimpleIKNode
  langs:
  - csharp
  - vb
  name: SetRotation(float)
  nameWithType: SimpleIKNode.SetRotation(float)
  fullName: SimpleIKNode.SetRotation(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetRotation
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
    startLine: 104
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetRotation(float theta)
    parameters:
    - id: theta
      type: System.Single
    content.vb: Public Sub SetRotation(theta As Single)
  overload: Global.SimpleIKNode.SetRotation*
  nameWithType.vb: SimpleIKNode.SetRotation(Single)
  fullName.vb: SimpleIKNode.SetRotation(Single)
  name.vb: SetRotation(Single)
- uid: Global.SimpleIKNode.FlushToEdgeIntCollider(EdgeIntCollider,System.Collections.Generic.List{SimpleIKNode})
  commentId: M:Global.SimpleIKNode.FlushToEdgeIntCollider(EdgeIntCollider,System.Collections.Generic.List{SimpleIKNode})
  id: FlushToEdgeIntCollider(EdgeIntCollider,System.Collections.Generic.List{SimpleIKNode})
  parent: Global.SimpleIKNode
  langs:
  - csharp
  - vb
  name: FlushToEdgeIntCollider(EdgeIntCollider, List<SimpleIKNode>)
  nameWithType: SimpleIKNode.FlushToEdgeIntCollider(EdgeIntCollider, List<SimpleIKNode>)
  fullName: SimpleIKNode.FlushToEdgeIntCollider(EdgeIntCollider, System.Collections.Generic.List<SimpleIKNode>)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: FlushToEdgeIntCollider
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
    startLine: 111
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static void FlushToEdgeIntCollider(EdgeIntCollider collider, List<SimpleIKNode> nodes)
    parameters:
    - id: collider
      type: Global.EdgeIntCollider
    - id: nodes
      type: System.Collections.Generic.List{SimpleIKNode}
    content.vb: Public Shared Sub FlushToEdgeIntCollider(collider As EdgeIntCollider, nodes As List(Of SimpleIKNode))
  overload: Global.SimpleIKNode.FlushToEdgeIntCollider*
  nameWithType.vb: SimpleIKNode.FlushToEdgeIntCollider(EdgeIntCollider, List(Of SimpleIKNode))
  fullName.vb: SimpleIKNode.FlushToEdgeIntCollider(EdgeIntCollider, System.Collections.Generic.List(Of SimpleIKNode))
  name.vb: FlushToEdgeIntCollider(EdgeIntCollider, List(Of SimpleIKNode))
- uid: Global.SimpleIKNode.BuildFromEdgeIntCollider(EdgeIntCollider,System.Collections.Generic.List{SimpleIKNode},System.Single)
  commentId: M:Global.SimpleIKNode.BuildFromEdgeIntCollider(EdgeIntCollider,System.Collections.Generic.List{SimpleIKNode},System.Single)
  id: BuildFromEdgeIntCollider(EdgeIntCollider,System.Collections.Generic.List{SimpleIKNode},System.Single)
  parent: Global.SimpleIKNode
  langs:
  - csharp
  - vb
  name: BuildFromEdgeIntCollider(EdgeIntCollider, List<SimpleIKNode>, float)
  nameWithType: SimpleIKNode.BuildFromEdgeIntCollider(EdgeIntCollider, List<SimpleIKNode>, float)
  fullName: SimpleIKNode.BuildFromEdgeIntCollider(EdgeIntCollider, System.Collections.Generic.List<SimpleIKNode>, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BuildFromEdgeIntCollider
    path: ../Assets/Objects & Components/Entities/Enemies/Forest Enemies/Vine/SimpleIK/SimpleIKNode.cs
    startLine: 126
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nFills a provided list with SimpleIK Nodes that represent the given collider. Note that it empties the list before filling it.\nAlso note that SimpleIKNodes are float-based and can guarantee higher precision than an integer based EdgeIntCollider.\n"
  example: []
  syntax:
    content: public static void BuildFromEdgeIntCollider(EdgeIntCollider collider, List<SimpleIKNode> nodes, float allowedBend)
    parameters:
    - id: collider
      type: Global.EdgeIntCollider
      description: ''
    - id: nodes
      type: System.Collections.Generic.List{SimpleIKNode}
      description: ''
    - id: allowedBend
      type: System.Single
    content.vb: Public Shared Sub BuildFromEdgeIntCollider(collider As EdgeIntCollider, nodes As List(Of SimpleIKNode), allowedBend As Single)
  overload: Global.SimpleIKNode.BuildFromEdgeIntCollider*
  nameWithType.vb: SimpleIKNode.BuildFromEdgeIntCollider(EdgeIntCollider, List(Of SimpleIKNode), Single)
  fullName.vb: SimpleIKNode.BuildFromEdgeIntCollider(EdgeIntCollider, System.Collections.Generic.List(Of SimpleIKNode), Single)
  name.vb: BuildFromEdgeIntCollider(EdgeIntCollider, List(Of SimpleIKNode), Single)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.SimpleIKNode
  commentId: T:Global.SimpleIKNode
  name: SimpleIKNode
  nameWithType: SimpleIKNode
  fullName: SimpleIKNode
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: Global.SimpleIKNode.#ctor*
  commentId: Overload:Global.SimpleIKNode.#ctor
  name: SimpleIKNode
  nameWithType: SimpleIKNode.SimpleIKNode
  fullName: SimpleIKNode.SimpleIKNode
  nameWithType.vb: SimpleIKNode.New
  fullName.vb: SimpleIKNode.New
  name.vb: New
- uid: Global.SimpleIKNode.SetChild*
  commentId: Overload:Global.SimpleIKNode.SetChild
  name: SetChild
  nameWithType: SimpleIKNode.SetChild
  fullName: SimpleIKNode.SetChild
- uid: Global.SimpleIKNode.ComputeAngleToChild*
  commentId: Overload:Global.SimpleIKNode.ComputeAngleToChild
  name: ComputeAngleToChild
  nameWithType: SimpleIKNode.ComputeAngleToChild
  fullName: SimpleIKNode.ComputeAngleToChild
- uid: Global.SimpleIKNode.PropogateMotion*
  commentId: Overload:Global.SimpleIKNode.PropogateMotion
  name: PropogateMotion
  nameWithType: SimpleIKNode.PropogateMotion
  fullName: SimpleIKNode.PropogateMotion
- uid: Global.SimpleIKNode.RotateAboutParent*
  commentId: Overload:Global.SimpleIKNode.RotateAboutParent
  name: RotateAboutParent
  nameWithType: SimpleIKNode.RotateAboutParent
  fullName: SimpleIKNode.RotateAboutParent
- uid: Global.SimpleIKNode.SetRotation*
  commentId: Overload:Global.SimpleIKNode.SetRotation
  name: SetRotation
  nameWithType: SimpleIKNode.SetRotation
  fullName: SimpleIKNode.SetRotation
- uid: Global.SimpleIKNode.FlushToEdgeIntCollider*
  commentId: Overload:Global.SimpleIKNode.FlushToEdgeIntCollider
  name: FlushToEdgeIntCollider
  nameWithType: SimpleIKNode.FlushToEdgeIntCollider
  fullName: SimpleIKNode.FlushToEdgeIntCollider
- uid: Global.EdgeIntCollider
  commentId: T:Global.EdgeIntCollider
  name: EdgeIntCollider
  nameWithType: EdgeIntCollider
  fullName: EdgeIntCollider
- uid: System.Collections.Generic.List{SimpleIKNode}
  commentId: T:System.Collections.Generic.List{SimpleIKNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SimpleIKNode>
  nameWithType: List<SimpleIKNode>
  fullName: System.Collections.Generic.List<SimpleIKNode>
  nameWithType.vb: List(Of SimpleIKNode)
  fullName.vb: System.Collections.Generic.List(Of SimpleIKNode)
  name.vb: List(Of SimpleIKNode)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.SimpleIKNode
    name: SimpleIKNode
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.SimpleIKNode
    name: SimpleIKNode
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: Global.SimpleIKNode.BuildFromEdgeIntCollider*
  commentId: Overload:Global.SimpleIKNode.BuildFromEdgeIntCollider
  name: BuildFromEdgeIntCollider
  nameWithType: SimpleIKNode.BuildFromEdgeIntCollider
  fullName: SimpleIKNode.BuildFromEdgeIntCollider
