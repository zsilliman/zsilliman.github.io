### YamlMime:ManagedReference
items:
- uid: Global.SpawnManager`1
  commentId: T:Global.SpawnManager`1
  id: SpawnManager`1
  parent: Global
  children:
  - Global.SpawnManager`1.#ctor(IntObject,System.Int32)
  - Global.SpawnManager`1.AddObject(`0)
  - Global.SpawnManager`1.CanSpawn
  - Global.SpawnManager`1.GetObjectAtIndex(System.Int32)
  - Global.SpawnManager`1.GetObjectCount
  - Global.SpawnManager`1.KillAllObjects
  - Global.SpawnManager`1.KillNewestObject
  - Global.SpawnManager`1.KillOldestObject
  - Global.SpawnManager`1.maxObjCount
  - Global.SpawnManager`1.UpdateMaxObjectCount(System.Int32)
  langs:
  - csharp
  - vb
  name: SpawnManager<T>
  nameWithType: SpawnManager<T>
  fullName: SpawnManager<T>
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Auras/AuraUtility.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SpawnManager
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Auras/AuraUtility.cs
    startLine: 385
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class SpawnManager<T> where T : IntObject'
    typeParameters:
    - id: T
    content.vb: Public Class SpawnManager(Of T As IntObject)
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  nameWithType.vb: SpawnManager(Of T)
  fullName.vb: SpawnManager(Of T)
  name.vb: SpawnManager(Of T)
- uid: Global.SpawnManager`1.maxObjCount
  commentId: P:Global.SpawnManager`1.maxObjCount
  id: maxObjCount
  parent: Global.SpawnManager`1
  langs:
  - csharp
  - vb
  name: maxObjCount
  nameWithType: SpawnManager<T>.maxObjCount
  fullName: SpawnManager<T>.maxObjCount
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Auras/AuraUtility.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: maxObjCount
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Auras/AuraUtility.cs
    startLine: 388
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int maxObjCount { get; protected set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property maxObjCount As Integer
  overload: Global.SpawnManager`1.maxObjCount*
  nameWithType.vb: SpawnManager(Of T).maxObjCount
  fullName.vb: SpawnManager(Of T).maxObjCount
- uid: Global.SpawnManager`1.#ctor(IntObject,System.Int32)
  commentId: M:Global.SpawnManager`1.#ctor(IntObject,System.Int32)
  id: '#ctor(IntObject,System.Int32)'
  parent: Global.SpawnManager`1
  langs:
  - csharp
  - vb
  name: SpawnManager(IntObject, int)
  nameWithType: SpawnManager<T>.SpawnManager(IntObject, int)
  fullName: SpawnManager<T>.SpawnManager(IntObject, int)
  type: Constructor
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Auras/AuraUtility.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: .ctor
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Auras/AuraUtility.cs
    startLine: 390
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public SpawnManager(IntObject owner, int max_obj_count)
    parameters:
    - id: owner
      type: Global.IntObject
    - id: max_obj_count
      type: System.Int32
    content.vb: Public Sub New(owner As IntObject, max_obj_count As Integer)
  overload: Global.SpawnManager`1.#ctor*
  nameWithType.vb: SpawnManager(Of T).New(IntObject, Integer)
  fullName.vb: SpawnManager(Of T).New(IntObject, Integer)
  name.vb: New(IntObject, Integer)
- uid: Global.SpawnManager`1.CanSpawn
  commentId: M:Global.SpawnManager`1.CanSpawn
  id: CanSpawn
  parent: Global.SpawnManager`1
  langs:
  - csharp
  - vb
  name: CanSpawn()
  nameWithType: SpawnManager<T>.CanSpawn()
  fullName: SpawnManager<T>.CanSpawn()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Auras/AuraUtility.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CanSpawn
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Auras/AuraUtility.cs
    startLine: 397
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool CanSpawn()
    return:
      type: System.Boolean
    content.vb: Public Function CanSpawn() As Boolean
  overload: Global.SpawnManager`1.CanSpawn*
  nameWithType.vb: SpawnManager(Of T).CanSpawn()
  fullName.vb: SpawnManager(Of T).CanSpawn()
- uid: Global.SpawnManager`1.AddObject(`0)
  commentId: M:Global.SpawnManager`1.AddObject(`0)
  id: AddObject(`0)
  parent: Global.SpawnManager`1
  langs:
  - csharp
  - vb
  name: AddObject(T)
  nameWithType: SpawnManager<T>.AddObject(T)
  fullName: SpawnManager<T>.AddObject(T)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Auras/AuraUtility.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AddObject
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Auras/AuraUtility.cs
    startLine: 403
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void AddObject(T obj)
    parameters:
    - id: obj
      type: '{T}'
    content.vb: Public Sub AddObject(obj As T)
  overload: Global.SpawnManager`1.AddObject*
  nameWithType.vb: SpawnManager(Of T).AddObject(T)
  fullName.vb: SpawnManager(Of T).AddObject(T)
- uid: Global.SpawnManager`1.GetObjectAtIndex(System.Int32)
  commentId: M:Global.SpawnManager`1.GetObjectAtIndex(System.Int32)
  id: GetObjectAtIndex(System.Int32)
  parent: Global.SpawnManager`1
  langs:
  - csharp
  - vb
  name: GetObjectAtIndex(int)
  nameWithType: SpawnManager<T>.GetObjectAtIndex(int)
  fullName: SpawnManager<T>.GetObjectAtIndex(int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Auras/AuraUtility.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetObjectAtIndex
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Auras/AuraUtility.cs
    startLine: 416
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public T GetObjectAtIndex(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: '{T}'
    content.vb: Public Function GetObjectAtIndex(index As Integer) As T
  overload: Global.SpawnManager`1.GetObjectAtIndex*
  nameWithType.vb: SpawnManager(Of T).GetObjectAtIndex(Integer)
  fullName.vb: SpawnManager(Of T).GetObjectAtIndex(Integer)
  name.vb: GetObjectAtIndex(Integer)
- uid: Global.SpawnManager`1.GetObjectCount
  commentId: M:Global.SpawnManager`1.GetObjectCount
  id: GetObjectCount
  parent: Global.SpawnManager`1
  langs:
  - csharp
  - vb
  name: GetObjectCount()
  nameWithType: SpawnManager<T>.GetObjectCount()
  fullName: SpawnManager<T>.GetObjectCount()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Auras/AuraUtility.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetObjectCount
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Auras/AuraUtility.cs
    startLine: 425
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int GetObjectCount()
    return:
      type: System.Int32
    content.vb: Public Function GetObjectCount() As Integer
  overload: Global.SpawnManager`1.GetObjectCount*
  nameWithType.vb: SpawnManager(Of T).GetObjectCount()
  fullName.vb: SpawnManager(Of T).GetObjectCount()
- uid: Global.SpawnManager`1.UpdateMaxObjectCount(System.Int32)
  commentId: M:Global.SpawnManager`1.UpdateMaxObjectCount(System.Int32)
  id: UpdateMaxObjectCount(System.Int32)
  parent: Global.SpawnManager`1
  langs:
  - csharp
  - vb
  name: UpdateMaxObjectCount(int)
  nameWithType: SpawnManager<T>.UpdateMaxObjectCount(int)
  fullName: SpawnManager<T>.UpdateMaxObjectCount(int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Auras/AuraUtility.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UpdateMaxObjectCount
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Auras/AuraUtility.cs
    startLine: 430
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UpdateMaxObjectCount(int new_max_count)
    parameters:
    - id: new_max_count
      type: System.Int32
    content.vb: Public Sub UpdateMaxObjectCount(new_max_count As Integer)
  overload: Global.SpawnManager`1.UpdateMaxObjectCount*
  nameWithType.vb: SpawnManager(Of T).UpdateMaxObjectCount(Integer)
  fullName.vb: SpawnManager(Of T).UpdateMaxObjectCount(Integer)
  name.vb: UpdateMaxObjectCount(Integer)
- uid: Global.SpawnManager`1.KillAllObjects
  commentId: M:Global.SpawnManager`1.KillAllObjects
  id: KillAllObjects
  parent: Global.SpawnManager`1
  langs:
  - csharp
  - vb
  name: KillAllObjects()
  nameWithType: SpawnManager<T>.KillAllObjects()
  fullName: SpawnManager<T>.KillAllObjects()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Auras/AuraUtility.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: KillAllObjects
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Auras/AuraUtility.cs
    startLine: 453
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void KillAllObjects()
    content.vb: Public Sub KillAllObjects()
  overload: Global.SpawnManager`1.KillAllObjects*
  nameWithType.vb: SpawnManager(Of T).KillAllObjects()
  fullName.vb: SpawnManager(Of T).KillAllObjects()
- uid: Global.SpawnManager`1.KillOldestObject
  commentId: M:Global.SpawnManager`1.KillOldestObject
  id: KillOldestObject
  parent: Global.SpawnManager`1
  langs:
  - csharp
  - vb
  name: KillOldestObject()
  nameWithType: SpawnManager<T>.KillOldestObject()
  fullName: SpawnManager<T>.KillOldestObject()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Auras/AuraUtility.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: KillOldestObject
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Auras/AuraUtility.cs
    startLine: 462
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void KillOldestObject()
    content.vb: Public Sub KillOldestObject()
  overload: Global.SpawnManager`1.KillOldestObject*
  nameWithType.vb: SpawnManager(Of T).KillOldestObject()
  fullName.vb: SpawnManager(Of T).KillOldestObject()
- uid: Global.SpawnManager`1.KillNewestObject
  commentId: M:Global.SpawnManager`1.KillNewestObject
  id: KillNewestObject
  parent: Global.SpawnManager`1
  langs:
  - csharp
  - vb
  name: KillNewestObject()
  nameWithType: SpawnManager<T>.KillNewestObject()
  fullName: SpawnManager<T>.KillNewestObject()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Auras/AuraUtility.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: KillNewestObject
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Auras/AuraUtility.cs
    startLine: 472
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void KillNewestObject()
    content.vb: Public Sub KillNewestObject()
  overload: Global.SpawnManager`1.KillNewestObject*
  nameWithType.vb: SpawnManager(Of T).KillNewestObject()
  fullName.vb: SpawnManager(Of T).KillNewestObject()
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.SpawnManager`1.maxObjCount*
  commentId: Overload:Global.SpawnManager`1.maxObjCount
  name: maxObjCount
  nameWithType: SpawnManager<T>.maxObjCount
  fullName: SpawnManager<T>.maxObjCount
  nameWithType.vb: SpawnManager(Of T).maxObjCount
  fullName.vb: SpawnManager(Of T).maxObjCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.SpawnManager`1.#ctor*
  commentId: Overload:Global.SpawnManager`1.#ctor
  name: SpawnManager
  nameWithType: SpawnManager<T>.SpawnManager
  fullName: SpawnManager<T>.SpawnManager
  nameWithType.vb: SpawnManager(Of T).New
  fullName.vb: SpawnManager(Of T).New
  name.vb: New
- uid: Global.IntObject
  commentId: T:Global.IntObject
  name: IntObject
  nameWithType: IntObject
  fullName: IntObject
- uid: Global.SpawnManager`1.CanSpawn*
  commentId: Overload:Global.SpawnManager`1.CanSpawn
  name: CanSpawn
  nameWithType: SpawnManager<T>.CanSpawn
  fullName: SpawnManager<T>.CanSpawn
  nameWithType.vb: SpawnManager(Of T).CanSpawn
  fullName.vb: SpawnManager(Of T).CanSpawn
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.SpawnManager`1.AddObject*
  commentId: Overload:Global.SpawnManager`1.AddObject
  name: AddObject
  nameWithType: SpawnManager<T>.AddObject
  fullName: SpawnManager<T>.AddObject
  nameWithType.vb: SpawnManager(Of T).AddObject
  fullName.vb: SpawnManager(Of T).AddObject
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Global.SpawnManager`1.GetObjectAtIndex*
  commentId: Overload:Global.SpawnManager`1.GetObjectAtIndex
  name: GetObjectAtIndex
  nameWithType: SpawnManager<T>.GetObjectAtIndex
  fullName: SpawnManager<T>.GetObjectAtIndex
  nameWithType.vb: SpawnManager(Of T).GetObjectAtIndex
  fullName.vb: SpawnManager(Of T).GetObjectAtIndex
- uid: Global.SpawnManager`1.GetObjectCount*
  commentId: Overload:Global.SpawnManager`1.GetObjectCount
  name: GetObjectCount
  nameWithType: SpawnManager<T>.GetObjectCount
  fullName: SpawnManager<T>.GetObjectCount
  nameWithType.vb: SpawnManager(Of T).GetObjectCount
  fullName.vb: SpawnManager(Of T).GetObjectCount
- uid: Global.SpawnManager`1.UpdateMaxObjectCount*
  commentId: Overload:Global.SpawnManager`1.UpdateMaxObjectCount
  name: UpdateMaxObjectCount
  nameWithType: SpawnManager<T>.UpdateMaxObjectCount
  fullName: SpawnManager<T>.UpdateMaxObjectCount
  nameWithType.vb: SpawnManager(Of T).UpdateMaxObjectCount
  fullName.vb: SpawnManager(Of T).UpdateMaxObjectCount
- uid: Global.SpawnManager`1.KillAllObjects*
  commentId: Overload:Global.SpawnManager`1.KillAllObjects
  name: KillAllObjects
  nameWithType: SpawnManager<T>.KillAllObjects
  fullName: SpawnManager<T>.KillAllObjects
  nameWithType.vb: SpawnManager(Of T).KillAllObjects
  fullName.vb: SpawnManager(Of T).KillAllObjects
- uid: Global.SpawnManager`1.KillOldestObject*
  commentId: Overload:Global.SpawnManager`1.KillOldestObject
  name: KillOldestObject
  nameWithType: SpawnManager<T>.KillOldestObject
  fullName: SpawnManager<T>.KillOldestObject
  nameWithType.vb: SpawnManager(Of T).KillOldestObject
  fullName.vb: SpawnManager(Of T).KillOldestObject
- uid: Global.SpawnManager`1.KillNewestObject*
  commentId: Overload:Global.SpawnManager`1.KillNewestObject
  name: KillNewestObject
  nameWithType: SpawnManager<T>.KillNewestObject
  fullName: SpawnManager<T>.KillNewestObject
  nameWithType.vb: SpawnManager(Of T).KillNewestObject
  fullName.vb: SpawnManager(Of T).KillNewestObject
