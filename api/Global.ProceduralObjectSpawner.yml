### YamlMime:ManagedReference
items:
- uid: Global.ProceduralObjectSpawner
  commentId: T:Global.ProceduralObjectSpawner
  id: ProceduralObjectSpawner
  parent: Global
  children:
  - Global.ProceduralObjectSpawner.GetExtremaSpawnableBounds(System.Collections.Generic.List{SpawnableListElement},System.Func{System.Int32,System.Int32,System.Int32},System.Int32)
  - Global.ProceduralObjectSpawner.SpawnSpawnables(Section,System.Collections.Generic.List{SpawnableListElement},System.Collections.Generic.List{UnityEngine.Rect},System.Single,UnityEngine.Tilemaps.Tilemap,UnityEngine.Vector2Int,UnityEngine.Vector2Int,System.Boolean)
  langs:
  - csharp
  - vb
  name: ProceduralObjectSpawner
  nameWithType: ProceduralObjectSpawner
  fullName: ProceduralObjectSpawner
  type: Class
  source:
    remote:
      path: Assets/Framework/Procedural Generation/EnemySpawning/ProceduralObjectSpawner.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ProceduralObjectSpawner
    path: ../Assets/Framework/Procedural Generation/EnemySpawning/ProceduralObjectSpawner.cs
    startLine: 6
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static class ProceduralObjectSpawner
    content.vb: Public Module ProceduralObjectSpawner
  inheritance:
  - System.Object
- uid: Global.ProceduralObjectSpawner.GetExtremaSpawnableBounds(System.Collections.Generic.List{SpawnableListElement},System.Func{System.Int32,System.Int32,System.Int32},System.Int32)
  commentId: M:Global.ProceduralObjectSpawner.GetExtremaSpawnableBounds(System.Collections.Generic.List{SpawnableListElement},System.Func{System.Int32,System.Int32,System.Int32},System.Int32)
  id: GetExtremaSpawnableBounds(System.Collections.Generic.List{SpawnableListElement},System.Func{System.Int32,System.Int32,System.Int32},System.Int32)
  parent: Global.ProceduralObjectSpawner
  langs:
  - csharp
  - vb
  name: GetExtremaSpawnableBounds(List<SpawnableListElement>, Func<int, int, int>, int)
  nameWithType: ProceduralObjectSpawner.GetExtremaSpawnableBounds(List<SpawnableListElement>, Func<int, int, int>, int)
  fullName: ProceduralObjectSpawner.GetExtremaSpawnableBounds(System.Collections.Generic.List<SpawnableListElement>, System.Func<int, int, int>, int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Procedural Generation/EnemySpawning/ProceduralObjectSpawner.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetExtremaSpawnableBounds
    path: ../Assets/Framework/Procedural Generation/EnemySpawning/ProceduralObjectSpawner.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static Vector2Int GetExtremaSpawnableBounds(List<SpawnableListElement> enemies, Func<int, int, int> f, int initial_value = 5)
    parameters:
    - id: enemies
      type: System.Collections.Generic.List{SpawnableListElement}
    - id: f
      type: System.Func{System.Int32,System.Int32,System.Int32}
    - id: initial_value
      type: System.Int32
    return:
      type: UnityEngine.Vector2Int
    content.vb: Public Shared Function GetExtremaSpawnableBounds(enemies As List(Of SpawnableListElement), f As Func(Of Integer, Integer, Integer), initial_value As Integer = 5) As Vector2Int
  overload: Global.ProceduralObjectSpawner.GetExtremaSpawnableBounds*
  nameWithType.vb: ProceduralObjectSpawner.GetExtremaSpawnableBounds(List(Of SpawnableListElement), Func(Of Integer, Integer, Integer), Integer)
  fullName.vb: ProceduralObjectSpawner.GetExtremaSpawnableBounds(System.Collections.Generic.List(Of SpawnableListElement), System.Func(Of Integer, Integer, Integer), Integer)
  name.vb: GetExtremaSpawnableBounds(List(Of SpawnableListElement), Func(Of Integer, Integer, Integer), Integer)
- uid: Global.ProceduralObjectSpawner.SpawnSpawnables(Section,System.Collections.Generic.List{SpawnableListElement},System.Collections.Generic.List{UnityEngine.Rect},System.Single,UnityEngine.Tilemaps.Tilemap,UnityEngine.Vector2Int,UnityEngine.Vector2Int,System.Boolean)
  commentId: M:Global.ProceduralObjectSpawner.SpawnSpawnables(Section,System.Collections.Generic.List{SpawnableListElement},System.Collections.Generic.List{UnityEngine.Rect},System.Single,UnityEngine.Tilemaps.Tilemap,UnityEngine.Vector2Int,UnityEngine.Vector2Int,System.Boolean)
  id: SpawnSpawnables(Section,System.Collections.Generic.List{SpawnableListElement},System.Collections.Generic.List{UnityEngine.Rect},System.Single,UnityEngine.Tilemaps.Tilemap,UnityEngine.Vector2Int,UnityEngine.Vector2Int,System.Boolean)
  parent: Global.ProceduralObjectSpawner
  langs:
  - csharp
  - vb
  name: SpawnSpawnables(Section, List<SpawnableListElement>, List<Rect>, float, Tilemap, Vector2Int, Vector2Int, bool)
  nameWithType: ProceduralObjectSpawner.SpawnSpawnables(Section, List<SpawnableListElement>, List<Rect>, float, Tilemap, Vector2Int, Vector2Int, bool)
  fullName: ProceduralObjectSpawner.SpawnSpawnables(Section, System.Collections.Generic.List<SpawnableListElement>, System.Collections.Generic.List<UnityEngine.Rect>, float, UnityEngine.Tilemaps.Tilemap, UnityEngine.Vector2Int, UnityEngine.Vector2Int, bool)
  type: Method
  source:
    remote:
      path: Assets/Framework/Procedural Generation/EnemySpawning/ProceduralObjectSpawner.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SpawnSpawnables
    path: ../Assets/Framework/Procedural Generation/EnemySpawning/ProceduralObjectSpawner.cs
    startLine: 93
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static void SpawnSpawnables(Section section, List<SpawnableListElement> spawnables, List<Rect> DisabledRegionsWorldSpace, float density, Tilemap tilemap, Vector2Int boundsMin, Vector2Int boundsMax, bool project_to_ground = false)
    parameters:
    - id: section
      type: Global.Section
    - id: spawnables
      type: System.Collections.Generic.List{SpawnableListElement}
    - id: DisabledRegionsWorldSpace
      type: System.Collections.Generic.List{UnityEngine.Rect}
    - id: density
      type: System.Single
    - id: tilemap
      type: UnityEngine.Tilemaps.Tilemap
    - id: boundsMin
      type: UnityEngine.Vector2Int
    - id: boundsMax
      type: UnityEngine.Vector2Int
    - id: project_to_ground
      type: System.Boolean
    content.vb: Public Shared Sub SpawnSpawnables(section As Section, spawnables As List(Of SpawnableListElement), DisabledRegionsWorldSpace As List(Of Rect), density As Single, tilemap As Tilemap, boundsMin As Vector2Int, boundsMax As Vector2Int, project_to_ground As Boolean = False)
  overload: Global.ProceduralObjectSpawner.SpawnSpawnables*
  nameWithType.vb: ProceduralObjectSpawner.SpawnSpawnables(Section, List(Of SpawnableListElement), List(Of Rect), Single, Tilemap, Vector2Int, Vector2Int, Boolean)
  fullName.vb: ProceduralObjectSpawner.SpawnSpawnables(Section, System.Collections.Generic.List(Of SpawnableListElement), System.Collections.Generic.List(Of UnityEngine.Rect), Single, UnityEngine.Tilemaps.Tilemap, UnityEngine.Vector2Int, UnityEngine.Vector2Int, Boolean)
  name.vb: SpawnSpawnables(Section, List(Of SpawnableListElement), List(Of Rect), Single, Tilemap, Vector2Int, Vector2Int, Boolean)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ProceduralObjectSpawner.GetExtremaSpawnableBounds*
  commentId: Overload:Global.ProceduralObjectSpawner.GetExtremaSpawnableBounds
  name: GetExtremaSpawnableBounds
  nameWithType: ProceduralObjectSpawner.GetExtremaSpawnableBounds
  fullName: ProceduralObjectSpawner.GetExtremaSpawnableBounds
- uid: System.Collections.Generic.List{SpawnableListElement}
  commentId: T:System.Collections.Generic.List{SpawnableListElement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SpawnableListElement>
  nameWithType: List<SpawnableListElement>
  fullName: System.Collections.Generic.List<SpawnableListElement>
  nameWithType.vb: List(Of SpawnableListElement)
  fullName.vb: System.Collections.Generic.List(Of SpawnableListElement)
  name.vb: List(Of SpawnableListElement)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.SpawnableListElement
    name: SpawnableListElement
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.SpawnableListElement
    name: SpawnableListElement
  - name: )
- uid: System.Func{System.Int32,System.Int32,System.Int32}
  commentId: T:System.Func{System.Int32,System.Int32,System.Int32}
  parent: System
  definition: System.Func`3
  name: Func<int, int, int>
  nameWithType: Func<int, int, int>
  fullName: System.Func<int, int, int>
  nameWithType.vb: Func(Of Integer, Integer, Integer)
  fullName.vb: System.Func(Of Integer, Integer, Integer)
  name.vb: Func(Of Integer, Integer, Integer)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ProceduralObjectSpawner.SpawnSpawnables*
  commentId: Overload:Global.ProceduralObjectSpawner.SpawnSpawnables
  name: SpawnSpawnables
  nameWithType: ProceduralObjectSpawner.SpawnSpawnables
  fullName: ProceduralObjectSpawner.SpawnSpawnables
- uid: Global.Section
  commentId: T:Global.Section
  name: Section
  nameWithType: Section
  fullName: Section
- uid: System.Collections.Generic.List{UnityEngine.Rect}
  commentId: T:System.Collections.Generic.List{UnityEngine.Rect}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Rect>
  nameWithType: List<Rect>
  fullName: System.Collections.Generic.List<UnityEngine.Rect>
  nameWithType.vb: List(Of Rect)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Rect)
  name.vb: List(Of Rect)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Tilemaps.Tilemap
  commentId: T:UnityEngine.Tilemaps.Tilemap
  parent: UnityEngine.Tilemaps
  isExternal: true
  name: Tilemap
  nameWithType: Tilemap
  fullName: UnityEngine.Tilemaps.Tilemap
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UnityEngine.Tilemaps
  commentId: N:UnityEngine.Tilemaps
  isExternal: true
  name: UnityEngine.Tilemaps
  nameWithType: UnityEngine.Tilemaps
  fullName: UnityEngine.Tilemaps
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Tilemaps
    name: Tilemaps
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Tilemaps
    name: Tilemaps
    isExternal: true
