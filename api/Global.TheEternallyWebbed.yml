### YamlMime:ManagedReference
items:
- uid: Global.TheEternallyWebbed
  commentId: T:Global.TheEternallyWebbed
  id: TheEternallyWebbed
  parent: Global
  children:
  - Global.TheEternallyWebbed.AggressiveWebDuration
  - Global.TheEternallyWebbed.ArmThreads
  - Global.TheEternallyWebbed.Awake
  - Global.TheEternallyWebbed.beacon
  - Global.TheEternallyWebbed.ClimbTime
  - Global.TheEternallyWebbed.CurlLegs(System.Single)
  - Global.TheEternallyWebbed.CurrentState
  - Global.TheEternallyWebbed.DangleWeb
  - Global.TheEternallyWebbed.LeftBottom
  - Global.TheEternallyWebbed.LeftMiddle
  - Global.TheEternallyWebbed.LeftPincer
  - Global.TheEternallyWebbed.LeftTop
  - Global.TheEternallyWebbed.LevelOneSwingSpeedScale
  - Global.TheEternallyWebbed.LevelOneThreadDescentSpeedScale
  - Global.TheEternallyWebbed.LevelTwoSwingSpeedScale
  - Global.TheEternallyWebbed.LevelTwoThreadDescentSpeedScale
  - Global.TheEternallyWebbed.MaxVulnerableTime
  - Global.TheEternallyWebbed.MinionPrefab
  - Global.TheEternallyWebbed.MinionSpawnLocationsParent
  - Global.TheEternallyWebbed.OnKill(System.Boolean)
  - Global.TheEternallyWebbed.OnTakeDamage(System.Int32)
  - Global.TheEternallyWebbed.OscillateLegs(System.Single,System.Single)
  - Global.TheEternallyWebbed.ResetObject
  - Global.TheEternallyWebbed.RightBottom
  - Global.TheEternallyWebbed.RightMiddle
  - Global.TheEternallyWebbed.RightPincer
  - Global.TheEternallyWebbed.RightTop
  - Global.TheEternallyWebbed.RotateTime
  - Global.TheEternallyWebbed.SetArmWebActive(System.Boolean,System.Boolean)
  - Global.TheEternallyWebbed.SetSpiderState(TheEternallyWebbed.SpiderState,System.Boolean)
  - Global.TheEternallyWebbed.SetSpiralWebActive(System.Boolean,System.Boolean)
  - Global.TheEternallyWebbed.SpiralThreads
  - Global.TheEternallyWebbed.Start
  - Global.TheEternallyWebbed.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  - Global.TheEternallyWebbed.Update
  - Global.TheEternallyWebbed.VulnAuraInterval
  langs:
  - csharp
  - vb
  name: TheEternallyWebbed
  nameWithType: TheEternallyWebbed
  fullName: TheEternallyWebbed
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TheEternallyWebbed
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [RequireComponent(typeof(SpriteRenderer), typeof(InvinsibleComponent))]

      public class TheEternallyWebbed : IntBoss, ISavableObject<IntObjectSaveData>
    content.vb: >-
      <RequireComponent(GetType(SpriteRenderer), GetType(InvinsibleComponent))>

      Public Class TheEternallyWebbed Inherits IntBoss Implements ISavableObject(Of IntObjectSaveData)
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - Global.IntObject
  - Global.IntActor
  - Global.IntBoss
  implements:
  - Global.ISavableObject{IntObjectSaveData}
  inheritedMembers:
  - Global.IntActor.HurtBySpike
  - Global.IntActor.aabb
  - Global.IntActor.Left
  - Global.IntActor.Right
  - Global.IntActor.Top
  - Global.IntActor.Bottom
  - Global.IntActor.Size
  - Global.IntActor.WindInfluence
  - Global.IntActor.OnTakeDamageCallback
  - Global.IntActor.RidingSolid
  - Global.IntActor.RidingTangent
  - Global.IntActor.RidingNormal
  - Global.IntActor.IsRidingFlatSurface
  - Global.IntActor.ManualInit
  - Global.IntActor.GetAABBIntCollider
  - Global.IntActor.EnsureAABBIntColliderSet
  - Global.IntActor.IsRiding(IntSolid)
  - Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
  - Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
  - Global.IntActor.IsTouchingWall(IntSolid)
  - Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
  - Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  - Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  - Global.IntActor.ResetAuraCollisionMap
  - Global.IntActor.ResetActorCollisionMap
  - Global.IntActor.ResetCollisionMap
  - Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
  - Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
  - Global.IntActor.GetCollisionMapValue(IntObject)
  - Global.IntActor.Squish(IntSolid)
  - Global.IntActor.OnTriggerStart(IntTrigger)
  - Global.IntActor.OnTriggerEnd(IntTrigger)
  - Global.IntActor.OnActor(IntActor)
  - Global.IntActor.GetVelocity
  - Global.IntActor.CheckGrounded
  - Global.IntActor.GroundActor
  - Global.IntActor.CheckOnWall
  - Global.IntActor.DropDownOneWay
  - Global.IntActor.activeWater
  - Global.IntActor.GetSubmergedPercentage
  - Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
  - Global.IntActor.IsInWater
  - Global.IntActor.OnEnterWater(WaterComponent,System.Single)
  - Global.IntActor.OnExitWater(WaterComponent)
  - Global.IntActor.ApplyWind(UnityEngine.Vector2)
  - Global.IntActor.RemoveWind
  - Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
  - Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
  - Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
  - Global.IntActor.NotifyObjectKilled(IntObject)
  - Global.IntActor.OnSpike(IntSolid)
  - Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.CheckActorInteractableCollisions
  - Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  - Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
  - Global.IntObject.section
  - Global.IntObject.state
  - Global.IntObject.int_collider
  - Global.IntObject.remainder
  - Global.IntObject.StartPosition
  - Global.IntObject.AttachedToPlayer
  - Global.IntObject.IgnoredObjectsMap
  - Global.IntObject.KilledCallback
  - Global.IntObject.Position
  - Global.IntObject.GetStartWorldPosition
  - Global.IntObject.collider_type
  - Global.IntObject.MarkedForKill
  - Global.IntObject.ObjectID
  - Global.IntObject.DestroyOnKill
  - Global.IntObject.RespawnBehavior
  - Global.IntObject.Status
  - Global.IntObject.InitialStatus
  - Global.IntObject.SaveObject
  - Global.IntObject.IsInSetPiece
  - Global.IntObject.Init
  - Global.IntObject.FindIntColliderState(System.Int32)
  - Global.IntObject.GetLocalGameStates
  - Global.IntObject.RegisterSelf
  - Global.IntObject.UnregisterSelf
  - Global.IntObject.RegisterKilledCallback(IntObject.Action)
  - Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  - Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  - Global.IntObject.SetStatus(ObjectStatus)
  - Global.IntObject.Kill
  - Global.IntObject.Kill(System.Boolean)
  - Global.IntObject.Kill(System.Single)
  - Global.IntObject.Kill(System.Boolean,System.Single)
  - Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  - Global.IntObject.SleepObject
  - Global.IntObject.OptimizeSleepObject
  - Global.IntObject.WakeObject
  - Global.IntObject.EnableObject
  - Global.IntObject.DisableObject
  - Global.IntObject.RespawnObject
  - Global.IntObject.RecursiveSetCollidable(System.Boolean)
  - Global.IntObject.SetColliderState(IntColliderState)
  - Global.IntObject.Translate(UnityEngine.Vector2Int)
  - Global.IntObject.Translate(UnityEngine.Vector2)
  - Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  - Global.IntObject.SetCollidable(System.Boolean)
  - Global.IntObject.GetCollidable
  - Global.IntObject.GetCollider
  - Global.IntObject.GetColliderState
  - Global.IntObject.Overlaps(IntObject)
  - Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  - Global.IntObject.RayCast(IntRay)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  - Global.IntObject.OnDrawGizmos
  - Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  - Global.IntObject.GetObjectSaveData
  - Global.IntObject.OnPostLoadSaveFile
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.TheEternallyWebbed.LeftTop
  commentId: F:Global.TheEternallyWebbed.LeftTop
  id: LeftTop
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: LeftTop
  nameWithType: TheEternallyWebbed.LeftTop
  fullName: TheEternallyWebbed.LeftTop
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LeftTop
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Object References")]

      public SpiderLeg LeftTop
    return:
      type: Global.SpiderLeg
    content.vb: >-
      <Header("Object References")>

      Public LeftTop As SpiderLeg
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Object References
- uid: Global.TheEternallyWebbed.LeftMiddle
  commentId: F:Global.TheEternallyWebbed.LeftMiddle
  id: LeftMiddle
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: LeftMiddle
  nameWithType: TheEternallyWebbed.LeftMiddle
  fullName: TheEternallyWebbed.LeftMiddle
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LeftMiddle
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public SpiderLeg LeftMiddle
    return:
      type: Global.SpiderLeg
    content.vb: Public LeftMiddle As SpiderLeg
- uid: Global.TheEternallyWebbed.LeftBottom
  commentId: F:Global.TheEternallyWebbed.LeftBottom
  id: LeftBottom
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: LeftBottom
  nameWithType: TheEternallyWebbed.LeftBottom
  fullName: TheEternallyWebbed.LeftBottom
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LeftBottom
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public SpiderLeg LeftBottom
    return:
      type: Global.SpiderLeg
    content.vb: Public LeftBottom As SpiderLeg
- uid: Global.TheEternallyWebbed.LeftPincer
  commentId: F:Global.TheEternallyWebbed.LeftPincer
  id: LeftPincer
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: LeftPincer
  nameWithType: TheEternallyWebbed.LeftPincer
  fullName: TheEternallyWebbed.LeftPincer
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LeftPincer
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public SpiderLeg LeftPincer
    return:
      type: Global.SpiderLeg
    content.vb: Public LeftPincer As SpiderLeg
- uid: Global.TheEternallyWebbed.RightTop
  commentId: F:Global.TheEternallyWebbed.RightTop
  id: RightTop
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: RightTop
  nameWithType: TheEternallyWebbed.RightTop
  fullName: TheEternallyWebbed.RightTop
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RightTop
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public SpiderLeg RightTop
    return:
      type: Global.SpiderLeg
    content.vb: Public RightTop As SpiderLeg
- uid: Global.TheEternallyWebbed.RightMiddle
  commentId: F:Global.TheEternallyWebbed.RightMiddle
  id: RightMiddle
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: RightMiddle
  nameWithType: TheEternallyWebbed.RightMiddle
  fullName: TheEternallyWebbed.RightMiddle
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RightMiddle
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public SpiderLeg RightMiddle
    return:
      type: Global.SpiderLeg
    content.vb: Public RightMiddle As SpiderLeg
- uid: Global.TheEternallyWebbed.RightBottom
  commentId: F:Global.TheEternallyWebbed.RightBottom
  id: RightBottom
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: RightBottom
  nameWithType: TheEternallyWebbed.RightBottom
  fullName: TheEternallyWebbed.RightBottom
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RightBottom
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public SpiderLeg RightBottom
    return:
      type: Global.SpiderLeg
    content.vb: Public RightBottom As SpiderLeg
- uid: Global.TheEternallyWebbed.RightPincer
  commentId: F:Global.TheEternallyWebbed.RightPincer
  id: RightPincer
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: RightPincer
  nameWithType: TheEternallyWebbed.RightPincer
  fullName: TheEternallyWebbed.RightPincer
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RightPincer
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public SpiderLeg RightPincer
    return:
      type: Global.SpiderLeg
    content.vb: Public RightPincer As SpiderLeg
- uid: Global.TheEternallyWebbed.DangleWeb
  commentId: F:Global.TheEternallyWebbed.DangleWeb
  id: DangleWeb
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: DangleWeb
  nameWithType: TheEternallyWebbed.DangleWeb
  fullName: TheEternallyWebbed.DangleWeb
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DangleWeb
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Aura DangleWeb
    return:
      type: Global.Aura
    content.vb: Public DangleWeb As Aura
- uid: Global.TheEternallyWebbed.beacon
  commentId: F:Global.TheEternallyWebbed.beacon
  id: beacon
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: beacon
  nameWithType: TheEternallyWebbed.beacon
  fullName: TheEternallyWebbed.beacon
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: beacon
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Beacon")]

      public BeaconBehavior beacon
    return:
      type: Global.BeaconBehavior
    content.vb: >-
      <Header("Beacon")>

      Public beacon As BeaconBehavior
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Beacon
- uid: Global.TheEternallyWebbed.VulnAuraInterval
  commentId: F:Global.TheEternallyWebbed.VulnAuraInterval
  id: VulnAuraInterval
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: VulnAuraInterval
  nameWithType: TheEternallyWebbed.VulnAuraInterval
  fullName: TheEternallyWebbed.VulnAuraInterval
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: VulnAuraInterval
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Vulnerability Duration")]

      public float VulnAuraInterval
    return:
      type: System.Single
    content.vb: >-
      <Header("Vulnerability Duration")>

      Public VulnAuraInterval As Single
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Vulnerability Duration
- uid: Global.TheEternallyWebbed.MaxVulnerableTime
  commentId: F:Global.TheEternallyWebbed.MaxVulnerableTime
  id: MaxVulnerableTime
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: MaxVulnerableTime
  nameWithType: TheEternallyWebbed.MaxVulnerableTime
  fullName: TheEternallyWebbed.MaxVulnerableTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxVulnerableTime
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float MaxVulnerableTime
    return:
      type: System.Single
    content.vb: Public MaxVulnerableTime As Single
- uid: Global.TheEternallyWebbed.ClimbTime
  commentId: F:Global.TheEternallyWebbed.ClimbTime
  id: ClimbTime
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: ClimbTime
  nameWithType: TheEternallyWebbed.ClimbTime
  fullName: TheEternallyWebbed.ClimbTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ClimbTime
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 28
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Climbing")]

      public float ClimbTime
    return:
      type: System.Single
    content.vb: >-
      <Header("Climbing")>

      Public ClimbTime As Single
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Climbing
- uid: Global.TheEternallyWebbed.RotateTime
  commentId: F:Global.TheEternallyWebbed.RotateTime
  id: RotateTime
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: RotateTime
  nameWithType: TheEternallyWebbed.RotateTime
  fullName: TheEternallyWebbed.RotateTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RotateTime
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float RotateTime
    return:
      type: System.Single
    content.vb: Public RotateTime As Single
- uid: Global.TheEternallyWebbed.MinionPrefab
  commentId: F:Global.TheEternallyWebbed.MinionPrefab
  id: MinionPrefab
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: MinionPrefab
  nameWithType: TheEternallyWebbed.MinionPrefab
  fullName: TheEternallyWebbed.MinionPrefab
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MinionPrefab
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 33
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Minions")]

      public GameObject MinionPrefab
    return:
      type: UnityEngine.GameObject
    content.vb: >-
      <Header("Minions")>

      Public MinionPrefab As GameObject
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Minions
- uid: Global.TheEternallyWebbed.MinionSpawnLocationsParent
  commentId: F:Global.TheEternallyWebbed.MinionSpawnLocationsParent
  id: MinionSpawnLocationsParent
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: MinionSpawnLocationsParent
  nameWithType: TheEternallyWebbed.MinionSpawnLocationsParent
  fullName: TheEternallyWebbed.MinionSpawnLocationsParent
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MinionSpawnLocationsParent
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 34
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public GameObject MinionSpawnLocationsParent
    return:
      type: UnityEngine.GameObject
    content.vb: Public MinionSpawnLocationsParent As GameObject
- uid: Global.TheEternallyWebbed.AggressiveWebDuration
  commentId: F:Global.TheEternallyWebbed.AggressiveWebDuration
  id: AggressiveWebDuration
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: AggressiveWebDuration
  nameWithType: TheEternallyWebbed.AggressiveWebDuration
  fullName: TheEternallyWebbed.AggressiveWebDuration
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AggressiveWebDuration
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 38
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Arm Swing State")]

      public float AggressiveWebDuration
    return:
      type: System.Single
    content.vb: >-
      <Header("Arm Swing State")>

      Public AggressiveWebDuration As Single
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Arm Swing State
- uid: Global.TheEternallyWebbed.LevelOneSwingSpeedScale
  commentId: F:Global.TheEternallyWebbed.LevelOneSwingSpeedScale
  id: LevelOneSwingSpeedScale
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: LevelOneSwingSpeedScale
  nameWithType: TheEternallyWebbed.LevelOneSwingSpeedScale
  fullName: TheEternallyWebbed.LevelOneSwingSpeedScale
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LevelOneSwingSpeedScale
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 39
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float LevelOneSwingSpeedScale
    return:
      type: System.Single
    content.vb: Public LevelOneSwingSpeedScale As Single
- uid: Global.TheEternallyWebbed.LevelTwoSwingSpeedScale
  commentId: F:Global.TheEternallyWebbed.LevelTwoSwingSpeedScale
  id: LevelTwoSwingSpeedScale
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: LevelTwoSwingSpeedScale
  nameWithType: TheEternallyWebbed.LevelTwoSwingSpeedScale
  fullName: TheEternallyWebbed.LevelTwoSwingSpeedScale
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LevelTwoSwingSpeedScale
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 40
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float LevelTwoSwingSpeedScale
    return:
      type: System.Single
    content.vb: Public LevelTwoSwingSpeedScale As Single
- uid: Global.TheEternallyWebbed.LevelOneThreadDescentSpeedScale
  commentId: F:Global.TheEternallyWebbed.LevelOneThreadDescentSpeedScale
  id: LevelOneThreadDescentSpeedScale
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: LevelOneThreadDescentSpeedScale
  nameWithType: TheEternallyWebbed.LevelOneThreadDescentSpeedScale
  fullName: TheEternallyWebbed.LevelOneThreadDescentSpeedScale
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LevelOneThreadDescentSpeedScale
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 43
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Spiral Thread Descent State")]

      public float LevelOneThreadDescentSpeedScale
    return:
      type: System.Single
    content.vb: >-
      <Header("Spiral Thread Descent State")>

      Public LevelOneThreadDescentSpeedScale As Single
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Spiral Thread Descent State
- uid: Global.TheEternallyWebbed.LevelTwoThreadDescentSpeedScale
  commentId: F:Global.TheEternallyWebbed.LevelTwoThreadDescentSpeedScale
  id: LevelTwoThreadDescentSpeedScale
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: LevelTwoThreadDescentSpeedScale
  nameWithType: TheEternallyWebbed.LevelTwoThreadDescentSpeedScale
  fullName: TheEternallyWebbed.LevelTwoThreadDescentSpeedScale
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LevelTwoThreadDescentSpeedScale
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 44
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float LevelTwoThreadDescentSpeedScale
    return:
      type: System.Single
    content.vb: Public LevelTwoThreadDescentSpeedScale As Single
- uid: Global.TheEternallyWebbed.ArmThreads
  commentId: F:Global.TheEternallyWebbed.ArmThreads
  id: ArmThreads
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: ArmThreads
  nameWithType: TheEternallyWebbed.ArmThreads
  fullName: TheEternallyWebbed.ArmThreads
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ArmThreads
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 46
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected ArmThread[] ArmThreads
    return:
      type: Global.ArmThread[]
    content.vb: Protected ArmThreads As ArmThread()
- uid: Global.TheEternallyWebbed.SpiralThreads
  commentId: F:Global.TheEternallyWebbed.SpiralThreads
  id: SpiralThreads
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: SpiralThreads
  nameWithType: TheEternallyWebbed.SpiralThreads
  fullName: TheEternallyWebbed.SpiralThreads
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SpiralThreads
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 47
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected SpiralThread[] SpiralThreads
    return:
      type: Global.SpiralThread[]
    content.vb: Protected SpiralThreads As SpiralThread()
- uid: Global.TheEternallyWebbed.CurrentState
  commentId: F:Global.TheEternallyWebbed.CurrentState
  id: CurrentState
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: CurrentState
  nameWithType: TheEternallyWebbed.CurrentState
  fullName: TheEternallyWebbed.CurrentState
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CurrentState
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 48
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected TheEternallyWebbed.SpiderState CurrentState
    return:
      type: Global.TheEternallyWebbed.SpiderState
    content.vb: Protected CurrentState As TheEternallyWebbed.SpiderState
- uid: Global.TheEternallyWebbed.Awake
  commentId: M:Global.TheEternallyWebbed.Awake
  id: Awake
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: Awake()
  nameWithType: TheEternallyWebbed.Awake()
  fullName: TheEternallyWebbed.Awake()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Awake
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 62
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Awake()
    content.vb: Protected Sub Awake()
  overload: Global.TheEternallyWebbed.Awake*
- uid: Global.TheEternallyWebbed.Start
  commentId: M:Global.TheEternallyWebbed.Start
  id: Start
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: TheEternallyWebbed.Start()
  fullName: TheEternallyWebbed.Start()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Start
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 73
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Start()
    content.vb: Protected Sub Start()
  overload: Global.TheEternallyWebbed.Start*
- uid: Global.TheEternallyWebbed.SetSpiralWebActive(System.Boolean,System.Boolean)
  commentId: M:Global.TheEternallyWebbed.SetSpiralWebActive(System.Boolean,System.Boolean)
  id: SetSpiralWebActive(System.Boolean,System.Boolean)
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: SetSpiralWebActive(bool, bool)
  nameWithType: TheEternallyWebbed.SetSpiralWebActive(bool, bool)
  fullName: TheEternallyWebbed.SetSpiralWebActive(bool, bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetSpiralWebActive
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 79
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetSpiralWebActive(bool isEnabled, bool showIndicator = true)
    parameters:
    - id: isEnabled
      type: System.Boolean
    - id: showIndicator
      type: System.Boolean
    content.vb: Public Sub SetSpiralWebActive(isEnabled As Boolean, showIndicator As Boolean = True)
  overload: Global.TheEternallyWebbed.SetSpiralWebActive*
  nameWithType.vb: TheEternallyWebbed.SetSpiralWebActive(Boolean, Boolean)
  fullName.vb: TheEternallyWebbed.SetSpiralWebActive(Boolean, Boolean)
  name.vb: SetSpiralWebActive(Boolean, Boolean)
- uid: Global.TheEternallyWebbed.SetArmWebActive(System.Boolean,System.Boolean)
  commentId: M:Global.TheEternallyWebbed.SetArmWebActive(System.Boolean,System.Boolean)
  id: SetArmWebActive(System.Boolean,System.Boolean)
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: SetArmWebActive(bool, bool)
  nameWithType: TheEternallyWebbed.SetArmWebActive(bool, bool)
  fullName: TheEternallyWebbed.SetArmWebActive(bool, bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetArmWebActive
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 92
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetArmWebActive(bool isEnabled, bool showIndicator = true)
    parameters:
    - id: isEnabled
      type: System.Boolean
    - id: showIndicator
      type: System.Boolean
    content.vb: Public Sub SetArmWebActive(isEnabled As Boolean, showIndicator As Boolean = True)
  overload: Global.TheEternallyWebbed.SetArmWebActive*
  nameWithType.vb: TheEternallyWebbed.SetArmWebActive(Boolean, Boolean)
  fullName.vb: TheEternallyWebbed.SetArmWebActive(Boolean, Boolean)
  name.vb: SetArmWebActive(Boolean, Boolean)
- uid: Global.TheEternallyWebbed.CurlLegs(System.Single)
  commentId: M:Global.TheEternallyWebbed.CurlLegs(System.Single)
  id: CurlLegs(System.Single)
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: CurlLegs(float)
  nameWithType: TheEternallyWebbed.CurlLegs(float)
  fullName: TheEternallyWebbed.CurlLegs(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CurlLegs
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 105
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void CurlLegs(float t)
    parameters:
    - id: t
      type: System.Single
    content.vb: Public Sub CurlLegs(t As Single)
  overload: Global.TheEternallyWebbed.CurlLegs*
  nameWithType.vb: TheEternallyWebbed.CurlLegs(Single)
  fullName.vb: TheEternallyWebbed.CurlLegs(Single)
  name.vb: CurlLegs(Single)
- uid: Global.TheEternallyWebbed.OscillateLegs(System.Single,System.Single)
  commentId: M:Global.TheEternallyWebbed.OscillateLegs(System.Single,System.Single)
  id: OscillateLegs(System.Single,System.Single)
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: OscillateLegs(float, float)
  nameWithType: TheEternallyWebbed.OscillateLegs(float, float)
  fullName: TheEternallyWebbed.OscillateLegs(float, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OscillateLegs
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 121
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void OscillateLegs(float amp, float freq)
    parameters:
    - id: amp
      type: System.Single
    - id: freq
      type: System.Single
    content.vb: Public Sub OscillateLegs(amp As Single, freq As Single)
  overload: Global.TheEternallyWebbed.OscillateLegs*
  nameWithType.vb: TheEternallyWebbed.OscillateLegs(Single, Single)
  fullName.vb: TheEternallyWebbed.OscillateLegs(Single, Single)
  name.vb: OscillateLegs(Single, Single)
- uid: Global.TheEternallyWebbed.SetSpiderState(TheEternallyWebbed.SpiderState,System.Boolean)
  commentId: M:Global.TheEternallyWebbed.SetSpiderState(TheEternallyWebbed.SpiderState,System.Boolean)
  id: SetSpiderState(TheEternallyWebbed.SpiderState,System.Boolean)
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: SetSpiderState(SpiderState, bool)
  nameWithType: TheEternallyWebbed.SetSpiderState(TheEternallyWebbed.SpiderState, bool)
  fullName: TheEternallyWebbed.SetSpiderState(TheEternallyWebbed.SpiderState, bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetSpiderState
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 136
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void SetSpiderState(TheEternallyWebbed.SpiderState state, bool force = false)
    parameters:
    - id: state
      type: Global.TheEternallyWebbed.SpiderState
    - id: force
      type: System.Boolean
    content.vb: Protected Sub SetSpiderState(state As TheEternallyWebbed.SpiderState, force As Boolean = False)
  overload: Global.TheEternallyWebbed.SetSpiderState*
  nameWithType.vb: TheEternallyWebbed.SetSpiderState(TheEternallyWebbed.SpiderState, Boolean)
  fullName.vb: TheEternallyWebbed.SetSpiderState(TheEternallyWebbed.SpiderState, Boolean)
  name.vb: SetSpiderState(SpiderState, Boolean)
- uid: Global.TheEternallyWebbed.ResetObject
  commentId: M:Global.TheEternallyWebbed.ResetObject
  id: ResetObject
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: ResetObject()
  nameWithType: TheEternallyWebbed.ResetObject()
  fullName: TheEternallyWebbed.ResetObject()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResetObject
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 260
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void ResetObject()
    content.vb: Public Overrides Sub ResetObject()
  overridden: Global.IntObject.ResetObject
  overload: Global.TheEternallyWebbed.ResetObject*
- uid: Global.TheEternallyWebbed.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  commentId: M:Global.TheEternallyWebbed.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  id: TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: TakeDamage(int, bool, bool, DamageType)
  nameWithType: TheEternallyWebbed.TakeDamage(int, bool, bool, DamageType)
  fullName: TheEternallyWebbed.TakeDamage(int, bool, bool, DamageType)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TakeDamage
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 272
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void TakeDamage(int amount, bool force = false, bool MajorRespawn = false, DamageType damageType = DamageType.Impact)
    parameters:
    - id: amount
      type: System.Int32
    - id: force
      type: System.Boolean
    - id: MajorRespawn
      type: System.Boolean
    - id: damageType
      type: Global.DamageType
    content.vb: Public Overrides Sub TakeDamage(amount As Integer, force As Boolean = False, MajorRespawn As Boolean = False, damageType As DamageType = DamageType.Impact)
  overridden: Global.IntActor.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  overload: Global.TheEternallyWebbed.TakeDamage*
  nameWithType.vb: TheEternallyWebbed.TakeDamage(Integer, Boolean, Boolean, DamageType)
  fullName.vb: TheEternallyWebbed.TakeDamage(Integer, Boolean, Boolean, DamageType)
  name.vb: TakeDamage(Integer, Boolean, Boolean, DamageType)
- uid: Global.TheEternallyWebbed.OnKill(System.Boolean)
  commentId: M:Global.TheEternallyWebbed.OnKill(System.Boolean)
  id: OnKill(System.Boolean)
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: OnKill(bool)
  nameWithType: TheEternallyWebbed.OnKill(bool)
  fullName: TheEternallyWebbed.OnKill(bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnKill
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 288
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnKill(bool isAnimated)
    parameters:
    - id: isAnimated
      type: System.Boolean
    content.vb: Public Overrides Sub OnKill(isAnimated As Boolean)
  overridden: Global.IntObject.OnKill(System.Boolean)
  overload: Global.TheEternallyWebbed.OnKill*
  nameWithType.vb: TheEternallyWebbed.OnKill(Boolean)
  fullName.vb: TheEternallyWebbed.OnKill(Boolean)
  name.vb: OnKill(Boolean)
- uid: Global.TheEternallyWebbed.OnTakeDamage(System.Int32)
  commentId: M:Global.TheEternallyWebbed.OnTakeDamage(System.Int32)
  id: OnTakeDamage(System.Int32)
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: OnTakeDamage(int)
  nameWithType: TheEternallyWebbed.OnTakeDamage(int)
  fullName: TheEternallyWebbed.OnTakeDamage(int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnTakeDamage
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 308
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override void OnTakeDamage(int amount)
    parameters:
    - id: amount
      type: System.Int32
    content.vb: Protected Overrides Sub OnTakeDamage(amount As Integer)
  overridden: Global.IntActor.OnTakeDamage(System.Int32)
  overload: Global.TheEternallyWebbed.OnTakeDamage*
  nameWithType.vb: TheEternallyWebbed.OnTakeDamage(Integer)
  fullName.vb: TheEternallyWebbed.OnTakeDamage(Integer)
  name.vb: OnTakeDamage(Integer)
- uid: Global.TheEternallyWebbed.Update
  commentId: M:Global.TheEternallyWebbed.Update
  id: Update
  parent: Global.TheEternallyWebbed
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: TheEternallyWebbed.Update()
  fullName: TheEternallyWebbed.Update()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Update
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/TheEternallyWebbed.cs
    startLine: 458
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Update()
    content.vb: Protected Sub Update()
  overload: Global.TheEternallyWebbed.Update*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Global.IntObject
  commentId: T:Global.IntObject
  name: IntObject
  nameWithType: IntObject
  fullName: IntObject
- uid: Global.IntActor
  commentId: T:Global.IntActor
  name: IntActor
  nameWithType: IntActor
  fullName: IntActor
- uid: Global.IntBoss
  commentId: T:Global.IntBoss
  name: IntBoss
  nameWithType: IntBoss
  fullName: IntBoss
- uid: Global.ISavableObject{IntObjectSaveData}
  commentId: T:Global.ISavableObject{IntObjectSaveData}
  definition: Global.ISavableObject`1
  name: ISavableObject<IntObjectSaveData>
  nameWithType: ISavableObject<IntObjectSaveData>
  fullName: ISavableObject<IntObjectSaveData>
  nameWithType.vb: ISavableObject(Of IntObjectSaveData)
  fullName.vb: ISavableObject(Of IntObjectSaveData)
  name.vb: ISavableObject(Of IntObjectSaveData)
  spec.csharp:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: <
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: '>'
  spec.vb:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
- uid: Global.IntActor.HurtBySpike
  commentId: F:Global.IntActor.HurtBySpike
  parent: Global.IntActor
  name: HurtBySpike
  nameWithType: IntActor.HurtBySpike
  fullName: IntActor.HurtBySpike
- uid: Global.IntActor.aabb
  commentId: F:Global.IntActor.aabb
  parent: Global.IntActor
  name: aabb
  nameWithType: IntActor.aabb
  fullName: IntActor.aabb
- uid: Global.IntActor.Left
  commentId: P:Global.IntActor.Left
  parent: Global.IntActor
  name: Left
  nameWithType: IntActor.Left
  fullName: IntActor.Left
- uid: Global.IntActor.Right
  commentId: P:Global.IntActor.Right
  parent: Global.IntActor
  name: Right
  nameWithType: IntActor.Right
  fullName: IntActor.Right
- uid: Global.IntActor.Top
  commentId: P:Global.IntActor.Top
  parent: Global.IntActor
  name: Top
  nameWithType: IntActor.Top
  fullName: IntActor.Top
- uid: Global.IntActor.Bottom
  commentId: P:Global.IntActor.Bottom
  parent: Global.IntActor
  name: Bottom
  nameWithType: IntActor.Bottom
  fullName: IntActor.Bottom
- uid: Global.IntActor.Size
  commentId: P:Global.IntActor.Size
  parent: Global.IntActor
  name: Size
  nameWithType: IntActor.Size
  fullName: IntActor.Size
- uid: Global.IntActor.WindInfluence
  commentId: F:Global.IntActor.WindInfluence
  parent: Global.IntActor
  name: WindInfluence
  nameWithType: IntActor.WindInfluence
  fullName: IntActor.WindInfluence
- uid: Global.IntActor.OnTakeDamageCallback
  commentId: F:Global.IntActor.OnTakeDamageCallback
  parent: Global.IntActor
  name: OnTakeDamageCallback
  nameWithType: IntActor.OnTakeDamageCallback
  fullName: IntActor.OnTakeDamageCallback
- uid: Global.IntActor.RidingSolid
  commentId: P:Global.IntActor.RidingSolid
  parent: Global.IntActor
  name: RidingSolid
  nameWithType: IntActor.RidingSolid
  fullName: IntActor.RidingSolid
- uid: Global.IntActor.RidingTangent
  commentId: P:Global.IntActor.RidingTangent
  parent: Global.IntActor
  name: RidingTangent
  nameWithType: IntActor.RidingTangent
  fullName: IntActor.RidingTangent
- uid: Global.IntActor.RidingNormal
  commentId: P:Global.IntActor.RidingNormal
  parent: Global.IntActor
  name: RidingNormal
  nameWithType: IntActor.RidingNormal
  fullName: IntActor.RidingNormal
- uid: Global.IntActor.IsRidingFlatSurface
  commentId: P:Global.IntActor.IsRidingFlatSurface
  parent: Global.IntActor
  name: IsRidingFlatSurface
  nameWithType: IntActor.IsRidingFlatSurface
  fullName: IntActor.IsRidingFlatSurface
- uid: Global.IntActor.ManualInit
  commentId: M:Global.IntActor.ManualInit
  parent: Global.IntActor
  name: ManualInit()
  nameWithType: IntActor.ManualInit()
  fullName: IntActor.ManualInit()
  spec.csharp:
  - uid: Global.IntActor.ManualInit
    name: ManualInit
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.ManualInit
    name: ManualInit
  - name: (
  - name: )
- uid: Global.IntActor.GetAABBIntCollider
  commentId: M:Global.IntActor.GetAABBIntCollider
  parent: Global.IntActor
  name: GetAABBIntCollider()
  nameWithType: IntActor.GetAABBIntCollider()
  fullName: IntActor.GetAABBIntCollider()
  spec.csharp:
  - uid: Global.IntActor.GetAABBIntCollider
    name: GetAABBIntCollider
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetAABBIntCollider
    name: GetAABBIntCollider
  - name: (
  - name: )
- uid: Global.IntActor.EnsureAABBIntColliderSet
  commentId: M:Global.IntActor.EnsureAABBIntColliderSet
  parent: Global.IntActor
  name: EnsureAABBIntColliderSet()
  nameWithType: IntActor.EnsureAABBIntColliderSet()
  fullName: IntActor.EnsureAABBIntColliderSet()
  spec.csharp:
  - uid: Global.IntActor.EnsureAABBIntColliderSet
    name: EnsureAABBIntColliderSet
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.EnsureAABBIntColliderSet
    name: EnsureAABBIntColliderSet
  - name: (
  - name: )
- uid: Global.IntActor.IsRiding(IntSolid)
  commentId: M:Global.IntActor.IsRiding(IntSolid)
  parent: Global.IntActor
  name: IsRiding(IntSolid)
  nameWithType: IntActor.IsRiding(IntSolid)
  fullName: IntActor.IsRiding(IntSolid)
  spec.csharp:
  - uid: Global.IntActor.IsRiding(IntSolid)
    name: IsRiding
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.IntActor.IsRiding(IntSolid)
    name: IsRiding
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
  commentId: M:Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
  parent: Global.IntActor
  isExternal: true
  name: IsWalkingFlatOrUphill(Vector2)
  nameWithType: IntActor.IsWalkingFlatOrUphill(Vector2)
  fullName: IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
    name: IsWalkingFlatOrUphill
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.IsWalkingFlatOrUphill(UnityEngine.Vector2)
    name: IsWalkingFlatOrUphill
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
  commentId: M:Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
  parent: Global.IntActor
  isExternal: true
  name: GetEffectiveVelocity(Vector2)
  nameWithType: IntActor.GetEffectiveVelocity(Vector2)
  fullName: IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
    name: GetEffectiveVelocity
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetEffectiveVelocity(UnityEngine.Vector2)
    name: GetEffectiveVelocity
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntActor.IsTouchingWall(IntSolid)
  commentId: M:Global.IntActor.IsTouchingWall(IntSolid)
  parent: Global.IntActor
  name: IsTouchingWall(IntSolid)
  nameWithType: IntActor.IsTouchingWall(IntSolid)
  fullName: IntActor.IsTouchingWall(IntSolid)
  spec.csharp:
  - uid: Global.IntActor.IsTouchingWall(IntSolid)
    name: IsTouchingWall
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.IntActor.IsTouchingWall(IntSolid)
    name: IsTouchingWall
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
  commentId: M:Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
  parent: Global.IntActor
  isExternal: true
  name: SolidContainsPoint(Vector2Int)
  nameWithType: IntActor.SolidContainsPoint(Vector2Int)
  fullName: IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
    name: SolidContainsPoint
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.SolidContainsPoint(UnityEngine.Vector2Int)
    name: SolidContainsPoint
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  commentId: M:Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  parent: Global.IntActor
  name: RegisterOnTakeDamageCallback(Action)
  nameWithType: IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  fullName: IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
    name: RegisterOnTakeDamageCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntActor.RegisterOnTakeDamageCallback(IntObject.Action)
    name: RegisterOnTakeDamageCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  commentId: M:Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  parent: Global.IntActor
  name: UnregisterOnTakeDamageCallback(Action)
  nameWithType: IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  fullName: IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
    name: UnregisterOnTakeDamageCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntActor.UnregisterOnTakeDamageCallback(IntObject.Action)
    name: UnregisterOnTakeDamageCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntActor.ResetAuraCollisionMap
  commentId: M:Global.IntActor.ResetAuraCollisionMap
  parent: Global.IntActor
  name: ResetAuraCollisionMap()
  nameWithType: IntActor.ResetAuraCollisionMap()
  fullName: IntActor.ResetAuraCollisionMap()
  spec.csharp:
  - uid: Global.IntActor.ResetAuraCollisionMap
    name: ResetAuraCollisionMap
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResetAuraCollisionMap
    name: ResetAuraCollisionMap
  - name: (
  - name: )
- uid: Global.IntActor.ResetActorCollisionMap
  commentId: M:Global.IntActor.ResetActorCollisionMap
  parent: Global.IntActor
  name: ResetActorCollisionMap()
  nameWithType: IntActor.ResetActorCollisionMap()
  fullName: IntActor.ResetActorCollisionMap()
  spec.csharp:
  - uid: Global.IntActor.ResetActorCollisionMap
    name: ResetActorCollisionMap
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResetActorCollisionMap
    name: ResetActorCollisionMap
  - name: (
  - name: )
- uid: Global.IntActor.ResetCollisionMap
  commentId: M:Global.IntActor.ResetCollisionMap
  parent: Global.IntActor
  name: ResetCollisionMap()
  nameWithType: IntActor.ResetCollisionMap()
  fullName: IntActor.ResetCollisionMap()
  spec.csharp:
  - uid: Global.IntActor.ResetCollisionMap
    name: ResetCollisionMap
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResetCollisionMap
    name: ResetCollisionMap
  - name: (
  - name: )
- uid: Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
  commentId: M:Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
  parent: Global.IntActor
  isExternal: true
  name: ResetCollisionsAfterTime(IntObject, float)
  nameWithType: IntActor.ResetCollisionsAfterTime(IntObject, float)
  fullName: IntActor.ResetCollisionsAfterTime(IntObject, float)
  nameWithType.vb: IntActor.ResetCollisionsAfterTime(IntObject, Single)
  fullName.vb: IntActor.ResetCollisionsAfterTime(IntObject, Single)
  name.vb: ResetCollisionsAfterTime(IntObject, Single)
  spec.csharp:
  - uid: Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
    name: ResetCollisionsAfterTime
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResetCollisionsAfterTime(IntObject,System.Single)
    name: ResetCollisionsAfterTime
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
  commentId: M:Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
  parent: Global.IntActor
  isExternal: true
  name: SetCollisionMapValue(IntObject, bool)
  nameWithType: IntActor.SetCollisionMapValue(IntObject, bool)
  fullName: IntActor.SetCollisionMapValue(IntObject, bool)
  nameWithType.vb: IntActor.SetCollisionMapValue(IntObject, Boolean)
  fullName.vb: IntActor.SetCollisionMapValue(IntObject, Boolean)
  name.vb: SetCollisionMapValue(IntObject, Boolean)
  spec.csharp:
  - uid: Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
    name: SetCollisionMapValue
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.SetCollisionMapValue(IntObject,System.Boolean)
    name: SetCollisionMapValue
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntActor.GetCollisionMapValue(IntObject)
  commentId: M:Global.IntActor.GetCollisionMapValue(IntObject)
  parent: Global.IntActor
  name: GetCollisionMapValue(IntObject)
  nameWithType: IntActor.GetCollisionMapValue(IntObject)
  fullName: IntActor.GetCollisionMapValue(IntObject)
  spec.csharp:
  - uid: Global.IntActor.GetCollisionMapValue(IntObject)
    name: GetCollisionMapValue
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetCollisionMapValue(IntObject)
    name: GetCollisionMapValue
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
- uid: Global.IntActor.Squish(IntSolid)
  commentId: M:Global.IntActor.Squish(IntSolid)
  parent: Global.IntActor
  name: Squish(IntSolid)
  nameWithType: IntActor.Squish(IntSolid)
  fullName: IntActor.Squish(IntSolid)
  spec.csharp:
  - uid: Global.IntActor.Squish(IntSolid)
    name: Squish
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.IntActor.Squish(IntSolid)
    name: Squish
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.IntActor.OnTriggerStart(IntTrigger)
  commentId: M:Global.IntActor.OnTriggerStart(IntTrigger)
  parent: Global.IntActor
  name: OnTriggerStart(IntTrigger)
  nameWithType: IntActor.OnTriggerStart(IntTrigger)
  fullName: IntActor.OnTriggerStart(IntTrigger)
  spec.csharp:
  - uid: Global.IntActor.OnTriggerStart(IntTrigger)
    name: OnTriggerStart
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnTriggerStart(IntTrigger)
    name: OnTriggerStart
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
- uid: Global.IntActor.OnTriggerEnd(IntTrigger)
  commentId: M:Global.IntActor.OnTriggerEnd(IntTrigger)
  parent: Global.IntActor
  name: OnTriggerEnd(IntTrigger)
  nameWithType: IntActor.OnTriggerEnd(IntTrigger)
  fullName: IntActor.OnTriggerEnd(IntTrigger)
  spec.csharp:
  - uid: Global.IntActor.OnTriggerEnd(IntTrigger)
    name: OnTriggerEnd
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnTriggerEnd(IntTrigger)
    name: OnTriggerEnd
  - name: (
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
- uid: Global.IntActor.OnActor(IntActor)
  commentId: M:Global.IntActor.OnActor(IntActor)
  parent: Global.IntActor
  name: OnActor(IntActor)
  nameWithType: IntActor.OnActor(IntActor)
  fullName: IntActor.OnActor(IntActor)
  spec.csharp:
  - uid: Global.IntActor.OnActor(IntActor)
    name: OnActor
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnActor(IntActor)
    name: OnActor
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
- uid: Global.IntActor.GetVelocity
  commentId: M:Global.IntActor.GetVelocity
  parent: Global.IntActor
  name: GetVelocity()
  nameWithType: IntActor.GetVelocity()
  fullName: IntActor.GetVelocity()
  spec.csharp:
  - uid: Global.IntActor.GetVelocity
    name: GetVelocity
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetVelocity
    name: GetVelocity
  - name: (
  - name: )
- uid: Global.IntActor.CheckGrounded
  commentId: M:Global.IntActor.CheckGrounded
  parent: Global.IntActor
  name: CheckGrounded()
  nameWithType: IntActor.CheckGrounded()
  fullName: IntActor.CheckGrounded()
  spec.csharp:
  - uid: Global.IntActor.CheckGrounded
    name: CheckGrounded
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.CheckGrounded
    name: CheckGrounded
  - name: (
  - name: )
- uid: Global.IntActor.GroundActor
  commentId: M:Global.IntActor.GroundActor
  parent: Global.IntActor
  name: GroundActor()
  nameWithType: IntActor.GroundActor()
  fullName: IntActor.GroundActor()
  spec.csharp:
  - uid: Global.IntActor.GroundActor
    name: GroundActor
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.GroundActor
    name: GroundActor
  - name: (
  - name: )
- uid: Global.IntActor.CheckOnWall
  commentId: M:Global.IntActor.CheckOnWall
  parent: Global.IntActor
  name: CheckOnWall()
  nameWithType: IntActor.CheckOnWall()
  fullName: IntActor.CheckOnWall()
  spec.csharp:
  - uid: Global.IntActor.CheckOnWall
    name: CheckOnWall
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.CheckOnWall
    name: CheckOnWall
  - name: (
  - name: )
- uid: Global.IntActor.DropDownOneWay
  commentId: M:Global.IntActor.DropDownOneWay
  parent: Global.IntActor
  name: DropDownOneWay()
  nameWithType: IntActor.DropDownOneWay()
  fullName: IntActor.DropDownOneWay()
  spec.csharp:
  - uid: Global.IntActor.DropDownOneWay
    name: DropDownOneWay
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.DropDownOneWay
    name: DropDownOneWay
  - name: (
  - name: )
- uid: Global.IntActor.activeWater
  commentId: P:Global.IntActor.activeWater
  parent: Global.IntActor
  name: activeWater
  nameWithType: IntActor.activeWater
  fullName: IntActor.activeWater
- uid: Global.IntActor.GetSubmergedPercentage
  commentId: M:Global.IntActor.GetSubmergedPercentage
  parent: Global.IntActor
  name: GetSubmergedPercentage()
  nameWithType: IntActor.GetSubmergedPercentage()
  fullName: IntActor.GetSubmergedPercentage()
  spec.csharp:
  - uid: Global.IntActor.GetSubmergedPercentage
    name: GetSubmergedPercentage
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetSubmergedPercentage
    name: GetSubmergedPercentage
  - name: (
  - name: )
- uid: Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
  commentId: M:Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
  parent: Global.IntActor
  isExternal: true
  name: GetSubmergedPercentage(Vector2Int)
  nameWithType: IntActor.GetSubmergedPercentage(Vector2Int)
  fullName: IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
    name: GetSubmergedPercentage
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.GetSubmergedPercentage(UnityEngine.Vector2Int)
    name: GetSubmergedPercentage
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntActor.IsInWater
  commentId: P:Global.IntActor.IsInWater
  parent: Global.IntActor
  name: IsInWater
  nameWithType: IntActor.IsInWater
  fullName: IntActor.IsInWater
- uid: Global.IntActor.OnEnterWater(WaterComponent,System.Single)
  commentId: M:Global.IntActor.OnEnterWater(WaterComponent,System.Single)
  parent: Global.IntActor
  isExternal: true
  name: OnEnterWater(WaterComponent, float)
  nameWithType: IntActor.OnEnterWater(WaterComponent, float)
  fullName: IntActor.OnEnterWater(WaterComponent, float)
  nameWithType.vb: IntActor.OnEnterWater(WaterComponent, Single)
  fullName.vb: IntActor.OnEnterWater(WaterComponent, Single)
  name.vb: OnEnterWater(WaterComponent, Single)
  spec.csharp:
  - uid: Global.IntActor.OnEnterWater(WaterComponent,System.Single)
    name: OnEnterWater
  - name: (
  - uid: Global.WaterComponent
    name: WaterComponent
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnEnterWater(WaterComponent,System.Single)
    name: OnEnterWater
  - name: (
  - uid: Global.WaterComponent
    name: WaterComponent
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntActor.OnExitWater(WaterComponent)
  commentId: M:Global.IntActor.OnExitWater(WaterComponent)
  parent: Global.IntActor
  name: OnExitWater(WaterComponent)
  nameWithType: IntActor.OnExitWater(WaterComponent)
  fullName: IntActor.OnExitWater(WaterComponent)
  spec.csharp:
  - uid: Global.IntActor.OnExitWater(WaterComponent)
    name: OnExitWater
  - name: (
  - uid: Global.WaterComponent
    name: WaterComponent
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnExitWater(WaterComponent)
    name: OnExitWater
  - name: (
  - uid: Global.WaterComponent
    name: WaterComponent
  - name: )
- uid: Global.IntActor.ApplyWind(UnityEngine.Vector2)
  commentId: M:Global.IntActor.ApplyWind(UnityEngine.Vector2)
  parent: Global.IntActor
  isExternal: true
  name: ApplyWind(Vector2)
  nameWithType: IntActor.ApplyWind(Vector2)
  fullName: IntActor.ApplyWind(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntActor.ApplyWind(UnityEngine.Vector2)
    name: ApplyWind
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.ApplyWind(UnityEngine.Vector2)
    name: ApplyWind
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntActor.RemoveWind
  commentId: M:Global.IntActor.RemoveWind
  parent: Global.IntActor
  name: RemoveWind()
  nameWithType: IntActor.RemoveWind()
  fullName: IntActor.RemoveWind()
  spec.csharp:
  - uid: Global.IntActor.RemoveWind
    name: RemoveWind
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.RemoveWind
    name: RemoveWind
  - name: (
  - name: )
- uid: Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: ResolvePosition(Vector2, float, int, bool, bool, ActorAction, TriggerAction)
  nameWithType: IntActor.ResolvePosition(Vector2, float, int, bool, bool, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.ResolvePosition(UnityEngine.Vector2, float, int, bool, bool, IntObject.ActorAction, IntObject.TriggerAction)
  nameWithType.vb: IntActor.ResolvePosition(Vector2, Single, Integer, Boolean, Boolean, IntObject.ActorAction, IntObject.TriggerAction)
  fullName.vb: IntActor.ResolvePosition(UnityEngine.Vector2, Single, Integer, Boolean, Boolean, IntObject.ActorAction, IntObject.TriggerAction)
  name.vb: ResolvePosition(Vector2, Single, Integer, Boolean, Boolean, ActorAction, TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
    name: ResolvePosition
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResolvePosition(UnityEngine.Vector2,System.Single,System.Int32,System.Boolean,System.Boolean,IntObject.ActorAction,IntObject.TriggerAction)
    name: ResolvePosition
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
  commentId: M:Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
  parent: Global.IntActor
  isExternal: true
  name: ResolvePositionNoSlide(Vector2Int)
  nameWithType: IntActor.ResolvePositionNoSlide(Vector2Int)
  fullName: IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
    name: ResolvePositionNoSlide
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.ResolvePositionNoSlide(UnityEngine.Vector2Int)
    name: ResolvePositionNoSlide
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
  commentId: M:Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
  parent: Global.IntActor
  isExternal: true
  name: EfficientMove(Vector2, SolidAction, SolidAction)
  nameWithType: IntActor.EfficientMove(Vector2, IntObject.SolidAction, IntObject.SolidAction)
  fullName: IntActor.EfficientMove(UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction)
  spec.csharp:
  - uid: Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
    name: EfficientMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.EfficientMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction)
    name: EfficientMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: )
- uid: Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: MoveX(float, SolidAction, ActorAction, TriggerAction)
  nameWithType: IntActor.MoveX(float, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.MoveX(float, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  nameWithType.vb: IntActor.MoveX(Single, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName.vb: IntActor.MoveX(Single, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  name.vb: MoveX(Single, SolidAction, ActorAction, TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: MoveX
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.MoveX(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: MoveX
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: MoveY(float, SolidAction, ActorAction, TriggerAction)
  nameWithType: IntActor.MoveY(float, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.MoveY(float, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  nameWithType.vb: IntActor.MoveY(Single, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName.vb: IntActor.MoveY(Single, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  name.vb: MoveY(Single, SolidAction, ActorAction, TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: MoveY
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.MoveY(System.Single,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: MoveY
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
  commentId: M:Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
  parent: Global.IntActor
  isExternal: true
  name: getIntersectParameters(int, float, float, float)
  nameWithType: IntActor.getIntersectParameters(int, float, float, float)
  fullName: IntActor.getIntersectParameters(int, float, float, float)
  nameWithType.vb: IntActor.getIntersectParameters(Integer, Single, Single, Single)
  fullName.vb: IntActor.getIntersectParameters(Integer, Single, Single, Single)
  name.vb: getIntersectParameters(Integer, Single, Single, Single)
  spec.csharp:
  - uid: Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
    name: getIntersectParameters
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.getIntersectParameters(System.Int32,System.Single,System.Single,System.Single)
    name: getIntersectParameters
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntActor.NotifyObjectKilled(IntObject)
  commentId: M:Global.IntActor.NotifyObjectKilled(IntObject)
  parent: Global.IntActor
  name: NotifyObjectKilled(IntObject)
  nameWithType: IntActor.NotifyObjectKilled(IntObject)
  fullName: IntActor.NotifyObjectKilled(IntObject)
  spec.csharp:
  - uid: Global.IntActor.NotifyObjectKilled(IntObject)
    name: NotifyObjectKilled
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
  spec.vb:
  - uid: Global.IntActor.NotifyObjectKilled(IntObject)
    name: NotifyObjectKilled
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
- uid: Global.IntActor.OnSpike(IntSolid)
  commentId: M:Global.IntActor.OnSpike(IntSolid)
  parent: Global.IntActor
  name: OnSpike(IntSolid)
  nameWithType: IntActor.OnSpike(IntSolid)
  fullName: IntActor.OnSpike(IntSolid)
  spec.csharp:
  - uid: Global.IntActor.OnSpike(IntSolid)
    name: OnSpike
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnSpike(IntSolid)
    name: OnSpike
  - name: (
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
- uid: Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: SlantMove(Vector2, ActorAction, TriggerAction)
  nameWithType: IntActor.SlantMove(Vector2, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.SlantMove(UnityEngine.Vector2, IntObject.ActorAction, IntObject.TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
    name: SlantMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.SlantMove(UnityEngine.Vector2,IntObject.ActorAction,IntObject.TriggerAction)
    name: SlantMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  name: CheckActorTriggerCollisions(ActorAction, TriggerAction)
  nameWithType: IntActor.CheckActorTriggerCollisions(IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.CheckActorTriggerCollisions(IntObject.ActorAction, IntObject.TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
    name: CheckActorTriggerCollisions
  - name: (
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.CheckActorTriggerCollisions(IntObject.ActorAction,IntObject.TriggerAction)
    name: CheckActorTriggerCollisions
  - name: (
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.CheckActorInteractableCollisions
  commentId: M:Global.IntActor.CheckActorInteractableCollisions
  parent: Global.IntActor
  name: CheckActorInteractableCollisions()
  nameWithType: IntActor.CheckActorInteractableCollisions()
  fullName: IntActor.CheckActorInteractableCollisions()
  spec.csharp:
  - uid: Global.IntActor.CheckActorInteractableCollisions
    name: CheckActorInteractableCollisions
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntActor.CheckActorInteractableCollisions
    name: CheckActorInteractableCollisions
  - name: (
  - name: )
- uid: Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  commentId: M:Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
  parent: Global.IntActor
  isExternal: true
  name: SimpleMove(Vector2, SolidAction, SolidAction, ActorAction, TriggerAction)
  nameWithType: IntActor.SimpleMove(Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  fullName: IntActor.SimpleMove(UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction)
  spec.csharp:
  - uid: Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: SimpleMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
  spec.vb:
  - uid: Global.IntActor.SimpleMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction)
    name: SimpleMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: )
- uid: Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
  commentId: M:Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
  parent: Global.IntActor
  isExternal: true
  name: ComplexMove(Vector2, SolidAction, SolidAction, ActorAction, TriggerAction, int)
  nameWithType: IntActor.ComplexMove(Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction, int)
  fullName: IntActor.ComplexMove(UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction, int)
  nameWithType.vb: IntActor.ComplexMove(Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction, Integer)
  fullName.vb: IntActor.ComplexMove(UnityEngine.Vector2, IntObject.SolidAction, IntObject.SolidAction, IntObject.ActorAction, IntObject.TriggerAction, Integer)
  name.vb: ComplexMove(Vector2, SolidAction, SolidAction, ActorAction, TriggerAction, Integer)
  spec.csharp:
  - uid: Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
    name: ComplexMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.ComplexMove(UnityEngine.Vector2,IntObject.SolidAction,IntObject.SolidAction,IntObject.ActorAction,IntObject.TriggerAction,System.Int32)
    name: ComplexMove
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.SolidAction
    name: SolidAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.ActorAction
    name: ActorAction
  - name: ','
  - name: " "
  - uid: Global.IntObject.TriggerAction
    name: TriggerAction
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Global.IntObject.section
  commentId: P:Global.IntObject.section
  parent: Global.IntObject
  name: section
  nameWithType: IntObject.section
  fullName: IntObject.section
- uid: Global.IntObject.state
  commentId: P:Global.IntObject.state
  parent: Global.IntObject
  name: state
  nameWithType: IntObject.state
  fullName: IntObject.state
- uid: Global.IntObject.int_collider
  commentId: F:Global.IntObject.int_collider
  parent: Global.IntObject
  name: int_collider
  nameWithType: IntObject.int_collider
  fullName: IntObject.int_collider
- uid: Global.IntObject.remainder
  commentId: F:Global.IntObject.remainder
  parent: Global.IntObject
  name: remainder
  nameWithType: IntObject.remainder
  fullName: IntObject.remainder
- uid: Global.IntObject.StartPosition
  commentId: F:Global.IntObject.StartPosition
  parent: Global.IntObject
  name: StartPosition
  nameWithType: IntObject.StartPosition
  fullName: IntObject.StartPosition
- uid: Global.IntObject.AttachedToPlayer
  commentId: F:Global.IntObject.AttachedToPlayer
  parent: Global.IntObject
  name: AttachedToPlayer
  nameWithType: IntObject.AttachedToPlayer
  fullName: IntObject.AttachedToPlayer
- uid: Global.IntObject.IgnoredObjectsMap
  commentId: F:Global.IntObject.IgnoredObjectsMap
  parent: Global.IntObject
  name: IgnoredObjectsMap
  nameWithType: IntObject.IgnoredObjectsMap
  fullName: IntObject.IgnoredObjectsMap
- uid: Global.IntObject.KilledCallback
  commentId: F:Global.IntObject.KilledCallback
  parent: Global.IntObject
  name: KilledCallback
  nameWithType: IntObject.KilledCallback
  fullName: IntObject.KilledCallback
- uid: Global.IntObject.Position
  commentId: P:Global.IntObject.Position
  parent: Global.IntObject
  name: Position
  nameWithType: IntObject.Position
  fullName: IntObject.Position
- uid: Global.IntObject.GetStartWorldPosition
  commentId: P:Global.IntObject.GetStartWorldPosition
  parent: Global.IntObject
  name: GetStartWorldPosition
  nameWithType: IntObject.GetStartWorldPosition
  fullName: IntObject.GetStartWorldPosition
- uid: Global.IntObject.collider_type
  commentId: P:Global.IntObject.collider_type
  parent: Global.IntObject
  name: collider_type
  nameWithType: IntObject.collider_type
  fullName: IntObject.collider_type
- uid: Global.IntObject.MarkedForKill
  commentId: P:Global.IntObject.MarkedForKill
  parent: Global.IntObject
  name: MarkedForKill
  nameWithType: IntObject.MarkedForKill
  fullName: IntObject.MarkedForKill
- uid: Global.IntObject.ObjectID
  commentId: F:Global.IntObject.ObjectID
  parent: Global.IntObject
  name: ObjectID
  nameWithType: IntObject.ObjectID
  fullName: IntObject.ObjectID
- uid: Global.IntObject.DestroyOnKill
  commentId: F:Global.IntObject.DestroyOnKill
  parent: Global.IntObject
  name: DestroyOnKill
  nameWithType: IntObject.DestroyOnKill
  fullName: IntObject.DestroyOnKill
- uid: Global.IntObject.RespawnBehavior
  commentId: F:Global.IntObject.RespawnBehavior
  parent: Global.IntObject
  name: RespawnBehavior
  nameWithType: IntObject.RespawnBehavior
  fullName: IntObject.RespawnBehavior
- uid: Global.IntObject.Status
  commentId: F:Global.IntObject.Status
  parent: Global.IntObject
  name: Status
  nameWithType: IntObject.Status
  fullName: IntObject.Status
- uid: Global.IntObject.InitialStatus
  commentId: F:Global.IntObject.InitialStatus
  parent: Global.IntObject
  name: InitialStatus
  nameWithType: IntObject.InitialStatus
  fullName: IntObject.InitialStatus
- uid: Global.IntObject.SaveObject
  commentId: F:Global.IntObject.SaveObject
  parent: Global.IntObject
  name: SaveObject
  nameWithType: IntObject.SaveObject
  fullName: IntObject.SaveObject
- uid: Global.IntObject.IsInSetPiece
  commentId: P:Global.IntObject.IsInSetPiece
  parent: Global.IntObject
  name: IsInSetPiece
  nameWithType: IntObject.IsInSetPiece
  fullName: IntObject.IsInSetPiece
- uid: Global.IntObject.Init
  commentId: M:Global.IntObject.Init
  parent: Global.IntObject
  name: Init()
  nameWithType: IntObject.Init()
  fullName: IntObject.Init()
  spec.csharp:
  - uid: Global.IntObject.Init
    name: Init
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.Init
    name: Init
  - name: (
  - name: )
- uid: Global.IntObject.FindIntColliderState(System.Int32)
  commentId: M:Global.IntObject.FindIntColliderState(System.Int32)
  parent: Global.IntObject
  isExternal: true
  name: FindIntColliderState(int)
  nameWithType: IntObject.FindIntColliderState(int)
  fullName: IntObject.FindIntColliderState(int)
  nameWithType.vb: IntObject.FindIntColliderState(Integer)
  fullName.vb: IntObject.FindIntColliderState(Integer)
  name.vb: FindIntColliderState(Integer)
  spec.csharp:
  - uid: Global.IntObject.FindIntColliderState(System.Int32)
    name: FindIntColliderState
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.FindIntColliderState(System.Int32)
    name: FindIntColliderState
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Global.IntObject.GetLocalGameStates
  commentId: M:Global.IntObject.GetLocalGameStates
  parent: Global.IntObject
  name: GetLocalGameStates()
  nameWithType: IntObject.GetLocalGameStates()
  fullName: IntObject.GetLocalGameStates()
  spec.csharp:
  - uid: Global.IntObject.GetLocalGameStates
    name: GetLocalGameStates
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetLocalGameStates
    name: GetLocalGameStates
  - name: (
  - name: )
- uid: Global.IntObject.RegisterSelf
  commentId: M:Global.IntObject.RegisterSelf
  parent: Global.IntObject
  name: RegisterSelf()
  nameWithType: IntObject.RegisterSelf()
  fullName: IntObject.RegisterSelf()
  spec.csharp:
  - uid: Global.IntObject.RegisterSelf
    name: RegisterSelf
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.RegisterSelf
    name: RegisterSelf
  - name: (
  - name: )
- uid: Global.IntObject.UnregisterSelf
  commentId: M:Global.IntObject.UnregisterSelf
  parent: Global.IntObject
  name: UnregisterSelf()
  nameWithType: IntObject.UnregisterSelf()
  fullName: IntObject.UnregisterSelf()
  spec.csharp:
  - uid: Global.IntObject.UnregisterSelf
    name: UnregisterSelf
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.UnregisterSelf
    name: UnregisterSelf
  - name: (
  - name: )
- uid: Global.IntObject.RegisterKilledCallback(IntObject.Action)
  commentId: M:Global.IntObject.RegisterKilledCallback(IntObject.Action)
  parent: Global.IntObject
  name: RegisterKilledCallback(Action)
  nameWithType: IntObject.RegisterKilledCallback(IntObject.Action)
  fullName: IntObject.RegisterKilledCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntObject.RegisterKilledCallback(IntObject.Action)
    name: RegisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntObject.RegisterKilledCallback(IntObject.Action)
    name: RegisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  commentId: M:Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  parent: Global.IntObject
  name: UnregisterKilledCallback(Action)
  nameWithType: IntObject.UnregisterKilledCallback(IntObject.Action)
  fullName: IntObject.UnregisterKilledCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntObject.UnregisterKilledCallback(IntObject.Action)
    name: UnregisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntObject.UnregisterKilledCallback(IntObject.Action)
    name: UnregisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  commentId: M:Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  parent: Global.IntObject
  isExternal: true
  name: IsContainedInRect(Rect)
  nameWithType: IntObject.IsContainedInRect(Rect)
  fullName: IntObject.IsContainedInRect(UnityEngine.Rect)
  spec.csharp:
  - uid: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
    name: IsContainedInRect
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
    name: IsContainedInRect
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: )
- uid: Global.IntObject.SetStatus(ObjectStatus)
  commentId: M:Global.IntObject.SetStatus(ObjectStatus)
  parent: Global.IntObject
  name: SetStatus(ObjectStatus)
  nameWithType: IntObject.SetStatus(ObjectStatus)
  fullName: IntObject.SetStatus(ObjectStatus)
  spec.csharp:
  - uid: Global.IntObject.SetStatus(ObjectStatus)
    name: SetStatus
  - name: (
  - uid: Global.ObjectStatus
    name: ObjectStatus
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetStatus(ObjectStatus)
    name: SetStatus
  - name: (
  - uid: Global.ObjectStatus
    name: ObjectStatus
  - name: )
- uid: Global.IntObject.Kill
  commentId: M:Global.IntObject.Kill
  parent: Global.IntObject
  name: Kill()
  nameWithType: IntObject.Kill()
  fullName: IntObject.Kill()
  spec.csharp:
  - uid: Global.IntObject.Kill
    name: Kill
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill
    name: Kill
  - name: (
  - name: )
- uid: Global.IntObject.Kill(System.Boolean)
  commentId: M:Global.IntObject.Kill(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: Kill(bool)
  nameWithType: IntObject.Kill(bool)
  fullName: IntObject.Kill(bool)
  nameWithType.vb: IntObject.Kill(Boolean)
  fullName.vb: IntObject.Kill(Boolean)
  name.vb: Kill(Boolean)
  spec.csharp:
  - uid: Global.IntObject.Kill(System.Boolean)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill(System.Boolean)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.Kill(System.Single)
  commentId: M:Global.IntObject.Kill(System.Single)
  parent: Global.IntObject
  isExternal: true
  name: Kill(float)
  nameWithType: IntObject.Kill(float)
  fullName: IntObject.Kill(float)
  nameWithType.vb: IntObject.Kill(Single)
  fullName.vb: IntObject.Kill(Single)
  name.vb: Kill(Single)
  spec.csharp:
  - uid: Global.IntObject.Kill(System.Single)
    name: Kill
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill(System.Single)
    name: Kill
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntObject.Kill(System.Boolean,System.Single)
  commentId: M:Global.IntObject.Kill(System.Boolean,System.Single)
  parent: Global.IntObject
  isExternal: true
  name: Kill(bool, float)
  nameWithType: IntObject.Kill(bool, float)
  fullName: IntObject.Kill(bool, float)
  nameWithType.vb: IntObject.Kill(Boolean, Single)
  fullName.vb: IntObject.Kill(Boolean, Single)
  name.vb: Kill(Boolean, Single)
  spec.csharp:
  - uid: Global.IntObject.Kill(System.Boolean,System.Single)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill(System.Boolean,System.Single)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  commentId: M:Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  parent: Global.IntObject
  isExternal: true
  name: IgnoreObjectCollisions(IntObject, float)
  nameWithType: IntObject.IgnoreObjectCollisions(IntObject, float)
  fullName: IntObject.IgnoreObjectCollisions(IntObject, float)
  nameWithType.vb: IntObject.IgnoreObjectCollisions(IntObject, Single)
  fullName.vb: IntObject.IgnoreObjectCollisions(IntObject, Single)
  name.vb: IgnoreObjectCollisions(IntObject, Single)
  spec.csharp:
  - uid: Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
    name: IgnoreObjectCollisions
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
    name: IgnoreObjectCollisions
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntObject.SleepObject
  commentId: M:Global.IntObject.SleepObject
  parent: Global.IntObject
  name: SleepObject()
  nameWithType: IntObject.SleepObject()
  fullName: IntObject.SleepObject()
  spec.csharp:
  - uid: Global.IntObject.SleepObject
    name: SleepObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.SleepObject
    name: SleepObject
  - name: (
  - name: )
- uid: Global.IntObject.OptimizeSleepObject
  commentId: M:Global.IntObject.OptimizeSleepObject
  parent: Global.IntObject
  name: OptimizeSleepObject()
  nameWithType: IntObject.OptimizeSleepObject()
  fullName: IntObject.OptimizeSleepObject()
  spec.csharp:
  - uid: Global.IntObject.OptimizeSleepObject
    name: OptimizeSleepObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.OptimizeSleepObject
    name: OptimizeSleepObject
  - name: (
  - name: )
- uid: Global.IntObject.WakeObject
  commentId: M:Global.IntObject.WakeObject
  parent: Global.IntObject
  name: WakeObject()
  nameWithType: IntObject.WakeObject()
  fullName: IntObject.WakeObject()
  spec.csharp:
  - uid: Global.IntObject.WakeObject
    name: WakeObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.WakeObject
    name: WakeObject
  - name: (
  - name: )
- uid: Global.IntObject.EnableObject
  commentId: M:Global.IntObject.EnableObject
  parent: Global.IntObject
  name: EnableObject()
  nameWithType: IntObject.EnableObject()
  fullName: IntObject.EnableObject()
  spec.csharp:
  - uid: Global.IntObject.EnableObject
    name: EnableObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.EnableObject
    name: EnableObject
  - name: (
  - name: )
- uid: Global.IntObject.DisableObject
  commentId: M:Global.IntObject.DisableObject
  parent: Global.IntObject
  name: DisableObject()
  nameWithType: IntObject.DisableObject()
  fullName: IntObject.DisableObject()
  spec.csharp:
  - uid: Global.IntObject.DisableObject
    name: DisableObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.DisableObject
    name: DisableObject
  - name: (
  - name: )
- uid: Global.IntObject.RespawnObject
  commentId: M:Global.IntObject.RespawnObject
  parent: Global.IntObject
  name: RespawnObject()
  nameWithType: IntObject.RespawnObject()
  fullName: IntObject.RespawnObject()
  spec.csharp:
  - uid: Global.IntObject.RespawnObject
    name: RespawnObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.RespawnObject
    name: RespawnObject
  - name: (
  - name: )
- uid: Global.IntObject.RecursiveSetCollidable(System.Boolean)
  commentId: M:Global.IntObject.RecursiveSetCollidable(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: RecursiveSetCollidable(bool)
  nameWithType: IntObject.RecursiveSetCollidable(bool)
  fullName: IntObject.RecursiveSetCollidable(bool)
  nameWithType.vb: IntObject.RecursiveSetCollidable(Boolean)
  fullName.vb: IntObject.RecursiveSetCollidable(Boolean)
  name.vb: RecursiveSetCollidable(Boolean)
  spec.csharp:
  - uid: Global.IntObject.RecursiveSetCollidable(System.Boolean)
    name: RecursiveSetCollidable
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.RecursiveSetCollidable(System.Boolean)
    name: RecursiveSetCollidable
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.SetColliderState(IntColliderState)
  commentId: M:Global.IntObject.SetColliderState(IntColliderState)
  parent: Global.IntObject
  name: SetColliderState(IntColliderState)
  nameWithType: IntObject.SetColliderState(IntColliderState)
  fullName: IntObject.SetColliderState(IntColliderState)
  spec.csharp:
  - uid: Global.IntObject.SetColliderState(IntColliderState)
    name: SetColliderState
  - name: (
  - uid: Global.IntColliderState
    name: IntColliderState
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetColliderState(IntColliderState)
    name: SetColliderState
  - name: (
  - uid: Global.IntColliderState
    name: IntColliderState
  - name: )
- uid: Global.IntObject.Translate(UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.Translate(UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: Translate(Vector2Int)
  nameWithType: IntObject.Translate(Vector2Int)
  fullName: IntObject.Translate(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2Int)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2Int)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.Translate(UnityEngine.Vector2)
  commentId: M:Global.IntObject.Translate(UnityEngine.Vector2)
  parent: Global.IntObject
  isExternal: true
  name: Translate(Vector2)
  nameWithType: IntObject.Translate(Vector2)
  fullName: IntObject.Translate(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: SetPosition(Vector2Int)
  nameWithType: IntObject.SetPosition(Vector2Int)
  fullName: IntObject.SetPosition(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.SetPosition(UnityEngine.Vector2Int)
    name: SetPosition
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetPosition(UnityEngine.Vector2Int)
    name: SetPosition
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.SetCollidable(System.Boolean)
  commentId: M:Global.IntObject.SetCollidable(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: SetCollidable(bool)
  nameWithType: IntObject.SetCollidable(bool)
  fullName: IntObject.SetCollidable(bool)
  nameWithType.vb: IntObject.SetCollidable(Boolean)
  fullName.vb: IntObject.SetCollidable(Boolean)
  name.vb: SetCollidable(Boolean)
  spec.csharp:
  - uid: Global.IntObject.SetCollidable(System.Boolean)
    name: SetCollidable
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetCollidable(System.Boolean)
    name: SetCollidable
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.GetCollidable
  commentId: M:Global.IntObject.GetCollidable
  parent: Global.IntObject
  name: GetCollidable()
  nameWithType: IntObject.GetCollidable()
  fullName: IntObject.GetCollidable()
  spec.csharp:
  - uid: Global.IntObject.GetCollidable
    name: GetCollidable
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetCollidable
    name: GetCollidable
  - name: (
  - name: )
- uid: Global.IntObject.GetCollider
  commentId: M:Global.IntObject.GetCollider
  parent: Global.IntObject
  name: GetCollider()
  nameWithType: IntObject.GetCollider()
  fullName: IntObject.GetCollider()
  spec.csharp:
  - uid: Global.IntObject.GetCollider
    name: GetCollider
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetCollider
    name: GetCollider
  - name: (
  - name: )
- uid: Global.IntObject.GetColliderState
  commentId: M:Global.IntObject.GetColliderState
  parent: Global.IntObject
  name: GetColliderState()
  nameWithType: IntObject.GetColliderState()
  fullName: IntObject.GetColliderState()
  spec.csharp:
  - uid: Global.IntObject.GetColliderState
    name: GetColliderState
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetColliderState
    name: GetColliderState
  - name: (
  - name: )
- uid: Global.IntObject.Overlaps(IntObject)
  commentId: M:Global.IntObject.Overlaps(IntObject)
  parent: Global.IntObject
  name: Overlaps(IntObject)
  nameWithType: IntObject.Overlaps(IntObject)
  fullName: IntObject.Overlaps(IntObject)
  spec.csharp:
  - uid: Global.IntObject.Overlaps(IntObject)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
  spec.vb:
  - uid: Global.IntObject.Overlaps(IntObject)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
- uid: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: Overlaps(IntObject, Vector2Int)
  nameWithType: IntObject.Overlaps(IntObject, Vector2Int)
  fullName: IntObject.Overlaps(IntObject, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.RayCast(IntRay)
  commentId: M:Global.IntObject.RayCast(IntRay)
  parent: Global.IntObject
  name: RayCast(IntRay)
  nameWithType: IntObject.RayCast(IntRay)
  fullName: IntObject.RayCast(IntRay)
  spec.csharp:
  - uid: Global.IntObject.RayCast(IntRay)
    name: RayCast
  - name: (
  - uid: Global.IntRay
    name: IntRay
  - name: )
  spec.vb:
  - uid: Global.IntObject.RayCast(IntRay)
    name: RayCast
  - name: (
  - uid: Global.IntRay
    name: IntRay
  - name: )
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: CollideAt(List<IntSolid>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntSolid>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntSolid>, UnityEngine.Vector2Int)
  nameWithType.vb: IntObject.CollideAt(List(Of IntSolid), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntSolid), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntSolid), Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntSolid
    name: IntSolid
  - name: '>'
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: CollideAt(List<IntActor>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntActor>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntActor>, UnityEngine.Vector2Int)
  nameWithType.vb: IntObject.CollideAt(List(Of IntActor), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntActor), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntActor), Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntActor
    name: IntActor
  - name: '>'
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntActor
    name: IntActor
  - name: )
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: CollideAt(List<IntTrigger>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntTrigger>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntTrigger>, UnityEngine.Vector2Int)
  nameWithType.vb: IntObject.CollideAt(List(Of IntTrigger), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntTrigger), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntTrigger), Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: '>'
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.OnDrawGizmos
  commentId: M:Global.IntObject.OnDrawGizmos
  parent: Global.IntObject
  name: OnDrawGizmos()
  nameWithType: IntObject.OnDrawGizmos()
  fullName: IntObject.OnDrawGizmos()
  spec.csharp:
  - uid: Global.IntObject.OnDrawGizmos
    name: OnDrawGizmos
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.OnDrawGizmos
    name: OnDrawGizmos
  - name: (
  - name: )
- uid: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  commentId: M:Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  parent: Global.IntObject
  name: LoadObjectSaveData(IntObjectSaveData)
  nameWithType: IntObject.LoadObjectSaveData(IntObjectSaveData)
  fullName: IntObject.LoadObjectSaveData(IntObjectSaveData)
  spec.csharp:
  - uid: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
    name: LoadObjectSaveData
  - name: (
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
  spec.vb:
  - uid: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
    name: LoadObjectSaveData
  - name: (
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
- uid: Global.IntObject.GetObjectSaveData
  commentId: M:Global.IntObject.GetObjectSaveData
  parent: Global.IntObject
  name: GetObjectSaveData()
  nameWithType: IntObject.GetObjectSaveData()
  fullName: IntObject.GetObjectSaveData()
  spec.csharp:
  - uid: Global.IntObject.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
- uid: Global.IntObject.OnPostLoadSaveFile
  commentId: M:Global.IntObject.OnPostLoadSaveFile
  parent: Global.IntObject
  name: OnPostLoadSaveFile()
  nameWithType: IntObject.OnPostLoadSaveFile()
  fullName: IntObject.OnPostLoadSaveFile()
  spec.csharp:
  - uid: Global.IntObject.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ISavableObject`1
  commentId: T:Global.ISavableObject`1
  name: ISavableObject<T>
  nameWithType: ISavableObject<T>
  fullName: ISavableObject<T>
  nameWithType.vb: ISavableObject(Of T)
  fullName.vb: ISavableObject(Of T)
  name.vb: ISavableObject(Of T)
  spec.csharp:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.SpiderLeg
  commentId: T:Global.SpiderLeg
  name: SpiderLeg
  nameWithType: SpiderLeg
  fullName: SpiderLeg
- uid: Global.Aura
  commentId: T:Global.Aura
  name: Aura
  nameWithType: Aura
  fullName: Aura
- uid: Global.BeaconBehavior
  commentId: T:Global.BeaconBehavior
  name: BeaconBehavior
  nameWithType: BeaconBehavior
  fullName: BeaconBehavior
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: Global.ArmThread[]
  isExternal: true
  name: ArmThread[]
  nameWithType: ArmThread[]
  fullName: ArmThread[]
  nameWithType.vb: ArmThread()
  fullName.vb: ArmThread()
  name.vb: ArmThread()
  spec.csharp:
  - uid: Global.ArmThread
    name: ArmThread
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.ArmThread
    name: ArmThread
  - name: (
  - name: )
- uid: Global.SpiralThread[]
  isExternal: true
  name: SpiralThread[]
  nameWithType: SpiralThread[]
  fullName: SpiralThread[]
  nameWithType.vb: SpiralThread()
  fullName.vb: SpiralThread()
  name.vb: SpiralThread()
  spec.csharp:
  - uid: Global.SpiralThread
    name: SpiralThread
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.SpiralThread
    name: SpiralThread
  - name: (
  - name: )
- uid: Global.TheEternallyWebbed.SpiderState
  commentId: T:Global.TheEternallyWebbed.SpiderState
  name: TheEternallyWebbed.SpiderState
  nameWithType: TheEternallyWebbed.SpiderState
  fullName: TheEternallyWebbed.SpiderState
  spec.csharp:
  - uid: Global.TheEternallyWebbed
    name: TheEternallyWebbed
  - name: .
  - uid: Global.TheEternallyWebbed.SpiderState
    name: SpiderState
  spec.vb:
  - uid: Global.TheEternallyWebbed
    name: TheEternallyWebbed
  - name: .
  - uid: Global.TheEternallyWebbed.SpiderState
    name: SpiderState
- uid: Global.TheEternallyWebbed.Awake*
  commentId: Overload:Global.TheEternallyWebbed.Awake
  name: Awake
  nameWithType: TheEternallyWebbed.Awake
  fullName: TheEternallyWebbed.Awake
- uid: Global.TheEternallyWebbed.Start*
  commentId: Overload:Global.TheEternallyWebbed.Start
  name: Start
  nameWithType: TheEternallyWebbed.Start
  fullName: TheEternallyWebbed.Start
- uid: Global.TheEternallyWebbed.SetSpiralWebActive*
  commentId: Overload:Global.TheEternallyWebbed.SetSpiralWebActive
  name: SetSpiralWebActive
  nameWithType: TheEternallyWebbed.SetSpiralWebActive
  fullName: TheEternallyWebbed.SetSpiralWebActive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.TheEternallyWebbed.SetArmWebActive*
  commentId: Overload:Global.TheEternallyWebbed.SetArmWebActive
  name: SetArmWebActive
  nameWithType: TheEternallyWebbed.SetArmWebActive
  fullName: TheEternallyWebbed.SetArmWebActive
- uid: Global.TheEternallyWebbed.CurlLegs*
  commentId: Overload:Global.TheEternallyWebbed.CurlLegs
  name: CurlLegs
  nameWithType: TheEternallyWebbed.CurlLegs
  fullName: TheEternallyWebbed.CurlLegs
- uid: Global.TheEternallyWebbed.OscillateLegs*
  commentId: Overload:Global.TheEternallyWebbed.OscillateLegs
  name: OscillateLegs
  nameWithType: TheEternallyWebbed.OscillateLegs
  fullName: TheEternallyWebbed.OscillateLegs
- uid: Global.TheEternallyWebbed.SetSpiderState*
  commentId: Overload:Global.TheEternallyWebbed.SetSpiderState
  name: SetSpiderState
  nameWithType: TheEternallyWebbed.SetSpiderState
  fullName: TheEternallyWebbed.SetSpiderState
- uid: Global.IntObject.ResetObject
  commentId: M:Global.IntObject.ResetObject
  parent: Global.IntObject
  name: ResetObject()
  nameWithType: IntObject.ResetObject()
  fullName: IntObject.ResetObject()
  spec.csharp:
  - uid: Global.IntObject.ResetObject
    name: ResetObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.ResetObject
    name: ResetObject
  - name: (
  - name: )
- uid: Global.TheEternallyWebbed.ResetObject*
  commentId: Overload:Global.TheEternallyWebbed.ResetObject
  name: ResetObject
  nameWithType: TheEternallyWebbed.ResetObject
  fullName: TheEternallyWebbed.ResetObject
- uid: Global.IntActor.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  commentId: M:Global.IntActor.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
  parent: Global.IntActor
  isExternal: true
  name: TakeDamage(int, bool, bool, DamageType)
  nameWithType: IntActor.TakeDamage(int, bool, bool, DamageType)
  fullName: IntActor.TakeDamage(int, bool, bool, DamageType)
  nameWithType.vb: IntActor.TakeDamage(Integer, Boolean, Boolean, DamageType)
  fullName.vb: IntActor.TakeDamage(Integer, Boolean, Boolean, DamageType)
  name.vb: TakeDamage(Integer, Boolean, Boolean, DamageType)
  spec.csharp:
  - uid: Global.IntActor.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
    name: TakeDamage
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.DamageType
    name: DamageType
  - name: )
  spec.vb:
  - uid: Global.IntActor.TakeDamage(System.Int32,System.Boolean,System.Boolean,DamageType)
    name: TakeDamage
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.DamageType
    name: DamageType
  - name: )
- uid: Global.TheEternallyWebbed.TakeDamage*
  commentId: Overload:Global.TheEternallyWebbed.TakeDamage
  name: TakeDamage
  nameWithType: TheEternallyWebbed.TakeDamage
  fullName: TheEternallyWebbed.TakeDamage
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.DamageType
  commentId: T:Global.DamageType
  name: DamageType
  nameWithType: DamageType
  fullName: DamageType
- uid: Global.IntObject.OnKill(System.Boolean)
  commentId: M:Global.IntObject.OnKill(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: OnKill(bool)
  nameWithType: IntObject.OnKill(bool)
  fullName: IntObject.OnKill(bool)
  nameWithType.vb: IntObject.OnKill(Boolean)
  fullName.vb: IntObject.OnKill(Boolean)
  name.vb: OnKill(Boolean)
  spec.csharp:
  - uid: Global.IntObject.OnKill(System.Boolean)
    name: OnKill
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.OnKill(System.Boolean)
    name: OnKill
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.TheEternallyWebbed.OnKill*
  commentId: Overload:Global.TheEternallyWebbed.OnKill
  name: OnKill
  nameWithType: TheEternallyWebbed.OnKill
  fullName: TheEternallyWebbed.OnKill
- uid: Global.IntActor.OnTakeDamage(System.Int32)
  commentId: M:Global.IntActor.OnTakeDamage(System.Int32)
  parent: Global.IntActor
  isExternal: true
  name: OnTakeDamage(int)
  nameWithType: IntActor.OnTakeDamage(int)
  fullName: IntActor.OnTakeDamage(int)
  nameWithType.vb: IntActor.OnTakeDamage(Integer)
  fullName.vb: IntActor.OnTakeDamage(Integer)
  name.vb: OnTakeDamage(Integer)
  spec.csharp:
  - uid: Global.IntActor.OnTakeDamage(System.Int32)
    name: OnTakeDamage
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntActor.OnTakeDamage(System.Int32)
    name: OnTakeDamage
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Global.TheEternallyWebbed.OnTakeDamage*
  commentId: Overload:Global.TheEternallyWebbed.OnTakeDamage
  name: OnTakeDamage
  nameWithType: TheEternallyWebbed.OnTakeDamage
  fullName: TheEternallyWebbed.OnTakeDamage
- uid: Global.TheEternallyWebbed.Update*
  commentId: Overload:Global.TheEternallyWebbed.Update
  name: Update
  nameWithType: TheEternallyWebbed.Update
  fullName: TheEternallyWebbed.Update
