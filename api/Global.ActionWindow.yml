### YamlMime:ManagedReference
items:
- uid: Global.ActionWindow
  commentId: T:Global.ActionWindow
  id: ActionWindow
  parent: Global
  children:
  - Global.ActionWindow.#ctor(ActionWindow.Action,System.Int32,System.Int32)
  - Global.ActionWindow.AttemptCall
  - Global.ActionWindow.IsInWindow
  - Global.ActionWindow.ResetWindow
  - Global.ActionWindow.SetCondition(ActionWindow.Condition)
  - Global.ActionWindow.Trigger
  - Global.ActionWindow.UpdateWindow
  langs:
  - csharp
  - vb
  name: ActionWindow
  nameWithType: ActionWindow
  fullName: ActionWindow
  type: Class
  source:
    remote:
      path: Assets/Framework/Util/ActionWindow.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ActionWindow
    path: ../Assets/Framework/Util/ActionWindow.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public class ActionWindow
    content.vb: Public Class ActionWindow
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.ActionWindow.#ctor(ActionWindow.Action,System.Int32,System.Int32)
  commentId: M:Global.ActionWindow.#ctor(ActionWindow.Action,System.Int32,System.Int32)
  id: '#ctor(ActionWindow.Action,System.Int32,System.Int32)'
  parent: Global.ActionWindow
  langs:
  - csharp
  - vb
  name: ActionWindow(Action, int, int)
  nameWithType: ActionWindow.ActionWindow(ActionWindow.Action, int, int)
  fullName: ActionWindow.ActionWindow(ActionWindow.Action, int, int)
  type: Constructor
  source:
    remote:
      path: Assets/Framework/Util/ActionWindow.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: .ctor
    path: ../Assets/Framework/Util/ActionWindow.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public ActionWindow(ActionWindow.Action action, int preWindow, int postWindow)
    parameters:
    - id: action
      type: Global.ActionWindow.Action
    - id: preWindow
      type: System.Int32
    - id: postWindow
      type: System.Int32
    content.vb: Public Sub New(action As ActionWindow.Action, preWindow As Integer, postWindow As Integer)
  overload: Global.ActionWindow.#ctor*
  nameWithType.vb: ActionWindow.New(ActionWindow.Action, Integer, Integer)
  fullName.vb: ActionWindow.New(ActionWindow.Action, Integer, Integer)
  name.vb: New(Action, Integer, Integer)
- uid: Global.ActionWindow.ResetWindow
  commentId: M:Global.ActionWindow.ResetWindow
  id: ResetWindow
  parent: Global.ActionWindow
  langs:
  - csharp
  - vb
  name: ResetWindow()
  nameWithType: ActionWindow.ResetWindow()
  fullName: ActionWindow.ResetWindow()
  type: Method
  source:
    remote:
      path: Assets/Framework/Util/ActionWindow.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResetWindow
    path: ../Assets/Framework/Util/ActionWindow.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void ResetWindow()
    content.vb: Public Sub ResetWindow()
  overload: Global.ActionWindow.ResetWindow*
- uid: Global.ActionWindow.SetCondition(ActionWindow.Condition)
  commentId: M:Global.ActionWindow.SetCondition(ActionWindow.Condition)
  id: SetCondition(ActionWindow.Condition)
  parent: Global.ActionWindow
  langs:
  - csharp
  - vb
  name: SetCondition(Condition)
  nameWithType: ActionWindow.SetCondition(ActionWindow.Condition)
  fullName: ActionWindow.SetCondition(ActionWindow.Condition)
  type: Method
  source:
    remote:
      path: Assets/Framework/Util/ActionWindow.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetCondition
    path: ../Assets/Framework/Util/ActionWindow.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void SetCondition(ActionWindow.Condition condition)
    parameters:
    - id: condition
      type: Global.ActionWindow.Condition
    content.vb: Public Sub SetCondition(condition As ActionWindow.Condition)
  overload: Global.ActionWindow.SetCondition*
- uid: Global.ActionWindow.UpdateWindow
  commentId: M:Global.ActionWindow.UpdateWindow
  id: UpdateWindow
  parent: Global.ActionWindow
  langs:
  - csharp
  - vb
  name: UpdateWindow()
  nameWithType: ActionWindow.UpdateWindow()
  fullName: ActionWindow.UpdateWindow()
  type: Method
  source:
    remote:
      path: Assets/Framework/Util/ActionWindow.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UpdateWindow
    path: ../Assets/Framework/Util/ActionWindow.cs
    startLine: 34
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UpdateWindow()
    content.vb: Public Sub UpdateWindow()
  overload: Global.ActionWindow.UpdateWindow*
- uid: Global.ActionWindow.Trigger
  commentId: M:Global.ActionWindow.Trigger
  id: Trigger
  parent: Global.ActionWindow
  langs:
  - csharp
  - vb
  name: Trigger()
  nameWithType: ActionWindow.Trigger()
  fullName: ActionWindow.Trigger()
  type: Method
  source:
    remote:
      path: Assets/Framework/Util/ActionWindow.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Trigger
    path: ../Assets/Framework/Util/ActionWindow.cs
    startLine: 46
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Trigger()
    content.vb: Public Sub Trigger()
  overload: Global.ActionWindow.Trigger*
- uid: Global.ActionWindow.IsInWindow
  commentId: M:Global.ActionWindow.IsInWindow
  id: IsInWindow
  parent: Global.ActionWindow
  langs:
  - csharp
  - vb
  name: IsInWindow()
  nameWithType: ActionWindow.IsInWindow()
  fullName: ActionWindow.IsInWindow()
  type: Method
  source:
    remote:
      path: Assets/Framework/Util/ActionWindow.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsInWindow
    path: ../Assets/Framework/Util/ActionWindow.cs
    startLine: 57
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsInWindow()
    return:
      type: System.Boolean
    content.vb: Public Function IsInWindow() As Boolean
  overload: Global.ActionWindow.IsInWindow*
- uid: Global.ActionWindow.AttemptCall
  commentId: M:Global.ActionWindow.AttemptCall
  id: AttemptCall
  parent: Global.ActionWindow
  langs:
  - csharp
  - vb
  name: AttemptCall()
  nameWithType: ActionWindow.AttemptCall()
  fullName: ActionWindow.AttemptCall()
  type: Method
  source:
    remote:
      path: Assets/Framework/Util/ActionWindow.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AttemptCall
    path: ../Assets/Framework/Util/ActionWindow.cs
    startLine: 70
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void AttemptCall()
    content.vb: Public Sub AttemptCall()
  overload: Global.ActionWindow.AttemptCall*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.ActionWindow.#ctor*
  commentId: Overload:Global.ActionWindow.#ctor
  name: ActionWindow
  nameWithType: ActionWindow.ActionWindow
  fullName: ActionWindow.ActionWindow
  nameWithType.vb: ActionWindow.New
  fullName.vb: ActionWindow.New
  name.vb: New
- uid: Global.ActionWindow.Action
  commentId: T:Global.ActionWindow.Action
  name: ActionWindow.Action
  nameWithType: ActionWindow.Action
  fullName: ActionWindow.Action
  spec.csharp:
  - uid: Global.ActionWindow
    name: ActionWindow
  - name: .
  - uid: Global.ActionWindow.Action
    name: Action
  spec.vb:
  - uid: Global.ActionWindow
    name: ActionWindow
  - name: .
  - uid: Global.ActionWindow.Action
    name: Action
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.ActionWindow.ResetWindow*
  commentId: Overload:Global.ActionWindow.ResetWindow
  name: ResetWindow
  nameWithType: ActionWindow.ResetWindow
  fullName: ActionWindow.ResetWindow
- uid: Global.ActionWindow.SetCondition*
  commentId: Overload:Global.ActionWindow.SetCondition
  name: SetCondition
  nameWithType: ActionWindow.SetCondition
  fullName: ActionWindow.SetCondition
- uid: Global.ActionWindow.Condition
  commentId: T:Global.ActionWindow.Condition
  name: ActionWindow.Condition
  nameWithType: ActionWindow.Condition
  fullName: ActionWindow.Condition
  spec.csharp:
  - uid: Global.ActionWindow
    name: ActionWindow
  - name: .
  - uid: Global.ActionWindow.Condition
    name: Condition
  spec.vb:
  - uid: Global.ActionWindow
    name: ActionWindow
  - name: .
  - uid: Global.ActionWindow.Condition
    name: Condition
- uid: Global.ActionWindow.UpdateWindow*
  commentId: Overload:Global.ActionWindow.UpdateWindow
  name: UpdateWindow
  nameWithType: ActionWindow.UpdateWindow
  fullName: ActionWindow.UpdateWindow
- uid: Global.ActionWindow.Trigger*
  commentId: Overload:Global.ActionWindow.Trigger
  name: Trigger
  nameWithType: ActionWindow.Trigger
  fullName: ActionWindow.Trigger
- uid: Global.ActionWindow.IsInWindow*
  commentId: Overload:Global.ActionWindow.IsInWindow
  name: IsInWindow
  nameWithType: ActionWindow.IsInWindow
  fullName: ActionWindow.IsInWindow
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.ActionWindow.AttemptCall*
  commentId: Overload:Global.ActionWindow.AttemptCall
  name: AttemptCall
  nameWithType: ActionWindow.AttemptCall
  fullName: ActionWindow.AttemptCall
