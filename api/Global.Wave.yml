### YamlMime:ManagedReference
items:
- uid: Global.Wave
  commentId: T:Global.Wave
  id: Wave
  parent: Global
  children:
  - Global.Wave.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - Global.Wave.AmplitudeInitial
  - Global.Wave.ComputeWaveY(System.Single,System.Single)
  - Global.Wave.DisableWaveReflection
  - Global.Wave.EnableWaveReflection
  - Global.Wave.FadeFactor
  - Global.Wave.Frequency
  - Global.Wave.GetAmplitude(System.Single,System.Single)
  - Global.Wave.InitialImpactX
  - Global.Wave.IsStill
  - Global.Wave.LifeTime
  - Global.Wave.PoolLength
  - Global.Wave.SpreadFactor
  - Global.Wave.StepTime(System.Single)
  - Global.Wave.TimeScale
  langs:
  - csharp
  - vb
  name: Wave
  nameWithType: Wave
  fullName: Wave
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/Water/Wave.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Wave
    path: ../Assets/Objects & Components/World/Weather/Water/Wave.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public class Wave
    content.vb: Public Class Wave
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.Wave.InitialImpactX
  commentId: F:Global.Wave.InitialImpactX
  id: InitialImpactX
  parent: Global.Wave
  langs:
  - csharp
  - vb
  name: InitialImpactX
  nameWithType: Wave.InitialImpactX
  fullName: Wave.InitialImpactX
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/Water/Wave.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: InitialImpactX
    path: ../Assets/Objects & Components/World/Weather/Water/Wave.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float InitialImpactX
    return:
      type: System.Single
    content.vb: Protected InitialImpactX As Single
- uid: Global.Wave.PoolLength
  commentId: F:Global.Wave.PoolLength
  id: PoolLength
  parent: Global.Wave
  langs:
  - csharp
  - vb
  name: PoolLength
  nameWithType: Wave.PoolLength
  fullName: Wave.PoolLength
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/Water/Wave.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PoolLength
    path: ../Assets/Objects & Components/World/Weather/Water/Wave.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float PoolLength
    return:
      type: System.Single
    content.vb: Protected PoolLength As Single
- uid: Global.Wave.AmplitudeInitial
  commentId: F:Global.Wave.AmplitudeInitial
  id: AmplitudeInitial
  parent: Global.Wave
  langs:
  - csharp
  - vb
  name: AmplitudeInitial
  nameWithType: Wave.AmplitudeInitial
  fullName: Wave.AmplitudeInitial
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/Water/Wave.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AmplitudeInitial
    path: ../Assets/Objects & Components/World/Weather/Water/Wave.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float AmplitudeInitial
    return:
      type: System.Single
    content.vb: Protected AmplitudeInitial As Single
- uid: Global.Wave.SpreadFactor
  commentId: F:Global.Wave.SpreadFactor
  id: SpreadFactor
  parent: Global.Wave
  langs:
  - csharp
  - vb
  name: SpreadFactor
  nameWithType: Wave.SpreadFactor
  fullName: Wave.SpreadFactor
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/Water/Wave.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SpreadFactor
    path: ../Assets/Objects & Components/World/Weather/Water/Wave.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float SpreadFactor
    return:
      type: System.Single
    content.vb: Protected SpreadFactor As Single
- uid: Global.Wave.FadeFactor
  commentId: F:Global.Wave.FadeFactor
  id: FadeFactor
  parent: Global.Wave
  langs:
  - csharp
  - vb
  name: FadeFactor
  nameWithType: Wave.FadeFactor
  fullName: Wave.FadeFactor
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/Water/Wave.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: FadeFactor
    path: ../Assets/Objects & Components/World/Weather/Water/Wave.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float FadeFactor
    return:
      type: System.Single
    content.vb: Protected FadeFactor As Single
- uid: Global.Wave.Frequency
  commentId: F:Global.Wave.Frequency
  id: Frequency
  parent: Global.Wave
  langs:
  - csharp
  - vb
  name: Frequency
  nameWithType: Wave.Frequency
  fullName: Wave.Frequency
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/Water/Wave.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Frequency
    path: ../Assets/Objects & Components/World/Weather/Water/Wave.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float Frequency
    return:
      type: System.Single
    content.vb: Protected Frequency As Single
- uid: Global.Wave.TimeScale
  commentId: F:Global.Wave.TimeScale
  id: TimeScale
  parent: Global.Wave
  langs:
  - csharp
  - vb
  name: TimeScale
  nameWithType: Wave.TimeScale
  fullName: Wave.TimeScale
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/Water/Wave.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TimeScale
    path: ../Assets/Objects & Components/World/Weather/Water/Wave.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float TimeScale
    return:
      type: System.Single
    content.vb: Protected TimeScale As Single
- uid: Global.Wave.LifeTime
  commentId: F:Global.Wave.LifeTime
  id: LifeTime
  parent: Global.Wave
  langs:
  - csharp
  - vb
  name: LifeTime
  nameWithType: Wave.LifeTime
  fullName: Wave.LifeTime
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/Water/Wave.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LifeTime
    path: ../Assets/Objects & Components/World/Weather/Water/Wave.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float LifeTime
    return:
      type: System.Single
    content.vb: Protected LifeTime As Single
- uid: Global.Wave.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:Global.Wave.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)'
  parent: Global.Wave
  langs:
  - csharp
  - vb
  name: Wave(float, float, float, float, float, float, float, float)
  nameWithType: Wave.Wave(float, float, float, float, float, float, float, float)
  fullName: Wave.Wave(float, float, float, float, float, float, float, float)
  type: Constructor
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/Water/Wave.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: .ctor
    path: ../Assets/Objects & Components/World/Weather/Water/Wave.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Wave(float InitialImpactX, float PoolLength, float AmplitudeInitial = 1, float SpreadFactor = 0.05, float FadeFactor = 0.2, float Frequency = 2, float TimeScale = 2, float epsilon = 0.03)
    parameters:
    - id: InitialImpactX
      type: System.Single
    - id: PoolLength
      type: System.Single
    - id: AmplitudeInitial
      type: System.Single
    - id: SpreadFactor
      type: System.Single
    - id: FadeFactor
      type: System.Single
    - id: Frequency
      type: System.Single
    - id: TimeScale
      type: System.Single
    - id: epsilon
      type: System.Single
    content.vb: Public Sub New(InitialImpactX As Single, PoolLength As Single, AmplitudeInitial As Single = 1, SpreadFactor As Single = 0.05, FadeFactor As Single = 0.2, Frequency As Single = 2, TimeScale As Single = 2, epsilon As Single = 0.03)
  overload: Global.Wave.#ctor*
  nameWithType.vb: Wave.New(Single, Single, Single, Single, Single, Single, Single, Single)
  fullName.vb: Wave.New(Single, Single, Single, Single, Single, Single, Single, Single)
  name.vb: New(Single, Single, Single, Single, Single, Single, Single, Single)
- uid: Global.Wave.EnableWaveReflection
  commentId: M:Global.Wave.EnableWaveReflection
  id: EnableWaveReflection
  parent: Global.Wave
  langs:
  - csharp
  - vb
  name: EnableWaveReflection()
  nameWithType: Wave.EnableWaveReflection()
  fullName: Wave.EnableWaveReflection()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/Water/Wave.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EnableWaveReflection
    path: ../Assets/Objects & Components/World/Weather/Water/Wave.cs
    startLine: 35
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void EnableWaveReflection()
    content.vb: Public Sub EnableWaveReflection()
  overload: Global.Wave.EnableWaveReflection*
- uid: Global.Wave.DisableWaveReflection
  commentId: M:Global.Wave.DisableWaveReflection
  id: DisableWaveReflection
  parent: Global.Wave
  langs:
  - csharp
  - vb
  name: DisableWaveReflection()
  nameWithType: Wave.DisableWaveReflection()
  fullName: Wave.DisableWaveReflection()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/Water/Wave.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DisableWaveReflection
    path: ../Assets/Objects & Components/World/Weather/Water/Wave.cs
    startLine: 40
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void DisableWaveReflection()
    content.vb: Public Sub DisableWaveReflection()
  overload: Global.Wave.DisableWaveReflection*
- uid: Global.Wave.GetAmplitude(System.Single,System.Single)
  commentId: M:Global.Wave.GetAmplitude(System.Single,System.Single)
  id: GetAmplitude(System.Single,System.Single)
  parent: Global.Wave
  langs:
  - csharp
  - vb
  name: GetAmplitude(float, float)
  nameWithType: Wave.GetAmplitude(float, float)
  fullName: Wave.GetAmplitude(float, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/Water/Wave.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetAmplitude
    path: ../Assets/Objects & Components/World/Weather/Water/Wave.cs
    startLine: 46
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float GetAmplitude(float x, float t)
    parameters:
    - id: x
      type: System.Single
    - id: t
      type: System.Single
    return:
      type: System.Single
    content.vb: Protected Function GetAmplitude(x As Single, t As Single) As Single
  overload: Global.Wave.GetAmplitude*
  nameWithType.vb: Wave.GetAmplitude(Single, Single)
  fullName.vb: Wave.GetAmplitude(Single, Single)
  name.vb: GetAmplitude(Single, Single)
- uid: Global.Wave.StepTime(System.Single)
  commentId: M:Global.Wave.StepTime(System.Single)
  id: StepTime(System.Single)
  parent: Global.Wave
  langs:
  - csharp
  - vb
  name: StepTime(float)
  nameWithType: Wave.StepTime(float)
  fullName: Wave.StepTime(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/Water/Wave.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: StepTime
    path: ../Assets/Objects & Components/World/Weather/Water/Wave.cs
    startLine: 52
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void StepTime(float dt)
    parameters:
    - id: dt
      type: System.Single
    content.vb: Public Sub StepTime(dt As Single)
  overload: Global.Wave.StepTime*
  nameWithType.vb: Wave.StepTime(Single)
  fullName.vb: Wave.StepTime(Single)
  name.vb: StepTime(Single)
- uid: Global.Wave.ComputeWaveY(System.Single,System.Single)
  commentId: M:Global.Wave.ComputeWaveY(System.Single,System.Single)
  id: ComputeWaveY(System.Single,System.Single)
  parent: Global.Wave
  langs:
  - csharp
  - vb
  name: ComputeWaveY(float, float)
  nameWithType: Wave.ComputeWaveY(float, float)
  fullName: Wave.ComputeWaveY(float, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/Water/Wave.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ComputeWaveY
    path: ../Assets/Objects & Components/World/Weather/Water/Wave.cs
    startLine: 58
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float ComputeWaveY(float x, float time_offset = 0)
    parameters:
    - id: x
      type: System.Single
    - id: time_offset
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Function ComputeWaveY(x As Single, time_offset As Single = 0) As Single
  overload: Global.Wave.ComputeWaveY*
  nameWithType.vb: Wave.ComputeWaveY(Single, Single)
  fullName.vb: Wave.ComputeWaveY(Single, Single)
  name.vb: ComputeWaveY(Single, Single)
- uid: Global.Wave.IsStill
  commentId: M:Global.Wave.IsStill
  id: IsStill
  parent: Global.Wave
  langs:
  - csharp
  - vb
  name: IsStill()
  nameWithType: Wave.IsStill()
  fullName: Wave.IsStill()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Weather/Water/Wave.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsStill
    path: ../Assets/Objects & Components/World/Weather/Water/Wave.cs
    startLine: 76
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsStill()
    return:
      type: System.Boolean
    content.vb: Public Function IsStill() As Boolean
  overload: Global.Wave.IsStill*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.Wave.#ctor*
  commentId: Overload:Global.Wave.#ctor
  name: Wave
  nameWithType: Wave.Wave
  fullName: Wave.Wave
  nameWithType.vb: Wave.New
  fullName.vb: Wave.New
  name.vb: New
- uid: Global.Wave.EnableWaveReflection*
  commentId: Overload:Global.Wave.EnableWaveReflection
  name: EnableWaveReflection
  nameWithType: Wave.EnableWaveReflection
  fullName: Wave.EnableWaveReflection
- uid: Global.Wave.DisableWaveReflection*
  commentId: Overload:Global.Wave.DisableWaveReflection
  name: DisableWaveReflection
  nameWithType: Wave.DisableWaveReflection
  fullName: Wave.DisableWaveReflection
- uid: Global.Wave.GetAmplitude*
  commentId: Overload:Global.Wave.GetAmplitude
  name: GetAmplitude
  nameWithType: Wave.GetAmplitude
  fullName: Wave.GetAmplitude
- uid: Global.Wave.StepTime*
  commentId: Overload:Global.Wave.StepTime
  name: StepTime
  nameWithType: Wave.StepTime
  fullName: Wave.StepTime
- uid: Global.Wave.ComputeWaveY*
  commentId: Overload:Global.Wave.ComputeWaveY
  name: ComputeWaveY
  nameWithType: Wave.ComputeWaveY
  fullName: Wave.ComputeWaveY
- uid: Global.Wave.IsStill*
  commentId: Overload:Global.Wave.IsStill
  name: IsStill
  nameWithType: Wave.IsStill
  fullName: Wave.IsStill
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
