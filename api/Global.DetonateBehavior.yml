### YamlMime:ManagedReference
items:
- uid: Global.DetonateBehavior
  commentId: T:Global.DetonateBehavior
  id: DetonateBehavior
  parent: Global
  children:
  - Global.DetonateBehavior.bounds
  - Global.DetonateBehavior.Detonate
  - Global.DetonateBehavior.DetonationPrefab
  - Global.DetonateBehavior.DrawGizmos(ModularEnemy)
  - Global.DetonateBehavior.FollowDuration
  - Global.DetonateBehavior.FollowPlayerSeek
  - Global.DetonateBehavior.IsAnchoredToEnemy
  - Global.DetonateBehavior.OnResetObject(ModularEnemy)
  - Global.DetonateBehavior.OnRestart
  - Global.DetonateBehavior.PrepDuration
  - Global.DetonateBehavior.RandomSeek
  - Global.DetonateBehavior.Seeker
  - Global.DetonateBehavior.SeekerPrefab
  - Global.DetonateBehavior.SeekStrategy
  - Global.DetonateBehavior.Start(ModularEnemy)
  - Global.DetonateBehavior.t
  - Global.DetonateBehavior.Update
  langs:
  - csharp
  - vb
  name: DetonateBehavior
  nameWithType: DetonateBehavior
  fullName: DetonateBehavior
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DetonateBehavior
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class DetonateBehavior : ModularEnemy.EnemyBehaviorInterface
    content.vb: >-
      <Serializable>

      Public Class DetonateBehavior Inherits ModularEnemy.EnemyBehaviorInterface
  inheritance:
  - System.Object
  - Global.ModularEnemy.EnemyBehaviorInterface
  inheritedMembers:
  - Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  - Global.ModularEnemy.EnemyBehaviorInterface.self
  - Global.ModularEnemy.EnemyBehaviorInterface.Started
  - Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.DetonateBehavior.SeekStrategy
  commentId: F:Global.DetonateBehavior.SeekStrategy
  id: SeekStrategy
  parent: Global.DetonateBehavior
  langs:
  - csharp
  - vb
  name: SeekStrategy
  nameWithType: DetonateBehavior.SeekStrategy
  fullName: DetonateBehavior.SeekStrategy
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SeekStrategy
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public DetonateBehavior.SeekType SeekStrategy
    return:
      type: Global.DetonateBehavior.SeekType
    content.vb: Public SeekStrategy As DetonateBehavior.SeekType
- uid: Global.DetonateBehavior.FollowDuration
  commentId: F:Global.DetonateBehavior.FollowDuration
  id: FollowDuration
  parent: Global.DetonateBehavior
  langs:
  - csharp
  - vb
  name: FollowDuration
  nameWithType: DetonateBehavior.FollowDuration
  fullName: DetonateBehavior.FollowDuration
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: FollowDuration
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("SeekStrategy", 1)]

      public float FollowDuration
    return:
      type: System.Single
    content.vb: >-
      <ConditionalShow("SeekStrategy", 1)>

      Public FollowDuration As Single
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: SeekStrategy
    - type: System.Int32
      value: 1
- uid: Global.DetonateBehavior.PrepDuration
  commentId: F:Global.DetonateBehavior.PrepDuration
  id: PrepDuration
  parent: Global.DetonateBehavior
  langs:
  - csharp
  - vb
  name: PrepDuration
  nameWithType: DetonateBehavior.PrepDuration
  fullName: DetonateBehavior.PrepDuration
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PrepDuration
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float PrepDuration
    return:
      type: System.Single
    content.vb: Public PrepDuration As Single
- uid: Global.DetonateBehavior.IsAnchoredToEnemy
  commentId: F:Global.DetonateBehavior.IsAnchoredToEnemy
  id: IsAnchoredToEnemy
  parent: Global.DetonateBehavior
  langs:
  - csharp
  - vb
  name: IsAnchoredToEnemy
  nameWithType: DetonateBehavior.IsAnchoredToEnemy
  fullName: DetonateBehavior.IsAnchoredToEnemy
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsAnchoredToEnemy
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("SeekStrategy", 0)]

      public bool IsAnchoredToEnemy
    return:
      type: System.Boolean
    content.vb: >-
      <ConditionalShow("SeekStrategy", 0)>

      Public IsAnchoredToEnemy As Boolean
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: SeekStrategy
    - type: System.Int32
      value: 0
- uid: Global.DetonateBehavior.bounds
  commentId: F:Global.DetonateBehavior.bounds
  id: bounds
  parent: Global.DetonateBehavior
  langs:
  - csharp
  - vb
  name: bounds
  nameWithType: DetonateBehavior.bounds
  fullName: DetonateBehavior.bounds
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: bounds
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
    startLine: 20
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("SeekStrategy", 0)]

      public BoundsInt bounds
    return:
      type: UnityEngine.BoundsInt
    content.vb: >-
      <ConditionalShow("SeekStrategy", 0)>

      Public bounds As BoundsInt
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: SeekStrategy
    - type: System.Int32
      value: 0
- uid: Global.DetonateBehavior.SeekerPrefab
  commentId: F:Global.DetonateBehavior.SeekerPrefab
  id: SeekerPrefab
  parent: Global.DetonateBehavior
  langs:
  - csharp
  - vb
  name: SeekerPrefab
  nameWithType: DetonateBehavior.SeekerPrefab
  fullName: DetonateBehavior.SeekerPrefab
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SeekerPrefab
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
    startLine: 21
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public GameObject SeekerPrefab
    return:
      type: UnityEngine.GameObject
    content.vb: Public SeekerPrefab As GameObject
- uid: Global.DetonateBehavior.DetonationPrefab
  commentId: F:Global.DetonateBehavior.DetonationPrefab
  id: DetonationPrefab
  parent: Global.DetonateBehavior
  langs:
  - csharp
  - vb
  name: DetonationPrefab
  nameWithType: DetonateBehavior.DetonationPrefab
  fullName: DetonateBehavior.DetonationPrefab
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DetonationPrefab
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public GameObject DetonationPrefab
    return:
      type: UnityEngine.GameObject
    content.vb: Public DetonationPrefab As GameObject
- uid: Global.DetonateBehavior.Seeker
  commentId: F:Global.DetonateBehavior.Seeker
  id: Seeker
  parent: Global.DetonateBehavior
  langs:
  - csharp
  - vb
  name: Seeker
  nameWithType: DetonateBehavior.Seeker
  fullName: DetonateBehavior.Seeker
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Seeker
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected GameObject Seeker
    return:
      type: UnityEngine.GameObject
    content.vb: Protected Seeker As GameObject
- uid: Global.DetonateBehavior.t
  commentId: F:Global.DetonateBehavior.t
  id: t
  parent: Global.DetonateBehavior
  langs:
  - csharp
  - vb
  name: t
  nameWithType: DetonateBehavior.t
  fullName: DetonateBehavior.t
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: t
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected float t
    return:
      type: System.Single
    content.vb: Protected t As Single
- uid: Global.DetonateBehavior.Start(ModularEnemy)
  commentId: M:Global.DetonateBehavior.Start(ModularEnemy)
  id: Start(ModularEnemy)
  parent: Global.DetonateBehavior
  langs:
  - csharp
  - vb
  name: Start(ModularEnemy)
  nameWithType: DetonateBehavior.Start(ModularEnemy)
  fullName: DetonateBehavior.Start(ModularEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Start
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void Start(ModularEnemy enemy)
    parameters:
    - id: enemy
      type: Global.ModularEnemy
    content.vb: Public Overrides Sub Start(enemy As ModularEnemy)
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  overload: Global.DetonateBehavior.Start*
- uid: Global.DetonateBehavior.DrawGizmos(ModularEnemy)
  commentId: M:Global.DetonateBehavior.DrawGizmos(ModularEnemy)
  id: DrawGizmos(ModularEnemy)
  parent: Global.DetonateBehavior
  langs:
  - csharp
  - vb
  name: DrawGizmos(ModularEnemy)
  nameWithType: DetonateBehavior.DrawGizmos(ModularEnemy)
  fullName: DetonateBehavior.DrawGizmos(ModularEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DrawGizmos
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
    startLine: 43
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void DrawGizmos(ModularEnemy enemy)
    parameters:
    - id: enemy
      type: Global.ModularEnemy
    content.vb: Public Overrides Sub DrawGizmos(enemy As ModularEnemy)
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  overload: Global.DetonateBehavior.DrawGizmos*
- uid: Global.DetonateBehavior.OnRestart
  commentId: M:Global.DetonateBehavior.OnRestart
  id: OnRestart
  parent: Global.DetonateBehavior
  langs:
  - csharp
  - vb
  name: OnRestart()
  nameWithType: DetonateBehavior.OnRestart()
  fullName: DetonateBehavior.OnRestart()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnRestart
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
    startLine: 56
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnRestart()
    content.vb: Public Overrides Sub OnRestart()
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
  overload: Global.DetonateBehavior.OnRestart*
- uid: Global.DetonateBehavior.OnResetObject(ModularEnemy)
  commentId: M:Global.DetonateBehavior.OnResetObject(ModularEnemy)
  id: OnResetObject(ModularEnemy)
  parent: Global.DetonateBehavior
  langs:
  - csharp
  - vb
  name: OnResetObject(ModularEnemy)
  nameWithType: DetonateBehavior.OnResetObject(ModularEnemy)
  fullName: DetonateBehavior.OnResetObject(ModularEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnResetObject
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
    startLine: 77
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnResetObject(ModularEnemy enemy)
    parameters:
    - id: enemy
      type: Global.ModularEnemy
    content.vb: Public Overrides Sub OnResetObject(enemy As ModularEnemy)
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  overload: Global.DetonateBehavior.OnResetObject*
- uid: Global.DetonateBehavior.Update
  commentId: M:Global.DetonateBehavior.Update
  id: Update
  parent: Global.DetonateBehavior
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: DetonateBehavior.Update()
  fullName: DetonateBehavior.Update()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Update
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
    startLine: 87
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.Update
  overload: Global.DetonateBehavior.Update*
- uid: Global.DetonateBehavior.RandomSeek
  commentId: M:Global.DetonateBehavior.RandomSeek
  id: RandomSeek
  parent: Global.DetonateBehavior
  langs:
  - csharp
  - vb
  name: RandomSeek()
  nameWithType: DetonateBehavior.RandomSeek()
  fullName: DetonateBehavior.RandomSeek()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RandomSeek
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
    startLine: 99
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void RandomSeek()
    content.vb: Protected Sub RandomSeek()
  overload: Global.DetonateBehavior.RandomSeek*
- uid: Global.DetonateBehavior.FollowPlayerSeek
  commentId: M:Global.DetonateBehavior.FollowPlayerSeek
  id: FollowPlayerSeek
  parent: Global.DetonateBehavior
  langs:
  - csharp
  - vb
  name: FollowPlayerSeek()
  nameWithType: DetonateBehavior.FollowPlayerSeek()
  fullName: DetonateBehavior.FollowPlayerSeek()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: FollowPlayerSeek
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
    startLine: 108
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void FollowPlayerSeek()
    content.vb: Protected Sub FollowPlayerSeek()
  overload: Global.DetonateBehavior.FollowPlayerSeek*
- uid: Global.DetonateBehavior.Detonate
  commentId: M:Global.DetonateBehavior.Detonate
  id: Detonate
  parent: Global.DetonateBehavior
  langs:
  - csharp
  - vb
  name: Detonate()
  nameWithType: DetonateBehavior.Detonate()
  fullName: DetonateBehavior.Detonate()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Detonate
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Attack/DetonateBehavior.cs
    startLine: 122
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Detonate()
    content.vb: Protected Sub Detonate()
  overload: Global.DetonateBehavior.Detonate*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.ModularEnemy.EnemyBehaviorInterface
  commentId: T:Global.ModularEnemy.EnemyBehaviorInterface
  name: ModularEnemy.EnemyBehaviorInterface
  nameWithType: ModularEnemy.EnemyBehaviorInterface
  fullName: ModularEnemy.EnemyBehaviorInterface
  spec.csharp:
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: .
  - uid: Global.ModularEnemy.EnemyBehaviorInterface
    name: EnemyBehaviorInterface
  spec.vb:
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: .
  - uid: Global.ModularEnemy.EnemyBehaviorInterface
    name: EnemyBehaviorInterface
- uid: Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  commentId: F:Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: ShowGizmos
  nameWithType: ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  fullName: ModularEnemy.EnemyBehaviorInterface.ShowGizmos
- uid: Global.ModularEnemy.EnemyBehaviorInterface.self
  commentId: F:Global.ModularEnemy.EnemyBehaviorInterface.self
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: self
  nameWithType: ModularEnemy.EnemyBehaviorInterface.self
  fullName: ModularEnemy.EnemyBehaviorInterface.self
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Started
  commentId: P:Global.ModularEnemy.EnemyBehaviorInterface.Started
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: Started
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Started
  fullName: ModularEnemy.EnemyBehaviorInterface.Started
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  isExternal: true
  name: OnKill(ModularEnemy, bool)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, bool)
  fullName: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, bool)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, Boolean)
  fullName.vb: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, Boolean)
  name.vb: OnKill(ModularEnemy, Boolean)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
    name: OnKill
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
    name: OnKill
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.DetonateBehavior.SeekType
  commentId: T:Global.DetonateBehavior.SeekType
  name: DetonateBehavior.SeekType
  nameWithType: DetonateBehavior.SeekType
  fullName: DetonateBehavior.SeekType
  spec.csharp:
  - uid: Global.DetonateBehavior
    name: DetonateBehavior
  - name: .
  - uid: Global.DetonateBehavior.SeekType
    name: SeekType
  spec.vb:
  - uid: Global.DetonateBehavior
    name: DetonateBehavior
  - name: .
  - uid: Global.DetonateBehavior.SeekType
    name: SeekType
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UnityEngine.BoundsInt
  commentId: T:UnityEngine.BoundsInt
  parent: UnityEngine
  isExternal: true
  name: BoundsInt
  nameWithType: BoundsInt
  fullName: UnityEngine.BoundsInt
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: Start(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
    name: Start
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
    name: Start
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.DetonateBehavior.Start*
  commentId: Overload:Global.DetonateBehavior.Start
  name: Start
  nameWithType: DetonateBehavior.Start
  fullName: DetonateBehavior.Start
- uid: Global.ModularEnemy
  commentId: T:Global.ModularEnemy
  name: ModularEnemy
  nameWithType: ModularEnemy
  fullName: ModularEnemy
- uid: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: DrawGizmos(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
    name: DrawGizmos
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
    name: DrawGizmos
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.DetonateBehavior.DrawGizmos*
  commentId: Overload:Global.DetonateBehavior.DrawGizmos
  name: DrawGizmos
  nameWithType: DetonateBehavior.DrawGizmos
  fullName: DetonateBehavior.DrawGizmos
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: OnRestart()
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnRestart()
  fullName: ModularEnemy.EnemyBehaviorInterface.OnRestart()
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
    name: OnRestart
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
    name: OnRestart
  - name: (
  - name: )
- uid: Global.DetonateBehavior.OnRestart*
  commentId: Overload:Global.DetonateBehavior.OnRestart
  name: OnRestart
  nameWithType: DetonateBehavior.OnRestart
  fullName: DetonateBehavior.OnRestart
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: OnResetObject(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
    name: OnResetObject
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
    name: OnResetObject
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.DetonateBehavior.OnResetObject*
  commentId: Overload:Global.DetonateBehavior.OnResetObject
  name: OnResetObject
  nameWithType: DetonateBehavior.OnResetObject
  fullName: DetonateBehavior.OnResetObject
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Update
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.Update
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: Update()
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Update()
  fullName: ModularEnemy.EnemyBehaviorInterface.Update()
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Update
    name: Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Update
    name: Update
  - name: (
  - name: )
- uid: Global.DetonateBehavior.Update*
  commentId: Overload:Global.DetonateBehavior.Update
  name: Update
  nameWithType: DetonateBehavior.Update
  fullName: DetonateBehavior.Update
- uid: Global.DetonateBehavior.RandomSeek*
  commentId: Overload:Global.DetonateBehavior.RandomSeek
  name: RandomSeek
  nameWithType: DetonateBehavior.RandomSeek
  fullName: DetonateBehavior.RandomSeek
- uid: Global.DetonateBehavior.FollowPlayerSeek*
  commentId: Overload:Global.DetonateBehavior.FollowPlayerSeek
  name: FollowPlayerSeek
  nameWithType: DetonateBehavior.FollowPlayerSeek
  fullName: DetonateBehavior.FollowPlayerSeek
- uid: Global.DetonateBehavior.Detonate*
  commentId: Overload:Global.DetonateBehavior.Detonate
  name: Detonate
  nameWithType: DetonateBehavior.Detonate
  fullName: DetonateBehavior.Detonate
