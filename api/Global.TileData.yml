### YamlMime:ManagedReference
items:
- uid: Global.TileData
  commentId: T:Global.TileData
  id: TileData
  parent: Global
  children:
  - Global.TileData.CompareTo(TileData)
  - Global.TileData.FriendlyName
  - Global.TileData.GetTileDataContainer
  - Global.TileData.GizmoColor
  - Global.TileData.Info
  - Global.TileData.PaddingArray
  - Global.TileData.rays
  - Global.TileData.tiles
  langs:
  - csharp
  - vb
  name: TileData
  nameWithType: TileData
  fullName: TileData
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Tilemap/TileData/TileData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TileData
    path: ../Assets/Objects & Components/Tilemap/TileData/TileData.cs
    startLine: 6
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [CreateAssetMenu]

      public class TileData : ScriptableObject
    content.vb: >-
      <CreateAssetMenu>

      Public Class TileData Inherits ScriptableObject
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.ScriptableObject
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: UnityEngine.CreateAssetMenuAttribute
    ctor: UnityEngine.CreateAssetMenuAttribute.#ctor
    arguments: []
- uid: Global.TileData.tiles
  commentId: F:Global.TileData.tiles
  id: tiles
  parent: Global.TileData
  langs:
  - csharp
  - vb
  name: tiles
  nameWithType: TileData.tiles
  fullName: TileData.tiles
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Tilemap/TileData/TileData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: tiles
    path: ../Assets/Objects & Components/Tilemap/TileData/TileData.cs
    startLine: 58
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public TileBase[] tiles
    return:
      type: UnityEngine.Tilemaps.TileBase[]
    content.vb: Public tiles As TileBase()
- uid: Global.TileData.FriendlyName
  commentId: F:Global.TileData.FriendlyName
  id: FriendlyName
  parent: Global.TileData
  langs:
  - csharp
  - vb
  name: FriendlyName
  nameWithType: TileData.FriendlyName
  fullName: TileData.FriendlyName
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Tilemap/TileData/TileData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: FriendlyName
    path: ../Assets/Objects & Components/Tilemap/TileData/TileData.cs
    startLine: 60
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public string FriendlyName
    return:
      type: System.String
    content.vb: Public FriendlyName As String
- uid: Global.TileData.Info
  commentId: F:Global.TileData.Info
  id: Info
  parent: Global.TileData
  langs:
  - csharp
  - vb
  name: Info
  nameWithType: TileData.Info
  fullName: TileData.Info
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Tilemap/TileData/TileData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Info
    path: ../Assets/Objects & Components/Tilemap/TileData/TileData.cs
    startLine: 61
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public TileData.TileDataContainer Info
    return:
      type: Global.TileData.TileDataContainer
    content.vb: Public Info As TileData.TileDataContainer
- uid: Global.TileData.GizmoColor
  commentId: F:Global.TileData.GizmoColor
  id: GizmoColor
  parent: Global.TileData
  langs:
  - csharp
  - vb
  name: GizmoColor
  nameWithType: TileData.GizmoColor
  fullName: TileData.GizmoColor
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Tilemap/TileData/TileData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GizmoColor
    path: ../Assets/Objects & Components/Tilemap/TileData/TileData.cs
    startLine: 62
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Color GizmoColor
    return:
      type: UnityEngine.Color
    content.vb: Public GizmoColor As Color
- uid: Global.TileData.GetTileDataContainer
  commentId: M:Global.TileData.GetTileDataContainer
  id: GetTileDataContainer
  parent: Global.TileData
  langs:
  - csharp
  - vb
  name: GetTileDataContainer()
  nameWithType: TileData.GetTileDataContainer()
  fullName: TileData.GetTileDataContainer()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Tilemap/TileData/TileData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetTileDataContainer
    path: ../Assets/Objects & Components/Tilemap/TileData/TileData.cs
    startLine: 64
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public TileData.TileDataContainer GetTileDataContainer()
    return:
      type: Global.TileData.TileDataContainer
    content.vb: Public Function GetTileDataContainer() As TileData.TileDataContainer
  overload: Global.TileData.GetTileDataContainer*
- uid: Global.TileData.PaddingArray
  commentId: F:Global.TileData.PaddingArray
  id: PaddingArray
  parent: Global.TileData
  langs:
  - csharp
  - vb
  name: PaddingArray
  nameWithType: TileData.PaddingArray
  fullName: TileData.PaddingArray
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Tilemap/TileData/TileData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PaddingArray
    path: ../Assets/Objects & Components/Tilemap/TileData/TileData.cs
    startLine: 70
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public List<TileData.ColliderPadding> PaddingArray
    return:
      type: System.Collections.Generic.List{TileData.ColliderPadding}
    content.vb: >-
      <SerializeField>

      Public PaddingArray As List(Of TileData.ColliderPadding)
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.TileData.rays
  commentId: F:Global.TileData.rays
  id: rays
  parent: Global.TileData
  langs:
  - csharp
  - vb
  name: rays
  nameWithType: TileData.rays
  fullName: TileData.rays
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Tilemap/TileData/TileData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: rays
    path: ../Assets/Objects & Components/Tilemap/TileData/TileData.cs
    startLine: 72
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SerializeField]

      public List<IntRay> rays
    return:
      type: System.Collections.Generic.List{IntRay}
    content.vb: >-
      <SerializeField>

      Public rays As List(Of IntRay)
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.TileData.CompareTo(TileData)
  commentId: M:Global.TileData.CompareTo(TileData)
  id: CompareTo(TileData)
  parent: Global.TileData
  langs:
  - csharp
  - vb
  name: CompareTo(TileData)
  nameWithType: TileData.CompareTo(TileData)
  fullName: TileData.CompareTo(TileData)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Tilemap/TileData/TileData.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CompareTo
    path: ../Assets/Objects & Components/Tilemap/TileData/TileData.cs
    startLine: 74
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool CompareTo(TileData data)
    parameters:
    - id: data
      type: Global.TileData
    return:
      type: System.Boolean
    content.vb: Public Function CompareTo(data As TileData) As Boolean
  overload: Global.TileData.CompareTo*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.ScriptableObject
  commentId: T:UnityEngine.ScriptableObject
  parent: UnityEngine
  isExternal: true
  name: ScriptableObject
  nameWithType: ScriptableObject
  fullName: UnityEngine.ScriptableObject
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: UnityEngine.Tilemaps.TileBase[]
  isExternal: true
  name: TileBase[]
  nameWithType: TileBase[]
  fullName: UnityEngine.Tilemaps.TileBase[]
  nameWithType.vb: TileBase()
  fullName.vb: UnityEngine.Tilemaps.TileBase()
  name.vb: TileBase()
  spec.csharp:
  - uid: UnityEngine.Tilemaps.TileBase
    name: TileBase
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Tilemaps.TileBase
    name: TileBase
    isExternal: true
  - name: (
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.TileData.TileDataContainer
  commentId: T:Global.TileData.TileDataContainer
  name: TileData.TileDataContainer
  nameWithType: TileData.TileDataContainer
  fullName: TileData.TileDataContainer
  spec.csharp:
  - uid: Global.TileData
    name: TileData
  - name: .
  - uid: Global.TileData.TileDataContainer
    name: TileDataContainer
  spec.vb:
  - uid: Global.TileData
    name: TileData
  - name: .
  - uid: Global.TileData.TileDataContainer
    name: TileDataContainer
- uid: UnityEngine.Color
  commentId: T:UnityEngine.Color
  parent: UnityEngine
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.TileData.GetTileDataContainer*
  commentId: Overload:Global.TileData.GetTileDataContainer
  name: GetTileDataContainer
  nameWithType: TileData.GetTileDataContainer
  fullName: TileData.GetTileDataContainer
- uid: System.Collections.Generic.List{TileData.ColliderPadding}
  commentId: T:System.Collections.Generic.List{TileData.ColliderPadding}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TileData.ColliderPadding>
  nameWithType: List<TileData.ColliderPadding>
  fullName: System.Collections.Generic.List<TileData.ColliderPadding>
  nameWithType.vb: List(Of TileData.ColliderPadding)
  fullName.vb: System.Collections.Generic.List(Of TileData.ColliderPadding)
  name.vb: List(Of TileData.ColliderPadding)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.TileData
    name: TileData
  - name: .
  - uid: Global.TileData.ColliderPadding
    name: ColliderPadding
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.TileData
    name: TileData
  - name: .
  - uid: Global.TileData.ColliderPadding
    name: ColliderPadding
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: System.Collections.Generic.List{IntRay}
  commentId: T:System.Collections.Generic.List{IntRay}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IntRay>
  nameWithType: List<IntRay>
  fullName: System.Collections.Generic.List<IntRay>
  nameWithType.vb: List(Of IntRay)
  fullName.vb: System.Collections.Generic.List(Of IntRay)
  name.vb: List(Of IntRay)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntRay
    name: IntRay
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntRay
    name: IntRay
  - name: )
- uid: Global.TileData.CompareTo*
  commentId: Overload:Global.TileData.CompareTo
  name: CompareTo
  nameWithType: TileData.CompareTo
  fullName: TileData.CompareTo
- uid: Global.TileData
  commentId: T:Global.TileData
  name: TileData
  nameWithType: TileData
  fullName: TileData
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
