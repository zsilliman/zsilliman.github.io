### YamlMime:ManagedReference
items:
- uid: Global.BaseLauncherProperties
  commentId: T:Global.BaseLauncherProperties
  id: BaseLauncherProperties
  parent: Global
  children:
  - Global.BaseLauncherProperties.DrawGizmos(IntEnemy)
  - Global.BaseLauncherProperties.MaxProjectileCount
  - Global.BaseLauncherProperties.ProjectilePrefabPattern
  - Global.BaseLauncherProperties.ProjectileStartOffset
  langs:
  - csharp
  - vb
  name: BaseLauncherProperties
  nameWithType: BaseLauncherProperties
  fullName: BaseLauncherProperties
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BaseLauncherProperties
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class BaseLauncherProperties
    content.vb: >-
      <Serializable>

      Public Class BaseLauncherProperties
  inheritance:
  - System.Object
  derivedClasses:
  - Global.DirectedLauncherProperties
  - Global.RadialLauncherProperties
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.BaseLauncherProperties.ProjectilePrefabPattern
  commentId: F:Global.BaseLauncherProperties.ProjectilePrefabPattern
  id: ProjectilePrefabPattern
  parent: Global.BaseLauncherProperties
  langs:
  - csharp
  - vb
  name: ProjectilePrefabPattern
  nameWithType: BaseLauncherProperties.ProjectilePrefabPattern
  fullName: BaseLauncherProperties.ProjectilePrefabPattern
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ProjectilePrefabPattern
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Just put one element if you do not want a pattern")]

      public GameObject[] ProjectilePrefabPattern
    return:
      type: UnityEngine.GameObject[]
    content.vb: >-
      <Tooltip("Just put one element if you do not want a pattern")>

      Public ProjectilePrefabPattern As GameObject()
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Just put one element if you do not want a pattern
- uid: Global.BaseLauncherProperties.MaxProjectileCount
  commentId: F:Global.BaseLauncherProperties.MaxProjectileCount
  id: MaxProjectileCount
  parent: Global.BaseLauncherProperties
  langs:
  - csharp
  - vb
  name: MaxProjectileCount
  nameWithType: BaseLauncherProperties.MaxProjectileCount
  fullName: BaseLauncherProperties.MaxProjectileCount
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxProjectileCount
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int MaxProjectileCount
    return:
      type: System.Int32
    content.vb: Public MaxProjectileCount As Integer
- uid: Global.BaseLauncherProperties.ProjectileStartOffset
  commentId: F:Global.BaseLauncherProperties.ProjectileStartOffset
  id: ProjectileStartOffset
  parent: Global.BaseLauncherProperties
  langs:
  - csharp
  - vb
  name: ProjectileStartOffset
  nameWithType: BaseLauncherProperties.ProjectileStartOffset
  fullName: BaseLauncherProperties.ProjectileStartOffset
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ProjectileStartOffset
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2Int ProjectileStartOffset
    return:
      type: UnityEngine.Vector2Int
    content.vb: Public ProjectileStartOffset As Vector2Int
- uid: Global.BaseLauncherProperties.DrawGizmos(IntEnemy)
  commentId: M:Global.BaseLauncherProperties.DrawGizmos(IntEnemy)
  id: DrawGizmos(IntEnemy)
  parent: Global.BaseLauncherProperties
  langs:
  - csharp
  - vb
  name: DrawGizmos(IntEnemy)
  nameWithType: BaseLauncherProperties.DrawGizmos(IntEnemy)
  fullName: BaseLauncherProperties.DrawGizmos(IntEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DrawGizmos
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void DrawGizmos(IntEnemy enemy)
    parameters:
    - id: enemy
      type: Global.IntEnemy
    content.vb: Public Overridable Sub DrawGizmos(enemy As IntEnemy)
  overload: Global.BaseLauncherProperties.DrawGizmos*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: UnityEngine.GameObject[]
  isExternal: true
  name: GameObject[]
  nameWithType: GameObject[]
  fullName: UnityEngine.GameObject[]
  nameWithType.vb: GameObject()
  fullName.vb: UnityEngine.GameObject()
  name.vb: GameObject()
  spec.csharp:
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.GameObject
    name: GameObject
    isExternal: true
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.BaseLauncherProperties.DrawGizmos*
  commentId: Overload:Global.BaseLauncherProperties.DrawGizmos
  name: DrawGizmos
  nameWithType: BaseLauncherProperties.DrawGizmos
  fullName: BaseLauncherProperties.DrawGizmos
- uid: Global.IntEnemy
  commentId: T:Global.IntEnemy
  name: IntEnemy
  nameWithType: IntEnemy
  fullName: IntEnemy
