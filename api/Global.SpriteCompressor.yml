### YamlMime:ManagedReference
items:
- uid: Global.SpriteCompressor
  commentId: T:Global.SpriteCompressor
  id: SpriteCompressor
  parent: Global
  children:
  - Global.SpriteCompressor.AccelerationSmoothingFactor
  - Global.SpriteCompressor.CompressionFactor
  - Global.SpriteCompressor.LegTimingOffsetScale
  - Global.SpriteCompressor.MaxAcceleration
  - Global.SpriteCompressor.ShakeAmount
  - Global.SpriteCompressor.StartShake(System.Single)
  - Global.SpriteCompressor.TimeBetweenShakes
  - Global.SpriteCompressor.UniversalEnemyMaterial
  - Global.SpriteCompressor.WalkInfluenceHeight
  - Global.SpriteCompressor.WalkStrideFrequencyScale
  - Global.SpriteCompressor.WalkStrideSize
  langs:
  - csharp
  - vb
  name: SpriteCompressor
  nameWithType: SpriteCompressor
  fullName: SpriteCompressor
  type: Class
  source:
    remote:
      path: Assets/Art/Enemies/Materials/SpriteCompressor.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SpriteCompressor
    path: ../Assets/Art/Enemies/Materials/SpriteCompressor.cs
    startLine: 2
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class SpriteCompressor : MonoBehaviour'
    content.vb: Public Class SpriteCompressor Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.SpriteCompressor.UniversalEnemyMaterial
  commentId: F:Global.SpriteCompressor.UniversalEnemyMaterial
  id: UniversalEnemyMaterial
  parent: Global.SpriteCompressor
  langs:
  - csharp
  - vb
  name: UniversalEnemyMaterial
  nameWithType: SpriteCompressor.UniversalEnemyMaterial
  fullName: SpriteCompressor.UniversalEnemyMaterial
  type: Field
  source:
    remote:
      path: Assets/Art/Enemies/Materials/SpriteCompressor.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UniversalEnemyMaterial
    path: ../Assets/Art/Enemies/Materials/SpriteCompressor.cs
    startLine: 5
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Material compatible with sprite compressor. Search for 'UniversalEnemyMat'")]

      public Material UniversalEnemyMaterial
    return:
      type: UnityEngine.Material
    content.vb: >-
      <Tooltip("Material compatible with sprite compressor. Search for 'UniversalEnemyMat'")>

      Public UniversalEnemyMaterial As Material
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Material compatible with sprite compressor. Search for 'UniversalEnemyMat'
- uid: Global.SpriteCompressor.AccelerationSmoothingFactor
  commentId: F:Global.SpriteCompressor.AccelerationSmoothingFactor
  id: AccelerationSmoothingFactor
  parent: Global.SpriteCompressor
  langs:
  - csharp
  - vb
  name: AccelerationSmoothingFactor
  nameWithType: SpriteCompressor.AccelerationSmoothingFactor
  fullName: SpriteCompressor.AccelerationSmoothingFactor
  type: Field
  source:
    remote:
      path: Assets/Art/Enemies/Materials/SpriteCompressor.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AccelerationSmoothingFactor
    path: ../Assets/Art/Enemies/Materials/SpriteCompressor.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("How much should we smooth between current frame and the previous frame. 1.0 means use previous, 0.0 means use current")]

      [Range(0, 1)]

      public float AccelerationSmoothingFactor
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("How much should we smooth between current frame and the previous frame. 1.0 means use previous, 0.0 means use current")>

      <Range(0, 1)>

      Public AccelerationSmoothingFactor As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: How much should we smooth between current frame and the previous frame. 1.0 means use previous, 0.0 means use current
  - type: UnityEngine.RangeAttribute
    ctor: UnityEngine.RangeAttribute.#ctor(System.Single,System.Single)
    arguments:
    - type: System.Single
      value: 0
    - type: System.Single
      value: 1
- uid: Global.SpriteCompressor.MaxAcceleration
  commentId: F:Global.SpriteCompressor.MaxAcceleration
  id: MaxAcceleration
  parent: Global.SpriteCompressor
  langs:
  - csharp
  - vb
  name: MaxAcceleration
  nameWithType: SpriteCompressor.MaxAcceleration
  fullName: SpriteCompressor.MaxAcceleration
  type: Field
  source:
    remote:
      path: Assets/Art/Enemies/Materials/SpriteCompressor.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxAcceleration
    path: ../Assets/Art/Enemies/Materials/SpriteCompressor.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("What is the maximum allowed value for acceleration")]

      public float MaxAcceleration
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("What is the maximum allowed value for acceleration")>

      Public MaxAcceleration As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: What is the maximum allowed value for acceleration
- uid: Global.SpriteCompressor.CompressionFactor
  commentId: F:Global.SpriteCompressor.CompressionFactor
  id: CompressionFactor
  parent: Global.SpriteCompressor
  langs:
  - csharp
  - vb
  name: CompressionFactor
  nameWithType: SpriteCompressor.CompressionFactor
  fullName: SpriteCompressor.CompressionFactor
  type: Field
  source:
    remote:
      path: Assets/Art/Enemies/Materials/SpriteCompressor.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CompressionFactor
    path: ../Assets/Art/Enemies/Materials/SpriteCompressor.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Shader Properties")]

      [Tooltip("How much should the sprite compress during acceleration?")]

      public Vector2 CompressionFactor
    return:
      type: UnityEngine.Vector2
    content.vb: >-
      <Header("Shader Properties")>

      <Tooltip("How much should the sprite compress during acceleration?")>

      Public CompressionFactor As Vector2
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Shader Properties
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: How much should the sprite compress during acceleration?
- uid: Global.SpriteCompressor.LegTimingOffsetScale
  commentId: F:Global.SpriteCompressor.LegTimingOffsetScale
  id: LegTimingOffsetScale
  parent: Global.SpriteCompressor
  langs:
  - csharp
  - vb
  name: LegTimingOffsetScale
  nameWithType: SpriteCompressor.LegTimingOffsetScale
  fullName: SpriteCompressor.LegTimingOffsetScale
  type: Field
  source:
    remote:
      path: Assets/Art/Enemies/Materials/SpriteCompressor.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LegTimingOffsetScale
    path: ../Assets/Art/Enemies/Materials/SpriteCompressor.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("How much should the leg animations be offset in time along the X-axis?")]

      public float LegTimingOffsetScale
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("How much should the leg animations be offset in time along the X-axis?")>

      Public LegTimingOffsetScale As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: How much should the leg animations be offset in time along the X-axis?
- uid: Global.SpriteCompressor.WalkStrideFrequencyScale
  commentId: F:Global.SpriteCompressor.WalkStrideFrequencyScale
  id: WalkStrideFrequencyScale
  parent: Global.SpriteCompressor
  langs:
  - csharp
  - vb
  name: WalkStrideFrequencyScale
  nameWithType: SpriteCompressor.WalkStrideFrequencyScale
  fullName: SpriteCompressor.WalkStrideFrequencyScale
  type: Field
  source:
    remote:
      path: Assets/Art/Enemies/Materials/SpriteCompressor.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WalkStrideFrequencyScale
    path: ../Assets/Art/Enemies/Materials/SpriteCompressor.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("How frequently should the legs make a full circle?")]

      public float WalkStrideFrequencyScale
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("How frequently should the legs make a full circle?")>

      Public WalkStrideFrequencyScale As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: How frequently should the legs make a full circle?
- uid: Global.SpriteCompressor.WalkStrideSize
  commentId: F:Global.SpriteCompressor.WalkStrideSize
  id: WalkStrideSize
  parent: Global.SpriteCompressor
  langs:
  - csharp
  - vb
  name: WalkStrideSize
  nameWithType: SpriteCompressor.WalkStrideSize
  fullName: SpriteCompressor.WalkStrideSize
  type: Field
  source:
    remote:
      path: Assets/Art/Enemies/Materials/SpriteCompressor.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WalkStrideSize
    path: ../Assets/Art/Enemies/Materials/SpriteCompressor.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Range(0, 1)]

      [Tooltip("How large should each circular stride be?")]

      public float WalkStrideSize
    return:
      type: System.Single
    content.vb: >-
      <Range(0, 1)>

      <Tooltip("How large should each circular stride be?")>

      Public WalkStrideSize As Single
  attributes:
  - type: UnityEngine.RangeAttribute
    ctor: UnityEngine.RangeAttribute.#ctor(System.Single,System.Single)
    arguments:
    - type: System.Single
      value: 0
    - type: System.Single
      value: 1
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: How large should each circular stride be?
- uid: Global.SpriteCompressor.WalkInfluenceHeight
  commentId: F:Global.SpriteCompressor.WalkInfluenceHeight
  id: WalkInfluenceHeight
  parent: Global.SpriteCompressor
  langs:
  - csharp
  - vb
  name: WalkInfluenceHeight
  nameWithType: SpriteCompressor.WalkInfluenceHeight
  fullName: SpriteCompressor.WalkInfluenceHeight
  type: Field
  source:
    remote:
      path: Assets/Art/Enemies/Materials/SpriteCompressor.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WalkInfluenceHeight
    path: ../Assets/Art/Enemies/Materials/SpriteCompressor.cs
    startLine: 20
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Range(0, 1)]

      [Tooltip("How high up should the legs animate? Coordinate space is in [0,1] range.")]

      public float WalkInfluenceHeight
    return:
      type: System.Single
    content.vb: >-
      <Range(0, 1)>

      <Tooltip("How high up should the legs animate? Coordinate space is in [0,1] range.")>

      Public WalkInfluenceHeight As Single
  attributes:
  - type: UnityEngine.RangeAttribute
    ctor: UnityEngine.RangeAttribute.#ctor(System.Single,System.Single)
    arguments:
    - type: System.Single
      value: 0
    - type: System.Single
      value: 1
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: How high up should the legs animate? Coordinate space is in [0,1] range.
- uid: Global.SpriteCompressor.ShakeAmount
  commentId: F:Global.SpriteCompressor.ShakeAmount
  id: ShakeAmount
  parent: Global.SpriteCompressor
  langs:
  - csharp
  - vb
  name: ShakeAmount
  nameWithType: SpriteCompressor.ShakeAmount
  fullName: SpriteCompressor.ShakeAmount
  type: Field
  source:
    remote:
      path: Assets/Art/Enemies/Materials/SpriteCompressor.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ShakeAmount
    path: ../Assets/Art/Enemies/Materials/SpriteCompressor.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Shake")]

      [Tooltip("Max magnitude of each shake")]

      public float ShakeAmount
    return:
      type: System.Single
    content.vb: >-
      <Header("Shake")>

      <Tooltip("Max magnitude of each shake")>

      Public ShakeAmount As Single
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Shake
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Max magnitude of each shake
- uid: Global.SpriteCompressor.TimeBetweenShakes
  commentId: F:Global.SpriteCompressor.TimeBetweenShakes
  id: TimeBetweenShakes
  parent: Global.SpriteCompressor
  langs:
  - csharp
  - vb
  name: TimeBetweenShakes
  nameWithType: SpriteCompressor.TimeBetweenShakes
  fullName: SpriteCompressor.TimeBetweenShakes
  type: Field
  source:
    remote:
      path: Assets/Art/Enemies/Materials/SpriteCompressor.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TimeBetweenShakes
    path: ../Assets/Art/Enemies/Materials/SpriteCompressor.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Max magnitude of each shake")]

      public float TimeBetweenShakes
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("Max magnitude of each shake")>

      Public TimeBetweenShakes As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Max magnitude of each shake
- uid: Global.SpriteCompressor.StartShake(System.Single)
  commentId: M:Global.SpriteCompressor.StartShake(System.Single)
  id: StartShake(System.Single)
  parent: Global.SpriteCompressor
  langs:
  - csharp
  - vb
  name: StartShake(float)
  nameWithType: SpriteCompressor.StartShake(float)
  fullName: SpriteCompressor.StartShake(float)
  type: Method
  source:
    remote:
      path: Assets/Art/Enemies/Materials/SpriteCompressor.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: StartShake
    path: ../Assets/Art/Enemies/Materials/SpriteCompressor.cs
    startLine: 56
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void StartShake(float duration)
    parameters:
    - id: duration
      type: System.Single
    content.vb: Public Sub StartShake(duration As Single)
  overload: Global.SpriteCompressor.StartShake*
  nameWithType.vb: SpriteCompressor.StartShake(Single)
  fullName.vb: SpriteCompressor.StartShake(Single)
  name.vb: StartShake(Single)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: UnityEngine.Material
  commentId: T:UnityEngine.Material
  parent: UnityEngine
  isExternal: true
  name: Material
  nameWithType: Material
  fullName: UnityEngine.Material
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.SpriteCompressor.StartShake*
  commentId: Overload:Global.SpriteCompressor.StartShake
  name: StartShake
  nameWithType: SpriteCompressor.StartShake
  fullName: SpriteCompressor.StartShake
