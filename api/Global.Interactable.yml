### YamlMime:ManagedReference
items:
- uid: Global.Interactable
  commentId: T:Global.Interactable
  id: Interactable
  parent: Global
  children:
  - Global.Interactable.AreDependenciesMet
  - Global.Interactable.associatedWithObject
  - Global.Interactable.Awake
  - Global.Interactable.Callbacks
  - Global.Interactable.CanInteract
  - Global.Interactable.CollectablesCondition
  - Global.Interactable.CompletedCallbacks
  - Global.Interactable.controllers
  - Global.Interactable.dependencies
  - Global.Interactable.EnemiesCondition
  - Global.Interactable.ExamineUIText
  - Global.Interactable.GameStateCondition
  - Global.Interactable.GetObjectSaveData
  - Global.Interactable.HoverTriangleAnchor
  - Global.Interactable.Interact
  - Global.Interactable.InteractCount
  - Global.Interactable.interactionCondition
  - Global.Interactable.interactionType
  - Global.Interactable.InteractOnce
  - Global.Interactable.IsBeingExamined
  - Global.Interactable.IsInteractionActive
  - Global.Interactable.IsInteractionComplete(InteractionController)
  - Global.Interactable.LoadObjectSaveData(IntObjectSaveData)
  - Global.Interactable.OnInteractionCompleted
  - Global.Interactable.OnLocked
  - Global.Interactable.OnTriggerEnd(IntActor)
  - Global.Interactable.OnTriggerStart(IntActor)
  - Global.Interactable.OnUnlocked
  - Global.Interactable.originalMaterial
  - Global.Interactable.outlineMaterial
  - Global.Interactable.priority
  - Global.Interactable.RegisterInteractionCallback(Interactable.InteractionCallback)
  - Global.Interactable.RegisterInteractionCompletedCallback(Interactable.InteractionCallback)
  - Global.Interactable.ResetCount
  - Global.Interactable.ResetObject
  - Global.Interactable.ResultStates
  - Global.Interactable.SectionCondition
  - Global.Interactable.ShowExamineUI
  - Global.Interactable.sprite
  - Global.Interactable.Start
  - Global.Interactable.TriggerCondition
  - Global.Interactable.UnregisterInteractionCallback(Interactable.InteractionCallback)
  - Global.Interactable.UnregisterInteractionCompletedCallback(Interactable.InteractionCallback)
  - Global.Interactable.Update
  - Global.Interactable.useBorderlessVersion
  langs:
  - csharp
  - vb
  name: Interactable
  nameWithType: Interactable
  fullName: Interactable
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Interactable
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 3
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class Interactable : IntTrigger, ISavableObject<IntObjectSaveData>'
    content.vb: Public Class Interactable Inherits IntTrigger Implements ISavableObject(Of IntObjectSaveData)
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - Global.IntObject
  - Global.IntTrigger
  implements:
  - Global.ISavableObject{IntObjectSaveData}
  inheritedMembers:
  - Global.IntTrigger.TriggerCount
  - Global.IntTrigger.triggerStartCallback
  - Global.IntTrigger.triggerEndCallback
  - Global.IntTrigger.SetCustomTriggerStartCallback(IntTrigger.TriggerCallback)
  - Global.IntTrigger.RemoveCustomTriggerStartCallback(IntTrigger.TriggerCallback)
  - Global.IntTrigger.SetCustomTriggerEndCallback(IntTrigger.TriggerCallback)
  - Global.IntTrigger.RemoveCustomTriggerEndCallback(IntTrigger.TriggerCallback)
  - Global.IntObject.section
  - Global.IntObject.state
  - Global.IntObject.int_collider
  - Global.IntObject.remainder
  - Global.IntObject.StartPosition
  - Global.IntObject.AttachedToPlayer
  - Global.IntObject.IgnoredObjectsMap
  - Global.IntObject.KilledCallback
  - Global.IntObject.Position
  - Global.IntObject.GetStartWorldPosition
  - Global.IntObject.collider_type
  - Global.IntObject.MarkedForKill
  - Global.IntObject.ObjectID
  - Global.IntObject.DestroyOnKill
  - Global.IntObject.RespawnBehavior
  - Global.IntObject.Status
  - Global.IntObject.InitialStatus
  - Global.IntObject.SaveObject
  - Global.IntObject.IsInSetPiece
  - Global.IntObject.Init
  - Global.IntObject.FindIntColliderState(System.Int32)
  - Global.IntObject.GetLocalGameStates
  - Global.IntObject.RegisterSelf
  - Global.IntObject.UnregisterSelf
  - Global.IntObject.RegisterKilledCallback(IntObject.Action)
  - Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  - Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  - Global.IntObject.SetStatus(ObjectStatus)
  - Global.IntObject.OnKill(System.Boolean)
  - Global.IntObject.Kill
  - Global.IntObject.Kill(System.Boolean)
  - Global.IntObject.Kill(System.Single)
  - Global.IntObject.Kill(System.Boolean,System.Single)
  - Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  - Global.IntObject.SleepObject
  - Global.IntObject.OptimizeSleepObject
  - Global.IntObject.WakeObject
  - Global.IntObject.EnableObject
  - Global.IntObject.DisableObject
  - Global.IntObject.RespawnObject
  - Global.IntObject.RecursiveSetCollidable(System.Boolean)
  - Global.IntObject.SetColliderState(IntColliderState)
  - Global.IntObject.Translate(UnityEngine.Vector2Int)
  - Global.IntObject.Translate(UnityEngine.Vector2)
  - Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  - Global.IntObject.SetCollidable(System.Boolean)
  - Global.IntObject.GetCollidable
  - Global.IntObject.GetCollider
  - Global.IntObject.GetColliderState
  - Global.IntObject.Overlaps(IntObject)
  - Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  - Global.IntObject.RayCast(IntRay)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  - Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  - Global.IntObject.OnDrawGizmos
  - Global.IntObject.OnPostLoadSaveFile
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.Interactable.interactionCondition
  commentId: F:Global.Interactable.interactionCondition
  id: interactionCondition
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: interactionCondition
  nameWithType: Interactable.interactionCondition
  fullName: Interactable.interactionCondition
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: interactionCondition
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 31
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Interactable.InteractionCondition interactionCondition
    return:
      type: Global.Interactable.InteractionCondition
    content.vb: Protected interactionCondition As Interactable.InteractionCondition
- uid: Global.Interactable.InteractOnce
  commentId: F:Global.Interactable.InteractOnce
  id: InteractOnce
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: InteractOnce
  nameWithType: Interactable.InteractOnce
  fullName: Interactable.InteractOnce
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: InteractOnce
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 34
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Interaction")]

      public bool InteractOnce
    return:
      type: System.Boolean
    content.vb: >-
      <Header("Interaction")>

      Public InteractOnce As Boolean
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Interaction
- uid: Global.Interactable.priority
  commentId: F:Global.Interactable.priority
  id: priority
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: priority
  nameWithType: Interactable.priority
  fullName: Interactable.priority
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: priority
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 35
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int priority
    return:
      type: System.Int32
    content.vb: Public priority As Integer
- uid: Global.Interactable.HoverTriangleAnchor
  commentId: F:Global.Interactable.HoverTriangleAnchor
  id: HoverTriangleAnchor
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: HoverTriangleAnchor
  nameWithType: Interactable.HoverTriangleAnchor
  fullName: Interactable.HoverTriangleAnchor
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: HoverTriangleAnchor
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 39
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [DraggablePoint(DraggablePointSpace.World)]

      public Vector2 HoverTriangleAnchor
    return:
      type: UnityEngine.Vector2
    content.vb: >-
      <DraggablePoint(DraggablePointSpace.World)>

      Public HoverTriangleAnchor As Vector2
  attributes:
  - type: Global.DraggablePoint
    ctor: Global.DraggablePoint.#ctor(DraggablePointSpace)
    arguments:
    - type: Global.DraggablePointSpace
      value: 1
- uid: Global.Interactable.ShowExamineUI
  commentId: F:Global.Interactable.ShowExamineUI
  id: ShowExamineUI
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: ShowExamineUI
  nameWithType: Interactable.ShowExamineUI
  fullName: Interactable.ShowExamineUI
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ShowExamineUI
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 40
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool ShowExamineUI
    return:
      type: System.Boolean
    content.vb: Public ShowExamineUI As Boolean
- uid: Global.Interactable.ExamineUIText
  commentId: F:Global.Interactable.ExamineUIText
  id: ExamineUIText
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: ExamineUIText
  nameWithType: Interactable.ExamineUIText
  fullName: Interactable.ExamineUIText
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ExamineUIText
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 42
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("ShowExamineUI", 1)]

      public string ExamineUIText
    return:
      type: System.String
    content.vb: >-
      <ConditionalShow("ShowExamineUI", 1)>

      Public ExamineUIText As String
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: ShowExamineUI
    - type: System.Int32
      value: 1
- uid: Global.Interactable.useBorderlessVersion
  commentId: F:Global.Interactable.useBorderlessVersion
  id: useBorderlessVersion
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: useBorderlessVersion
  nameWithType: Interactable.useBorderlessVersion
  fullName: Interactable.useBorderlessVersion
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: useBorderlessVersion
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 44
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("ShowExamineUI", 1)]

      public bool useBorderlessVersion
    return:
      type: System.Boolean
    content.vb: >-
      <ConditionalShow("ShowExamineUI", 1)>

      Public useBorderlessVersion As Boolean
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: ShowExamineUI
    - type: System.Int32
      value: 1
- uid: Global.Interactable.associatedWithObject
  commentId: F:Global.Interactable.associatedWithObject
  id: associatedWithObject
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: associatedWithObject
  nameWithType: Interactable.associatedWithObject
  fullName: Interactable.associatedWithObject
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: associatedWithObject
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 48
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool associatedWithObject
    return:
      type: System.Boolean
    content.vb: Public associatedWithObject As Boolean
- uid: Global.Interactable.sprite
  commentId: F:Global.Interactable.sprite
  id: sprite
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: sprite
  nameWithType: Interactable.sprite
  fullName: Interactable.sprite
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: sprite
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 50
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("associatedWithObject", 1)]

      public SpriteRenderer sprite
    return:
      type: UnityEngine.SpriteRenderer
    content.vb: >-
      <ConditionalShow("associatedWithObject", 1)>

      Public sprite As SpriteRenderer
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: associatedWithObject
    - type: System.Int32
      value: 1
- uid: Global.Interactable.outlineMaterial
  commentId: F:Global.Interactable.outlineMaterial
  id: outlineMaterial
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: outlineMaterial
  nameWithType: Interactable.outlineMaterial
  fullName: Interactable.outlineMaterial
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: outlineMaterial
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 52
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("associatedWithObject", 1)]

      public Material outlineMaterial
    return:
      type: UnityEngine.Material
    content.vb: >-
      <ConditionalShow("associatedWithObject", 1)>

      Public outlineMaterial As Material
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: associatedWithObject
    - type: System.Int32
      value: 1
- uid: Global.Interactable.originalMaterial
  commentId: F:Global.Interactable.originalMaterial
  id: originalMaterial
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: originalMaterial
  nameWithType: Interactable.originalMaterial
  fullName: Interactable.originalMaterial
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: originalMaterial
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 54
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("associatedWithObject", 1)]

      public Material originalMaterial
    return:
      type: UnityEngine.Material
    content.vb: >-
      <ConditionalShow("associatedWithObject", 1)>

      Public originalMaterial As Material
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: associatedWithObject
    - type: System.Int32
      value: 1
- uid: Global.Interactable.interactionType
  commentId: F:Global.Interactable.interactionType
  id: interactionType
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: interactionType
  nameWithType: Interactable.interactionType
  fullName: Interactable.interactionType
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: interactionType
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 57
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Interactable.InteractionType interactionType
    return:
      type: Global.Interactable.InteractionType
    content.vb: Public interactionType As Interactable.InteractionType
- uid: Global.Interactable.TriggerCondition
  commentId: F:Global.Interactable.TriggerCondition
  id: TriggerCondition
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: TriggerCondition
  nameWithType: Interactable.TriggerCondition
  fullName: Interactable.TriggerCondition
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TriggerCondition
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 59
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("interactionType", 1)]

      public TriggerInteractionCondition TriggerCondition
    return:
      type: Global.TriggerInteractionCondition
    content.vb: >-
      <ConditionalShow("interactionType", 1)>

      Public TriggerCondition As TriggerInteractionCondition
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: interactionType
    - type: System.Int32
      value: 1
- uid: Global.Interactable.SectionCondition
  commentId: F:Global.Interactable.SectionCondition
  id: SectionCondition
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: SectionCondition
  nameWithType: Interactable.SectionCondition
  fullName: Interactable.SectionCondition
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SectionCondition
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 61
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("interactionType", 2)]

      public SectionInteractionCondition SectionCondition
    return:
      type: Global.SectionInteractionCondition
    content.vb: >-
      <ConditionalShow("interactionType", 2)>

      Public SectionCondition As SectionInteractionCondition
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: interactionType
    - type: System.Int32
      value: 2
- uid: Global.Interactable.GameStateCondition
  commentId: F:Global.Interactable.GameStateCondition
  id: GameStateCondition
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: GameStateCondition
  nameWithType: Interactable.GameStateCondition
  fullName: Interactable.GameStateCondition
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GameStateCondition
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 63
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("interactionType", 3)]

      public GameStateInteractionCondition GameStateCondition
    return:
      type: Global.GameStateInteractionCondition
    content.vb: >-
      <ConditionalShow("interactionType", 3)>

      Public GameStateCondition As GameStateInteractionCondition
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: interactionType
    - type: System.Int32
      value: 3
- uid: Global.Interactable.EnemiesCondition
  commentId: F:Global.Interactable.EnemiesCondition
  id: EnemiesCondition
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: EnemiesCondition
  nameWithType: Interactable.EnemiesCondition
  fullName: Interactable.EnemiesCondition
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EnemiesCondition
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 65
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("interactionType", 5)]

      public CollectInteractionCondition<IntEnemy> EnemiesCondition
    return:
      type: Global.CollectInteractionCondition{IntEnemy}
    content.vb: >-
      <ConditionalShow("interactionType", 5)>

      Public EnemiesCondition As CollectInteractionCondition(Of IntEnemy)
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: interactionType
    - type: System.Int32
      value: 5
- uid: Global.Interactable.CollectablesCondition
  commentId: F:Global.Interactable.CollectablesCondition
  id: CollectablesCondition
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: CollectablesCondition
  nameWithType: Interactable.CollectablesCondition
  fullName: Interactable.CollectablesCondition
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CollectablesCondition
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 67
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("interactionType", 4)]

      public CollectInteractionCondition<Collectable> CollectablesCondition
    return:
      type: Global.CollectInteractionCondition{Collectable}
    content.vb: >-
      <ConditionalShow("interactionType", 4)>

      Public CollectablesCondition As CollectInteractionCondition(Of Collectable)
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: interactionType
    - type: System.Int32
      value: 4
- uid: Global.Interactable.dependencies
  commentId: F:Global.Interactable.dependencies
  id: dependencies
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: dependencies
  nameWithType: Interactable.dependencies
  fullName: Interactable.dependencies
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: dependencies
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 71
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Dependencies")]

      public AscendStateDependency[] dependencies
    return:
      type: Global.AscendStateDependency[]
    content.vb: >-
      <Header("Dependencies")>

      Public dependencies As AscendStateDependency()
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Dependencies
- uid: Global.Interactable.ResultStates
  commentId: F:Global.Interactable.ResultStates
  id: ResultStates
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: ResultStates
  nameWithType: Interactable.ResultStates
  fullName: Interactable.ResultStates
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResultStates
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 74
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("GameState")]

      public AscendState[] ResultStates
    return:
      type: Global.AscendState[]
    content.vb: >-
      <Header("GameState")>

      Public ResultStates As AscendState()
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GameState
- uid: Global.Interactable.InteractCount
  commentId: P:Global.Interactable.InteractCount
  id: InteractCount
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: InteractCount
  nameWithType: Interactable.InteractCount
  fullName: Interactable.InteractCount
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: InteractCount
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 77
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int InteractCount { get; protected set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property InteractCount As Integer
  overload: Global.Interactable.InteractCount*
- uid: Global.Interactable.Callbacks
  commentId: F:Global.Interactable.Callbacks
  id: Callbacks
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: Callbacks
  nameWithType: Interactable.Callbacks
  fullName: Interactable.Callbacks
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Callbacks
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 79
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Interactable.InteractionCallback Callbacks
    return:
      type: Global.Interactable.InteractionCallback
    content.vb: Protected Callbacks As Interactable.InteractionCallback
- uid: Global.Interactable.CompletedCallbacks
  commentId: F:Global.Interactable.CompletedCallbacks
  id: CompletedCallbacks
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: CompletedCallbacks
  nameWithType: Interactable.CompletedCallbacks
  fullName: Interactable.CompletedCallbacks
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CompletedCallbacks
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 80
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Interactable.InteractionCallback CompletedCallbacks
    return:
      type: Global.Interactable.InteractionCallback
    content.vb: Protected CompletedCallbacks As Interactable.InteractionCallback
- uid: Global.Interactable.controllers
  commentId: F:Global.Interactable.controllers
  id: controllers
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: controllers
  nameWithType: Interactable.controllers
  fullName: Interactable.controllers
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: controllers
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 82
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [HideInInspector]

      public InteractionController[] controllers
    return:
      type: Global.InteractionController[]
    content.vb: >-
      <HideInInspector>

      Public controllers As InteractionController()
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.Interactable.IsBeingExamined
  commentId: F:Global.Interactable.IsBeingExamined
  id: IsBeingExamined
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: IsBeingExamined
  nameWithType: Interactable.IsBeingExamined
  fullName: Interactable.IsBeingExamined
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsBeingExamined
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 84
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [HideInInspector]

      public bool IsBeingExamined
    return:
      type: System.Boolean
    content.vb: >-
      <HideInInspector>

      Public IsBeingExamined As Boolean
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
- uid: Global.Interactable.Awake
  commentId: M:Global.Interactable.Awake
  id: Awake
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: Awake()
  nameWithType: Interactable.Awake()
  fullName: Interactable.Awake()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Awake
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 88
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Awake()
    content.vb: Protected Sub Awake()
  overload: Global.Interactable.Awake*
- uid: Global.Interactable.Start
  commentId: M:Global.Interactable.Start
  id: Start
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: Interactable.Start()
  fullName: Interactable.Start()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Start
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 95
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Start()
    content.vb: Protected Sub Start()
  overload: Global.Interactable.Start*
- uid: Global.Interactable.Update
  commentId: M:Global.Interactable.Update
  id: Update
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: Interactable.Update()
  fullName: Interactable.Update()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Update
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 139
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Update()
    content.vb: Protected Sub Update()
  overload: Global.Interactable.Update*
- uid: Global.Interactable.RegisterInteractionCallback(Interactable.InteractionCallback)
  commentId: M:Global.Interactable.RegisterInteractionCallback(Interactable.InteractionCallback)
  id: RegisterInteractionCallback(Interactable.InteractionCallback)
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: RegisterInteractionCallback(InteractionCallback)
  nameWithType: Interactable.RegisterInteractionCallback(Interactable.InteractionCallback)
  fullName: Interactable.RegisterInteractionCallback(Interactable.InteractionCallback)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RegisterInteractionCallback
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 171
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void RegisterInteractionCallback(Interactable.InteractionCallback callback)
    parameters:
    - id: callback
      type: Global.Interactable.InteractionCallback
    content.vb: Public Sub RegisterInteractionCallback(callback As Interactable.InteractionCallback)
  overload: Global.Interactable.RegisterInteractionCallback*
- uid: Global.Interactable.UnregisterInteractionCallback(Interactable.InteractionCallback)
  commentId: M:Global.Interactable.UnregisterInteractionCallback(Interactable.InteractionCallback)
  id: UnregisterInteractionCallback(Interactable.InteractionCallback)
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: UnregisterInteractionCallback(InteractionCallback)
  nameWithType: Interactable.UnregisterInteractionCallback(Interactable.InteractionCallback)
  fullName: Interactable.UnregisterInteractionCallback(Interactable.InteractionCallback)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UnregisterInteractionCallback
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 176
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UnregisterInteractionCallback(Interactable.InteractionCallback callback)
    parameters:
    - id: callback
      type: Global.Interactable.InteractionCallback
    content.vb: Public Sub UnregisterInteractionCallback(callback As Interactable.InteractionCallback)
  overload: Global.Interactable.UnregisterInteractionCallback*
- uid: Global.Interactable.RegisterInteractionCompletedCallback(Interactable.InteractionCallback)
  commentId: M:Global.Interactable.RegisterInteractionCompletedCallback(Interactable.InteractionCallback)
  id: RegisterInteractionCompletedCallback(Interactable.InteractionCallback)
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: RegisterInteractionCompletedCallback(InteractionCallback)
  nameWithType: Interactable.RegisterInteractionCompletedCallback(Interactable.InteractionCallback)
  fullName: Interactable.RegisterInteractionCompletedCallback(Interactable.InteractionCallback)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RegisterInteractionCompletedCallback
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 181
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void RegisterInteractionCompletedCallback(Interactable.InteractionCallback callback)
    parameters:
    - id: callback
      type: Global.Interactable.InteractionCallback
    content.vb: Public Sub RegisterInteractionCompletedCallback(callback As Interactable.InteractionCallback)
  overload: Global.Interactable.RegisterInteractionCompletedCallback*
- uid: Global.Interactable.UnregisterInteractionCompletedCallback(Interactable.InteractionCallback)
  commentId: M:Global.Interactable.UnregisterInteractionCompletedCallback(Interactable.InteractionCallback)
  id: UnregisterInteractionCompletedCallback(Interactable.InteractionCallback)
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: UnregisterInteractionCompletedCallback(InteractionCallback)
  nameWithType: Interactable.UnregisterInteractionCompletedCallback(Interactable.InteractionCallback)
  fullName: Interactable.UnregisterInteractionCompletedCallback(Interactable.InteractionCallback)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UnregisterInteractionCompletedCallback
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 186
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UnregisterInteractionCompletedCallback(Interactable.InteractionCallback callback)
    parameters:
    - id: callback
      type: Global.Interactable.InteractionCallback
    content.vb: Public Sub UnregisterInteractionCompletedCallback(callback As Interactable.InteractionCallback)
  overload: Global.Interactable.UnregisterInteractionCompletedCallback*
- uid: Global.Interactable.AreDependenciesMet
  commentId: M:Global.Interactable.AreDependenciesMet
  id: AreDependenciesMet
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: AreDependenciesMet()
  nameWithType: Interactable.AreDependenciesMet()
  fullName: Interactable.AreDependenciesMet()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AreDependenciesMet
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 191
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool AreDependenciesMet()
    return:
      type: System.Boolean
    content.vb: Public Function AreDependenciesMet() As Boolean
  overload: Global.Interactable.AreDependenciesMet*
- uid: Global.Interactable.CanInteract
  commentId: M:Global.Interactable.CanInteract
  id: CanInteract
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: CanInteract()
  nameWithType: Interactable.CanInteract()
  fullName: Interactable.CanInteract()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CanInteract
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 200
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool CanInteract()
    return:
      type: System.Boolean
    content.vb: Public Function CanInteract() As Boolean
  overload: Global.Interactable.CanInteract*
- uid: Global.Interactable.Interact
  commentId: M:Global.Interactable.Interact
  id: Interact
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: Interact()
  nameWithType: Interactable.Interact()
  fullName: Interactable.Interact()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Interact
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 205
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Interact()
    content.vb: Public Sub Interact()
  overload: Global.Interactable.Interact*
- uid: Global.Interactable.IsInteractionActive
  commentId: M:Global.Interactable.IsInteractionActive
  id: IsInteractionActive
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: IsInteractionActive()
  nameWithType: Interactable.IsInteractionActive()
  fullName: Interactable.IsInteractionActive()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsInteractionActive
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 217
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsInteractionActive()
    return:
      type: System.Boolean
    content.vb: Public Function IsInteractionActive() As Boolean
  overload: Global.Interactable.IsInteractionActive*
- uid: Global.Interactable.IsInteractionComplete(InteractionController)
  commentId: M:Global.Interactable.IsInteractionComplete(InteractionController)
  id: IsInteractionComplete(InteractionController)
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: IsInteractionComplete(InteractionController)
  nameWithType: Interactable.IsInteractionComplete(InteractionController)
  fullName: Interactable.IsInteractionComplete(InteractionController)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsInteractionComplete
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 229
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsInteractionComplete(InteractionController exclude)
    parameters:
    - id: exclude
      type: Global.InteractionController
    return:
      type: System.Boolean
    content.vb: Public Function IsInteractionComplete(exclude As InteractionController) As Boolean
  overload: Global.Interactable.IsInteractionComplete*
- uid: Global.Interactable.ResetCount
  commentId: M:Global.Interactable.ResetCount
  id: ResetCount
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: ResetCount()
  nameWithType: Interactable.ResetCount()
  fullName: Interactable.ResetCount()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResetCount
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 239
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void ResetCount()
    content.vb: Public Sub ResetCount()
  overload: Global.Interactable.ResetCount*
- uid: Global.Interactable.ResetObject
  commentId: M:Global.Interactable.ResetObject
  id: ResetObject
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: ResetObject()
  nameWithType: Interactable.ResetObject()
  fullName: Interactable.ResetObject()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResetObject
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 244
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void ResetObject()
    content.vb: Public Overrides Sub ResetObject()
  overridden: Global.IntObject.ResetObject
  overload: Global.Interactable.ResetObject*
- uid: Global.Interactable.OnTriggerStart(IntActor)
  commentId: M:Global.Interactable.OnTriggerStart(IntActor)
  id: OnTriggerStart(IntActor)
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: OnTriggerStart(IntActor)
  nameWithType: Interactable.OnTriggerStart(IntActor)
  fullName: Interactable.OnTriggerStart(IntActor)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnTriggerStart
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 261
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnTriggerStart(IntActor actor)
    parameters:
    - id: actor
      type: Global.IntActor
    content.vb: Public Overrides Sub OnTriggerStart(actor As IntActor)
  overridden: Global.IntTrigger.OnTriggerStart(IntActor)
  overload: Global.Interactable.OnTriggerStart*
- uid: Global.Interactable.OnTriggerEnd(IntActor)
  commentId: M:Global.Interactable.OnTriggerEnd(IntActor)
  id: OnTriggerEnd(IntActor)
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: OnTriggerEnd(IntActor)
  nameWithType: Interactable.OnTriggerEnd(IntActor)
  fullName: Interactable.OnTriggerEnd(IntActor)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnTriggerEnd
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 268
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnTriggerEnd(IntActor actor)
    parameters:
    - id: actor
      type: Global.IntActor
    content.vb: Public Overrides Sub OnTriggerEnd(actor As IntActor)
  overridden: Global.IntTrigger.OnTriggerEnd(IntActor)
  overload: Global.Interactable.OnTriggerEnd*
- uid: Global.Interactable.OnUnlocked
  commentId: M:Global.Interactable.OnUnlocked
  id: OnUnlocked
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: OnUnlocked()
  nameWithType: Interactable.OnUnlocked()
  fullName: Interactable.OnUnlocked()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnUnlocked
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 276
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void OnUnlocked()
    content.vb: Public Overridable Sub OnUnlocked()
  overload: Global.Interactable.OnUnlocked*
- uid: Global.Interactable.OnLocked
  commentId: M:Global.Interactable.OnLocked
  id: OnLocked
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: OnLocked()
  nameWithType: Interactable.OnLocked()
  fullName: Interactable.OnLocked()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnLocked
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 279
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void OnLocked()
    content.vb: Public Overridable Sub OnLocked()
  overload: Global.Interactable.OnLocked*
- uid: Global.Interactable.OnInteractionCompleted
  commentId: M:Global.Interactable.OnInteractionCompleted
  id: OnInteractionCompleted
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: OnInteractionCompleted()
  nameWithType: Interactable.OnInteractionCompleted()
  fullName: Interactable.OnInteractionCompleted()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnInteractionCompleted
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 281
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void OnInteractionCompleted()
    content.vb: Public Overridable Sub OnInteractionCompleted()
  overload: Global.Interactable.OnInteractionCompleted*
- uid: Global.Interactable.GetObjectSaveData
  commentId: M:Global.Interactable.GetObjectSaveData
  id: GetObjectSaveData
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: GetObjectSaveData()
  nameWithType: Interactable.GetObjectSaveData()
  fullName: Interactable.GetObjectSaveData()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetObjectSaveData
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 294
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override IntObjectSaveData GetObjectSaveData()
    return:
      type: Global.IntObjectSaveData
    content.vb: Public Overrides Function GetObjectSaveData() As IntObjectSaveData
  overridden: Global.IntObject.GetObjectSaveData
  overload: Global.Interactable.GetObjectSaveData*
- uid: Global.Interactable.LoadObjectSaveData(IntObjectSaveData)
  commentId: M:Global.Interactable.LoadObjectSaveData(IntObjectSaveData)
  id: LoadObjectSaveData(IntObjectSaveData)
  parent: Global.Interactable
  langs:
  - csharp
  - vb
  name: LoadObjectSaveData(IntObjectSaveData)
  nameWithType: Interactable.LoadObjectSaveData(IntObjectSaveData)
  fullName: Interactable.LoadObjectSaveData(IntObjectSaveData)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Interactable/Interactable.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LoadObjectSaveData
    path: ../Assets/Objects & Components/World/Interactable/Interactable.cs
    startLine: 301
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override bool LoadObjectSaveData(IntObjectSaveData saveData)
    parameters:
    - id: saveData
      type: Global.IntObjectSaveData
    return:
      type: System.Boolean
    content.vb: Public Overrides Function LoadObjectSaveData(saveData As IntObjectSaveData) As Boolean
  overridden: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  overload: Global.Interactable.LoadObjectSaveData*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Global.IntObject
  commentId: T:Global.IntObject
  name: IntObject
  nameWithType: IntObject
  fullName: IntObject
- uid: Global.IntTrigger
  commentId: T:Global.IntTrigger
  name: IntTrigger
  nameWithType: IntTrigger
  fullName: IntTrigger
- uid: Global.ISavableObject{IntObjectSaveData}
  commentId: T:Global.ISavableObject{IntObjectSaveData}
  definition: Global.ISavableObject`1
  name: ISavableObject<IntObjectSaveData>
  nameWithType: ISavableObject<IntObjectSaveData>
  fullName: ISavableObject<IntObjectSaveData>
  nameWithType.vb: ISavableObject(Of IntObjectSaveData)
  fullName.vb: ISavableObject(Of IntObjectSaveData)
  name.vb: ISavableObject(Of IntObjectSaveData)
  spec.csharp:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: <
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: '>'
  spec.vb:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
- uid: Global.IntTrigger.TriggerCount
  commentId: P:Global.IntTrigger.TriggerCount
  parent: Global.IntTrigger
  name: TriggerCount
  nameWithType: IntTrigger.TriggerCount
  fullName: IntTrigger.TriggerCount
- uid: Global.IntTrigger.triggerStartCallback
  commentId: F:Global.IntTrigger.triggerStartCallback
  parent: Global.IntTrigger
  name: triggerStartCallback
  nameWithType: IntTrigger.triggerStartCallback
  fullName: IntTrigger.triggerStartCallback
- uid: Global.IntTrigger.triggerEndCallback
  commentId: F:Global.IntTrigger.triggerEndCallback
  parent: Global.IntTrigger
  name: triggerEndCallback
  nameWithType: IntTrigger.triggerEndCallback
  fullName: IntTrigger.triggerEndCallback
- uid: Global.IntTrigger.SetCustomTriggerStartCallback(IntTrigger.TriggerCallback)
  commentId: M:Global.IntTrigger.SetCustomTriggerStartCallback(IntTrigger.TriggerCallback)
  parent: Global.IntTrigger
  name: SetCustomTriggerStartCallback(TriggerCallback)
  nameWithType: IntTrigger.SetCustomTriggerStartCallback(IntTrigger.TriggerCallback)
  fullName: IntTrigger.SetCustomTriggerStartCallback(IntTrigger.TriggerCallback)
  spec.csharp:
  - uid: Global.IntTrigger.SetCustomTriggerStartCallback(IntTrigger.TriggerCallback)
    name: SetCustomTriggerStartCallback
  - name: (
  - uid: Global.IntTrigger.TriggerCallback
    name: TriggerCallback
  - name: )
  spec.vb:
  - uid: Global.IntTrigger.SetCustomTriggerStartCallback(IntTrigger.TriggerCallback)
    name: SetCustomTriggerStartCallback
  - name: (
  - uid: Global.IntTrigger.TriggerCallback
    name: TriggerCallback
  - name: )
- uid: Global.IntTrigger.RemoveCustomTriggerStartCallback(IntTrigger.TriggerCallback)
  commentId: M:Global.IntTrigger.RemoveCustomTriggerStartCallback(IntTrigger.TriggerCallback)
  parent: Global.IntTrigger
  name: RemoveCustomTriggerStartCallback(TriggerCallback)
  nameWithType: IntTrigger.RemoveCustomTriggerStartCallback(IntTrigger.TriggerCallback)
  fullName: IntTrigger.RemoveCustomTriggerStartCallback(IntTrigger.TriggerCallback)
  spec.csharp:
  - uid: Global.IntTrigger.RemoveCustomTriggerStartCallback(IntTrigger.TriggerCallback)
    name: RemoveCustomTriggerStartCallback
  - name: (
  - uid: Global.IntTrigger.TriggerCallback
    name: TriggerCallback
  - name: )
  spec.vb:
  - uid: Global.IntTrigger.RemoveCustomTriggerStartCallback(IntTrigger.TriggerCallback)
    name: RemoveCustomTriggerStartCallback
  - name: (
  - uid: Global.IntTrigger.TriggerCallback
    name: TriggerCallback
  - name: )
- uid: Global.IntTrigger.SetCustomTriggerEndCallback(IntTrigger.TriggerCallback)
  commentId: M:Global.IntTrigger.SetCustomTriggerEndCallback(IntTrigger.TriggerCallback)
  parent: Global.IntTrigger
  name: SetCustomTriggerEndCallback(TriggerCallback)
  nameWithType: IntTrigger.SetCustomTriggerEndCallback(IntTrigger.TriggerCallback)
  fullName: IntTrigger.SetCustomTriggerEndCallback(IntTrigger.TriggerCallback)
  spec.csharp:
  - uid: Global.IntTrigger.SetCustomTriggerEndCallback(IntTrigger.TriggerCallback)
    name: SetCustomTriggerEndCallback
  - name: (
  - uid: Global.IntTrigger.TriggerCallback
    name: TriggerCallback
  - name: )
  spec.vb:
  - uid: Global.IntTrigger.SetCustomTriggerEndCallback(IntTrigger.TriggerCallback)
    name: SetCustomTriggerEndCallback
  - name: (
  - uid: Global.IntTrigger.TriggerCallback
    name: TriggerCallback
  - name: )
- uid: Global.IntTrigger.RemoveCustomTriggerEndCallback(IntTrigger.TriggerCallback)
  commentId: M:Global.IntTrigger.RemoveCustomTriggerEndCallback(IntTrigger.TriggerCallback)
  parent: Global.IntTrigger
  name: RemoveCustomTriggerEndCallback(TriggerCallback)
  nameWithType: IntTrigger.RemoveCustomTriggerEndCallback(IntTrigger.TriggerCallback)
  fullName: IntTrigger.RemoveCustomTriggerEndCallback(IntTrigger.TriggerCallback)
  spec.csharp:
  - uid: Global.IntTrigger.RemoveCustomTriggerEndCallback(IntTrigger.TriggerCallback)
    name: RemoveCustomTriggerEndCallback
  - name: (
  - uid: Global.IntTrigger.TriggerCallback
    name: TriggerCallback
  - name: )
  spec.vb:
  - uid: Global.IntTrigger.RemoveCustomTriggerEndCallback(IntTrigger.TriggerCallback)
    name: RemoveCustomTriggerEndCallback
  - name: (
  - uid: Global.IntTrigger.TriggerCallback
    name: TriggerCallback
  - name: )
- uid: Global.IntObject.section
  commentId: P:Global.IntObject.section
  parent: Global.IntObject
  name: section
  nameWithType: IntObject.section
  fullName: IntObject.section
- uid: Global.IntObject.state
  commentId: P:Global.IntObject.state
  parent: Global.IntObject
  name: state
  nameWithType: IntObject.state
  fullName: IntObject.state
- uid: Global.IntObject.int_collider
  commentId: F:Global.IntObject.int_collider
  parent: Global.IntObject
  name: int_collider
  nameWithType: IntObject.int_collider
  fullName: IntObject.int_collider
- uid: Global.IntObject.remainder
  commentId: F:Global.IntObject.remainder
  parent: Global.IntObject
  name: remainder
  nameWithType: IntObject.remainder
  fullName: IntObject.remainder
- uid: Global.IntObject.StartPosition
  commentId: F:Global.IntObject.StartPosition
  parent: Global.IntObject
  name: StartPosition
  nameWithType: IntObject.StartPosition
  fullName: IntObject.StartPosition
- uid: Global.IntObject.AttachedToPlayer
  commentId: F:Global.IntObject.AttachedToPlayer
  parent: Global.IntObject
  name: AttachedToPlayer
  nameWithType: IntObject.AttachedToPlayer
  fullName: IntObject.AttachedToPlayer
- uid: Global.IntObject.IgnoredObjectsMap
  commentId: F:Global.IntObject.IgnoredObjectsMap
  parent: Global.IntObject
  name: IgnoredObjectsMap
  nameWithType: IntObject.IgnoredObjectsMap
  fullName: IntObject.IgnoredObjectsMap
- uid: Global.IntObject.KilledCallback
  commentId: F:Global.IntObject.KilledCallback
  parent: Global.IntObject
  name: KilledCallback
  nameWithType: IntObject.KilledCallback
  fullName: IntObject.KilledCallback
- uid: Global.IntObject.Position
  commentId: P:Global.IntObject.Position
  parent: Global.IntObject
  name: Position
  nameWithType: IntObject.Position
  fullName: IntObject.Position
- uid: Global.IntObject.GetStartWorldPosition
  commentId: P:Global.IntObject.GetStartWorldPosition
  parent: Global.IntObject
  name: GetStartWorldPosition
  nameWithType: IntObject.GetStartWorldPosition
  fullName: IntObject.GetStartWorldPosition
- uid: Global.IntObject.collider_type
  commentId: P:Global.IntObject.collider_type
  parent: Global.IntObject
  name: collider_type
  nameWithType: IntObject.collider_type
  fullName: IntObject.collider_type
- uid: Global.IntObject.MarkedForKill
  commentId: P:Global.IntObject.MarkedForKill
  parent: Global.IntObject
  name: MarkedForKill
  nameWithType: IntObject.MarkedForKill
  fullName: IntObject.MarkedForKill
- uid: Global.IntObject.ObjectID
  commentId: F:Global.IntObject.ObjectID
  parent: Global.IntObject
  name: ObjectID
  nameWithType: IntObject.ObjectID
  fullName: IntObject.ObjectID
- uid: Global.IntObject.DestroyOnKill
  commentId: F:Global.IntObject.DestroyOnKill
  parent: Global.IntObject
  name: DestroyOnKill
  nameWithType: IntObject.DestroyOnKill
  fullName: IntObject.DestroyOnKill
- uid: Global.IntObject.RespawnBehavior
  commentId: F:Global.IntObject.RespawnBehavior
  parent: Global.IntObject
  name: RespawnBehavior
  nameWithType: IntObject.RespawnBehavior
  fullName: IntObject.RespawnBehavior
- uid: Global.IntObject.Status
  commentId: F:Global.IntObject.Status
  parent: Global.IntObject
  name: Status
  nameWithType: IntObject.Status
  fullName: IntObject.Status
- uid: Global.IntObject.InitialStatus
  commentId: F:Global.IntObject.InitialStatus
  parent: Global.IntObject
  name: InitialStatus
  nameWithType: IntObject.InitialStatus
  fullName: IntObject.InitialStatus
- uid: Global.IntObject.SaveObject
  commentId: F:Global.IntObject.SaveObject
  parent: Global.IntObject
  name: SaveObject
  nameWithType: IntObject.SaveObject
  fullName: IntObject.SaveObject
- uid: Global.IntObject.IsInSetPiece
  commentId: P:Global.IntObject.IsInSetPiece
  parent: Global.IntObject
  name: IsInSetPiece
  nameWithType: IntObject.IsInSetPiece
  fullName: IntObject.IsInSetPiece
- uid: Global.IntObject.Init
  commentId: M:Global.IntObject.Init
  parent: Global.IntObject
  name: Init()
  nameWithType: IntObject.Init()
  fullName: IntObject.Init()
  spec.csharp:
  - uid: Global.IntObject.Init
    name: Init
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.Init
    name: Init
  - name: (
  - name: )
- uid: Global.IntObject.FindIntColliderState(System.Int32)
  commentId: M:Global.IntObject.FindIntColliderState(System.Int32)
  parent: Global.IntObject
  isExternal: true
  name: FindIntColliderState(int)
  nameWithType: IntObject.FindIntColliderState(int)
  fullName: IntObject.FindIntColliderState(int)
  nameWithType.vb: IntObject.FindIntColliderState(Integer)
  fullName.vb: IntObject.FindIntColliderState(Integer)
  name.vb: FindIntColliderState(Integer)
  spec.csharp:
  - uid: Global.IntObject.FindIntColliderState(System.Int32)
    name: FindIntColliderState
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.FindIntColliderState(System.Int32)
    name: FindIntColliderState
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: Global.IntObject.GetLocalGameStates
  commentId: M:Global.IntObject.GetLocalGameStates
  parent: Global.IntObject
  name: GetLocalGameStates()
  nameWithType: IntObject.GetLocalGameStates()
  fullName: IntObject.GetLocalGameStates()
  spec.csharp:
  - uid: Global.IntObject.GetLocalGameStates
    name: GetLocalGameStates
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetLocalGameStates
    name: GetLocalGameStates
  - name: (
  - name: )
- uid: Global.IntObject.RegisterSelf
  commentId: M:Global.IntObject.RegisterSelf
  parent: Global.IntObject
  name: RegisterSelf()
  nameWithType: IntObject.RegisterSelf()
  fullName: IntObject.RegisterSelf()
  spec.csharp:
  - uid: Global.IntObject.RegisterSelf
    name: RegisterSelf
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.RegisterSelf
    name: RegisterSelf
  - name: (
  - name: )
- uid: Global.IntObject.UnregisterSelf
  commentId: M:Global.IntObject.UnregisterSelf
  parent: Global.IntObject
  name: UnregisterSelf()
  nameWithType: IntObject.UnregisterSelf()
  fullName: IntObject.UnregisterSelf()
  spec.csharp:
  - uid: Global.IntObject.UnregisterSelf
    name: UnregisterSelf
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.UnregisterSelf
    name: UnregisterSelf
  - name: (
  - name: )
- uid: Global.IntObject.RegisterKilledCallback(IntObject.Action)
  commentId: M:Global.IntObject.RegisterKilledCallback(IntObject.Action)
  parent: Global.IntObject
  name: RegisterKilledCallback(Action)
  nameWithType: IntObject.RegisterKilledCallback(IntObject.Action)
  fullName: IntObject.RegisterKilledCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntObject.RegisterKilledCallback(IntObject.Action)
    name: RegisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntObject.RegisterKilledCallback(IntObject.Action)
    name: RegisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  commentId: M:Global.IntObject.UnregisterKilledCallback(IntObject.Action)
  parent: Global.IntObject
  name: UnregisterKilledCallback(Action)
  nameWithType: IntObject.UnregisterKilledCallback(IntObject.Action)
  fullName: IntObject.UnregisterKilledCallback(IntObject.Action)
  spec.csharp:
  - uid: Global.IntObject.UnregisterKilledCallback(IntObject.Action)
    name: UnregisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
  spec.vb:
  - uid: Global.IntObject.UnregisterKilledCallback(IntObject.Action)
    name: UnregisterKilledCallback
  - name: (
  - uid: Global.IntObject.Action
    name: Action
  - name: )
- uid: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  commentId: M:Global.IntObject.IsContainedInRect(UnityEngine.Rect)
  parent: Global.IntObject
  isExternal: true
  name: IsContainedInRect(Rect)
  nameWithType: IntObject.IsContainedInRect(Rect)
  fullName: IntObject.IsContainedInRect(UnityEngine.Rect)
  spec.csharp:
  - uid: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
    name: IsContainedInRect
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.IsContainedInRect(UnityEngine.Rect)
    name: IsContainedInRect
  - name: (
  - uid: UnityEngine.Rect
    name: Rect
    isExternal: true
  - name: )
- uid: Global.IntObject.SetStatus(ObjectStatus)
  commentId: M:Global.IntObject.SetStatus(ObjectStatus)
  parent: Global.IntObject
  name: SetStatus(ObjectStatus)
  nameWithType: IntObject.SetStatus(ObjectStatus)
  fullName: IntObject.SetStatus(ObjectStatus)
  spec.csharp:
  - uid: Global.IntObject.SetStatus(ObjectStatus)
    name: SetStatus
  - name: (
  - uid: Global.ObjectStatus
    name: ObjectStatus
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetStatus(ObjectStatus)
    name: SetStatus
  - name: (
  - uid: Global.ObjectStatus
    name: ObjectStatus
  - name: )
- uid: Global.IntObject.OnKill(System.Boolean)
  commentId: M:Global.IntObject.OnKill(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: OnKill(bool)
  nameWithType: IntObject.OnKill(bool)
  fullName: IntObject.OnKill(bool)
  nameWithType.vb: IntObject.OnKill(Boolean)
  fullName.vb: IntObject.OnKill(Boolean)
  name.vb: OnKill(Boolean)
  spec.csharp:
  - uid: Global.IntObject.OnKill(System.Boolean)
    name: OnKill
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.OnKill(System.Boolean)
    name: OnKill
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.Kill
  commentId: M:Global.IntObject.Kill
  parent: Global.IntObject
  name: Kill()
  nameWithType: IntObject.Kill()
  fullName: IntObject.Kill()
  spec.csharp:
  - uid: Global.IntObject.Kill
    name: Kill
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill
    name: Kill
  - name: (
  - name: )
- uid: Global.IntObject.Kill(System.Boolean)
  commentId: M:Global.IntObject.Kill(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: Kill(bool)
  nameWithType: IntObject.Kill(bool)
  fullName: IntObject.Kill(bool)
  nameWithType.vb: IntObject.Kill(Boolean)
  fullName.vb: IntObject.Kill(Boolean)
  name.vb: Kill(Boolean)
  spec.csharp:
  - uid: Global.IntObject.Kill(System.Boolean)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill(System.Boolean)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.Kill(System.Single)
  commentId: M:Global.IntObject.Kill(System.Single)
  parent: Global.IntObject
  isExternal: true
  name: Kill(float)
  nameWithType: IntObject.Kill(float)
  fullName: IntObject.Kill(float)
  nameWithType.vb: IntObject.Kill(Single)
  fullName.vb: IntObject.Kill(Single)
  name.vb: Kill(Single)
  spec.csharp:
  - uid: Global.IntObject.Kill(System.Single)
    name: Kill
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill(System.Single)
    name: Kill
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntObject.Kill(System.Boolean,System.Single)
  commentId: M:Global.IntObject.Kill(System.Boolean,System.Single)
  parent: Global.IntObject
  isExternal: true
  name: Kill(bool, float)
  nameWithType: IntObject.Kill(bool, float)
  fullName: IntObject.Kill(bool, float)
  nameWithType.vb: IntObject.Kill(Boolean, Single)
  fullName.vb: IntObject.Kill(Boolean, Single)
  name.vb: Kill(Boolean, Single)
  spec.csharp:
  - uid: Global.IntObject.Kill(System.Boolean,System.Single)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Kill(System.Boolean,System.Single)
    name: Kill
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  commentId: M:Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
  parent: Global.IntObject
  isExternal: true
  name: IgnoreObjectCollisions(IntObject, float)
  nameWithType: IntObject.IgnoreObjectCollisions(IntObject, float)
  fullName: IntObject.IgnoreObjectCollisions(IntObject, float)
  nameWithType.vb: IntObject.IgnoreObjectCollisions(IntObject, Single)
  fullName.vb: IntObject.IgnoreObjectCollisions(IntObject, Single)
  name.vb: IgnoreObjectCollisions(IntObject, Single)
  spec.csharp:
  - uid: Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
    name: IgnoreObjectCollisions
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.IgnoreObjectCollisions(IntObject,System.Single)
    name: IgnoreObjectCollisions
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: Global.IntObject.SleepObject
  commentId: M:Global.IntObject.SleepObject
  parent: Global.IntObject
  name: SleepObject()
  nameWithType: IntObject.SleepObject()
  fullName: IntObject.SleepObject()
  spec.csharp:
  - uid: Global.IntObject.SleepObject
    name: SleepObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.SleepObject
    name: SleepObject
  - name: (
  - name: )
- uid: Global.IntObject.OptimizeSleepObject
  commentId: M:Global.IntObject.OptimizeSleepObject
  parent: Global.IntObject
  name: OptimizeSleepObject()
  nameWithType: IntObject.OptimizeSleepObject()
  fullName: IntObject.OptimizeSleepObject()
  spec.csharp:
  - uid: Global.IntObject.OptimizeSleepObject
    name: OptimizeSleepObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.OptimizeSleepObject
    name: OptimizeSleepObject
  - name: (
  - name: )
- uid: Global.IntObject.WakeObject
  commentId: M:Global.IntObject.WakeObject
  parent: Global.IntObject
  name: WakeObject()
  nameWithType: IntObject.WakeObject()
  fullName: IntObject.WakeObject()
  spec.csharp:
  - uid: Global.IntObject.WakeObject
    name: WakeObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.WakeObject
    name: WakeObject
  - name: (
  - name: )
- uid: Global.IntObject.EnableObject
  commentId: M:Global.IntObject.EnableObject
  parent: Global.IntObject
  name: EnableObject()
  nameWithType: IntObject.EnableObject()
  fullName: IntObject.EnableObject()
  spec.csharp:
  - uid: Global.IntObject.EnableObject
    name: EnableObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.EnableObject
    name: EnableObject
  - name: (
  - name: )
- uid: Global.IntObject.DisableObject
  commentId: M:Global.IntObject.DisableObject
  parent: Global.IntObject
  name: DisableObject()
  nameWithType: IntObject.DisableObject()
  fullName: IntObject.DisableObject()
  spec.csharp:
  - uid: Global.IntObject.DisableObject
    name: DisableObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.DisableObject
    name: DisableObject
  - name: (
  - name: )
- uid: Global.IntObject.RespawnObject
  commentId: M:Global.IntObject.RespawnObject
  parent: Global.IntObject
  name: RespawnObject()
  nameWithType: IntObject.RespawnObject()
  fullName: IntObject.RespawnObject()
  spec.csharp:
  - uid: Global.IntObject.RespawnObject
    name: RespawnObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.RespawnObject
    name: RespawnObject
  - name: (
  - name: )
- uid: Global.IntObject.RecursiveSetCollidable(System.Boolean)
  commentId: M:Global.IntObject.RecursiveSetCollidable(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: RecursiveSetCollidable(bool)
  nameWithType: IntObject.RecursiveSetCollidable(bool)
  fullName: IntObject.RecursiveSetCollidable(bool)
  nameWithType.vb: IntObject.RecursiveSetCollidable(Boolean)
  fullName.vb: IntObject.RecursiveSetCollidable(Boolean)
  name.vb: RecursiveSetCollidable(Boolean)
  spec.csharp:
  - uid: Global.IntObject.RecursiveSetCollidable(System.Boolean)
    name: RecursiveSetCollidable
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.RecursiveSetCollidable(System.Boolean)
    name: RecursiveSetCollidable
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.SetColliderState(IntColliderState)
  commentId: M:Global.IntObject.SetColliderState(IntColliderState)
  parent: Global.IntObject
  name: SetColliderState(IntColliderState)
  nameWithType: IntObject.SetColliderState(IntColliderState)
  fullName: IntObject.SetColliderState(IntColliderState)
  spec.csharp:
  - uid: Global.IntObject.SetColliderState(IntColliderState)
    name: SetColliderState
  - name: (
  - uid: Global.IntColliderState
    name: IntColliderState
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetColliderState(IntColliderState)
    name: SetColliderState
  - name: (
  - uid: Global.IntColliderState
    name: IntColliderState
  - name: )
- uid: Global.IntObject.Translate(UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.Translate(UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: Translate(Vector2Int)
  nameWithType: IntObject.Translate(Vector2Int)
  fullName: IntObject.Translate(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2Int)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2Int)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.Translate(UnityEngine.Vector2)
  commentId: M:Global.IntObject.Translate(UnityEngine.Vector2)
  parent: Global.IntObject
  isExternal: true
  name: Translate(Vector2)
  nameWithType: IntObject.Translate(Vector2)
  fullName: IntObject.Translate(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Translate(UnityEngine.Vector2)
    name: Translate
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.SetPosition(UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: SetPosition(Vector2Int)
  nameWithType: IntObject.SetPosition(Vector2Int)
  fullName: IntObject.SetPosition(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.SetPosition(UnityEngine.Vector2Int)
    name: SetPosition
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetPosition(UnityEngine.Vector2Int)
    name: SetPosition
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.SetCollidable(System.Boolean)
  commentId: M:Global.IntObject.SetCollidable(System.Boolean)
  parent: Global.IntObject
  isExternal: true
  name: SetCollidable(bool)
  nameWithType: IntObject.SetCollidable(bool)
  fullName: IntObject.SetCollidable(bool)
  nameWithType.vb: IntObject.SetCollidable(Boolean)
  fullName.vb: IntObject.SetCollidable(Boolean)
  name.vb: SetCollidable(Boolean)
  spec.csharp:
  - uid: Global.IntObject.SetCollidable(System.Boolean)
    name: SetCollidable
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.SetCollidable(System.Boolean)
    name: SetCollidable
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.IntObject.GetCollidable
  commentId: M:Global.IntObject.GetCollidable
  parent: Global.IntObject
  name: GetCollidable()
  nameWithType: IntObject.GetCollidable()
  fullName: IntObject.GetCollidable()
  spec.csharp:
  - uid: Global.IntObject.GetCollidable
    name: GetCollidable
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetCollidable
    name: GetCollidable
  - name: (
  - name: )
- uid: Global.IntObject.GetCollider
  commentId: M:Global.IntObject.GetCollider
  parent: Global.IntObject
  name: GetCollider()
  nameWithType: IntObject.GetCollider()
  fullName: IntObject.GetCollider()
  spec.csharp:
  - uid: Global.IntObject.GetCollider
    name: GetCollider
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetCollider
    name: GetCollider
  - name: (
  - name: )
- uid: Global.IntObject.GetColliderState
  commentId: M:Global.IntObject.GetColliderState
  parent: Global.IntObject
  name: GetColliderState()
  nameWithType: IntObject.GetColliderState()
  fullName: IntObject.GetColliderState()
  spec.csharp:
  - uid: Global.IntObject.GetColliderState
    name: GetColliderState
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetColliderState
    name: GetColliderState
  - name: (
  - name: )
- uid: Global.IntObject.Overlaps(IntObject)
  commentId: M:Global.IntObject.Overlaps(IntObject)
  parent: Global.IntObject
  name: Overlaps(IntObject)
  nameWithType: IntObject.Overlaps(IntObject)
  fullName: IntObject.Overlaps(IntObject)
  spec.csharp:
  - uid: Global.IntObject.Overlaps(IntObject)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
  spec.vb:
  - uid: Global.IntObject.Overlaps(IntObject)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: )
- uid: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: Overlaps(IntObject, Vector2Int)
  nameWithType: IntObject.Overlaps(IntObject, Vector2Int)
  fullName: IntObject.Overlaps(IntObject, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.Overlaps(IntObject,UnityEngine.Vector2Int)
    name: Overlaps
  - name: (
  - uid: Global.IntObject
    name: IntObject
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.RayCast(IntRay)
  commentId: M:Global.IntObject.RayCast(IntRay)
  parent: Global.IntObject
  name: RayCast(IntRay)
  nameWithType: IntObject.RayCast(IntRay)
  fullName: IntObject.RayCast(IntRay)
  spec.csharp:
  - uid: Global.IntObject.RayCast(IntRay)
    name: RayCast
  - name: (
  - uid: Global.IntRay
    name: IntRay
  - name: )
  spec.vb:
  - uid: Global.IntObject.RayCast(IntRay)
    name: RayCast
  - name: (
  - uid: Global.IntRay
    name: IntRay
  - name: )
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: CollideAt(List<IntSolid>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntSolid>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntSolid>, UnityEngine.Vector2Int)
  nameWithType.vb: IntObject.CollideAt(List(Of IntSolid), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntSolid), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntSolid), Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntSolid
    name: IntSolid
  - name: '>'
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntSolid},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntSolid
    name: IntSolid
  - name: )
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: CollideAt(List<IntActor>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntActor>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntActor>, UnityEngine.Vector2Int)
  nameWithType.vb: IntObject.CollideAt(List(Of IntActor), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntActor), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntActor), Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntActor
    name: IntActor
  - name: '>'
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntActor},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntActor
    name: IntActor
  - name: )
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  commentId: M:Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
  parent: Global.IntObject
  isExternal: true
  name: CollideAt(List<IntTrigger>, Vector2Int)
  nameWithType: IntObject.CollideAt(List<IntTrigger>, Vector2Int)
  fullName: IntObject.CollideAt(System.Collections.Generic.List<IntTrigger>, UnityEngine.Vector2Int)
  nameWithType.vb: IntObject.CollideAt(List(Of IntTrigger), Vector2Int)
  fullName.vb: IntObject.CollideAt(System.Collections.Generic.List(Of IntTrigger), UnityEngine.Vector2Int)
  name.vb: CollideAt(List(Of IntTrigger), Vector2Int)
  spec.csharp:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: '>'
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntObject.CollideAt(System.Collections.Generic.List{IntTrigger},UnityEngine.Vector2Int)
    name: CollideAt
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntTrigger
    name: IntTrigger
  - name: )
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntObject.OnDrawGizmos
  commentId: M:Global.IntObject.OnDrawGizmos
  parent: Global.IntObject
  name: OnDrawGizmos()
  nameWithType: IntObject.OnDrawGizmos()
  fullName: IntObject.OnDrawGizmos()
  spec.csharp:
  - uid: Global.IntObject.OnDrawGizmos
    name: OnDrawGizmos
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.OnDrawGizmos
    name: OnDrawGizmos
  - name: (
  - name: )
- uid: Global.IntObject.OnPostLoadSaveFile
  commentId: M:Global.IntObject.OnPostLoadSaveFile
  parent: Global.IntObject
  name: OnPostLoadSaveFile()
  nameWithType: IntObject.OnPostLoadSaveFile()
  fullName: IntObject.OnPostLoadSaveFile()
  spec.csharp:
  - uid: Global.IntObject.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ISavableObject`1
  commentId: T:Global.ISavableObject`1
  name: ISavableObject<T>
  nameWithType: ISavableObject<T>
  fullName: ISavableObject<T>
  nameWithType.vb: ISavableObject(Of T)
  fullName.vb: ISavableObject(Of T)
  name.vb: ISavableObject(Of T)
  spec.csharp:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.Interactable.InteractionCondition
  commentId: T:Global.Interactable.InteractionCondition
  name: Interactable.InteractionCondition
  nameWithType: Interactable.InteractionCondition
  fullName: Interactable.InteractionCondition
  spec.csharp:
  - uid: Global.Interactable
    name: Interactable
  - name: .
  - uid: Global.Interactable.InteractionCondition
    name: InteractionCondition
  spec.vb:
  - uid: Global.Interactable
    name: Interactable
  - name: .
  - uid: Global.Interactable.InteractionCondition
    name: InteractionCondition
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: UnityEngine.SpriteRenderer
  commentId: T:UnityEngine.SpriteRenderer
  parent: UnityEngine
  isExternal: true
  name: SpriteRenderer
  nameWithType: SpriteRenderer
  fullName: UnityEngine.SpriteRenderer
- uid: UnityEngine.Material
  commentId: T:UnityEngine.Material
  parent: UnityEngine
  isExternal: true
  name: Material
  nameWithType: Material
  fullName: UnityEngine.Material
- uid: Global.Interactable.InteractionType
  commentId: T:Global.Interactable.InteractionType
  name: Interactable.InteractionType
  nameWithType: Interactable.InteractionType
  fullName: Interactable.InteractionType
  spec.csharp:
  - uid: Global.Interactable
    name: Interactable
  - name: .
  - uid: Global.Interactable.InteractionType
    name: InteractionType
  spec.vb:
  - uid: Global.Interactable
    name: Interactable
  - name: .
  - uid: Global.Interactable.InteractionType
    name: InteractionType
- uid: Global.TriggerInteractionCondition
  commentId: T:Global.TriggerInteractionCondition
  name: TriggerInteractionCondition
  nameWithType: TriggerInteractionCondition
  fullName: TriggerInteractionCondition
- uid: Global.SectionInteractionCondition
  commentId: T:Global.SectionInteractionCondition
  name: SectionInteractionCondition
  nameWithType: SectionInteractionCondition
  fullName: SectionInteractionCondition
- uid: Global.GameStateInteractionCondition
  commentId: T:Global.GameStateInteractionCondition
  name: GameStateInteractionCondition
  nameWithType: GameStateInteractionCondition
  fullName: GameStateInteractionCondition
- uid: Global.CollectInteractionCondition{IntEnemy}
  commentId: T:Global.CollectInteractionCondition{IntEnemy}
  definition: Global.CollectInteractionCondition`1
  name: CollectInteractionCondition<IntEnemy>
  nameWithType: CollectInteractionCondition<IntEnemy>
  fullName: CollectInteractionCondition<IntEnemy>
  nameWithType.vb: CollectInteractionCondition(Of IntEnemy)
  fullName.vb: CollectInteractionCondition(Of IntEnemy)
  name.vb: CollectInteractionCondition(Of IntEnemy)
  spec.csharp:
  - uid: Global.CollectInteractionCondition`1
    name: CollectInteractionCondition
  - name: <
  - uid: Global.IntEnemy
    name: IntEnemy
  - name: '>'
  spec.vb:
  - uid: Global.CollectInteractionCondition`1
    name: CollectInteractionCondition
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntEnemy
    name: IntEnemy
  - name: )
- uid: Global.CollectInteractionCondition`1
  commentId: T:Global.CollectInteractionCondition`1
  name: CollectInteractionCondition<T>
  nameWithType: CollectInteractionCondition<T>
  fullName: CollectInteractionCondition<T>
  nameWithType.vb: CollectInteractionCondition(Of T)
  fullName.vb: CollectInteractionCondition(Of T)
  name.vb: CollectInteractionCondition(Of T)
  spec.csharp:
  - uid: Global.CollectInteractionCondition`1
    name: CollectInteractionCondition
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.CollectInteractionCondition`1
    name: CollectInteractionCondition
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.CollectInteractionCondition{Collectable}
  commentId: T:Global.CollectInteractionCondition{Collectable}
  definition: Global.CollectInteractionCondition`1
  name: CollectInteractionCondition<Collectable>
  nameWithType: CollectInteractionCondition<Collectable>
  fullName: CollectInteractionCondition<Collectable>
  nameWithType.vb: CollectInteractionCondition(Of Collectable)
  fullName.vb: CollectInteractionCondition(Of Collectable)
  name.vb: CollectInteractionCondition(Of Collectable)
  spec.csharp:
  - uid: Global.CollectInteractionCondition`1
    name: CollectInteractionCondition
  - name: <
  - uid: Global.Collectable
    name: Collectable
  - name: '>'
  spec.vb:
  - uid: Global.CollectInteractionCondition`1
    name: CollectInteractionCondition
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Collectable
    name: Collectable
  - name: )
- uid: Global.AscendStateDependency[]
  isExternal: true
  name: AscendStateDependency[]
  nameWithType: AscendStateDependency[]
  fullName: AscendStateDependency[]
  nameWithType.vb: AscendStateDependency()
  fullName.vb: AscendStateDependency()
  name.vb: AscendStateDependency()
  spec.csharp:
  - uid: Global.AscendStateDependency
    name: AscendStateDependency
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.AscendStateDependency
    name: AscendStateDependency
  - name: (
  - name: )
- uid: Global.AscendState[]
  isExternal: true
  name: AscendState[]
  nameWithType: AscendState[]
  fullName: AscendState[]
  nameWithType.vb: AscendState()
  fullName.vb: AscendState()
  name.vb: AscendState()
  spec.csharp:
  - uid: Global.AscendState
    name: AscendState
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.AscendState
    name: AscendState
  - name: (
  - name: )
- uid: Global.Interactable.InteractCount*
  commentId: Overload:Global.Interactable.InteractCount
  name: InteractCount
  nameWithType: Interactable.InteractCount
  fullName: Interactable.InteractCount
- uid: Global.Interactable.InteractionCallback
  commentId: T:Global.Interactable.InteractionCallback
  name: Interactable.InteractionCallback
  nameWithType: Interactable.InteractionCallback
  fullName: Interactable.InteractionCallback
  spec.csharp:
  - uid: Global.Interactable
    name: Interactable
  - name: .
  - uid: Global.Interactable.InteractionCallback
    name: InteractionCallback
  spec.vb:
  - uid: Global.Interactable
    name: Interactable
  - name: .
  - uid: Global.Interactable.InteractionCallback
    name: InteractionCallback
- uid: Global.InteractionController[]
  isExternal: true
  name: InteractionController[]
  nameWithType: InteractionController[]
  fullName: InteractionController[]
  nameWithType.vb: InteractionController()
  fullName.vb: InteractionController()
  name.vb: InteractionController()
  spec.csharp:
  - uid: Global.InteractionController
    name: InteractionController
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.InteractionController
    name: InteractionController
  - name: (
  - name: )
- uid: Global.Interactable.Awake*
  commentId: Overload:Global.Interactable.Awake
  name: Awake
  nameWithType: Interactable.Awake
  fullName: Interactable.Awake
- uid: Global.Interactable.Start*
  commentId: Overload:Global.Interactable.Start
  name: Start
  nameWithType: Interactable.Start
  fullName: Interactable.Start
- uid: Global.Interactable.Update*
  commentId: Overload:Global.Interactable.Update
  name: Update
  nameWithType: Interactable.Update
  fullName: Interactable.Update
- uid: Global.Interactable.RegisterInteractionCallback*
  commentId: Overload:Global.Interactable.RegisterInteractionCallback
  name: RegisterInteractionCallback
  nameWithType: Interactable.RegisterInteractionCallback
  fullName: Interactable.RegisterInteractionCallback
- uid: Global.Interactable.UnregisterInteractionCallback*
  commentId: Overload:Global.Interactable.UnregisterInteractionCallback
  name: UnregisterInteractionCallback
  nameWithType: Interactable.UnregisterInteractionCallback
  fullName: Interactable.UnregisterInteractionCallback
- uid: Global.Interactable.RegisterInteractionCompletedCallback*
  commentId: Overload:Global.Interactable.RegisterInteractionCompletedCallback
  name: RegisterInteractionCompletedCallback
  nameWithType: Interactable.RegisterInteractionCompletedCallback
  fullName: Interactable.RegisterInteractionCompletedCallback
- uid: Global.Interactable.UnregisterInteractionCompletedCallback*
  commentId: Overload:Global.Interactable.UnregisterInteractionCompletedCallback
  name: UnregisterInteractionCompletedCallback
  nameWithType: Interactable.UnregisterInteractionCompletedCallback
  fullName: Interactable.UnregisterInteractionCompletedCallback
- uid: Global.Interactable.AreDependenciesMet*
  commentId: Overload:Global.Interactable.AreDependenciesMet
  name: AreDependenciesMet
  nameWithType: Interactable.AreDependenciesMet
  fullName: Interactable.AreDependenciesMet
- uid: Global.Interactable.CanInteract*
  commentId: Overload:Global.Interactable.CanInteract
  name: CanInteract
  nameWithType: Interactable.CanInteract
  fullName: Interactable.CanInteract
- uid: Global.Interactable.Interact*
  commentId: Overload:Global.Interactable.Interact
  name: Interact
  nameWithType: Interactable.Interact
  fullName: Interactable.Interact
- uid: Global.Interactable.IsInteractionActive*
  commentId: Overload:Global.Interactable.IsInteractionActive
  name: IsInteractionActive
  nameWithType: Interactable.IsInteractionActive
  fullName: Interactable.IsInteractionActive
- uid: Global.Interactable.IsInteractionComplete*
  commentId: Overload:Global.Interactable.IsInteractionComplete
  name: IsInteractionComplete
  nameWithType: Interactable.IsInteractionComplete
  fullName: Interactable.IsInteractionComplete
- uid: Global.InteractionController
  commentId: T:Global.InteractionController
  name: InteractionController
  nameWithType: InteractionController
  fullName: InteractionController
- uid: Global.Interactable.ResetCount*
  commentId: Overload:Global.Interactable.ResetCount
  name: ResetCount
  nameWithType: Interactable.ResetCount
  fullName: Interactable.ResetCount
- uid: Global.IntObject.ResetObject
  commentId: M:Global.IntObject.ResetObject
  parent: Global.IntObject
  name: ResetObject()
  nameWithType: IntObject.ResetObject()
  fullName: IntObject.ResetObject()
  spec.csharp:
  - uid: Global.IntObject.ResetObject
    name: ResetObject
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.ResetObject
    name: ResetObject
  - name: (
  - name: )
- uid: Global.Interactable.ResetObject*
  commentId: Overload:Global.Interactable.ResetObject
  name: ResetObject
  nameWithType: Interactable.ResetObject
  fullName: Interactable.ResetObject
- uid: Global.IntTrigger.OnTriggerStart(IntActor)
  commentId: M:Global.IntTrigger.OnTriggerStart(IntActor)
  parent: Global.IntTrigger
  name: OnTriggerStart(IntActor)
  nameWithType: IntTrigger.OnTriggerStart(IntActor)
  fullName: IntTrigger.OnTriggerStart(IntActor)
  spec.csharp:
  - uid: Global.IntTrigger.OnTriggerStart(IntActor)
    name: OnTriggerStart
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
  spec.vb:
  - uid: Global.IntTrigger.OnTriggerStart(IntActor)
    name: OnTriggerStart
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
- uid: Global.Interactable.OnTriggerStart*
  commentId: Overload:Global.Interactable.OnTriggerStart
  name: OnTriggerStart
  nameWithType: Interactable.OnTriggerStart
  fullName: Interactable.OnTriggerStart
- uid: Global.IntActor
  commentId: T:Global.IntActor
  name: IntActor
  nameWithType: IntActor
  fullName: IntActor
- uid: Global.IntTrigger.OnTriggerEnd(IntActor)
  commentId: M:Global.IntTrigger.OnTriggerEnd(IntActor)
  parent: Global.IntTrigger
  name: OnTriggerEnd(IntActor)
  nameWithType: IntTrigger.OnTriggerEnd(IntActor)
  fullName: IntTrigger.OnTriggerEnd(IntActor)
  spec.csharp:
  - uid: Global.IntTrigger.OnTriggerEnd(IntActor)
    name: OnTriggerEnd
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
  spec.vb:
  - uid: Global.IntTrigger.OnTriggerEnd(IntActor)
    name: OnTriggerEnd
  - name: (
  - uid: Global.IntActor
    name: IntActor
  - name: )
- uid: Global.Interactable.OnTriggerEnd*
  commentId: Overload:Global.Interactable.OnTriggerEnd
  name: OnTriggerEnd
  nameWithType: Interactable.OnTriggerEnd
  fullName: Interactable.OnTriggerEnd
- uid: Global.Interactable.OnUnlocked*
  commentId: Overload:Global.Interactable.OnUnlocked
  name: OnUnlocked
  nameWithType: Interactable.OnUnlocked
  fullName: Interactable.OnUnlocked
- uid: Global.Interactable.OnLocked*
  commentId: Overload:Global.Interactable.OnLocked
  name: OnLocked
  nameWithType: Interactable.OnLocked
  fullName: Interactable.OnLocked
- uid: Global.Interactable.OnInteractionCompleted*
  commentId: Overload:Global.Interactable.OnInteractionCompleted
  name: OnInteractionCompleted
  nameWithType: Interactable.OnInteractionCompleted
  fullName: Interactable.OnInteractionCompleted
- uid: Global.IntObject.GetObjectSaveData
  commentId: M:Global.IntObject.GetObjectSaveData
  parent: Global.IntObject
  name: GetObjectSaveData()
  nameWithType: IntObject.GetObjectSaveData()
  fullName: IntObject.GetObjectSaveData()
  spec.csharp:
  - uid: Global.IntObject.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntObject.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
- uid: Global.Interactable.GetObjectSaveData*
  commentId: Overload:Global.Interactable.GetObjectSaveData
  name: GetObjectSaveData
  nameWithType: Interactable.GetObjectSaveData
  fullName: Interactable.GetObjectSaveData
- uid: Global.IntObjectSaveData
  commentId: T:Global.IntObjectSaveData
  name: IntObjectSaveData
  nameWithType: IntObjectSaveData
  fullName: IntObjectSaveData
- uid: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  commentId: M:Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
  parent: Global.IntObject
  name: LoadObjectSaveData(IntObjectSaveData)
  nameWithType: IntObject.LoadObjectSaveData(IntObjectSaveData)
  fullName: IntObject.LoadObjectSaveData(IntObjectSaveData)
  spec.csharp:
  - uid: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
    name: LoadObjectSaveData
  - name: (
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
  spec.vb:
  - uid: Global.IntObject.LoadObjectSaveData(IntObjectSaveData)
    name: LoadObjectSaveData
  - name: (
  - uid: Global.IntObjectSaveData
    name: IntObjectSaveData
  - name: )
- uid: Global.Interactable.LoadObjectSaveData*
  commentId: Overload:Global.Interactable.LoadObjectSaveData
  name: LoadObjectSaveData
  nameWithType: Interactable.LoadObjectSaveData
  fullName: Interactable.LoadObjectSaveData
