### YamlMime:ManagedReference
items:
- uid: Global.BoundedWanderBehavior
  commentId: T:Global.BoundedWanderBehavior
  id: BoundedWanderBehavior
  parent: Global
  children:
  - Global.BoundedWanderBehavior.BoundsMax
  - Global.BoundedWanderBehavior.BoundsMin
  - Global.BoundedWanderBehavior.DrawDebugTrail
  - Global.BoundedWanderBehavior.DrawGizmos(ModularEnemy)
  - Global.BoundedWanderBehavior.EnemySpeed
  - Global.BoundedWanderBehavior.MovementSmoothing
  - Global.BoundedWanderBehavior.NoiseScale
  - Global.BoundedWanderBehavior.OnRestart
  - Global.BoundedWanderBehavior.Start(ModularEnemy)
  - Global.BoundedWanderBehavior.Update
  langs:
  - csharp
  - vb
  name: BoundedWanderBehavior
  nameWithType: BoundedWanderBehavior
  fullName: BoundedWanderBehavior
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Idle/BoundedWanderBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BoundedWanderBehavior
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Idle/BoundedWanderBehavior.cs
    startLine: 5
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class BoundedWanderBehavior : ModularEnemy.EnemyBehaviorInterface
    content.vb: >-
      <Serializable>

      Public Class BoundedWanderBehavior Inherits ModularEnemy.EnemyBehaviorInterface
  inheritance:
  - System.Object
  - Global.ModularEnemy.EnemyBehaviorInterface
  inheritedMembers:
  - Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  - Global.ModularEnemy.EnemyBehaviorInterface.self
  - Global.ModularEnemy.EnemyBehaviorInterface.Started
  - Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
  - Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.BoundedWanderBehavior.BoundsMin
  commentId: F:Global.BoundedWanderBehavior.BoundsMin
  id: BoundsMin
  parent: Global.BoundedWanderBehavior
  langs:
  - csharp
  - vb
  name: BoundsMin
  nameWithType: BoundedWanderBehavior.BoundsMin
  fullName: BoundedWanderBehavior.BoundsMin
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Idle/BoundedWanderBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BoundsMin
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Idle/BoundedWanderBehavior.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [DraggablePoint(DraggablePointSpace.Section)]

      [Tooltip("Lower left corner of bounding box (relative to enemy) Note: it does not update realtime")]

      public Vector2Int BoundsMin
    return:
      type: UnityEngine.Vector2Int
    content.vb: >-
      <DraggablePoint(DraggablePointSpace.Section)>

      <Tooltip("Lower left corner of bounding box (relative to enemy) Note: it does not update realtime")>

      Public BoundsMin As Vector2Int
  attributes:
  - type: Global.DraggablePoint
    ctor: Global.DraggablePoint.#ctor(DraggablePointSpace)
    arguments:
    - type: Global.DraggablePointSpace
      value: 2
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 'Lower left corner of bounding box (relative to enemy) Note: it does not update realtime'
- uid: Global.BoundedWanderBehavior.BoundsMax
  commentId: F:Global.BoundedWanderBehavior.BoundsMax
  id: BoundsMax
  parent: Global.BoundedWanderBehavior
  langs:
  - csharp
  - vb
  name: BoundsMax
  nameWithType: BoundedWanderBehavior.BoundsMax
  fullName: BoundedWanderBehavior.BoundsMax
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Idle/BoundedWanderBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BoundsMax
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Idle/BoundedWanderBehavior.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [DraggablePoint(DraggablePointSpace.Section)]

      [Tooltip("Upper right corner of bounding box (relative to enemy) Note: it does not update realtime")]

      public Vector2Int BoundsMax
    return:
      type: UnityEngine.Vector2Int
    content.vb: >-
      <DraggablePoint(DraggablePointSpace.Section)>

      <Tooltip("Upper right corner of bounding box (relative to enemy) Note: it does not update realtime")>

      Public BoundsMax As Vector2Int
  attributes:
  - type: Global.DraggablePoint
    ctor: Global.DraggablePoint.#ctor(DraggablePointSpace)
    arguments:
    - type: Global.DraggablePointSpace
      value: 2
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 'Upper right corner of bounding box (relative to enemy) Note: it does not update realtime'
- uid: Global.BoundedWanderBehavior.NoiseScale
  commentId: F:Global.BoundedWanderBehavior.NoiseScale
  id: NoiseScale
  parent: Global.BoundedWanderBehavior
  langs:
  - csharp
  - vb
  name: NoiseScale
  nameWithType: BoundedWanderBehavior.NoiseScale
  fullName: BoundedWanderBehavior.NoiseScale
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Idle/BoundedWanderBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: NoiseScale
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Idle/BoundedWanderBehavior.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("How quickly the trail moves across the screen. (Represents the target location of the enemy)")]

      public float NoiseScale
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("How quickly the trail moves across the screen. (Represents the target location of the enemy)")>

      Public NoiseScale As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: How quickly the trail moves across the screen. (Represents the target location of the enemy)
- uid: Global.BoundedWanderBehavior.EnemySpeed
  commentId: F:Global.BoundedWanderBehavior.EnemySpeed
  id: EnemySpeed
  parent: Global.BoundedWanderBehavior
  langs:
  - csharp
  - vb
  name: EnemySpeed
  nameWithType: BoundedWanderBehavior.EnemySpeed
  fullName: BoundedWanderBehavior.EnemySpeed
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Idle/BoundedWanderBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EnemySpeed
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Idle/BoundedWanderBehavior.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("How quickly the enemy moves towards the target")]

      public float EnemySpeed
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("How quickly the enemy moves towards the target")>

      Public EnemySpeed As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: How quickly the enemy moves towards the target
- uid: Global.BoundedWanderBehavior.MovementSmoothing
  commentId: F:Global.BoundedWanderBehavior.MovementSmoothing
  id: MovementSmoothing
  parent: Global.BoundedWanderBehavior
  langs:
  - csharp
  - vb
  name: MovementSmoothing
  nameWithType: BoundedWanderBehavior.MovementSmoothing
  fullName: BoundedWanderBehavior.MovementSmoothing
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Idle/BoundedWanderBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MovementSmoothing
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Idle/BoundedWanderBehavior.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("How smooth the enemy movement is. Smaller --> smoother but takes longer to accelerate")]

      public float MovementSmoothing
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("How smooth the enemy movement is. Smaller --> smoother but takes longer to accelerate")>

      Public MovementSmoothing As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: How smooth the enemy movement is. Smaller --> smoother but takes longer to accelerate
- uid: Global.BoundedWanderBehavior.DrawDebugTrail
  commentId: F:Global.BoundedWanderBehavior.DrawDebugTrail
  id: DrawDebugTrail
  parent: Global.BoundedWanderBehavior
  langs:
  - csharp
  - vb
  name: DrawDebugTrail
  nameWithType: BoundedWanderBehavior.DrawDebugTrail
  fullName: BoundedWanderBehavior.DrawDebugTrail
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Idle/BoundedWanderBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DrawDebugTrail
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Idle/BoundedWanderBehavior.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Whether to draw the trail as a gizmo in the scene window")]

      public bool DrawDebugTrail
    return:
      type: System.Boolean
    content.vb: >-
      <Tooltip("Whether to draw the trail as a gizmo in the scene window")>

      Public DrawDebugTrail As Boolean
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Whether to draw the trail as a gizmo in the scene window
- uid: Global.BoundedWanderBehavior.Start(ModularEnemy)
  commentId: M:Global.BoundedWanderBehavior.Start(ModularEnemy)
  id: Start(ModularEnemy)
  parent: Global.BoundedWanderBehavior
  langs:
  - csharp
  - vb
  name: Start(ModularEnemy)
  nameWithType: BoundedWanderBehavior.Start(ModularEnemy)
  fullName: BoundedWanderBehavior.Start(ModularEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Idle/BoundedWanderBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Start
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Idle/BoundedWanderBehavior.cs
    startLine: 27
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void Start(ModularEnemy enemy)
    parameters:
    - id: enemy
      type: Global.ModularEnemy
    content.vb: Public Overrides Sub Start(enemy As ModularEnemy)
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  overload: Global.BoundedWanderBehavior.Start*
- uid: Global.BoundedWanderBehavior.DrawGizmos(ModularEnemy)
  commentId: M:Global.BoundedWanderBehavior.DrawGizmos(ModularEnemy)
  id: DrawGizmos(ModularEnemy)
  parent: Global.BoundedWanderBehavior
  langs:
  - csharp
  - vb
  name: DrawGizmos(ModularEnemy)
  nameWithType: BoundedWanderBehavior.DrawGizmos(ModularEnemy)
  fullName: BoundedWanderBehavior.DrawGizmos(ModularEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Idle/BoundedWanderBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DrawGizmos
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Idle/BoundedWanderBehavior.cs
    startLine: 38
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void DrawGizmos(ModularEnemy enemy)
    parameters:
    - id: enemy
      type: Global.ModularEnemy
    content.vb: Public Overrides Sub DrawGizmos(enemy As ModularEnemy)
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  overload: Global.BoundedWanderBehavior.DrawGizmos*
- uid: Global.BoundedWanderBehavior.Update
  commentId: M:Global.BoundedWanderBehavior.Update
  id: Update
  parent: Global.BoundedWanderBehavior
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: BoundedWanderBehavior.Update()
  fullName: BoundedWanderBehavior.Update()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Idle/BoundedWanderBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Update
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Idle/BoundedWanderBehavior.cs
    startLine: 44
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.Update
  overload: Global.BoundedWanderBehavior.Update*
- uid: Global.BoundedWanderBehavior.OnRestart
  commentId: M:Global.BoundedWanderBehavior.OnRestart
  id: OnRestart
  parent: Global.BoundedWanderBehavior
  langs:
  - csharp
  - vb
  name: OnRestart()
  nameWithType: BoundedWanderBehavior.OnRestart()
  fullName: BoundedWanderBehavior.OnRestart()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Idle/BoundedWanderBehavior.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnRestart
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Behaviors/Idle/BoundedWanderBehavior.cs
    startLine: 89
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void OnRestart()
    content.vb: Public Overrides Sub OnRestart()
  overridden: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
  overload: Global.BoundedWanderBehavior.OnRestart*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.ModularEnemy.EnemyBehaviorInterface
  commentId: T:Global.ModularEnemy.EnemyBehaviorInterface
  name: ModularEnemy.EnemyBehaviorInterface
  nameWithType: ModularEnemy.EnemyBehaviorInterface
  fullName: ModularEnemy.EnemyBehaviorInterface
  spec.csharp:
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: .
  - uid: Global.ModularEnemy.EnemyBehaviorInterface
    name: EnemyBehaviorInterface
  spec.vb:
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: .
  - uid: Global.ModularEnemy.EnemyBehaviorInterface
    name: EnemyBehaviorInterface
- uid: Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  commentId: F:Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: ShowGizmos
  nameWithType: ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  fullName: ModularEnemy.EnemyBehaviorInterface.ShowGizmos
- uid: Global.ModularEnemy.EnemyBehaviorInterface.self
  commentId: F:Global.ModularEnemy.EnemyBehaviorInterface.self
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: self
  nameWithType: ModularEnemy.EnemyBehaviorInterface.self
  fullName: ModularEnemy.EnemyBehaviorInterface.self
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Started
  commentId: P:Global.ModularEnemy.EnemyBehaviorInterface.Started
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: Started
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Started
  fullName: ModularEnemy.EnemyBehaviorInterface.Started
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  isExternal: true
  name: OnKill(ModularEnemy, bool)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, bool)
  fullName: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, bool)
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, Boolean)
  fullName.vb: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, Boolean)
  name.vb: OnKill(ModularEnemy, Boolean)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
    name: OnKill
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
    name: OnKill
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
  - name: )
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: OnResetObject(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
    name: OnResetObject
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
    name: OnResetObject
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: Start(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
    name: Start
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
    name: Start
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.BoundedWanderBehavior.Start*
  commentId: Overload:Global.BoundedWanderBehavior.Start
  name: Start
  nameWithType: BoundedWanderBehavior.Start
  fullName: BoundedWanderBehavior.Start
- uid: Global.ModularEnemy
  commentId: T:Global.ModularEnemy
  name: ModularEnemy
  nameWithType: ModularEnemy
  fullName: ModularEnemy
- uid: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: DrawGizmos(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
    name: DrawGizmos
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
    name: DrawGizmos
  - name: (
  - uid: Global.ModularEnemy
    name: ModularEnemy
  - name: )
- uid: Global.BoundedWanderBehavior.DrawGizmos*
  commentId: Overload:Global.BoundedWanderBehavior.DrawGizmos
  name: DrawGizmos
  nameWithType: BoundedWanderBehavior.DrawGizmos
  fullName: BoundedWanderBehavior.DrawGizmos
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Update
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.Update
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: Update()
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Update()
  fullName: ModularEnemy.EnemyBehaviorInterface.Update()
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Update
    name: Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.Update
    name: Update
  - name: (
  - name: )
- uid: Global.BoundedWanderBehavior.Update*
  commentId: Overload:Global.BoundedWanderBehavior.Update
  name: Update
  nameWithType: BoundedWanderBehavior.Update
  fullName: BoundedWanderBehavior.Update
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  name: OnRestart()
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnRestart()
  fullName: ModularEnemy.EnemyBehaviorInterface.OnRestart()
  spec.csharp:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
    name: OnRestart
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
    name: OnRestart
  - name: (
  - name: )
- uid: Global.BoundedWanderBehavior.OnRestart*
  commentId: Overload:Global.BoundedWanderBehavior.OnRestart
  name: OnRestart
  nameWithType: BoundedWanderBehavior.OnRestart
  fullName: BoundedWanderBehavior.OnRestart
