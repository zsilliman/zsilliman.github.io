### YamlMime:ManagedReference
items:
- uid: Global.ProjectileLauncher`1
  commentId: T:Global.ProjectileLauncher`1
  id: ProjectileLauncher`1
  parent: Global
  children:
  - Global.ProjectileLauncher`1.Enemy
  - Global.ProjectileLauncher`1.GetNextProjectile(System.Boolean)
  - Global.ProjectileLauncher`1.IncrementLaunchCounter
  - Global.ProjectileLauncher`1.Initialize(IntEnemy,`0)
  - Global.ProjectileLauncher`1.KillAllProjectiles
  - Global.ProjectileLauncher`1.LaunchCounter
  - Global.ProjectileLauncher`1.LaunchDirectedProjectile(AuraProjectileMovementBase.AuraProjectileProperties,UnityEngine.Vector2,System.Boolean)
  - Global.ProjectileLauncher`1.projectileManager
  - Global.ProjectileLauncher`1.Properties
  - Global.ProjectileLauncher`1.ResetCountersAndTimers
  - Global.ProjectileLauncher`1.SpawnNextProjectile(System.Boolean)
  - Global.ProjectileLauncher`1.Trigger(UnityEngine.Vector2)
  - Global.ProjectileLauncher`1.Update
  langs:
  - csharp
  - vb
  name: ProjectileLauncher<T>
  nameWithType: ProjectileLauncher<T>
  fullName: ProjectileLauncher<T>
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ProjectileLauncher
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public abstract class ProjectileLauncher<T> where T : BaseLauncherProperties'
    typeParameters:
    - id: T
    content.vb: Public MustInherit Class ProjectileLauncher(Of T As BaseLauncherProperties)
  inheritance:
  - System.Object
  derivedClasses:
  - Global.DirectedLauncher
  - Global.RadialLauncher
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  nameWithType.vb: ProjectileLauncher(Of T)
  fullName.vb: ProjectileLauncher(Of T)
  name.vb: ProjectileLauncher(Of T)
- uid: Global.ProjectileLauncher`1.projectileManager
  commentId: F:Global.ProjectileLauncher`1.projectileManager
  id: projectileManager
  parent: Global.ProjectileLauncher`1
  langs:
  - csharp
  - vb
  name: projectileManager
  nameWithType: ProjectileLauncher<T>.projectileManager
  fullName: ProjectileLauncher<T>.projectileManager
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: projectileManager
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected SpawnManager<IntObject> projectileManager
    return:
      type: Global.SpawnManager{IntObject}
    content.vb: Protected projectileManager As SpawnManager(Of IntObject)
  nameWithType.vb: ProjectileLauncher(Of T).projectileManager
  fullName.vb: ProjectileLauncher(Of T).projectileManager
- uid: Global.ProjectileLauncher`1.Enemy
  commentId: F:Global.ProjectileLauncher`1.Enemy
  id: Enemy
  parent: Global.ProjectileLauncher`1
  langs:
  - csharp
  - vb
  name: Enemy
  nameWithType: ProjectileLauncher<T>.Enemy
  fullName: ProjectileLauncher<T>.Enemy
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Enemy
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
    startLine: 20
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected IntEnemy Enemy
    return:
      type: Global.IntEnemy
    content.vb: Protected Enemy As IntEnemy
  nameWithType.vb: ProjectileLauncher(Of T).Enemy
  fullName.vb: ProjectileLauncher(Of T).Enemy
- uid: Global.ProjectileLauncher`1.Properties
  commentId: F:Global.ProjectileLauncher`1.Properties
  id: Properties
  parent: Global.ProjectileLauncher`1
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: ProjectileLauncher<T>.Properties
  fullName: ProjectileLauncher<T>.Properties
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Properties
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
    startLine: 21
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected T Properties
    return:
      type: '{T}'
    content.vb: Protected Properties As T
  nameWithType.vb: ProjectileLauncher(Of T).Properties
  fullName.vb: ProjectileLauncher(Of T).Properties
- uid: Global.ProjectileLauncher`1.LaunchCounter
  commentId: P:Global.ProjectileLauncher`1.LaunchCounter
  id: LaunchCounter
  parent: Global.ProjectileLauncher`1
  langs:
  - csharp
  - vb
  name: LaunchCounter
  nameWithType: ProjectileLauncher<T>.LaunchCounter
  fullName: ProjectileLauncher<T>.LaunchCounter
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LaunchCounter
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int LaunchCounter { get; protected set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property LaunchCounter As Integer
  overload: Global.ProjectileLauncher`1.LaunchCounter*
  nameWithType.vb: ProjectileLauncher(Of T).LaunchCounter
  fullName.vb: ProjectileLauncher(Of T).LaunchCounter
- uid: Global.ProjectileLauncher`1.Initialize(IntEnemy,`0)
  commentId: M:Global.ProjectileLauncher`1.Initialize(IntEnemy,`0)
  id: Initialize(IntEnemy,`0)
  parent: Global.ProjectileLauncher`1
  langs:
  - csharp
  - vb
  name: Initialize(IntEnemy, T)
  nameWithType: ProjectileLauncher<T>.Initialize(IntEnemy, T)
  fullName: ProjectileLauncher<T>.Initialize(IntEnemy, T)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Initialize
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void Initialize(IntEnemy enemy, T properties)
    parameters:
    - id: enemy
      type: Global.IntEnemy
    - id: properties
      type: '{T}'
    content.vb: Public Overridable Sub Initialize(enemy As IntEnemy, properties As T)
  overload: Global.ProjectileLauncher`1.Initialize*
  nameWithType.vb: ProjectileLauncher(Of T).Initialize(IntEnemy, T)
  fullName.vb: ProjectileLauncher(Of T).Initialize(IntEnemy, T)
- uid: Global.ProjectileLauncher`1.IncrementLaunchCounter
  commentId: M:Global.ProjectileLauncher`1.IncrementLaunchCounter
  id: IncrementLaunchCounter
  parent: Global.ProjectileLauncher`1
  langs:
  - csharp
  - vb
  name: IncrementLaunchCounter()
  nameWithType: ProjectileLauncher<T>.IncrementLaunchCounter()
  fullName: ProjectileLauncher<T>.IncrementLaunchCounter()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IncrementLaunchCounter
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
    startLine: 32
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void IncrementLaunchCounter()
    content.vb: Protected Sub IncrementLaunchCounter()
  overload: Global.ProjectileLauncher`1.IncrementLaunchCounter*
  nameWithType.vb: ProjectileLauncher(Of T).IncrementLaunchCounter()
  fullName.vb: ProjectileLauncher(Of T).IncrementLaunchCounter()
- uid: Global.ProjectileLauncher`1.LaunchDirectedProjectile(AuraProjectileMovementBase.AuraProjectileProperties,UnityEngine.Vector2,System.Boolean)
  commentId: M:Global.ProjectileLauncher`1.LaunchDirectedProjectile(AuraProjectileMovementBase.AuraProjectileProperties,UnityEngine.Vector2,System.Boolean)
  id: LaunchDirectedProjectile(AuraProjectileMovementBase.AuraProjectileProperties,UnityEngine.Vector2,System.Boolean)
  parent: Global.ProjectileLauncher`1
  langs:
  - csharp
  - vb
  name: LaunchDirectedProjectile(AuraProjectileProperties, Vector2, bool)
  nameWithType: ProjectileLauncher<T>.LaunchDirectedProjectile(AuraProjectileMovementBase.AuraProjectileProperties, Vector2, bool)
  fullName: ProjectileLauncher<T>.LaunchDirectedProjectile(AuraProjectileMovementBase.AuraProjectileProperties, UnityEngine.Vector2, bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LaunchDirectedProjectile
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
    startLine: 37
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void LaunchDirectedProjectile(AuraProjectileMovementBase.AuraProjectileProperties props, Vector2 direction, bool increment = true)
    parameters:
    - id: props
      type: Global.AuraProjectileMovementBase.AuraProjectileProperties
    - id: direction
      type: UnityEngine.Vector2
    - id: increment
      type: System.Boolean
    content.vb: Protected Sub LaunchDirectedProjectile(props As AuraProjectileMovementBase.AuraProjectileProperties, direction As Vector2, increment As Boolean = True)
  overload: Global.ProjectileLauncher`1.LaunchDirectedProjectile*
  nameWithType.vb: ProjectileLauncher(Of T).LaunchDirectedProjectile(AuraProjectileMovementBase.AuraProjectileProperties, Vector2, Boolean)
  fullName.vb: ProjectileLauncher(Of T).LaunchDirectedProjectile(AuraProjectileMovementBase.AuraProjectileProperties, UnityEngine.Vector2, Boolean)
  name.vb: LaunchDirectedProjectile(AuraProjectileProperties, Vector2, Boolean)
- uid: Global.ProjectileLauncher`1.GetNextProjectile(System.Boolean)
  commentId: M:Global.ProjectileLauncher`1.GetNextProjectile(System.Boolean)
  id: GetNextProjectile(System.Boolean)
  parent: Global.ProjectileLauncher`1
  langs:
  - csharp
  - vb
  name: GetNextProjectile(bool)
  nameWithType: ProjectileLauncher<T>.GetNextProjectile(bool)
  fullName: ProjectileLauncher<T>.GetNextProjectile(bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetNextProjectile
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
    startLine: 59
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual GameObject GetNextProjectile(bool increment = true)
    parameters:
    - id: increment
      type: System.Boolean
    return:
      type: UnityEngine.GameObject
    content.vb: Protected Overridable Function GetNextProjectile(increment As Boolean = True) As GameObject
  overload: Global.ProjectileLauncher`1.GetNextProjectile*
  nameWithType.vb: ProjectileLauncher(Of T).GetNextProjectile(Boolean)
  fullName.vb: ProjectileLauncher(Of T).GetNextProjectile(Boolean)
  name.vb: GetNextProjectile(Boolean)
- uid: Global.ProjectileLauncher`1.SpawnNextProjectile(System.Boolean)
  commentId: M:Global.ProjectileLauncher`1.SpawnNextProjectile(System.Boolean)
  id: SpawnNextProjectile(System.Boolean)
  parent: Global.ProjectileLauncher`1
  langs:
  - csharp
  - vb
  name: SpawnNextProjectile(bool)
  nameWithType: ProjectileLauncher<T>.SpawnNextProjectile(bool)
  fullName: ProjectileLauncher<T>.SpawnNextProjectile(bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SpawnNextProjectile
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
    startLine: 78
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nSpawns the next projectile in the prefab sequence. May do nothing if next prefab is null, or invalid (no IntObject attached)\n"
  example: []
  syntax:
    content: protected virtual IntObject SpawnNextProjectile(bool increment = true)
    parameters:
    - id: increment
      type: System.Boolean
    return:
      type: Global.IntObject
      description: May return null
    content.vb: Protected Overridable Function SpawnNextProjectile(increment As Boolean = True) As IntObject
  overload: Global.ProjectileLauncher`1.SpawnNextProjectile*
  nameWithType.vb: ProjectileLauncher(Of T).SpawnNextProjectile(Boolean)
  fullName.vb: ProjectileLauncher(Of T).SpawnNextProjectile(Boolean)
  name.vb: SpawnNextProjectile(Boolean)
- uid: Global.ProjectileLauncher`1.ResetCountersAndTimers
  commentId: M:Global.ProjectileLauncher`1.ResetCountersAndTimers
  id: ResetCountersAndTimers
  parent: Global.ProjectileLauncher`1
  langs:
  - csharp
  - vb
  name: ResetCountersAndTimers()
  nameWithType: ProjectileLauncher<T>.ResetCountersAndTimers()
  fullName: ProjectileLauncher<T>.ResetCountersAndTimers()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResetCountersAndTimers
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
    startLine: 94
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void ResetCountersAndTimers()
    content.vb: Public Overridable Sub ResetCountersAndTimers()
  overload: Global.ProjectileLauncher`1.ResetCountersAndTimers*
  nameWithType.vb: ProjectileLauncher(Of T).ResetCountersAndTimers()
  fullName.vb: ProjectileLauncher(Of T).ResetCountersAndTimers()
- uid: Global.ProjectileLauncher`1.KillAllProjectiles
  commentId: M:Global.ProjectileLauncher`1.KillAllProjectiles
  id: KillAllProjectiles
  parent: Global.ProjectileLauncher`1
  langs:
  - csharp
  - vb
  name: KillAllProjectiles()
  nameWithType: ProjectileLauncher<T>.KillAllProjectiles()
  fullName: ProjectileLauncher<T>.KillAllProjectiles()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: KillAllProjectiles
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
    startLine: 99
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void KillAllProjectiles()
    content.vb: Public Overridable Sub KillAllProjectiles()
  overload: Global.ProjectileLauncher`1.KillAllProjectiles*
  nameWithType.vb: ProjectileLauncher(Of T).KillAllProjectiles()
  fullName.vb: ProjectileLauncher(Of T).KillAllProjectiles()
- uid: Global.ProjectileLauncher`1.Trigger(UnityEngine.Vector2)
  commentId: M:Global.ProjectileLauncher`1.Trigger(UnityEngine.Vector2)
  id: Trigger(UnityEngine.Vector2)
  parent: Global.ProjectileLauncher`1
  langs:
  - csharp
  - vb
  name: Trigger(Vector2)
  nameWithType: ProjectileLauncher<T>.Trigger(Vector2)
  fullName: ProjectileLauncher<T>.Trigger(UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Trigger
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
    startLine: 104
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public abstract void Trigger(Vector2 direction)
    parameters:
    - id: direction
      type: UnityEngine.Vector2
    content.vb: Public MustOverride Sub Trigger(direction As Vector2)
  overload: Global.ProjectileLauncher`1.Trigger*
  nameWithType.vb: ProjectileLauncher(Of T).Trigger(Vector2)
  fullName.vb: ProjectileLauncher(Of T).Trigger(UnityEngine.Vector2)
- uid: Global.ProjectileLauncher`1.Update
  commentId: M:Global.ProjectileLauncher`1.Update
  id: Update
  parent: Global.ProjectileLauncher`1
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: ProjectileLauncher<T>.Update()
  fullName: ProjectileLauncher<T>.Update()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Update
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/Modules/Projectiles/Launchers/ProjectileLauncher.cs
    startLine: 106
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public abstract void Update()
    content.vb: Public MustOverride Sub Update()
  overload: Global.ProjectileLauncher`1.Update*
  nameWithType.vb: ProjectileLauncher(Of T).Update()
  fullName.vb: ProjectileLauncher(Of T).Update()
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.SpawnManager{IntObject}
  commentId: T:Global.SpawnManager{IntObject}
  definition: Global.SpawnManager`1
  name: SpawnManager<IntObject>
  nameWithType: SpawnManager<IntObject>
  fullName: SpawnManager<IntObject>
  nameWithType.vb: SpawnManager(Of IntObject)
  fullName.vb: SpawnManager(Of IntObject)
  name.vb: SpawnManager(Of IntObject)
  spec.csharp:
  - uid: Global.SpawnManager`1
    name: SpawnManager
  - name: <
  - uid: Global.IntObject
    name: IntObject
  - name: '>'
  spec.vb:
  - uid: Global.SpawnManager`1
    name: SpawnManager
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntObject
    name: IntObject
  - name: )
- uid: Global.SpawnManager`1
  commentId: T:Global.SpawnManager`1
  name: SpawnManager<T>
  nameWithType: SpawnManager<T>
  fullName: SpawnManager<T>
  nameWithType.vb: SpawnManager(Of T)
  fullName.vb: SpawnManager(Of T)
  name.vb: SpawnManager(Of T)
  spec.csharp:
  - uid: Global.SpawnManager`1
    name: SpawnManager
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.SpawnManager`1
    name: SpawnManager
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.IntEnemy
  commentId: T:Global.IntEnemy
  name: IntEnemy
  nameWithType: IntEnemy
  fullName: IntEnemy
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Global.ProjectileLauncher`1.LaunchCounter*
  commentId: Overload:Global.ProjectileLauncher`1.LaunchCounter
  name: LaunchCounter
  nameWithType: ProjectileLauncher<T>.LaunchCounter
  fullName: ProjectileLauncher<T>.LaunchCounter
  nameWithType.vb: ProjectileLauncher(Of T).LaunchCounter
  fullName.vb: ProjectileLauncher(Of T).LaunchCounter
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.ProjectileLauncher`1.Initialize*
  commentId: Overload:Global.ProjectileLauncher`1.Initialize
  name: Initialize
  nameWithType: ProjectileLauncher<T>.Initialize
  fullName: ProjectileLauncher<T>.Initialize
  nameWithType.vb: ProjectileLauncher(Of T).Initialize
  fullName.vb: ProjectileLauncher(Of T).Initialize
- uid: Global.ProjectileLauncher`1.IncrementLaunchCounter*
  commentId: Overload:Global.ProjectileLauncher`1.IncrementLaunchCounter
  name: IncrementLaunchCounter
  nameWithType: ProjectileLauncher<T>.IncrementLaunchCounter
  fullName: ProjectileLauncher<T>.IncrementLaunchCounter
  nameWithType.vb: ProjectileLauncher(Of T).IncrementLaunchCounter
  fullName.vb: ProjectileLauncher(Of T).IncrementLaunchCounter
- uid: Global.ProjectileLauncher`1.LaunchDirectedProjectile*
  commentId: Overload:Global.ProjectileLauncher`1.LaunchDirectedProjectile
  name: LaunchDirectedProjectile
  nameWithType: ProjectileLauncher<T>.LaunchDirectedProjectile
  fullName: ProjectileLauncher<T>.LaunchDirectedProjectile
  nameWithType.vb: ProjectileLauncher(Of T).LaunchDirectedProjectile
  fullName.vb: ProjectileLauncher(Of T).LaunchDirectedProjectile
- uid: Global.AuraProjectileMovementBase.AuraProjectileProperties
  commentId: T:Global.AuraProjectileMovementBase.AuraProjectileProperties
  name: AuraProjectileMovementBase.AuraProjectileProperties
  nameWithType: AuraProjectileMovementBase.AuraProjectileProperties
  fullName: AuraProjectileMovementBase.AuraProjectileProperties
  spec.csharp:
  - uid: Global.AuraProjectileMovementBase
    name: AuraProjectileMovementBase
  - name: .
  - uid: Global.AuraProjectileMovementBase.AuraProjectileProperties
    name: AuraProjectileProperties
  spec.vb:
  - uid: Global.AuraProjectileMovementBase
    name: AuraProjectileMovementBase
  - name: .
  - uid: Global.AuraProjectileMovementBase.AuraProjectileProperties
    name: AuraProjectileProperties
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ProjectileLauncher`1.GetNextProjectile*
  commentId: Overload:Global.ProjectileLauncher`1.GetNextProjectile
  name: GetNextProjectile
  nameWithType: ProjectileLauncher<T>.GetNextProjectile
  fullName: ProjectileLauncher<T>.GetNextProjectile
  nameWithType.vb: ProjectileLauncher(Of T).GetNextProjectile
  fullName.vb: ProjectileLauncher(Of T).GetNextProjectile
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: Global.ProjectileLauncher`1.SpawnNextProjectile*
  commentId: Overload:Global.ProjectileLauncher`1.SpawnNextProjectile
  name: SpawnNextProjectile
  nameWithType: ProjectileLauncher<T>.SpawnNextProjectile
  fullName: ProjectileLauncher<T>.SpawnNextProjectile
  nameWithType.vb: ProjectileLauncher(Of T).SpawnNextProjectile
  fullName.vb: ProjectileLauncher(Of T).SpawnNextProjectile
- uid: Global.IntObject
  commentId: T:Global.IntObject
  name: IntObject
  nameWithType: IntObject
  fullName: IntObject
- uid: Global.ProjectileLauncher`1.ResetCountersAndTimers*
  commentId: Overload:Global.ProjectileLauncher`1.ResetCountersAndTimers
  name: ResetCountersAndTimers
  nameWithType: ProjectileLauncher<T>.ResetCountersAndTimers
  fullName: ProjectileLauncher<T>.ResetCountersAndTimers
  nameWithType.vb: ProjectileLauncher(Of T).ResetCountersAndTimers
  fullName.vb: ProjectileLauncher(Of T).ResetCountersAndTimers
- uid: Global.ProjectileLauncher`1.KillAllProjectiles*
  commentId: Overload:Global.ProjectileLauncher`1.KillAllProjectiles
  name: KillAllProjectiles
  nameWithType: ProjectileLauncher<T>.KillAllProjectiles
  fullName: ProjectileLauncher<T>.KillAllProjectiles
  nameWithType.vb: ProjectileLauncher(Of T).KillAllProjectiles
  fullName.vb: ProjectileLauncher(Of T).KillAllProjectiles
- uid: Global.ProjectileLauncher`1.Trigger*
  commentId: Overload:Global.ProjectileLauncher`1.Trigger
  name: Trigger
  nameWithType: ProjectileLauncher<T>.Trigger
  fullName: ProjectileLauncher<T>.Trigger
  nameWithType.vb: ProjectileLauncher(Of T).Trigger
  fullName.vb: ProjectileLauncher(Of T).Trigger
- uid: Global.ProjectileLauncher`1.Update*
  commentId: Overload:Global.ProjectileLauncher`1.Update
  name: Update
  nameWithType: ProjectileLauncher<T>.Update
  fullName: ProjectileLauncher<T>.Update
  nameWithType.vb: ProjectileLauncher(Of T).Update
  fullName.vb: ProjectileLauncher(Of T).Update
