### YamlMime:ManagedReference
items:
- uid: Global.ModularEnemy.EnemyBehaviorInterface
  commentId: T:Global.ModularEnemy.EnemyBehaviorInterface
  id: ModularEnemy.EnemyBehaviorInterface
  parent: Global
  children:
  - Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  - Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
  - Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  - Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
  - Global.ModularEnemy.EnemyBehaviorInterface.self
  - Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  - Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  - Global.ModularEnemy.EnemyBehaviorInterface.Started
  - Global.ModularEnemy.EnemyBehaviorInterface.Update
  langs:
  - csharp
  - vb
  name: ModularEnemy.EnemyBehaviorInterface
  nameWithType: ModularEnemy.EnemyBehaviorInterface
  fullName: ModularEnemy.EnemyBehaviorInterface
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EnemyBehaviorInterface
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
    startLine: 312
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public abstract class ModularEnemy.EnemyBehaviorInterface
    content.vb: Public MustInherit Class ModularEnemy.EnemyBehaviorInterface
  inheritance:
  - System.Object
  derivedClasses:
  - Global.AggroTrigger
  - Global.AuraBehavior
  - Global.BeaconBehavior
  - Global.BoundedWanderBehavior
  - Global.ChargeBehavior
  - Global.DetonateBehavior
  - Global.DipBehavior
  - Global.IdleBounceBehavior
  - Global.IdlePatrolBehavior
  - Global.IdleStationaryBehavior
  - Global.KeepDistanceBehavior
  - Global.ModularEnemy.EnemyBehaviorInterfaceManager`1
  - Global.NoneBehavior
  - Global.NudgeBehavior
  - Global.PlatformPatrolBehavior
  - Global.PrepHopBehavior
  - Global.ReturnToStartBehavior
  - Global.ShootProjectiveBehavior
  - Global.SpawnBehavior
  - Global.TeleportBehavior
  - Global.TimerBehavior
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  commentId: F:Global.ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  id: ShowGizmos
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  langs:
  - csharp
  - vb
  name: ShowGizmos
  nameWithType: ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  fullName: ModularEnemy.EnemyBehaviorInterface.ShowGizmos
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ShowGizmos
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
    startLine: 315
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool ShowGizmos
    return:
      type: System.Boolean
    content.vb: Public ShowGizmos As Boolean
- uid: Global.ModularEnemy.EnemyBehaviorInterface.self
  commentId: F:Global.ModularEnemy.EnemyBehaviorInterface.self
  id: self
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  langs:
  - csharp
  - vb
  name: self
  nameWithType: ModularEnemy.EnemyBehaviorInterface.self
  fullName: ModularEnemy.EnemyBehaviorInterface.self
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: self
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
    startLine: 316
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected ModularEnemy self
    return:
      type: Global.ModularEnemy
    content.vb: Protected self As ModularEnemy
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Started
  commentId: P:Global.ModularEnemy.EnemyBehaviorInterface.Started
  id: Started
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  langs:
  - csharp
  - vb
  name: Started
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Started
  fullName: ModularEnemy.EnemyBehaviorInterface.Started
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Started
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
    startLine: 317
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool Started { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Started As Boolean
  overload: Global.ModularEnemy.EnemyBehaviorInterface.Started*
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  id: Start(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  langs:
  - csharp
  - vb
  name: Start(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterface.Start(ModularEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Start
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
    startLine: 319
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void Start(ModularEnemy enemy)
    parameters:
    - id: enemy
      type: Global.ModularEnemy
    content.vb: Public Overridable Sub Start(enemy As ModularEnemy)
  overload: Global.ModularEnemy.EnemyBehaviorInterface.Start*
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Update
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.Update
  id: Update
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Update()
  fullName: ModularEnemy.EnemyBehaviorInterface.Update()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Update
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
    startLine: 325
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public abstract void Update()
    content.vb: Public MustOverride Sub Update()
  overload: Global.ModularEnemy.EnemyBehaviorInterface.Update*
- uid: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  id: DrawGizmos(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  langs:
  - csharp
  - vb
  name: DrawGizmos(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterface.DrawGizmos(ModularEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DrawGizmos
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
    startLine: 327
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public abstract void DrawGizmos(ModularEnemy enemy)
    parameters:
    - id: enemy
      type: Global.ModularEnemy
    content.vb: Public MustOverride Sub DrawGizmos(enemy As ModularEnemy)
  overload: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos*
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
  id: OnRestart
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  langs:
  - csharp
  - vb
  name: OnRestart()
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnRestart()
  fullName: ModularEnemy.EnemyBehaviorInterface.OnRestart()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnRestart
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
    startLine: 329
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public abstract void OnRestart()
    content.vb: Public MustOverride Sub OnRestart()
  overload: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart*
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy,System.Boolean)
  id: OnKill(ModularEnemy,System.Boolean)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  langs:
  - csharp
  - vb
  name: OnKill(ModularEnemy, bool)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, bool)
  fullName: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnKill
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
    startLine: 331
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void OnKill(ModularEnemy enemy, bool IsAnimated)
    parameters:
    - id: enemy
      type: Global.ModularEnemy
    - id: IsAnimated
      type: System.Boolean
    content.vb: Public Overridable Sub OnKill(enemy As ModularEnemy, IsAnimated As Boolean)
  overload: Global.ModularEnemy.EnemyBehaviorInterface.OnKill*
  nameWithType.vb: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, Boolean)
  fullName.vb: ModularEnemy.EnemyBehaviorInterface.OnKill(ModularEnemy, Boolean)
  name.vb: OnKill(ModularEnemy, Boolean)
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  commentId: M:Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  id: OnResetObject(ModularEnemy)
  parent: Global.ModularEnemy.EnemyBehaviorInterface
  langs:
  - csharp
  - vb
  name: OnResetObject(ModularEnemy)
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  fullName: ModularEnemy.EnemyBehaviorInterface.OnResetObject(ModularEnemy)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnResetObject
    path: ../Assets/Objects & Components/Entities/Enemies/Modular/ModularEnemy.cs
    startLine: 333
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void OnResetObject(ModularEnemy enemy)
    parameters:
    - id: enemy
      type: Global.ModularEnemy
    content.vb: Public Overridable Sub OnResetObject(enemy As ModularEnemy)
  overload: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.ModularEnemy
  commentId: T:Global.ModularEnemy
  name: ModularEnemy
  nameWithType: ModularEnemy
  fullName: ModularEnemy
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Started*
  commentId: Overload:Global.ModularEnemy.EnemyBehaviorInterface.Started
  name: Started
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Started
  fullName: ModularEnemy.EnemyBehaviorInterface.Started
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Start*
  commentId: Overload:Global.ModularEnemy.EnemyBehaviorInterface.Start
  name: Start
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Start
  fullName: ModularEnemy.EnemyBehaviorInterface.Start
- uid: Global.ModularEnemy.EnemyBehaviorInterface.Update*
  commentId: Overload:Global.ModularEnemy.EnemyBehaviorInterface.Update
  name: Update
  nameWithType: ModularEnemy.EnemyBehaviorInterface.Update
  fullName: ModularEnemy.EnemyBehaviorInterface.Update
- uid: Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos*
  commentId: Overload:Global.ModularEnemy.EnemyBehaviorInterface.DrawGizmos
  name: DrawGizmos
  nameWithType: ModularEnemy.EnemyBehaviorInterface.DrawGizmos
  fullName: ModularEnemy.EnemyBehaviorInterface.DrawGizmos
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnRestart*
  commentId: Overload:Global.ModularEnemy.EnemyBehaviorInterface.OnRestart
  name: OnRestart
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnRestart
  fullName: ModularEnemy.EnemyBehaviorInterface.OnRestart
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnKill*
  commentId: Overload:Global.ModularEnemy.EnemyBehaviorInterface.OnKill
  name: OnKill
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnKill
  fullName: ModularEnemy.EnemyBehaviorInterface.OnKill
- uid: Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject*
  commentId: Overload:Global.ModularEnemy.EnemyBehaviorInterface.OnResetObject
  name: OnResetObject
  nameWithType: ModularEnemy.EnemyBehaviorInterface.OnResetObject
  fullName: ModularEnemy.EnemyBehaviorInterface.OnResetObject
