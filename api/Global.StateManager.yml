### YamlMime:ManagedReference
items:
- uid: Global.StateManager
  commentId: T:Global.StateManager
  id: StateManager
  parent: Global
  children:
  - Global.StateManager.AccessibleStatesContains(AscendState)
  - Global.StateManager.AddOwnedStatesToList(System.Collections.Generic.List{AscendState})
  - Global.StateManager.AddOwnedStatesToListInternal(System.Collections.Generic.List{StateManager.AscendStateInternal})
  - Global.StateManager.AreDependenciesMetGeneral(System.Collections.Generic.IEnumerable{AscendStateDependency})
  - Global.StateManager.AreStatesVisited(AscendState[])
  - Global.StateManager.AreStatesVisitedGeneral(System.Collections.Generic.IEnumerable{AscendState})
  - Global.StateManager.Awake
  - Global.StateManager.GetAccessibleStateList
  - Global.StateManager.GetAccessibleStateListInternal
  - Global.StateManager.GetObjectSaveData
  - Global.StateManager.GetOwnedStatesList
  - Global.StateManager.IsDependencyMetGeneral(AscendState)
  - Global.StateManager.IsStateVisited(AscendState)
  - Global.StateManager.LoadObjectSaveData(StateManager.StateManagerSaveData)
  - Global.StateManager.LoadVisitedStates(System.Collections.Generic.List{StateManager.AscendStateInternal})
  - Global.StateManager.OnPostLoadSaveFile
  - Global.StateManager.OnValidate
  - Global.StateManager.OwnedStatesContains(AscendState)
  - Global.StateManager.PopulateWithVisitedStatesList(System.Collections.Generic.List{StateManager.AscendStateInternal})
  - Global.StateManager.RegisterConditionCallbackToOwner(AscendState,StateManager.StateManagerCallback)
  - Global.StateManager.SetupStateHierarchyReferences
  - Global.StateManager.StateIDCount
  - Global.StateManager.States
  - Global.StateManager.UnregisterConditionCallbackToOwner(AscendState,StateManager.StateManagerCallback)
  - Global.StateManager.ValidateStateIDs
  - Global.StateManager.VisitedStates
  - Global.StateManager.VisitedStatesPreview
  - Global.StateManager.VisitState(AscendState)
  - Global.StateManager.VisitStateGeneral(AscendState)
  - Global.StateManager.VisitStates(System.Collections.Generic.IEnumerable{AscendState})
  - Global.StateManager.VisitStatesGeneral(System.Collections.Generic.IEnumerable{AscendState})
  langs:
  - csharp
  - vb
  name: StateManager
  nameWithType: StateManager
  fullName: StateManager
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: StateManager
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 44
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public abstract class StateManager : MonoBehaviour, ISavableObject<StateManager.StateManagerSaveData>'
    content.vb: Public MustInherit Class StateManager Inherits MonoBehaviour Implements ISavableObject(Of StateManager.StateManagerSaveData)
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  derivedClasses:
  - Global.GameState
  - Global.SceneState
  - Global.SectionState
  implements:
  - Global.ISavableObject{StateManager.StateManagerSaveData}
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.StateManager.States
  commentId: F:Global.StateManager.States
  id: States
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: States
  nameWithType: StateManager.States
  fullName: StateManager.States
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: States
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 85
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public StateManager.AscendStateInternal[] States
    return:
      type: Global.StateManager.AscendStateInternal[]
    content.vb: Public States As StateManager.AscendStateInternal()
- uid: Global.StateManager.StateIDCount
  commentId: F:Global.StateManager.StateIDCount
  id: StateIDCount
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: StateIDCount
  nameWithType: StateManager.StateIDCount
  fullName: StateManager.StateIDCount
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: StateIDCount
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 87
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [HideInInspector]

      [SerializeField]

      public int StateIDCount
    return:
      type: System.Int32
    content.vb: >-
      <HideInInspector>

      <SerializeField>

      Public StateIDCount As Integer
  attributes:
  - type: UnityEngine.HideInInspector
    ctor: UnityEngine.HideInInspector.#ctor
    arguments: []
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Global.StateManager.VisitedStatesPreview
  commentId: F:Global.StateManager.VisitedStatesPreview
  id: VisitedStatesPreview
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: VisitedStatesPreview
  nameWithType: StateManager.VisitedStatesPreview
  fullName: StateManager.VisitedStatesPreview
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: VisitedStatesPreview
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 89
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public List<StateManager.AscendStateInternal> VisitedStatesPreview
    return:
      type: System.Collections.Generic.List{StateManager.AscendStateInternal}
    content.vb: Public VisitedStatesPreview As List(Of StateManager.AscendStateInternal)
- uid: Global.StateManager.VisitedStates
  commentId: F:Global.StateManager.VisitedStates
  id: VisitedStates
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: VisitedStates
  nameWithType: StateManager.VisitedStates
  fullName: StateManager.VisitedStates
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: VisitedStates
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 95
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected HashSet<AscendState> VisitedStates
    return:
      type: System.Collections.Generic.HashSet{AscendState}
    content.vb: Protected VisitedStates As HashSet(Of AscendState)
- uid: Global.StateManager.Awake
  commentId: M:Global.StateManager.Awake
  id: Awake
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: Awake()
  nameWithType: StateManager.Awake()
  fullName: StateManager.Awake()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Awake
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 98
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void Awake()
    content.vb: Protected Sub Awake()
  overload: Global.StateManager.Awake*
- uid: Global.StateManager.SetupStateHierarchyReferences
  commentId: M:Global.StateManager.SetupStateHierarchyReferences
  id: SetupStateHierarchyReferences
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: SetupStateHierarchyReferences()
  nameWithType: StateManager.SetupStateHierarchyReferences()
  fullName: StateManager.SetupStateHierarchyReferences()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetupStateHierarchyReferences
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 102
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public abstract void SetupStateHierarchyReferences()
    content.vb: Public MustOverride Sub SetupStateHierarchyReferences()
  overload: Global.StateManager.SetupStateHierarchyReferences*
- uid: Global.StateManager.GetAccessibleStateList
  commentId: M:Global.StateManager.GetAccessibleStateList
  id: GetAccessibleStateList
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: GetAccessibleStateList()
  nameWithType: StateManager.GetAccessibleStateList()
  fullName: StateManager.GetAccessibleStateList()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetAccessibleStateList
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 103
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public abstract List<AscendState> GetAccessibleStateList()
    return:
      type: System.Collections.Generic.List{AscendState}
    content.vb: Public MustOverride Function GetAccessibleStateList() As List(Of AscendState)
  overload: Global.StateManager.GetAccessibleStateList*
- uid: Global.StateManager.GetAccessibleStateListInternal
  commentId: M:Global.StateManager.GetAccessibleStateListInternal
  id: GetAccessibleStateListInternal
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: GetAccessibleStateListInternal()
  nameWithType: StateManager.GetAccessibleStateListInternal()
  fullName: StateManager.GetAccessibleStateListInternal()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetAccessibleStateListInternal
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 104
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public abstract List<StateManager.AscendStateInternal> GetAccessibleStateListInternal()
    return:
      type: System.Collections.Generic.List{StateManager.AscendStateInternal}
    content.vb: Public MustOverride Function GetAccessibleStateListInternal() As List(Of StateManager.AscendStateInternal)
  overload: Global.StateManager.GetAccessibleStateListInternal*
- uid: Global.StateManager.AccessibleStatesContains(AscendState)
  commentId: M:Global.StateManager.AccessibleStatesContains(AscendState)
  id: AccessibleStatesContains(AscendState)
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: AccessibleStatesContains(AscendState)
  nameWithType: StateManager.AccessibleStatesContains(AscendState)
  fullName: StateManager.AccessibleStatesContains(AscendState)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AccessibleStatesContains
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 106
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public abstract bool AccessibleStatesContains(AscendState state)
    parameters:
    - id: state
      type: Global.AscendState
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function AccessibleStatesContains(state As AscendState) As Boolean
  overload: Global.StateManager.AccessibleStatesContains*
- uid: Global.StateManager.OwnedStatesContains(AscendState)
  commentId: M:Global.StateManager.OwnedStatesContains(AscendState)
  id: OwnedStatesContains(AscendState)
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: OwnedStatesContains(AscendState)
  nameWithType: StateManager.OwnedStatesContains(AscendState)
  fullName: StateManager.OwnedStatesContains(AscendState)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OwnedStatesContains
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 108
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool OwnedStatesContains(AscendState state)
    parameters:
    - id: state
      type: Global.AscendState
    return:
      type: System.Boolean
    content.vb: Public Function OwnedStatesContains(state As AscendState) As Boolean
  overload: Global.StateManager.OwnedStatesContains*
- uid: Global.StateManager.GetOwnedStatesList
  commentId: M:Global.StateManager.GetOwnedStatesList
  id: GetOwnedStatesList
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: GetOwnedStatesList()
  nameWithType: StateManager.GetOwnedStatesList()
  fullName: StateManager.GetOwnedStatesList()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetOwnedStatesList
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 117
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public List<AscendState> GetOwnedStatesList()
    return:
      type: System.Collections.Generic.List{AscendState}
    content.vb: Public Function GetOwnedStatesList() As List(Of AscendState)
  overload: Global.StateManager.GetOwnedStatesList*
- uid: Global.StateManager.AddOwnedStatesToListInternal(System.Collections.Generic.List{StateManager.AscendStateInternal})
  commentId: M:Global.StateManager.AddOwnedStatesToListInternal(System.Collections.Generic.List{StateManager.AscendStateInternal})
  id: AddOwnedStatesToListInternal(System.Collections.Generic.List{StateManager.AscendStateInternal})
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: AddOwnedStatesToListInternal(List<AscendStateInternal>)
  nameWithType: StateManager.AddOwnedStatesToListInternal(List<StateManager.AscendStateInternal>)
  fullName: StateManager.AddOwnedStatesToListInternal(System.Collections.Generic.List<StateManager.AscendStateInternal>)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AddOwnedStatesToListInternal
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 126
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void AddOwnedStatesToListInternal(List<StateManager.AscendStateInternal> states)
    parameters:
    - id: states
      type: System.Collections.Generic.List{StateManager.AscendStateInternal}
    content.vb: Public Sub AddOwnedStatesToListInternal(states As List(Of StateManager.AscendStateInternal))
  overload: Global.StateManager.AddOwnedStatesToListInternal*
  nameWithType.vb: StateManager.AddOwnedStatesToListInternal(List(Of StateManager.AscendStateInternal))
  fullName.vb: StateManager.AddOwnedStatesToListInternal(System.Collections.Generic.List(Of StateManager.AscendStateInternal))
  name.vb: AddOwnedStatesToListInternal(List(Of AscendStateInternal))
- uid: Global.StateManager.AddOwnedStatesToList(System.Collections.Generic.List{AscendState})
  commentId: M:Global.StateManager.AddOwnedStatesToList(System.Collections.Generic.List{AscendState})
  id: AddOwnedStatesToList(System.Collections.Generic.List{AscendState})
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: AddOwnedStatesToList(List<AscendState>)
  nameWithType: StateManager.AddOwnedStatesToList(List<AscendState>)
  fullName: StateManager.AddOwnedStatesToList(System.Collections.Generic.List<AscendState>)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AddOwnedStatesToList
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 130
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void AddOwnedStatesToList(List<AscendState> states)
    parameters:
    - id: states
      type: System.Collections.Generic.List{AscendState}
    content.vb: Public Sub AddOwnedStatesToList(states As List(Of AscendState))
  overload: Global.StateManager.AddOwnedStatesToList*
  nameWithType.vb: StateManager.AddOwnedStatesToList(List(Of AscendState))
  fullName.vb: StateManager.AddOwnedStatesToList(System.Collections.Generic.List(Of AscendState))
  name.vb: AddOwnedStatesToList(List(Of AscendState))
- uid: Global.StateManager.IsStateVisited(AscendState)
  commentId: M:Global.StateManager.IsStateVisited(AscendState)
  id: IsStateVisited(AscendState)
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: IsStateVisited(AscendState)
  nameWithType: StateManager.IsStateVisited(AscendState)
  fullName: StateManager.IsStateVisited(AscendState)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsStateVisited
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 138
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual bool IsStateVisited(AscendState state)
    parameters:
    - id: state
      type: Global.AscendState
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsStateVisited(state As AscendState) As Boolean
  overload: Global.StateManager.IsStateVisited*
- uid: Global.StateManager.AreStatesVisited(AscendState[])
  commentId: M:Global.StateManager.AreStatesVisited(AscendState[])
  id: AreStatesVisited(AscendState[])
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: AreStatesVisited(AscendState[])
  nameWithType: StateManager.AreStatesVisited(AscendState[])
  fullName: StateManager.AreStatesVisited(AscendState[])
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AreStatesVisited
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 143
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual bool AreStatesVisited(AscendState[] states)
    parameters:
    - id: states
      type: Global.AscendState[]
    return:
      type: System.Boolean
    content.vb: Public Overridable Function AreStatesVisited(states As AscendState()) As Boolean
  overload: Global.StateManager.AreStatesVisited*
  nameWithType.vb: StateManager.AreStatesVisited(AscendState())
  fullName.vb: StateManager.AreStatesVisited(AscendState())
  name.vb: AreStatesVisited(AscendState())
- uid: Global.StateManager.VisitStates(System.Collections.Generic.IEnumerable{AscendState})
  commentId: M:Global.StateManager.VisitStates(System.Collections.Generic.IEnumerable{AscendState})
  id: VisitStates(System.Collections.Generic.IEnumerable{AscendState})
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: VisitStates(IEnumerable<AscendState>)
  nameWithType: StateManager.VisitStates(IEnumerable<AscendState>)
  fullName: StateManager.VisitStates(System.Collections.Generic.IEnumerable<AscendState>)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: VisitStates
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 155
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void VisitStates(IEnumerable<AscendState> states)
    parameters:
    - id: states
      type: System.Collections.Generic.IEnumerable{AscendState}
    content.vb: Public Sub VisitStates(states As IEnumerable(Of AscendState))
  overload: Global.StateManager.VisitStates*
  nameWithType.vb: StateManager.VisitStates(IEnumerable(Of AscendState))
  fullName.vb: StateManager.VisitStates(System.Collections.Generic.IEnumerable(Of AscendState))
  name.vb: VisitStates(IEnumerable(Of AscendState))
- uid: Global.StateManager.VisitState(AscendState)
  commentId: M:Global.StateManager.VisitState(AscendState)
  id: VisitState(AscendState)
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: VisitState(AscendState)
  nameWithType: StateManager.VisitState(AscendState)
  fullName: StateManager.VisitState(AscendState)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: VisitState
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 163
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool VisitState(AscendState state)
    parameters:
    - id: state
      type: Global.AscendState
    return:
      type: System.Boolean
    content.vb: Public Function VisitState(state As AscendState) As Boolean
  overload: Global.StateManager.VisitState*
- uid: Global.StateManager.VisitStateGeneral(AscendState)
  commentId: M:Global.StateManager.VisitStateGeneral(AscendState)
  id: VisitStateGeneral(AscendState)
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: VisitStateGeneral(AscendState)
  nameWithType: StateManager.VisitStateGeneral(AscendState)
  fullName: StateManager.VisitStateGeneral(AscendState)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: VisitStateGeneral
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 182
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static bool VisitStateGeneral(AscendState state)
    parameters:
    - id: state
      type: Global.AscendState
    return:
      type: System.Boolean
    content.vb: Public Shared Function VisitStateGeneral(state As AscendState) As Boolean
  overload: Global.StateManager.VisitStateGeneral*
- uid: Global.StateManager.VisitStatesGeneral(System.Collections.Generic.IEnumerable{AscendState})
  commentId: M:Global.StateManager.VisitStatesGeneral(System.Collections.Generic.IEnumerable{AscendState})
  id: VisitStatesGeneral(System.Collections.Generic.IEnumerable{AscendState})
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: VisitStatesGeneral(IEnumerable<AscendState>)
  nameWithType: StateManager.VisitStatesGeneral(IEnumerable<AscendState>)
  fullName: StateManager.VisitStatesGeneral(System.Collections.Generic.IEnumerable<AscendState>)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: VisitStatesGeneral
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 198
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static void VisitStatesGeneral(IEnumerable<AscendState> states)
    parameters:
    - id: states
      type: System.Collections.Generic.IEnumerable{AscendState}
    content.vb: Public Shared Sub VisitStatesGeneral(states As IEnumerable(Of AscendState))
  overload: Global.StateManager.VisitStatesGeneral*
  nameWithType.vb: StateManager.VisitStatesGeneral(IEnumerable(Of AscendState))
  fullName.vb: StateManager.VisitStatesGeneral(System.Collections.Generic.IEnumerable(Of AscendState))
  name.vb: VisitStatesGeneral(IEnumerable(Of AscendState))
- uid: Global.StateManager.IsDependencyMetGeneral(AscendState)
  commentId: M:Global.StateManager.IsDependencyMetGeneral(AscendState)
  id: IsDependencyMetGeneral(AscendState)
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: IsDependencyMetGeneral(AscendState)
  nameWithType: StateManager.IsDependencyMetGeneral(AscendState)
  fullName: StateManager.IsDependencyMetGeneral(AscendState)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsDependencyMetGeneral
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 204
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static bool IsDependencyMetGeneral(AscendState state)
    parameters:
    - id: state
      type: Global.AscendState
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsDependencyMetGeneral(state As AscendState) As Boolean
  overload: Global.StateManager.IsDependencyMetGeneral*
- uid: Global.StateManager.AreStatesVisitedGeneral(System.Collections.Generic.IEnumerable{AscendState})
  commentId: M:Global.StateManager.AreStatesVisitedGeneral(System.Collections.Generic.IEnumerable{AscendState})
  id: AreStatesVisitedGeneral(System.Collections.Generic.IEnumerable{AscendState})
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: AreStatesVisitedGeneral(IEnumerable<AscendState>)
  nameWithType: StateManager.AreStatesVisitedGeneral(IEnumerable<AscendState>)
  fullName: StateManager.AreStatesVisitedGeneral(System.Collections.Generic.IEnumerable<AscendState>)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AreStatesVisitedGeneral
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 219
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static bool AreStatesVisitedGeneral(IEnumerable<AscendState> states)
    parameters:
    - id: states
      type: System.Collections.Generic.IEnumerable{AscendState}
    return:
      type: System.Boolean
    content.vb: Public Shared Function AreStatesVisitedGeneral(states As IEnumerable(Of AscendState)) As Boolean
  overload: Global.StateManager.AreStatesVisitedGeneral*
  nameWithType.vb: StateManager.AreStatesVisitedGeneral(IEnumerable(Of AscendState))
  fullName.vb: StateManager.AreStatesVisitedGeneral(System.Collections.Generic.IEnumerable(Of AscendState))
  name.vb: AreStatesVisitedGeneral(IEnumerable(Of AscendState))
- uid: Global.StateManager.AreDependenciesMetGeneral(System.Collections.Generic.IEnumerable{AscendStateDependency})
  commentId: M:Global.StateManager.AreDependenciesMetGeneral(System.Collections.Generic.IEnumerable{AscendStateDependency})
  id: AreDependenciesMetGeneral(System.Collections.Generic.IEnumerable{AscendStateDependency})
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: AreDependenciesMetGeneral(IEnumerable<AscendStateDependency>)
  nameWithType: StateManager.AreDependenciesMetGeneral(IEnumerable<AscendStateDependency>)
  fullName: StateManager.AreDependenciesMetGeneral(System.Collections.Generic.IEnumerable<AscendStateDependency>)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AreDependenciesMetGeneral
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 227
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static bool AreDependenciesMetGeneral(IEnumerable<AscendStateDependency> dependencies)
    parameters:
    - id: dependencies
      type: System.Collections.Generic.IEnumerable{AscendStateDependency}
    return:
      type: System.Boolean
    content.vb: Public Shared Function AreDependenciesMetGeneral(dependencies As IEnumerable(Of AscendStateDependency)) As Boolean
  overload: Global.StateManager.AreDependenciesMetGeneral*
  nameWithType.vb: StateManager.AreDependenciesMetGeneral(IEnumerable(Of AscendStateDependency))
  fullName.vb: StateManager.AreDependenciesMetGeneral(System.Collections.Generic.IEnumerable(Of AscendStateDependency))
  name.vb: AreDependenciesMetGeneral(IEnumerable(Of AscendStateDependency))
- uid: Global.StateManager.RegisterConditionCallbackToOwner(AscendState,StateManager.StateManagerCallback)
  commentId: M:Global.StateManager.RegisterConditionCallbackToOwner(AscendState,StateManager.StateManagerCallback)
  id: RegisterConditionCallbackToOwner(AscendState,StateManager.StateManagerCallback)
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: RegisterConditionCallbackToOwner(AscendState, StateManagerCallback)
  nameWithType: StateManager.RegisterConditionCallbackToOwner(AscendState, StateManager.StateManagerCallback)
  fullName: StateManager.RegisterConditionCallbackToOwner(AscendState, StateManager.StateManagerCallback)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RegisterConditionCallbackToOwner
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 239
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void RegisterConditionCallbackToOwner(AscendState state, StateManager.StateManagerCallback callback)
    parameters:
    - id: state
      type: Global.AscendState
    - id: callback
      type: Global.StateManager.StateManagerCallback
    content.vb: Public Sub RegisterConditionCallbackToOwner(state As AscendState, callback As StateManager.StateManagerCallback)
  overload: Global.StateManager.RegisterConditionCallbackToOwner*
- uid: Global.StateManager.UnregisterConditionCallbackToOwner(AscendState,StateManager.StateManagerCallback)
  commentId: M:Global.StateManager.UnregisterConditionCallbackToOwner(AscendState,StateManager.StateManagerCallback)
  id: UnregisterConditionCallbackToOwner(AscendState,StateManager.StateManagerCallback)
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: UnregisterConditionCallbackToOwner(AscendState, StateManagerCallback)
  nameWithType: StateManager.UnregisterConditionCallbackToOwner(AscendState, StateManager.StateManagerCallback)
  fullName: StateManager.UnregisterConditionCallbackToOwner(AscendState, StateManager.StateManagerCallback)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UnregisterConditionCallbackToOwner
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 251
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void UnregisterConditionCallbackToOwner(AscendState state, StateManager.StateManagerCallback callback)
    parameters:
    - id: state
      type: Global.AscendState
    - id: callback
      type: Global.StateManager.StateManagerCallback
    content.vb: Public Sub UnregisterConditionCallbackToOwner(state As AscendState, callback As StateManager.StateManagerCallback)
  overload: Global.StateManager.UnregisterConditionCallbackToOwner*
- uid: Global.StateManager.LoadVisitedStates(System.Collections.Generic.List{StateManager.AscendStateInternal})
  commentId: M:Global.StateManager.LoadVisitedStates(System.Collections.Generic.List{StateManager.AscendStateInternal})
  id: LoadVisitedStates(System.Collections.Generic.List{StateManager.AscendStateInternal})
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: LoadVisitedStates(List<AscendStateInternal>)
  nameWithType: StateManager.LoadVisitedStates(List<StateManager.AscendStateInternal>)
  fullName: StateManager.LoadVisitedStates(System.Collections.Generic.List<StateManager.AscendStateInternal>)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LoadVisitedStates
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 271
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void LoadVisitedStates(List<StateManager.AscendStateInternal> states)
    parameters:
    - id: states
      type: System.Collections.Generic.List{StateManager.AscendStateInternal}
    content.vb: Public Sub LoadVisitedStates(states As List(Of StateManager.AscendStateInternal))
  overload: Global.StateManager.LoadVisitedStates*
  nameWithType.vb: StateManager.LoadVisitedStates(List(Of StateManager.AscendStateInternal))
  fullName.vb: StateManager.LoadVisitedStates(System.Collections.Generic.List(Of StateManager.AscendStateInternal))
  name.vb: LoadVisitedStates(List(Of AscendStateInternal))
- uid: Global.StateManager.PopulateWithVisitedStatesList(System.Collections.Generic.List{StateManager.AscendStateInternal})
  commentId: M:Global.StateManager.PopulateWithVisitedStatesList(System.Collections.Generic.List{StateManager.AscendStateInternal})
  id: PopulateWithVisitedStatesList(System.Collections.Generic.List{StateManager.AscendStateInternal})
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: PopulateWithVisitedStatesList(List<AscendStateInternal>)
  nameWithType: StateManager.PopulateWithVisitedStatesList(List<StateManager.AscendStateInternal>)
  fullName: StateManager.PopulateWithVisitedStatesList(System.Collections.Generic.List<StateManager.AscendStateInternal>)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PopulateWithVisitedStatesList
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 282
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void PopulateWithVisitedStatesList(List<StateManager.AscendStateInternal> states)
    parameters:
    - id: states
      type: System.Collections.Generic.List{StateManager.AscendStateInternal}
    content.vb: Public Sub PopulateWithVisitedStatesList(states As List(Of StateManager.AscendStateInternal))
  overload: Global.StateManager.PopulateWithVisitedStatesList*
  nameWithType.vb: StateManager.PopulateWithVisitedStatesList(List(Of StateManager.AscendStateInternal))
  fullName.vb: StateManager.PopulateWithVisitedStatesList(System.Collections.Generic.List(Of StateManager.AscendStateInternal))
  name.vb: PopulateWithVisitedStatesList(List(Of AscendStateInternal))
- uid: Global.StateManager.OnValidate
  commentId: M:Global.StateManager.OnValidate
  id: OnValidate
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: OnValidate()
  nameWithType: StateManager.OnValidate()
  fullName: StateManager.OnValidate()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnValidate
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 303
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void OnValidate()
    content.vb: Protected Sub OnValidate()
  overload: Global.StateManager.OnValidate*
- uid: Global.StateManager.ValidateStateIDs
  commentId: M:Global.StateManager.ValidateStateIDs
  id: ValidateStateIDs
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: ValidateStateIDs()
  nameWithType: StateManager.ValidateStateIDs()
  fullName: StateManager.ValidateStateIDs()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ValidateStateIDs
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 349
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void ValidateStateIDs()
    content.vb: Public Sub ValidateStateIDs()
  overload: Global.StateManager.ValidateStateIDs*
- uid: Global.StateManager.LoadObjectSaveData(StateManager.StateManagerSaveData)
  commentId: M:Global.StateManager.LoadObjectSaveData(StateManager.StateManagerSaveData)
  id: LoadObjectSaveData(StateManager.StateManagerSaveData)
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: LoadObjectSaveData(StateManagerSaveData)
  nameWithType: StateManager.LoadObjectSaveData(StateManager.StateManagerSaveData)
  fullName: StateManager.LoadObjectSaveData(StateManager.StateManagerSaveData)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LoadObjectSaveData
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 374
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool LoadObjectSaveData(StateManager.StateManagerSaveData data)
    parameters:
    - id: data
      type: Global.StateManager.StateManagerSaveData
    return:
      type: System.Boolean
    content.vb: Public Function LoadObjectSaveData(data As StateManager.StateManagerSaveData) As Boolean
  overload: Global.StateManager.LoadObjectSaveData*
  implements:
  - Global.ISavableObject{StateManager.StateManagerSaveData}.LoadObjectSaveData(StateManager.StateManagerSaveData)
- uid: Global.StateManager.GetObjectSaveData
  commentId: M:Global.StateManager.GetObjectSaveData
  id: GetObjectSaveData
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: GetObjectSaveData()
  nameWithType: StateManager.GetObjectSaveData()
  fullName: StateManager.GetObjectSaveData()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetObjectSaveData
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 386
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public StateManager.StateManagerSaveData GetObjectSaveData()
    return:
      type: Global.StateManager.StateManagerSaveData
    content.vb: Public Function GetObjectSaveData() As StateManager.StateManagerSaveData
  overload: Global.StateManager.GetObjectSaveData*
  implements:
  - Global.ISavableObject{StateManager.StateManagerSaveData}.GetObjectSaveData
- uid: Global.StateManager.OnPostLoadSaveFile
  commentId: M:Global.StateManager.OnPostLoadSaveFile
  id: OnPostLoadSaveFile
  parent: Global.StateManager
  langs:
  - csharp
  - vb
  name: OnPostLoadSaveFile()
  nameWithType: StateManager.OnPostLoadSaveFile()
  fullName: StateManager.OnPostLoadSaveFile()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/GameState/StateManager.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnPostLoadSaveFile
    path: ../Assets/Objects & Components/GameState/StateManager.cs
    startLine: 394
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void OnPostLoadSaveFile()
    content.vb: Public Sub OnPostLoadSaveFile()
  overload: Global.StateManager.OnPostLoadSaveFile*
  implements:
  - Global.ISavableObject{StateManager.StateManagerSaveData}.OnPostLoadSaveFile
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Global.ISavableObject{StateManager.StateManagerSaveData}
  commentId: T:Global.ISavableObject{StateManager.StateManagerSaveData}
  definition: Global.ISavableObject`1
  name: ISavableObject<StateManager.StateManagerSaveData>
  nameWithType: ISavableObject<StateManager.StateManagerSaveData>
  fullName: ISavableObject<StateManager.StateManagerSaveData>
  nameWithType.vb: ISavableObject(Of StateManager.StateManagerSaveData)
  fullName.vb: ISavableObject(Of StateManager.StateManagerSaveData)
  name.vb: ISavableObject(Of StateManager.StateManagerSaveData)
  spec.csharp:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: <
  - uid: Global.StateManager
    name: StateManager
  - name: .
  - uid: Global.StateManager.StateManagerSaveData
    name: StateManagerSaveData
  - name: '>'
  spec.vb:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: (
  - name: Of
  - name: " "
  - uid: Global.StateManager
    name: StateManager
  - name: .
  - uid: Global.StateManager.StateManagerSaveData
    name: StateManagerSaveData
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ISavableObject`1
  commentId: T:Global.ISavableObject`1
  name: ISavableObject<T>
  nameWithType: ISavableObject<T>
  fullName: ISavableObject<T>
  nameWithType.vb: ISavableObject(Of T)
  fullName.vb: ISavableObject(Of T)
  name.vb: ISavableObject(Of T)
  spec.csharp:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.StateManager.AscendStateInternal[]
  isExternal: true
  name: AscendStateInternal[]
  nameWithType: StateManager.AscendStateInternal[]
  fullName: StateManager.AscendStateInternal[]
  nameWithType.vb: StateManager.AscendStateInternal()
  fullName.vb: StateManager.AscendStateInternal()
  name.vb: AscendStateInternal()
  spec.csharp:
  - uid: Global.StateManager.AscendStateInternal
    name: AscendStateInternal
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.StateManager.AscendStateInternal
    name: AscendStateInternal
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.List{StateManager.AscendStateInternal}
  commentId: T:System.Collections.Generic.List{StateManager.AscendStateInternal}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<StateManager.AscendStateInternal>
  nameWithType: List<StateManager.AscendStateInternal>
  fullName: System.Collections.Generic.List<StateManager.AscendStateInternal>
  nameWithType.vb: List(Of StateManager.AscendStateInternal)
  fullName.vb: System.Collections.Generic.List(Of StateManager.AscendStateInternal)
  name.vb: List(Of StateManager.AscendStateInternal)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.StateManager
    name: StateManager
  - name: .
  - uid: Global.StateManager.AscendStateInternal
    name: AscendStateInternal
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.StateManager
    name: StateManager
  - name: .
  - uid: Global.StateManager.AscendStateInternal
    name: AscendStateInternal
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: System.Collections.Generic.HashSet{AscendState}
  commentId: T:System.Collections.Generic.HashSet{AscendState}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<AscendState>
  nameWithType: HashSet<AscendState>
  fullName: System.Collections.Generic.HashSet<AscendState>
  nameWithType.vb: HashSet(Of AscendState)
  fullName.vb: System.Collections.Generic.HashSet(Of AscendState)
  name.vb: HashSet(Of AscendState)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
  - name: <
  - uid: Global.AscendState
    name: AscendState
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.AscendState
    name: AscendState
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.StateManager.Awake*
  commentId: Overload:Global.StateManager.Awake
  name: Awake
  nameWithType: StateManager.Awake
  fullName: StateManager.Awake
- uid: Global.StateManager.SetupStateHierarchyReferences*
  commentId: Overload:Global.StateManager.SetupStateHierarchyReferences
  name: SetupStateHierarchyReferences
  nameWithType: StateManager.SetupStateHierarchyReferences
  fullName: StateManager.SetupStateHierarchyReferences
- uid: Global.StateManager.GetAccessibleStateList*
  commentId: Overload:Global.StateManager.GetAccessibleStateList
  name: GetAccessibleStateList
  nameWithType: StateManager.GetAccessibleStateList
  fullName: StateManager.GetAccessibleStateList
- uid: System.Collections.Generic.List{AscendState}
  commentId: T:System.Collections.Generic.List{AscendState}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<AscendState>
  nameWithType: List<AscendState>
  fullName: System.Collections.Generic.List<AscendState>
  nameWithType.vb: List(Of AscendState)
  fullName.vb: System.Collections.Generic.List(Of AscendState)
  name.vb: List(Of AscendState)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.AscendState
    name: AscendState
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.AscendState
    name: AscendState
  - name: )
- uid: Global.StateManager.GetAccessibleStateListInternal*
  commentId: Overload:Global.StateManager.GetAccessibleStateListInternal
  name: GetAccessibleStateListInternal
  nameWithType: StateManager.GetAccessibleStateListInternal
  fullName: StateManager.GetAccessibleStateListInternal
- uid: Global.StateManager.AccessibleStatesContains*
  commentId: Overload:Global.StateManager.AccessibleStatesContains
  name: AccessibleStatesContains
  nameWithType: StateManager.AccessibleStatesContains
  fullName: StateManager.AccessibleStatesContains
- uid: Global.AscendState
  commentId: T:Global.AscendState
  name: AscendState
  nameWithType: AscendState
  fullName: AscendState
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.StateManager.OwnedStatesContains*
  commentId: Overload:Global.StateManager.OwnedStatesContains
  name: OwnedStatesContains
  nameWithType: StateManager.OwnedStatesContains
  fullName: StateManager.OwnedStatesContains
- uid: Global.StateManager.GetOwnedStatesList*
  commentId: Overload:Global.StateManager.GetOwnedStatesList
  name: GetOwnedStatesList
  nameWithType: StateManager.GetOwnedStatesList
  fullName: StateManager.GetOwnedStatesList
- uid: Global.StateManager.AddOwnedStatesToListInternal*
  commentId: Overload:Global.StateManager.AddOwnedStatesToListInternal
  name: AddOwnedStatesToListInternal
  nameWithType: StateManager.AddOwnedStatesToListInternal
  fullName: StateManager.AddOwnedStatesToListInternal
- uid: Global.StateManager.AddOwnedStatesToList*
  commentId: Overload:Global.StateManager.AddOwnedStatesToList
  name: AddOwnedStatesToList
  nameWithType: StateManager.AddOwnedStatesToList
  fullName: StateManager.AddOwnedStatesToList
- uid: Global.StateManager.IsStateVisited*
  commentId: Overload:Global.StateManager.IsStateVisited
  name: IsStateVisited
  nameWithType: StateManager.IsStateVisited
  fullName: StateManager.IsStateVisited
- uid: Global.StateManager.AreStatesVisited*
  commentId: Overload:Global.StateManager.AreStatesVisited
  name: AreStatesVisited
  nameWithType: StateManager.AreStatesVisited
  fullName: StateManager.AreStatesVisited
- uid: Global.AscendState[]
  isExternal: true
  name: AscendState[]
  nameWithType: AscendState[]
  fullName: AscendState[]
  nameWithType.vb: AscendState()
  fullName.vb: AscendState()
  name.vb: AscendState()
  spec.csharp:
  - uid: Global.AscendState
    name: AscendState
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.AscendState
    name: AscendState
  - name: (
  - name: )
- uid: Global.StateManager.VisitStates*
  commentId: Overload:Global.StateManager.VisitStates
  name: VisitStates
  nameWithType: StateManager.VisitStates
  fullName: StateManager.VisitStates
- uid: System.Collections.Generic.IEnumerable{AscendState}
  commentId: T:System.Collections.Generic.IEnumerable{AscendState}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<AscendState>
  nameWithType: IEnumerable<AscendState>
  fullName: System.Collections.Generic.IEnumerable<AscendState>
  nameWithType.vb: IEnumerable(Of AscendState)
  fullName.vb: System.Collections.Generic.IEnumerable(Of AscendState)
  name.vb: IEnumerable(Of AscendState)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - uid: Global.AscendState
    name: AscendState
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.AscendState
    name: AscendState
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.StateManager.VisitState*
  commentId: Overload:Global.StateManager.VisitState
  name: VisitState
  nameWithType: StateManager.VisitState
  fullName: StateManager.VisitState
- uid: Global.StateManager.VisitStateGeneral*
  commentId: Overload:Global.StateManager.VisitStateGeneral
  name: VisitStateGeneral
  nameWithType: StateManager.VisitStateGeneral
  fullName: StateManager.VisitStateGeneral
- uid: Global.StateManager.VisitStatesGeneral*
  commentId: Overload:Global.StateManager.VisitStatesGeneral
  name: VisitStatesGeneral
  nameWithType: StateManager.VisitStatesGeneral
  fullName: StateManager.VisitStatesGeneral
- uid: Global.StateManager.IsDependencyMetGeneral*
  commentId: Overload:Global.StateManager.IsDependencyMetGeneral
  name: IsDependencyMetGeneral
  nameWithType: StateManager.IsDependencyMetGeneral
  fullName: StateManager.IsDependencyMetGeneral
- uid: Global.StateManager.AreStatesVisitedGeneral*
  commentId: Overload:Global.StateManager.AreStatesVisitedGeneral
  name: AreStatesVisitedGeneral
  nameWithType: StateManager.AreStatesVisitedGeneral
  fullName: StateManager.AreStatesVisitedGeneral
- uid: Global.StateManager.AreDependenciesMetGeneral*
  commentId: Overload:Global.StateManager.AreDependenciesMetGeneral
  name: AreDependenciesMetGeneral
  nameWithType: StateManager.AreDependenciesMetGeneral
  fullName: StateManager.AreDependenciesMetGeneral
- uid: System.Collections.Generic.IEnumerable{AscendStateDependency}
  commentId: T:System.Collections.Generic.IEnumerable{AscendStateDependency}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<AscendStateDependency>
  nameWithType: IEnumerable<AscendStateDependency>
  fullName: System.Collections.Generic.IEnumerable<AscendStateDependency>
  nameWithType.vb: IEnumerable(Of AscendStateDependency)
  fullName.vb: System.Collections.Generic.IEnumerable(Of AscendStateDependency)
  name.vb: IEnumerable(Of AscendStateDependency)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - uid: Global.AscendStateDependency
    name: AscendStateDependency
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.AscendStateDependency
    name: AscendStateDependency
  - name: )
- uid: Global.StateManager.RegisterConditionCallbackToOwner*
  commentId: Overload:Global.StateManager.RegisterConditionCallbackToOwner
  name: RegisterConditionCallbackToOwner
  nameWithType: StateManager.RegisterConditionCallbackToOwner
  fullName: StateManager.RegisterConditionCallbackToOwner
- uid: Global.StateManager.StateManagerCallback
  commentId: T:Global.StateManager.StateManagerCallback
  name: StateManager.StateManagerCallback
  nameWithType: StateManager.StateManagerCallback
  fullName: StateManager.StateManagerCallback
  spec.csharp:
  - uid: Global.StateManager
    name: StateManager
  - name: .
  - uid: Global.StateManager.StateManagerCallback
    name: StateManagerCallback
  spec.vb:
  - uid: Global.StateManager
    name: StateManager
  - name: .
  - uid: Global.StateManager.StateManagerCallback
    name: StateManagerCallback
- uid: Global.StateManager.UnregisterConditionCallbackToOwner*
  commentId: Overload:Global.StateManager.UnregisterConditionCallbackToOwner
  name: UnregisterConditionCallbackToOwner
  nameWithType: StateManager.UnregisterConditionCallbackToOwner
  fullName: StateManager.UnregisterConditionCallbackToOwner
- uid: Global.StateManager.LoadVisitedStates*
  commentId: Overload:Global.StateManager.LoadVisitedStates
  name: LoadVisitedStates
  nameWithType: StateManager.LoadVisitedStates
  fullName: StateManager.LoadVisitedStates
- uid: Global.StateManager.PopulateWithVisitedStatesList*
  commentId: Overload:Global.StateManager.PopulateWithVisitedStatesList
  name: PopulateWithVisitedStatesList
  nameWithType: StateManager.PopulateWithVisitedStatesList
  fullName: StateManager.PopulateWithVisitedStatesList
- uid: Global.StateManager.OnValidate*
  commentId: Overload:Global.StateManager.OnValidate
  name: OnValidate
  nameWithType: StateManager.OnValidate
  fullName: StateManager.OnValidate
- uid: Global.StateManager.ValidateStateIDs*
  commentId: Overload:Global.StateManager.ValidateStateIDs
  name: ValidateStateIDs
  nameWithType: StateManager.ValidateStateIDs
  fullName: StateManager.ValidateStateIDs
- uid: Global.StateManager.LoadObjectSaveData*
  commentId: Overload:Global.StateManager.LoadObjectSaveData
  name: LoadObjectSaveData
  nameWithType: StateManager.LoadObjectSaveData
  fullName: StateManager.LoadObjectSaveData
- uid: Global.ISavableObject{StateManager.StateManagerSaveData}.LoadObjectSaveData(StateManager.StateManagerSaveData)
  commentId: M:Global.ISavableObject{StateManager.StateManagerSaveData}.LoadObjectSaveData(StateManager.StateManagerSaveData)
  parent: Global.ISavableObject{StateManager.StateManagerSaveData}
  definition: Global.ISavableObject`1.LoadObjectSaveData(`0)
  name: LoadObjectSaveData(StateManagerSaveData)
  nameWithType: ISavableObject<StateManager.StateManagerSaveData>.LoadObjectSaveData(StateManager.StateManagerSaveData)
  fullName: ISavableObject<StateManager.StateManagerSaveData>.LoadObjectSaveData(StateManager.StateManagerSaveData)
  nameWithType.vb: ISavableObject(Of StateManager.StateManagerSaveData).LoadObjectSaveData(StateManager.StateManagerSaveData)
  fullName.vb: ISavableObject(Of StateManager.StateManagerSaveData).LoadObjectSaveData(StateManager.StateManagerSaveData)
  spec.csharp:
  - uid: Global.ISavableObject{StateManager.StateManagerSaveData}.LoadObjectSaveData(StateManager.StateManagerSaveData)
    name: LoadObjectSaveData
  - name: (
  - uid: Global.StateManager.StateManagerSaveData
    name: StateManagerSaveData
  - name: )
  spec.vb:
  - uid: Global.ISavableObject{StateManager.StateManagerSaveData}.LoadObjectSaveData(StateManager.StateManagerSaveData)
    name: LoadObjectSaveData
  - name: (
  - uid: Global.StateManager.StateManagerSaveData
    name: StateManagerSaveData
  - name: )
- uid: Global.StateManager.StateManagerSaveData
  commentId: T:Global.StateManager.StateManagerSaveData
  name: StateManager.StateManagerSaveData
  nameWithType: StateManager.StateManagerSaveData
  fullName: StateManager.StateManagerSaveData
  spec.csharp:
  - uid: Global.StateManager
    name: StateManager
  - name: .
  - uid: Global.StateManager.StateManagerSaveData
    name: StateManagerSaveData
  spec.vb:
  - uid: Global.StateManager
    name: StateManager
  - name: .
  - uid: Global.StateManager.StateManagerSaveData
    name: StateManagerSaveData
- uid: Global.ISavableObject`1.LoadObjectSaveData(`0)
  commentId: M:Global.ISavableObject`1.LoadObjectSaveData(`0)
  name: LoadObjectSaveData(T)
  nameWithType: ISavableObject<T>.LoadObjectSaveData(T)
  fullName: ISavableObject<T>.LoadObjectSaveData(T)
  nameWithType.vb: ISavableObject(Of T).LoadObjectSaveData(T)
  fullName.vb: ISavableObject(Of T).LoadObjectSaveData(T)
  spec.csharp:
  - uid: Global.ISavableObject`1.LoadObjectSaveData(`0)
    name: LoadObjectSaveData
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Global.ISavableObject`1.LoadObjectSaveData(`0)
    name: LoadObjectSaveData
  - name: (
  - name: T
  - name: )
- uid: Global.StateManager.GetObjectSaveData*
  commentId: Overload:Global.StateManager.GetObjectSaveData
  name: GetObjectSaveData
  nameWithType: StateManager.GetObjectSaveData
  fullName: StateManager.GetObjectSaveData
- uid: Global.ISavableObject{StateManager.StateManagerSaveData}.GetObjectSaveData
  commentId: M:Global.ISavableObject{StateManager.StateManagerSaveData}.GetObjectSaveData
  parent: Global.ISavableObject{StateManager.StateManagerSaveData}
  definition: Global.ISavableObject`1.GetObjectSaveData
  name: GetObjectSaveData()
  nameWithType: ISavableObject<StateManager.StateManagerSaveData>.GetObjectSaveData()
  fullName: ISavableObject<StateManager.StateManagerSaveData>.GetObjectSaveData()
  nameWithType.vb: ISavableObject(Of StateManager.StateManagerSaveData).GetObjectSaveData()
  fullName.vb: ISavableObject(Of StateManager.StateManagerSaveData).GetObjectSaveData()
  spec.csharp:
  - uid: Global.ISavableObject{StateManager.StateManagerSaveData}.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ISavableObject{StateManager.StateManagerSaveData}.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
- uid: Global.ISavableObject`1.GetObjectSaveData
  commentId: M:Global.ISavableObject`1.GetObjectSaveData
  name: GetObjectSaveData()
  nameWithType: ISavableObject<T>.GetObjectSaveData()
  fullName: ISavableObject<T>.GetObjectSaveData()
  nameWithType.vb: ISavableObject(Of T).GetObjectSaveData()
  fullName.vb: ISavableObject(Of T).GetObjectSaveData()
  spec.csharp:
  - uid: Global.ISavableObject`1.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ISavableObject`1.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
- uid: Global.StateManager.OnPostLoadSaveFile*
  commentId: Overload:Global.StateManager.OnPostLoadSaveFile
  name: OnPostLoadSaveFile
  nameWithType: StateManager.OnPostLoadSaveFile
  fullName: StateManager.OnPostLoadSaveFile
- uid: Global.ISavableObject{StateManager.StateManagerSaveData}.OnPostLoadSaveFile
  commentId: M:Global.ISavableObject{StateManager.StateManagerSaveData}.OnPostLoadSaveFile
  parent: Global.ISavableObject{StateManager.StateManagerSaveData}
  definition: Global.ISavableObject`1.OnPostLoadSaveFile
  name: OnPostLoadSaveFile()
  nameWithType: ISavableObject<StateManager.StateManagerSaveData>.OnPostLoadSaveFile()
  fullName: ISavableObject<StateManager.StateManagerSaveData>.OnPostLoadSaveFile()
  nameWithType.vb: ISavableObject(Of StateManager.StateManagerSaveData).OnPostLoadSaveFile()
  fullName.vb: ISavableObject(Of StateManager.StateManagerSaveData).OnPostLoadSaveFile()
  spec.csharp:
  - uid: Global.ISavableObject{StateManager.StateManagerSaveData}.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ISavableObject{StateManager.StateManagerSaveData}.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
- uid: Global.ISavableObject`1.OnPostLoadSaveFile
  commentId: M:Global.ISavableObject`1.OnPostLoadSaveFile
  name: OnPostLoadSaveFile()
  nameWithType: ISavableObject<T>.OnPostLoadSaveFile()
  fullName: ISavableObject<T>.OnPostLoadSaveFile()
  nameWithType.vb: ISavableObject(Of T).OnPostLoadSaveFile()
  fullName.vb: ISavableObject(Of T).OnPostLoadSaveFile()
  spec.csharp:
  - uid: Global.ISavableObject`1.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ISavableObject`1.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
