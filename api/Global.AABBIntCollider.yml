### YamlMime:ManagedReference
items:
- uid: Global.AABBIntCollider
  commentId: T:Global.AABBIntCollider
  id: AABBIntCollider
  parent: Global
  children:
  - Global.AABBIntCollider.Bottom
  - Global.AABBIntCollider.ContainsAABB(AABBIntCollider,UnityEngine.Vector2Int,System.Boolean)
  - Global.AABBIntCollider.ContainsBoundsInt(UnityEngine.BoundsInt,UnityEngine.Vector2Int,System.Boolean)
  - Global.AABBIntCollider.ContainsPoint(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  - Global.AABBIntCollider.ContainsPoint(UnityEngine.Vector2Int)
  - Global.AABBIntCollider.DrawGizmos(UnityEngine.Color)
  - Global.AABBIntCollider.GetBounds
  - Global.AABBIntCollider.GetOutlineRays
  - Global.AABBIntCollider.GetOutlineRays(UnityEngine.Vector2Int)
  - Global.AABBIntCollider.GetOverlappingRegion(AABBIntCollider,UnityEngine.Vector2Int)
  - Global.AABBIntCollider.GetOverlappingRegion(UnityEngine.RectInt,UnityEngine.RectInt)
  - Global.AABBIntCollider.GetRayIntersection(IntRay,UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  - Global.AABBIntCollider.GetRayIntersection(IntRay)
  - Global.AABBIntCollider.GetRidingTangent(AABBIntCollider,UnityEngine.Vector2Int)
  - Global.AABBIntCollider.Left
  - Global.AABBIntCollider.LocalCenter
  - Global.AABBIntCollider.max
  - Global.AABBIntCollider.min
  - Global.AABBIntCollider.OverlapsAABB(AABBIntCollider,UnityEngine.Vector2Int)
  - Global.AABBIntCollider.OverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2)
  - Global.AABBIntCollider.OverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2Int)
  - Global.AABBIntCollider.OverlapsCircle(CircleIntCollider,UnityEngine.Vector2Int)
  - Global.AABBIntCollider.OverlapsEdge(EdgeIntCollider,UnityEngine.Vector2Int)
  - Global.AABBIntCollider.OverlapsTile(UnityEngine.Tilemaps.Tilemap,UnityEngine.Vector3Int,UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  - Global.AABBIntCollider.OverlapsTile(UnityEngine.Tilemaps.Tilemap,UnityEngine.Vector3Int)
  - Global.AABBIntCollider.OverlapsTilemap(TilemapIntCollider,UnityEngine.Vector2Int)
  - Global.AABBIntCollider.RepairMinMax
  - Global.AABBIntCollider.Right
  - Global.AABBIntCollider.Size
  - Global.AABBIntCollider.Top
  - Global.AABBIntCollider.WorldCenter
  - Global.AABBIntCollider.WorldMax
  - Global.AABBIntCollider.WorldMin
  langs:
  - csharp
  - vb
  name: AABBIntCollider
  nameWithType: AABBIntCollider
  fullName: AABBIntCollider
  type: Class
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AABBIntCollider
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class AABBIntCollider : IntCollider'
    content.vb: Public Class AABBIntCollider Inherits IntCollider
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - Global.IntCollider
  inheritedMembers:
  - Global.IntCollider.DisableGizmos
  - Global.IntCollider.AlwaysDrawGizmos
  - Global.IntCollider.OneWayInteraction
  - Global.IntCollider.Position
  - Global.IntCollider.GetPosition
  - Global.IntCollider.SetPosition(UnityEngine.Vector2Int)
  - Global.IntCollider.IsCollidable
  - Global.IntCollider.Overlaps(IntCollider)
  - Global.IntCollider.Overlaps(IntCollider,UnityEngine.Vector2Int)
  - Global.IntCollider.OverlapsDummyCollider(DummyIntCollider,UnityEngine.Vector2Int)
  - Global.IntCollider.OverlapsBounds(UnityEngine.BoundsInt)
  - Global.IntCollider.OverlapsComposite(CompositeIntCollider,UnityEngine.Vector2Int)
  - Global.IntCollider.Intersects(IntRay)
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.AABBIntCollider.min
  commentId: F:Global.AABBIntCollider.min
  id: min
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: min
  nameWithType: AABBIntCollider.min
  fullName: AABBIntCollider.min
  type: Field
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: min
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2Int min
    return:
      type: UnityEngine.Vector2Int
    content.vb: Public min As Vector2Int
- uid: Global.AABBIntCollider.max
  commentId: F:Global.AABBIntCollider.max
  id: max
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: max
  nameWithType: AABBIntCollider.max
  fullName: AABBIntCollider.max
  type: Field
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: max
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2Int max
    return:
      type: UnityEngine.Vector2Int
    content.vb: Public max As Vector2Int
- uid: Global.AABBIntCollider.WorldMin
  commentId: P:Global.AABBIntCollider.WorldMin
  id: WorldMin
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: WorldMin
  nameWithType: AABBIntCollider.WorldMin
  fullName: AABBIntCollider.WorldMin
  type: Property
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WorldMin
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2Int WorldMin { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2Int
    content.vb: Public ReadOnly Property WorldMin As Vector2Int
  overload: Global.AABBIntCollider.WorldMin*
- uid: Global.AABBIntCollider.WorldMax
  commentId: P:Global.AABBIntCollider.WorldMax
  id: WorldMax
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: WorldMax
  nameWithType: AABBIntCollider.WorldMax
  fullName: AABBIntCollider.WorldMax
  type: Property
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WorldMax
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2Int WorldMax { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2Int
    content.vb: Public ReadOnly Property WorldMax As Vector2Int
  overload: Global.AABBIntCollider.WorldMax*
- uid: Global.AABBIntCollider.Top
  commentId: P:Global.AABBIntCollider.Top
  id: Top
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: Top
  nameWithType: AABBIntCollider.Top
  fullName: AABBIntCollider.Top
  type: Property
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Top
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int Top { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Top As Integer
  overload: Global.AABBIntCollider.Top*
- uid: Global.AABBIntCollider.Bottom
  commentId: P:Global.AABBIntCollider.Bottom
  id: Bottom
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: Bottom
  nameWithType: AABBIntCollider.Bottom
  fullName: AABBIntCollider.Bottom
  type: Property
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Bottom
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int Bottom { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Bottom As Integer
  overload: Global.AABBIntCollider.Bottom*
- uid: Global.AABBIntCollider.Left
  commentId: P:Global.AABBIntCollider.Left
  id: Left
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: AABBIntCollider.Left
  fullName: AABBIntCollider.Left
  type: Property
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Left
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int Left { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Left As Integer
  overload: Global.AABBIntCollider.Left*
- uid: Global.AABBIntCollider.Right
  commentId: P:Global.AABBIntCollider.Right
  id: Right
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: AABBIntCollider.Right
  fullName: AABBIntCollider.Right
  type: Property
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Right
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 20
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int Right { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Right As Integer
  overload: Global.AABBIntCollider.Right*
- uid: Global.AABBIntCollider.LocalCenter
  commentId: P:Global.AABBIntCollider.LocalCenter
  id: LocalCenter
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: LocalCenter
  nameWithType: AABBIntCollider.LocalCenter
  fullName: AABBIntCollider.LocalCenter
  type: Property
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LocalCenter
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2 LocalCenter { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property LocalCenter As Vector2
  overload: Global.AABBIntCollider.LocalCenter*
- uid: Global.AABBIntCollider.WorldCenter
  commentId: P:Global.AABBIntCollider.WorldCenter
  id: WorldCenter
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: WorldCenter
  nameWithType: AABBIntCollider.WorldCenter
  fullName: AABBIntCollider.WorldCenter
  type: Property
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WorldCenter
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2 WorldCenter { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property WorldCenter As Vector2
  overload: Global.AABBIntCollider.WorldCenter*
- uid: Global.AABBIntCollider.Size
  commentId: P:Global.AABBIntCollider.Size
  id: Size
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: AABBIntCollider.Size
  fullName: AABBIntCollider.Size
  type: Property
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Size
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 26
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2Int Size { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2Int
    content.vb: Public ReadOnly Property Size As Vector2Int
  overload: Global.AABBIntCollider.Size*
- uid: Global.AABBIntCollider.OverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2)
  commentId: M:Global.AABBIntCollider.OverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2)
  id: OverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2)
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: OverlapsBounds(BoundsInt, Vector2)
  nameWithType: AABBIntCollider.OverlapsBounds(BoundsInt, Vector2)
  fullName: AABBIntCollider.OverlapsBounds(UnityEngine.BoundsInt, UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OverlapsBounds
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 31
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool OverlapsBounds(BoundsInt other, Vector2 dPos)
    parameters:
    - id: other
      type: UnityEngine.BoundsInt
    - id: dPos
      type: UnityEngine.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function OverlapsBounds(other As BoundsInt, dPos As Vector2) As Boolean
  overload: Global.AABBIntCollider.OverlapsBounds*
- uid: Global.AABBIntCollider.GetOutlineRays
  commentId: M:Global.AABBIntCollider.GetOutlineRays
  id: GetOutlineRays
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: GetOutlineRays()
  nameWithType: AABBIntCollider.GetOutlineRays()
  fullName: AABBIntCollider.GetOutlineRays()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetOutlineRays
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 39
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public List<IntRay> GetOutlineRays()
    return:
      type: System.Collections.Generic.List{IntRay}
    content.vb: Public Function GetOutlineRays() As List(Of IntRay)
  overload: Global.AABBIntCollider.GetOutlineRays*
- uid: Global.AABBIntCollider.GetOutlineRays(UnityEngine.Vector2Int)
  commentId: M:Global.AABBIntCollider.GetOutlineRays(UnityEngine.Vector2Int)
  id: GetOutlineRays(UnityEngine.Vector2Int)
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: GetOutlineRays(Vector2Int)
  nameWithType: AABBIntCollider.GetOutlineRays(Vector2Int)
  fullName: AABBIntCollider.GetOutlineRays(UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetOutlineRays
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 44
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public List<IntRay> GetOutlineRays(Vector2Int dPos)
    parameters:
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: System.Collections.Generic.List{IntRay}
    content.vb: Public Function GetOutlineRays(dPos As Vector2Int) As List(Of IntRay)
  overload: Global.AABBIntCollider.GetOutlineRays*
- uid: Global.AABBIntCollider.OverlapsTile(UnityEngine.Tilemaps.Tilemap,UnityEngine.Vector3Int)
  commentId: M:Global.AABBIntCollider.OverlapsTile(UnityEngine.Tilemaps.Tilemap,UnityEngine.Vector3Int)
  id: OverlapsTile(UnityEngine.Tilemaps.Tilemap,UnityEngine.Vector3Int)
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: OverlapsTile(Tilemap, Vector3Int)
  nameWithType: AABBIntCollider.OverlapsTile(Tilemap, Vector3Int)
  fullName: AABBIntCollider.OverlapsTile(UnityEngine.Tilemaps.Tilemap, UnityEngine.Vector3Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OverlapsTile
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 78
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool OverlapsTile(Tilemap map, Vector3Int index)
    parameters:
    - id: map
      type: UnityEngine.Tilemaps.Tilemap
    - id: index
      type: UnityEngine.Vector3Int
    return:
      type: System.Boolean
    content.vb: Public Function OverlapsTile(map As Tilemap, index As Vector3Int) As Boolean
  overload: Global.AABBIntCollider.OverlapsTile*
- uid: Global.AABBIntCollider.OverlapsTile(UnityEngine.Tilemaps.Tilemap,UnityEngine.Vector3Int,UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  commentId: M:Global.AABBIntCollider.OverlapsTile(UnityEngine.Tilemaps.Tilemap,UnityEngine.Vector3Int,UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  id: OverlapsTile(UnityEngine.Tilemaps.Tilemap,UnityEngine.Vector3Int,UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: OverlapsTile(Tilemap, Vector3Int, Vector2Int, Vector2Int)
  nameWithType: AABBIntCollider.OverlapsTile(Tilemap, Vector3Int, Vector2Int, Vector2Int)
  fullName: AABBIntCollider.OverlapsTile(UnityEngine.Tilemaps.Tilemap, UnityEngine.Vector3Int, UnityEngine.Vector2Int, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OverlapsTile
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 85
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool OverlapsTile(Tilemap map, Vector3Int index, Vector2Int dPos0, Vector2Int dPos1)
    parameters:
    - id: map
      type: UnityEngine.Tilemaps.Tilemap
    - id: index
      type: UnityEngine.Vector3Int
    - id: dPos0
      type: UnityEngine.Vector2Int
    - id: dPos1
      type: UnityEngine.Vector2Int
    return:
      type: System.Boolean
    content.vb: Public Function OverlapsTile(map As Tilemap, index As Vector3Int, dPos0 As Vector2Int, dPos1 As Vector2Int) As Boolean
  overload: Global.AABBIntCollider.OverlapsTile*
- uid: Global.AABBIntCollider.ContainsAABB(AABBIntCollider,UnityEngine.Vector2Int,System.Boolean)
  commentId: M:Global.AABBIntCollider.ContainsAABB(AABBIntCollider,UnityEngine.Vector2Int,System.Boolean)
  id: ContainsAABB(AABBIntCollider,UnityEngine.Vector2Int,System.Boolean)
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: ContainsAABB(AABBIntCollider, Vector2Int, bool)
  nameWithType: AABBIntCollider.ContainsAABB(AABBIntCollider, Vector2Int, bool)
  fullName: AABBIntCollider.ContainsAABB(AABBIntCollider, UnityEngine.Vector2Int, bool)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ContainsAABB
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 101
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nDetermine whether an AABB in entirely contained within this AABB collider.\n"
  example: []
  syntax:
    content: public bool ContainsAABB(AABBIntCollider collider, Vector2Int dPos, bool inclusive = false)
    parameters:
    - id: collider
      type: Global.AABBIntCollider
      description: AABB collider
    - id: dPos
      type: UnityEngine.Vector2Int
      description: Change in position of this current class&apos;s object
    - id: inclusive
      type: System.Boolean
      description: If inclusive, colliders that share the same line are considered contained. Defaults to exclusive
    return:
      type: System.Boolean
      description: True if the collider is contained
    content.vb: Public Function ContainsAABB(collider As AABBIntCollider, dPos As Vector2Int, inclusive As Boolean = False) As Boolean
  overload: Global.AABBIntCollider.ContainsAABB*
  nameWithType.vb: AABBIntCollider.ContainsAABB(AABBIntCollider, Vector2Int, Boolean)
  fullName.vb: AABBIntCollider.ContainsAABB(AABBIntCollider, UnityEngine.Vector2Int, Boolean)
  name.vb: ContainsAABB(AABBIntCollider, Vector2Int, Boolean)
- uid: Global.AABBIntCollider.ContainsBoundsInt(UnityEngine.BoundsInt,UnityEngine.Vector2Int,System.Boolean)
  commentId: M:Global.AABBIntCollider.ContainsBoundsInt(UnityEngine.BoundsInt,UnityEngine.Vector2Int,System.Boolean)
  id: ContainsBoundsInt(UnityEngine.BoundsInt,UnityEngine.Vector2Int,System.Boolean)
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: ContainsBoundsInt(BoundsInt, Vector2Int, bool)
  nameWithType: AABBIntCollider.ContainsBoundsInt(BoundsInt, Vector2Int, bool)
  fullName: AABBIntCollider.ContainsBoundsInt(UnityEngine.BoundsInt, UnityEngine.Vector2Int, bool)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ContainsBoundsInt
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 115
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nDetermine whether an AABB in entirely contained within this AABB collider.\n"
  example: []
  syntax:
    content: public bool ContainsBoundsInt(BoundsInt bounds, Vector2Int dPos, bool inclusive = false)
    parameters:
    - id: bounds
      type: UnityEngine.BoundsInt
      description: BoundsInt of the rectangle
    - id: dPos
      type: UnityEngine.Vector2Int
      description: Change in position of this current class&apos;s object
    - id: inclusive
      type: System.Boolean
      description: If inclusive, colliders that share the same line are considered contained. Defaults to exclusive
    return:
      type: System.Boolean
      description: True if the collider is contained
    content.vb: Public Function ContainsBoundsInt(bounds As BoundsInt, dPos As Vector2Int, inclusive As Boolean = False) As Boolean
  overload: Global.AABBIntCollider.ContainsBoundsInt*
  nameWithType.vb: AABBIntCollider.ContainsBoundsInt(BoundsInt, Vector2Int, Boolean)
  fullName.vb: AABBIntCollider.ContainsBoundsInt(UnityEngine.BoundsInt, UnityEngine.Vector2Int, Boolean)
  name.vb: ContainsBoundsInt(BoundsInt, Vector2Int, Boolean)
- uid: Global.AABBIntCollider.ContainsPoint(UnityEngine.Vector2Int)
  commentId: M:Global.AABBIntCollider.ContainsPoint(UnityEngine.Vector2Int)
  id: ContainsPoint(UnityEngine.Vector2Int)
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: ContainsPoint(Vector2Int)
  nameWithType: AABBIntCollider.ContainsPoint(Vector2Int)
  fullName: AABBIntCollider.ContainsPoint(UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ContainsPoint
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 122
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override bool ContainsPoint(Vector2Int point)
    parameters:
    - id: point
      type: UnityEngine.Vector2Int
    return:
      type: System.Boolean
    content.vb: Public Overrides Function ContainsPoint(point As Vector2Int) As Boolean
  overridden: Global.IntCollider.ContainsPoint(UnityEngine.Vector2Int)
  overload: Global.AABBIntCollider.ContainsPoint*
- uid: Global.AABBIntCollider.ContainsPoint(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  commentId: M:Global.AABBIntCollider.ContainsPoint(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  id: ContainsPoint(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: ContainsPoint(Vector2Int, Vector2Int)
  nameWithType: AABBIntCollider.ContainsPoint(Vector2Int, Vector2Int)
  fullName: AABBIntCollider.ContainsPoint(UnityEngine.Vector2Int, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ContainsPoint
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 128
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool ContainsPoint(Vector2Int point, Vector2Int dPos)
    parameters:
    - id: point
      type: UnityEngine.Vector2Int
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: System.Boolean
    content.vb: Public Function ContainsPoint(point As Vector2Int, dPos As Vector2Int) As Boolean
  overload: Global.AABBIntCollider.ContainsPoint*
- uid: Global.AABBIntCollider.GetOverlappingRegion(AABBIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.AABBIntCollider.GetOverlappingRegion(AABBIntCollider,UnityEngine.Vector2Int)
  id: GetOverlappingRegion(AABBIntCollider,UnityEngine.Vector2Int)
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: GetOverlappingRegion(AABBIntCollider, Vector2Int)
  nameWithType: AABBIntCollider.GetOverlappingRegion(AABBIntCollider, Vector2Int)
  fullName: AABBIntCollider.GetOverlappingRegion(AABBIntCollider, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetOverlappingRegion
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 135
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public AABBIntCollider.RectOverlap GetOverlappingRegion(AABBIntCollider collider, Vector2Int dPos)
    parameters:
    - id: collider
      type: Global.AABBIntCollider
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: Global.AABBIntCollider.RectOverlap
    content.vb: Public Function GetOverlappingRegion(collider As AABBIntCollider, dPos As Vector2Int) As AABBIntCollider.RectOverlap
  overload: Global.AABBIntCollider.GetOverlappingRegion*
- uid: Global.AABBIntCollider.GetOverlappingRegion(UnityEngine.RectInt,UnityEngine.RectInt)
  commentId: M:Global.AABBIntCollider.GetOverlappingRegion(UnityEngine.RectInt,UnityEngine.RectInt)
  id: GetOverlappingRegion(UnityEngine.RectInt,UnityEngine.RectInt)
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: GetOverlappingRegion(RectInt, RectInt)
  nameWithType: AABBIntCollider.GetOverlappingRegion(RectInt, RectInt)
  fullName: AABBIntCollider.GetOverlappingRegion(UnityEngine.RectInt, UnityEngine.RectInt)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetOverlappingRegion
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 151
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public AABBIntCollider.RectOverlap GetOverlappingRegion(RectInt rect0, RectInt rect1)
    parameters:
    - id: rect0
      type: UnityEngine.RectInt
    - id: rect1
      type: UnityEngine.RectInt
    return:
      type: Global.AABBIntCollider.RectOverlap
    content.vb: Public Function GetOverlappingRegion(rect0 As RectInt, rect1 As RectInt) As AABBIntCollider.RectOverlap
  overload: Global.AABBIntCollider.GetOverlappingRegion*
- uid: Global.AABBIntCollider.DrawGizmos(UnityEngine.Color)
  commentId: M:Global.AABBIntCollider.DrawGizmos(UnityEngine.Color)
  id: DrawGizmos(UnityEngine.Color)
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: DrawGizmos(Color)
  nameWithType: AABBIntCollider.DrawGizmos(Color)
  fullName: AABBIntCollider.DrawGizmos(UnityEngine.Color)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DrawGizmos
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 179
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void DrawGizmos(Color color)
    parameters:
    - id: color
      type: UnityEngine.Color
    content.vb: Public Overrides Sub DrawGizmos(color As Color)
  overridden: Global.IntCollider.DrawGizmos(UnityEngine.Color)
  overload: Global.AABBIntCollider.DrawGizmos*
- uid: Global.AABBIntCollider.OverlapsAABB(AABBIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.AABBIntCollider.OverlapsAABB(AABBIntCollider,UnityEngine.Vector2Int)
  id: OverlapsAABB(AABBIntCollider,UnityEngine.Vector2Int)
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: OverlapsAABB(AABBIntCollider, Vector2Int)
  nameWithType: AABBIntCollider.OverlapsAABB(AABBIntCollider, Vector2Int)
  fullName: AABBIntCollider.OverlapsAABB(AABBIntCollider, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OverlapsAABB
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 190
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override bool OverlapsAABB(AABBIntCollider other, Vector2Int dPos)
    parameters:
    - id: other
      type: Global.AABBIntCollider
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function OverlapsAABB(other As AABBIntCollider, dPos As Vector2Int) As Boolean
  overridden: Global.IntCollider.OverlapsAABB(AABBIntCollider,UnityEngine.Vector2Int)
  overload: Global.AABBIntCollider.OverlapsAABB*
- uid: Global.AABBIntCollider.OverlapsTilemap(TilemapIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.AABBIntCollider.OverlapsTilemap(TilemapIntCollider,UnityEngine.Vector2Int)
  id: OverlapsTilemap(TilemapIntCollider,UnityEngine.Vector2Int)
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: OverlapsTilemap(TilemapIntCollider, Vector2Int)
  nameWithType: AABBIntCollider.OverlapsTilemap(TilemapIntCollider, Vector2Int)
  fullName: AABBIntCollider.OverlapsTilemap(TilemapIntCollider, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OverlapsTilemap
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 195
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override bool OverlapsTilemap(TilemapIntCollider other, Vector2Int dPos)
    parameters:
    - id: other
      type: Global.TilemapIntCollider
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function OverlapsTilemap(other As TilemapIntCollider, dPos As Vector2Int) As Boolean
  overridden: Global.IntCollider.OverlapsTilemap(TilemapIntCollider,UnityEngine.Vector2Int)
  overload: Global.AABBIntCollider.OverlapsTilemap*
- uid: Global.AABBIntCollider.OverlapsEdge(EdgeIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.AABBIntCollider.OverlapsEdge(EdgeIntCollider,UnityEngine.Vector2Int)
  id: OverlapsEdge(EdgeIntCollider,UnityEngine.Vector2Int)
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: OverlapsEdge(EdgeIntCollider, Vector2Int)
  nameWithType: AABBIntCollider.OverlapsEdge(EdgeIntCollider, Vector2Int)
  fullName: AABBIntCollider.OverlapsEdge(EdgeIntCollider, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OverlapsEdge
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 200
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override bool OverlapsEdge(EdgeIntCollider other, Vector2Int dPos)
    parameters:
    - id: other
      type: Global.EdgeIntCollider
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function OverlapsEdge(other As EdgeIntCollider, dPos As Vector2Int) As Boolean
  overridden: Global.IntCollider.OverlapsEdge(EdgeIntCollider,UnityEngine.Vector2Int)
  overload: Global.AABBIntCollider.OverlapsEdge*
- uid: Global.AABBIntCollider.OverlapsCircle(CircleIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.AABBIntCollider.OverlapsCircle(CircleIntCollider,UnityEngine.Vector2Int)
  id: OverlapsCircle(CircleIntCollider,UnityEngine.Vector2Int)
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: OverlapsCircle(CircleIntCollider, Vector2Int)
  nameWithType: AABBIntCollider.OverlapsCircle(CircleIntCollider, Vector2Int)
  fullName: AABBIntCollider.OverlapsCircle(CircleIntCollider, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OverlapsCircle
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 205
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override bool OverlapsCircle(CircleIntCollider collider, Vector2Int dPos)
    parameters:
    - id: collider
      type: Global.CircleIntCollider
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function OverlapsCircle(collider As CircleIntCollider, dPos As Vector2Int) As Boolean
  overridden: Global.IntCollider.OverlapsCircle(CircleIntCollider,UnityEngine.Vector2Int)
  overload: Global.AABBIntCollider.OverlapsCircle*
- uid: Global.AABBIntCollider.OverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2Int)
  commentId: M:Global.AABBIntCollider.OverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2Int)
  id: OverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2Int)
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: OverlapsBounds(BoundsInt, Vector2Int)
  nameWithType: AABBIntCollider.OverlapsBounds(BoundsInt, Vector2Int)
  fullName: AABBIntCollider.OverlapsBounds(UnityEngine.BoundsInt, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OverlapsBounds
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 210
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override bool OverlapsBounds(BoundsInt collider, Vector2Int dPos)
    parameters:
    - id: collider
      type: UnityEngine.BoundsInt
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: System.Boolean
    content.vb: Public Overrides Function OverlapsBounds(collider As BoundsInt, dPos As Vector2Int) As Boolean
  overridden: Global.IntCollider.OverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2Int)
  overload: Global.AABBIntCollider.OverlapsBounds*
- uid: Global.AABBIntCollider.GetRayIntersection(IntRay)
  commentId: M:Global.AABBIntCollider.GetRayIntersection(IntRay)
  id: GetRayIntersection(IntRay)
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: GetRayIntersection(IntRay)
  nameWithType: AABBIntCollider.GetRayIntersection(IntRay)
  fullName: AABBIntCollider.GetRayIntersection(IntRay)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetRayIntersection
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 215
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override Intersection GetRayIntersection(IntRay ray)
    parameters:
    - id: ray
      type: Global.IntRay
    return:
      type: Global.Intersection
    content.vb: Public Overrides Function GetRayIntersection(ray As IntRay) As Intersection
  overridden: Global.IntCollider.GetRayIntersection(IntRay)
  overload: Global.AABBIntCollider.GetRayIntersection*
- uid: Global.AABBIntCollider.GetRayIntersection(IntRay,UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  commentId: M:Global.AABBIntCollider.GetRayIntersection(IntRay,UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  id: GetRayIntersection(IntRay,UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: GetRayIntersection(IntRay, Vector2Int, Vector2Int)
  nameWithType: AABBIntCollider.GetRayIntersection(IntRay, Vector2Int, Vector2Int)
  fullName: AABBIntCollider.GetRayIntersection(IntRay, UnityEngine.Vector2Int, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetRayIntersection
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 220
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Intersection GetRayIntersection(IntRay ray, Vector2Int ray_dPos, Vector2Int aabb_dPos)
    parameters:
    - id: ray
      type: Global.IntRay
    - id: ray_dPos
      type: UnityEngine.Vector2Int
    - id: aabb_dPos
      type: UnityEngine.Vector2Int
    return:
      type: Global.Intersection
    content.vb: Public Function GetRayIntersection(ray As IntRay, ray_dPos As Vector2Int, aabb_dPos As Vector2Int) As Intersection
  overload: Global.AABBIntCollider.GetRayIntersection*
- uid: Global.AABBIntCollider.RepairMinMax
  commentId: M:Global.AABBIntCollider.RepairMinMax
  id: RepairMinMax
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: RepairMinMax()
  nameWithType: AABBIntCollider.RepairMinMax()
  fullName: AABBIntCollider.RepairMinMax()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RepairMinMax
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 254
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void RepairMinMax()
    content.vb: Public Sub RepairMinMax()
  overload: Global.AABBIntCollider.RepairMinMax*
- uid: Global.AABBIntCollider.GetBounds
  commentId: M:Global.AABBIntCollider.GetBounds
  id: GetBounds
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: GetBounds()
  nameWithType: AABBIntCollider.GetBounds()
  fullName: AABBIntCollider.GetBounds()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetBounds
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 270
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override BoundsInt GetBounds()
    return:
      type: UnityEngine.BoundsInt
    content.vb: Public Overrides Function GetBounds() As BoundsInt
  overridden: Global.IntCollider.GetBounds
  overload: Global.AABBIntCollider.GetBounds*
- uid: Global.AABBIntCollider.GetRidingTangent(AABBIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.AABBIntCollider.GetRidingTangent(AABBIntCollider,UnityEngine.Vector2Int)
  id: GetRidingTangent(AABBIntCollider,UnityEngine.Vector2Int)
  parent: Global.AABBIntCollider
  langs:
  - csharp
  - vb
  name: GetRidingTangent(AABBIntCollider, Vector2Int)
  nameWithType: AABBIntCollider.GetRidingTangent(AABBIntCollider, Vector2Int)
  fullName: AABBIntCollider.GetRidingTangent(AABBIntCollider, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/AABBIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetRidingTangent
    path: ../Assets/Framework/Physics/Colliders/AABBIntCollider.cs
    startLine: 275
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override Vector2 GetRidingTangent(AABBIntCollider aabb, Vector2Int dPos)
    parameters:
    - id: aabb
      type: Global.AABBIntCollider
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: UnityEngine.Vector2
    content.vb: Public Overrides Function GetRidingTangent(aabb As AABBIntCollider, dPos As Vector2Int) As Vector2
  overridden: Global.IntCollider.GetRidingTangent(AABBIntCollider,UnityEngine.Vector2Int)
  overload: Global.AABBIntCollider.GetRidingTangent*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Global.IntCollider
  commentId: T:Global.IntCollider
  name: IntCollider
  nameWithType: IntCollider
  fullName: IntCollider
- uid: Global.IntCollider.DisableGizmos
  commentId: F:Global.IntCollider.DisableGizmos
  parent: Global.IntCollider
  name: DisableGizmos
  nameWithType: IntCollider.DisableGizmos
  fullName: IntCollider.DisableGizmos
- uid: Global.IntCollider.AlwaysDrawGizmos
  commentId: F:Global.IntCollider.AlwaysDrawGizmos
  parent: Global.IntCollider
  name: AlwaysDrawGizmos
  nameWithType: IntCollider.AlwaysDrawGizmos
  fullName: IntCollider.AlwaysDrawGizmos
- uid: Global.IntCollider.OneWayInteraction
  commentId: F:Global.IntCollider.OneWayInteraction
  parent: Global.IntCollider
  name: OneWayInteraction
  nameWithType: IntCollider.OneWayInteraction
  fullName: IntCollider.OneWayInteraction
- uid: Global.IntCollider.Position
  commentId: P:Global.IntCollider.Position
  parent: Global.IntCollider
  name: Position
  nameWithType: IntCollider.Position
  fullName: IntCollider.Position
- uid: Global.IntCollider.GetPosition
  commentId: M:Global.IntCollider.GetPosition
  parent: Global.IntCollider
  name: GetPosition()
  nameWithType: IntCollider.GetPosition()
  fullName: IntCollider.GetPosition()
  spec.csharp:
  - uid: Global.IntCollider.GetPosition
    name: GetPosition
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntCollider.GetPosition
    name: GetPosition
  - name: (
  - name: )
- uid: Global.IntCollider.SetPosition(UnityEngine.Vector2Int)
  commentId: M:Global.IntCollider.SetPosition(UnityEngine.Vector2Int)
  parent: Global.IntCollider
  isExternal: true
  name: SetPosition(Vector2Int)
  nameWithType: IntCollider.SetPosition(Vector2Int)
  fullName: IntCollider.SetPosition(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntCollider.SetPosition(UnityEngine.Vector2Int)
    name: SetPosition
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.SetPosition(UnityEngine.Vector2Int)
    name: SetPosition
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntCollider.IsCollidable
  commentId: F:Global.IntCollider.IsCollidable
  parent: Global.IntCollider
  name: IsCollidable
  nameWithType: IntCollider.IsCollidable
  fullName: IntCollider.IsCollidable
- uid: Global.IntCollider.Overlaps(IntCollider)
  commentId: M:Global.IntCollider.Overlaps(IntCollider)
  parent: Global.IntCollider
  name: Overlaps(IntCollider)
  nameWithType: IntCollider.Overlaps(IntCollider)
  fullName: IntCollider.Overlaps(IntCollider)
  spec.csharp:
  - uid: Global.IntCollider.Overlaps(IntCollider)
    name: Overlaps
  - name: (
  - uid: Global.IntCollider
    name: IntCollider
  - name: )
  spec.vb:
  - uid: Global.IntCollider.Overlaps(IntCollider)
    name: Overlaps
  - name: (
  - uid: Global.IntCollider
    name: IntCollider
  - name: )
- uid: Global.IntCollider.Overlaps(IntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.IntCollider.Overlaps(IntCollider,UnityEngine.Vector2Int)
  parent: Global.IntCollider
  isExternal: true
  name: Overlaps(IntCollider, Vector2Int)
  nameWithType: IntCollider.Overlaps(IntCollider, Vector2Int)
  fullName: IntCollider.Overlaps(IntCollider, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntCollider.Overlaps(IntCollider,UnityEngine.Vector2Int)
    name: Overlaps
  - name: (
  - uid: Global.IntCollider
    name: IntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.Overlaps(IntCollider,UnityEngine.Vector2Int)
    name: Overlaps
  - name: (
  - uid: Global.IntCollider
    name: IntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntCollider.OverlapsDummyCollider(DummyIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.IntCollider.OverlapsDummyCollider(DummyIntCollider,UnityEngine.Vector2Int)
  parent: Global.IntCollider
  isExternal: true
  name: OverlapsDummyCollider(DummyIntCollider, Vector2Int)
  nameWithType: IntCollider.OverlapsDummyCollider(DummyIntCollider, Vector2Int)
  fullName: IntCollider.OverlapsDummyCollider(DummyIntCollider, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntCollider.OverlapsDummyCollider(DummyIntCollider,UnityEngine.Vector2Int)
    name: OverlapsDummyCollider
  - name: (
  - uid: Global.DummyIntCollider
    name: DummyIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.OverlapsDummyCollider(DummyIntCollider,UnityEngine.Vector2Int)
    name: OverlapsDummyCollider
  - name: (
  - uid: Global.DummyIntCollider
    name: DummyIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntCollider.OverlapsBounds(UnityEngine.BoundsInt)
  commentId: M:Global.IntCollider.OverlapsBounds(UnityEngine.BoundsInt)
  parent: Global.IntCollider
  isExternal: true
  name: OverlapsBounds(BoundsInt)
  nameWithType: IntCollider.OverlapsBounds(BoundsInt)
  fullName: IntCollider.OverlapsBounds(UnityEngine.BoundsInt)
  spec.csharp:
  - uid: Global.IntCollider.OverlapsBounds(UnityEngine.BoundsInt)
    name: OverlapsBounds
  - name: (
  - uid: UnityEngine.BoundsInt
    name: BoundsInt
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.OverlapsBounds(UnityEngine.BoundsInt)
    name: OverlapsBounds
  - name: (
  - uid: UnityEngine.BoundsInt
    name: BoundsInt
    isExternal: true
  - name: )
- uid: Global.IntCollider.OverlapsComposite(CompositeIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.IntCollider.OverlapsComposite(CompositeIntCollider,UnityEngine.Vector2Int)
  parent: Global.IntCollider
  isExternal: true
  name: OverlapsComposite(CompositeIntCollider, Vector2Int)
  nameWithType: IntCollider.OverlapsComposite(CompositeIntCollider, Vector2Int)
  fullName: IntCollider.OverlapsComposite(CompositeIntCollider, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntCollider.OverlapsComposite(CompositeIntCollider,UnityEngine.Vector2Int)
    name: OverlapsComposite
  - name: (
  - uid: Global.CompositeIntCollider
    name: CompositeIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.OverlapsComposite(CompositeIntCollider,UnityEngine.Vector2Int)
    name: OverlapsComposite
  - name: (
  - uid: Global.CompositeIntCollider
    name: CompositeIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntCollider.Intersects(IntRay)
  commentId: M:Global.IntCollider.Intersects(IntRay)
  parent: Global.IntCollider
  name: Intersects(IntRay)
  nameWithType: IntCollider.Intersects(IntRay)
  fullName: IntCollider.Intersects(IntRay)
  spec.csharp:
  - uid: Global.IntCollider.Intersects(IntRay)
    name: Intersects
  - name: (
  - uid: Global.IntRay
    name: IntRay
  - name: )
  spec.vb:
  - uid: Global.IntCollider.Intersects(IntRay)
    name: Intersects
  - name: (
  - uid: Global.IntRay
    name: IntRay
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: Global.AABBIntCollider.WorldMin*
  commentId: Overload:Global.AABBIntCollider.WorldMin
  name: WorldMin
  nameWithType: AABBIntCollider.WorldMin
  fullName: AABBIntCollider.WorldMin
- uid: Global.AABBIntCollider.WorldMax*
  commentId: Overload:Global.AABBIntCollider.WorldMax
  name: WorldMax
  nameWithType: AABBIntCollider.WorldMax
  fullName: AABBIntCollider.WorldMax
- uid: Global.AABBIntCollider.Top*
  commentId: Overload:Global.AABBIntCollider.Top
  name: Top
  nameWithType: AABBIntCollider.Top
  fullName: AABBIntCollider.Top
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.AABBIntCollider.Bottom*
  commentId: Overload:Global.AABBIntCollider.Bottom
  name: Bottom
  nameWithType: AABBIntCollider.Bottom
  fullName: AABBIntCollider.Bottom
- uid: Global.AABBIntCollider.Left*
  commentId: Overload:Global.AABBIntCollider.Left
  name: Left
  nameWithType: AABBIntCollider.Left
  fullName: AABBIntCollider.Left
- uid: Global.AABBIntCollider.Right*
  commentId: Overload:Global.AABBIntCollider.Right
  name: Right
  nameWithType: AABBIntCollider.Right
  fullName: AABBIntCollider.Right
- uid: Global.AABBIntCollider.LocalCenter*
  commentId: Overload:Global.AABBIntCollider.LocalCenter
  name: LocalCenter
  nameWithType: AABBIntCollider.LocalCenter
  fullName: AABBIntCollider.LocalCenter
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.AABBIntCollider.WorldCenter*
  commentId: Overload:Global.AABBIntCollider.WorldCenter
  name: WorldCenter
  nameWithType: AABBIntCollider.WorldCenter
  fullName: AABBIntCollider.WorldCenter
- uid: Global.AABBIntCollider.Size*
  commentId: Overload:Global.AABBIntCollider.Size
  name: Size
  nameWithType: AABBIntCollider.Size
  fullName: AABBIntCollider.Size
- uid: Global.AABBIntCollider.OverlapsBounds*
  commentId: Overload:Global.AABBIntCollider.OverlapsBounds
  name: OverlapsBounds
  nameWithType: AABBIntCollider.OverlapsBounds
  fullName: AABBIntCollider.OverlapsBounds
- uid: UnityEngine.BoundsInt
  commentId: T:UnityEngine.BoundsInt
  parent: UnityEngine
  isExternal: true
  name: BoundsInt
  nameWithType: BoundsInt
  fullName: UnityEngine.BoundsInt
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.AABBIntCollider.GetOutlineRays*
  commentId: Overload:Global.AABBIntCollider.GetOutlineRays
  name: GetOutlineRays
  nameWithType: AABBIntCollider.GetOutlineRays
  fullName: AABBIntCollider.GetOutlineRays
- uid: System.Collections.Generic.List{IntRay}
  commentId: T:System.Collections.Generic.List{IntRay}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IntRay>
  nameWithType: List<IntRay>
  fullName: System.Collections.Generic.List<IntRay>
  nameWithType.vb: List(Of IntRay)
  fullName.vb: System.Collections.Generic.List(Of IntRay)
  name.vb: List(Of IntRay)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntRay
    name: IntRay
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntRay
    name: IntRay
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: Global.AABBIntCollider.OverlapsTile*
  commentId: Overload:Global.AABBIntCollider.OverlapsTile
  name: OverlapsTile
  nameWithType: AABBIntCollider.OverlapsTile
  fullName: AABBIntCollider.OverlapsTile
- uid: UnityEngine.Tilemaps.Tilemap
  commentId: T:UnityEngine.Tilemaps.Tilemap
  parent: UnityEngine.Tilemaps
  isExternal: true
  name: Tilemap
  nameWithType: Tilemap
  fullName: UnityEngine.Tilemaps.Tilemap
- uid: UnityEngine.Vector3Int
  commentId: T:UnityEngine.Vector3Int
  parent: UnityEngine
  isExternal: true
  name: Vector3Int
  nameWithType: Vector3Int
  fullName: UnityEngine.Vector3Int
- uid: UnityEngine.Tilemaps
  commentId: N:UnityEngine.Tilemaps
  isExternal: true
  name: UnityEngine.Tilemaps
  nameWithType: UnityEngine.Tilemaps
  fullName: UnityEngine.Tilemaps
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Tilemaps
    name: Tilemaps
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Tilemaps
    name: Tilemaps
    isExternal: true
- uid: Global.AABBIntCollider.ContainsAABB*
  commentId: Overload:Global.AABBIntCollider.ContainsAABB
  name: ContainsAABB
  nameWithType: AABBIntCollider.ContainsAABB
  fullName: AABBIntCollider.ContainsAABB
- uid: Global.AABBIntCollider
  commentId: T:Global.AABBIntCollider
  name: AABBIntCollider
  nameWithType: AABBIntCollider
  fullName: AABBIntCollider
- uid: Global.AABBIntCollider.ContainsBoundsInt*
  commentId: Overload:Global.AABBIntCollider.ContainsBoundsInt
  name: ContainsBoundsInt
  nameWithType: AABBIntCollider.ContainsBoundsInt
  fullName: AABBIntCollider.ContainsBoundsInt
- uid: Global.IntCollider.ContainsPoint(UnityEngine.Vector2Int)
  commentId: M:Global.IntCollider.ContainsPoint(UnityEngine.Vector2Int)
  parent: Global.IntCollider
  isExternal: true
  name: ContainsPoint(Vector2Int)
  nameWithType: IntCollider.ContainsPoint(Vector2Int)
  fullName: IntCollider.ContainsPoint(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntCollider.ContainsPoint(UnityEngine.Vector2Int)
    name: ContainsPoint
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.ContainsPoint(UnityEngine.Vector2Int)
    name: ContainsPoint
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.AABBIntCollider.ContainsPoint*
  commentId: Overload:Global.AABBIntCollider.ContainsPoint
  name: ContainsPoint
  nameWithType: AABBIntCollider.ContainsPoint
  fullName: AABBIntCollider.ContainsPoint
- uid: Global.AABBIntCollider.GetOverlappingRegion*
  commentId: Overload:Global.AABBIntCollider.GetOverlappingRegion
  name: GetOverlappingRegion
  nameWithType: AABBIntCollider.GetOverlappingRegion
  fullName: AABBIntCollider.GetOverlappingRegion
- uid: Global.AABBIntCollider.RectOverlap
  commentId: T:Global.AABBIntCollider.RectOverlap
  name: AABBIntCollider.RectOverlap
  nameWithType: AABBIntCollider.RectOverlap
  fullName: AABBIntCollider.RectOverlap
  spec.csharp:
  - uid: Global.AABBIntCollider
    name: AABBIntCollider
  - name: .
  - uid: Global.AABBIntCollider.RectOverlap
    name: RectOverlap
  spec.vb:
  - uid: Global.AABBIntCollider
    name: AABBIntCollider
  - name: .
  - uid: Global.AABBIntCollider.RectOverlap
    name: RectOverlap
- uid: UnityEngine.RectInt
  commentId: T:UnityEngine.RectInt
  parent: UnityEngine
  isExternal: true
  name: RectInt
  nameWithType: RectInt
  fullName: UnityEngine.RectInt
- uid: Global.IntCollider.DrawGizmos(UnityEngine.Color)
  commentId: M:Global.IntCollider.DrawGizmos(UnityEngine.Color)
  parent: Global.IntCollider
  isExternal: true
  name: DrawGizmos(Color)
  nameWithType: IntCollider.DrawGizmos(Color)
  fullName: IntCollider.DrawGizmos(UnityEngine.Color)
  spec.csharp:
  - uid: Global.IntCollider.DrawGizmos(UnityEngine.Color)
    name: DrawGizmos
  - name: (
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.DrawGizmos(UnityEngine.Color)
    name: DrawGizmos
  - name: (
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
- uid: Global.AABBIntCollider.DrawGizmos*
  commentId: Overload:Global.AABBIntCollider.DrawGizmos
  name: DrawGizmos
  nameWithType: AABBIntCollider.DrawGizmos
  fullName: AABBIntCollider.DrawGizmos
- uid: UnityEngine.Color
  commentId: T:UnityEngine.Color
  parent: UnityEngine
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.IntCollider.OverlapsAABB(AABBIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.IntCollider.OverlapsAABB(AABBIntCollider,UnityEngine.Vector2Int)
  parent: Global.IntCollider
  isExternal: true
  name: OverlapsAABB(AABBIntCollider, Vector2Int)
  nameWithType: IntCollider.OverlapsAABB(AABBIntCollider, Vector2Int)
  fullName: IntCollider.OverlapsAABB(AABBIntCollider, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntCollider.OverlapsAABB(AABBIntCollider,UnityEngine.Vector2Int)
    name: OverlapsAABB
  - name: (
  - uid: Global.AABBIntCollider
    name: AABBIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.OverlapsAABB(AABBIntCollider,UnityEngine.Vector2Int)
    name: OverlapsAABB
  - name: (
  - uid: Global.AABBIntCollider
    name: AABBIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.AABBIntCollider.OverlapsAABB*
  commentId: Overload:Global.AABBIntCollider.OverlapsAABB
  name: OverlapsAABB
  nameWithType: AABBIntCollider.OverlapsAABB
  fullName: AABBIntCollider.OverlapsAABB
- uid: Global.IntCollider.OverlapsTilemap(TilemapIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.IntCollider.OverlapsTilemap(TilemapIntCollider,UnityEngine.Vector2Int)
  parent: Global.IntCollider
  isExternal: true
  name: OverlapsTilemap(TilemapIntCollider, Vector2Int)
  nameWithType: IntCollider.OverlapsTilemap(TilemapIntCollider, Vector2Int)
  fullName: IntCollider.OverlapsTilemap(TilemapIntCollider, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntCollider.OverlapsTilemap(TilemapIntCollider,UnityEngine.Vector2Int)
    name: OverlapsTilemap
  - name: (
  - uid: Global.TilemapIntCollider
    name: TilemapIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.OverlapsTilemap(TilemapIntCollider,UnityEngine.Vector2Int)
    name: OverlapsTilemap
  - name: (
  - uid: Global.TilemapIntCollider
    name: TilemapIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.AABBIntCollider.OverlapsTilemap*
  commentId: Overload:Global.AABBIntCollider.OverlapsTilemap
  name: OverlapsTilemap
  nameWithType: AABBIntCollider.OverlapsTilemap
  fullName: AABBIntCollider.OverlapsTilemap
- uid: Global.TilemapIntCollider
  commentId: T:Global.TilemapIntCollider
  name: TilemapIntCollider
  nameWithType: TilemapIntCollider
  fullName: TilemapIntCollider
- uid: Global.IntCollider.OverlapsEdge(EdgeIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.IntCollider.OverlapsEdge(EdgeIntCollider,UnityEngine.Vector2Int)
  parent: Global.IntCollider
  isExternal: true
  name: OverlapsEdge(EdgeIntCollider, Vector2Int)
  nameWithType: IntCollider.OverlapsEdge(EdgeIntCollider, Vector2Int)
  fullName: IntCollider.OverlapsEdge(EdgeIntCollider, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntCollider.OverlapsEdge(EdgeIntCollider,UnityEngine.Vector2Int)
    name: OverlapsEdge
  - name: (
  - uid: Global.EdgeIntCollider
    name: EdgeIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.OverlapsEdge(EdgeIntCollider,UnityEngine.Vector2Int)
    name: OverlapsEdge
  - name: (
  - uid: Global.EdgeIntCollider
    name: EdgeIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.AABBIntCollider.OverlapsEdge*
  commentId: Overload:Global.AABBIntCollider.OverlapsEdge
  name: OverlapsEdge
  nameWithType: AABBIntCollider.OverlapsEdge
  fullName: AABBIntCollider.OverlapsEdge
- uid: Global.EdgeIntCollider
  commentId: T:Global.EdgeIntCollider
  name: EdgeIntCollider
  nameWithType: EdgeIntCollider
  fullName: EdgeIntCollider
- uid: Global.IntCollider.OverlapsCircle(CircleIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.IntCollider.OverlapsCircle(CircleIntCollider,UnityEngine.Vector2Int)
  parent: Global.IntCollider
  isExternal: true
  name: OverlapsCircle(CircleIntCollider, Vector2Int)
  nameWithType: IntCollider.OverlapsCircle(CircleIntCollider, Vector2Int)
  fullName: IntCollider.OverlapsCircle(CircleIntCollider, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntCollider.OverlapsCircle(CircleIntCollider,UnityEngine.Vector2Int)
    name: OverlapsCircle
  - name: (
  - uid: Global.CircleIntCollider
    name: CircleIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.OverlapsCircle(CircleIntCollider,UnityEngine.Vector2Int)
    name: OverlapsCircle
  - name: (
  - uid: Global.CircleIntCollider
    name: CircleIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.AABBIntCollider.OverlapsCircle*
  commentId: Overload:Global.AABBIntCollider.OverlapsCircle
  name: OverlapsCircle
  nameWithType: AABBIntCollider.OverlapsCircle
  fullName: AABBIntCollider.OverlapsCircle
- uid: Global.CircleIntCollider
  commentId: T:Global.CircleIntCollider
  name: CircleIntCollider
  nameWithType: CircleIntCollider
  fullName: CircleIntCollider
- uid: Global.IntCollider.OverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2Int)
  commentId: M:Global.IntCollider.OverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2Int)
  parent: Global.IntCollider
  isExternal: true
  name: OverlapsBounds(BoundsInt, Vector2Int)
  nameWithType: IntCollider.OverlapsBounds(BoundsInt, Vector2Int)
  fullName: IntCollider.OverlapsBounds(UnityEngine.BoundsInt, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntCollider.OverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2Int)
    name: OverlapsBounds
  - name: (
  - uid: UnityEngine.BoundsInt
    name: BoundsInt
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.OverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2Int)
    name: OverlapsBounds
  - name: (
  - uid: UnityEngine.BoundsInt
    name: BoundsInt
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntCollider.GetRayIntersection(IntRay)
  commentId: M:Global.IntCollider.GetRayIntersection(IntRay)
  parent: Global.IntCollider
  name: GetRayIntersection(IntRay)
  nameWithType: IntCollider.GetRayIntersection(IntRay)
  fullName: IntCollider.GetRayIntersection(IntRay)
  spec.csharp:
  - uid: Global.IntCollider.GetRayIntersection(IntRay)
    name: GetRayIntersection
  - name: (
  - uid: Global.IntRay
    name: IntRay
  - name: )
  spec.vb:
  - uid: Global.IntCollider.GetRayIntersection(IntRay)
    name: GetRayIntersection
  - name: (
  - uid: Global.IntRay
    name: IntRay
  - name: )
- uid: Global.AABBIntCollider.GetRayIntersection*
  commentId: Overload:Global.AABBIntCollider.GetRayIntersection
  name: GetRayIntersection
  nameWithType: AABBIntCollider.GetRayIntersection
  fullName: AABBIntCollider.GetRayIntersection
- uid: Global.IntRay
  commentId: T:Global.IntRay
  name: IntRay
  nameWithType: IntRay
  fullName: IntRay
- uid: Global.Intersection
  commentId: T:Global.Intersection
  name: Intersection
  nameWithType: Intersection
  fullName: Intersection
- uid: Global.AABBIntCollider.RepairMinMax*
  commentId: Overload:Global.AABBIntCollider.RepairMinMax
  name: RepairMinMax
  nameWithType: AABBIntCollider.RepairMinMax
  fullName: AABBIntCollider.RepairMinMax
- uid: Global.IntCollider.GetBounds
  commentId: M:Global.IntCollider.GetBounds
  parent: Global.IntCollider
  name: GetBounds()
  nameWithType: IntCollider.GetBounds()
  fullName: IntCollider.GetBounds()
  spec.csharp:
  - uid: Global.IntCollider.GetBounds
    name: GetBounds
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntCollider.GetBounds
    name: GetBounds
  - name: (
  - name: )
- uid: Global.AABBIntCollider.GetBounds*
  commentId: Overload:Global.AABBIntCollider.GetBounds
  name: GetBounds
  nameWithType: AABBIntCollider.GetBounds
  fullName: AABBIntCollider.GetBounds
- uid: Global.IntCollider.GetRidingTangent(AABBIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.IntCollider.GetRidingTangent(AABBIntCollider,UnityEngine.Vector2Int)
  parent: Global.IntCollider
  isExternal: true
  name: GetRidingTangent(AABBIntCollider, Vector2Int)
  nameWithType: IntCollider.GetRidingTangent(AABBIntCollider, Vector2Int)
  fullName: IntCollider.GetRidingTangent(AABBIntCollider, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntCollider.GetRidingTangent(AABBIntCollider,UnityEngine.Vector2Int)
    name: GetRidingTangent
  - name: (
  - uid: Global.AABBIntCollider
    name: AABBIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.GetRidingTangent(AABBIntCollider,UnityEngine.Vector2Int)
    name: GetRidingTangent
  - name: (
  - uid: Global.AABBIntCollider
    name: AABBIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.AABBIntCollider.GetRidingTangent*
  commentId: Overload:Global.AABBIntCollider.GetRidingTangent
  name: GetRidingTangent
  nameWithType: AABBIntCollider.GetRidingTangent
  fullName: AABBIntCollider.GetRidingTangent
