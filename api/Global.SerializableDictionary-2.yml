### YamlMime:ManagedReference
items:
- uid: Global.SerializableDictionary`2
  commentId: T:Global.SerializableDictionary`2
  id: SerializableDictionary`2
  parent: Global
  children:
  - Global.SerializableDictionary`2.OnAfterDeserialize
  - Global.SerializableDictionary`2.OnBeforeSerialize
  langs:
  - csharp
  - vb
  name: SerializableDictionary<TKey, TValue>
  nameWithType: SerializableDictionary<TKey, TValue>
  fullName: SerializableDictionary<TKey, TValue>
  type: Class
  source:
    remote:
      path: Assets/Framework/Util/DataStructures/SerializableDictionary.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SerializableDictionary
    path: ../Assets/Framework/Util/DataStructures/SerializableDictionary.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class SerializableDictionary<TKey, TValue> : Dictionary<TKey, TValue>
    typeParameters:
    - id: TKey
    - id: TValue
    content.vb: >-
      <Serializable>

      Public Class SerializableDictionary(Of TKey, TValue) Inherits Dictionary(Of TKey, TValue)
  inheritance:
  - System.Object
  - System.Collections.Generic.Dictionary{{TKey},{TValue}}
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  nameWithType.vb: SerializableDictionary(Of TKey, TValue)
  fullName.vb: SerializableDictionary(Of TKey, TValue)
  name.vb: SerializableDictionary(Of TKey, TValue)
- uid: Global.SerializableDictionary`2.OnBeforeSerialize
  commentId: M:Global.SerializableDictionary`2.OnBeforeSerialize
  id: OnBeforeSerialize
  parent: Global.SerializableDictionary`2
  langs:
  - csharp
  - vb
  name: OnBeforeSerialize()
  nameWithType: SerializableDictionary<TKey, TValue>.OnBeforeSerialize()
  fullName: SerializableDictionary<TKey, TValue>.OnBeforeSerialize()
  type: Method
  source:
    remote:
      path: Assets/Framework/Util/DataStructures/SerializableDictionary.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnBeforeSerialize
    path: ../Assets/Framework/Util/DataStructures/SerializableDictionary.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void OnBeforeSerialize()
    content.vb: Public Sub OnBeforeSerialize()
  overload: Global.SerializableDictionary`2.OnBeforeSerialize*
  nameWithType.vb: SerializableDictionary(Of TKey, TValue).OnBeforeSerialize()
  fullName.vb: SerializableDictionary(Of TKey, TValue).OnBeforeSerialize()
- uid: Global.SerializableDictionary`2.OnAfterDeserialize
  commentId: M:Global.SerializableDictionary`2.OnAfterDeserialize
  id: OnAfterDeserialize
  parent: Global.SerializableDictionary`2
  langs:
  - csharp
  - vb
  name: OnAfterDeserialize()
  nameWithType: SerializableDictionary<TKey, TValue>.OnAfterDeserialize()
  fullName: SerializableDictionary<TKey, TValue>.OnAfterDeserialize()
  type: Method
  source:
    remote:
      path: Assets/Framework/Util/DataStructures/SerializableDictionary.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnAfterDeserialize
    path: ../Assets/Framework/Util/DataStructures/SerializableDictionary.cs
    startLine: 26
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void OnAfterDeserialize()
    content.vb: Public Sub OnAfterDeserialize()
  overload: Global.SerializableDictionary`2.OnAfterDeserialize*
  nameWithType.vb: SerializableDictionary(Of TKey, TValue).OnAfterDeserialize()
  fullName.vb: SerializableDictionary(Of TKey, TValue).OnAfterDeserialize()
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.Dictionary{{TKey},{TValue}}
  commentId: T:System.Collections.Generic.Dictionary{`0,`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.SerializableDictionary`2.OnBeforeSerialize*
  commentId: Overload:Global.SerializableDictionary`2.OnBeforeSerialize
  name: OnBeforeSerialize
  nameWithType: SerializableDictionary<TKey, TValue>.OnBeforeSerialize
  fullName: SerializableDictionary<TKey, TValue>.OnBeforeSerialize
  nameWithType.vb: SerializableDictionary(Of TKey, TValue).OnBeforeSerialize
  fullName.vb: SerializableDictionary(Of TKey, TValue).OnBeforeSerialize
- uid: Global.SerializableDictionary`2.OnAfterDeserialize*
  commentId: Overload:Global.SerializableDictionary`2.OnAfterDeserialize
  name: OnAfterDeserialize
  nameWithType: SerializableDictionary<TKey, TValue>.OnAfterDeserialize
  fullName: SerializableDictionary<TKey, TValue>.OnAfterDeserialize
  nameWithType.vb: SerializableDictionary(Of TKey, TValue).OnAfterDeserialize
  fullName.vb: SerializableDictionary(Of TKey, TValue).OnAfterDeserialize
