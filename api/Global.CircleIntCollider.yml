### YamlMime:ManagedReference
items:
- uid: Global.CircleIntCollider
  commentId: T:Global.CircleIntCollider
  id: CircleIntCollider
  parent: Global
  children:
  - Global.CircleIntCollider.ApproximateOverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2)
  - Global.CircleIntCollider.ApproximateOverlapsTile(UnityEngine.Tilemaps.Tilemap,UnityEngine.Vector3Int)
  - Global.CircleIntCollider.Bottom
  - Global.CircleIntCollider.ContainsPoint(UnityEngine.Vector2,UnityEngine.Vector2Int)
  - Global.CircleIntCollider.ContainsPoint(UnityEngine.Vector2)
  - Global.CircleIntCollider.ContainsPoint(UnityEngine.Vector2Int)
  - Global.CircleIntCollider.DrawGizmos(UnityEngine.Color)
  - Global.CircleIntCollider.GetBounds
  - Global.CircleIntCollider.GetRayIntersection(IntRay,UnityEngine.Vector2Int)
  - Global.CircleIntCollider.GetRayIntersection(IntRay)
  - Global.CircleIntCollider.GetRidingTangent(AABBIntCollider,UnityEngine.Vector2Int)
  - Global.CircleIntCollider.Left
  - Global.CircleIntCollider.LocalCenter
  - Global.CircleIntCollider.OverlapsAABB(AABBIntCollider,UnityEngine.Vector2Int)
  - Global.CircleIntCollider.OverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2Int)
  - Global.CircleIntCollider.OverlapsCircle(CircleIntCollider,UnityEngine.Vector2Int)
  - Global.CircleIntCollider.OverlapsEdge(EdgeIntCollider,UnityEngine.Vector2Int)
  - Global.CircleIntCollider.OverlapsTile(UnityEngine.Tilemaps.Tilemap,UnityEngine.Vector3Int,UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  - Global.CircleIntCollider.OverlapsTilemap(TilemapIntCollider,UnityEngine.Vector2Int)
  - Global.CircleIntCollider.Radius
  - Global.CircleIntCollider.Right
  - Global.CircleIntCollider.Top
  - Global.CircleIntCollider.WorldCenter
  langs:
  - csharp
  - vb
  name: CircleIntCollider
  nameWithType: CircleIntCollider
  fullName: CircleIntCollider
  type: Class
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CircleIntCollider
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: 'public class CircleIntCollider : IntCollider'
    content.vb: Public Class CircleIntCollider Inherits IntCollider
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - Global.IntCollider
  inheritedMembers:
  - Global.IntCollider.DisableGizmos
  - Global.IntCollider.AlwaysDrawGizmos
  - Global.IntCollider.OneWayInteraction
  - Global.IntCollider.Position
  - Global.IntCollider.GetPosition
  - Global.IntCollider.SetPosition(UnityEngine.Vector2Int)
  - Global.IntCollider.IsCollidable
  - Global.IntCollider.Overlaps(IntCollider)
  - Global.IntCollider.Overlaps(IntCollider,UnityEngine.Vector2Int)
  - Global.IntCollider.OverlapsDummyCollider(DummyIntCollider,UnityEngine.Vector2Int)
  - Global.IntCollider.OverlapsBounds(UnityEngine.BoundsInt)
  - Global.IntCollider.OverlapsComposite(CompositeIntCollider,UnityEngine.Vector2Int)
  - Global.IntCollider.Intersects(IntRay)
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.CircleIntCollider.LocalCenter
  commentId: F:Global.CircleIntCollider.LocalCenter
  id: LocalCenter
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: LocalCenter
  nameWithType: CircleIntCollider.LocalCenter
  fullName: CircleIntCollider.LocalCenter
  type: Field
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LocalCenter
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2Int LocalCenter
    return:
      type: UnityEngine.Vector2Int
    content.vb: Public LocalCenter As Vector2Int
- uid: Global.CircleIntCollider.Radius
  commentId: F:Global.CircleIntCollider.Radius
  id: Radius
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: Radius
  nameWithType: CircleIntCollider.Radius
  fullName: CircleIntCollider.Radius
  type: Field
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Radius
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int Radius
    return:
      type: System.Int32
    content.vb: Public Radius As Integer
- uid: Global.CircleIntCollider.WorldCenter
  commentId: P:Global.CircleIntCollider.WorldCenter
  id: WorldCenter
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: WorldCenter
  nameWithType: CircleIntCollider.WorldCenter
  fullName: CircleIntCollider.WorldCenter
  type: Property
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: WorldCenter
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2Int WorldCenter { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2Int
    content.vb: Public ReadOnly Property WorldCenter As Vector2Int
  overload: Global.CircleIntCollider.WorldCenter*
- uid: Global.CircleIntCollider.Top
  commentId: P:Global.CircleIntCollider.Top
  id: Top
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: Top
  nameWithType: CircleIntCollider.Top
  fullName: CircleIntCollider.Top
  type: Property
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Top
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int Top { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Top As Integer
  overload: Global.CircleIntCollider.Top*
- uid: Global.CircleIntCollider.Bottom
  commentId: P:Global.CircleIntCollider.Bottom
  id: Bottom
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: Bottom
  nameWithType: CircleIntCollider.Bottom
  fullName: CircleIntCollider.Bottom
  type: Property
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Bottom
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int Bottom { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Bottom As Integer
  overload: Global.CircleIntCollider.Bottom*
- uid: Global.CircleIntCollider.Left
  commentId: P:Global.CircleIntCollider.Left
  id: Left
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: CircleIntCollider.Left
  fullName: CircleIntCollider.Left
  type: Property
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Left
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int Left { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Left As Integer
  overload: Global.CircleIntCollider.Left*
- uid: Global.CircleIntCollider.Right
  commentId: P:Global.CircleIntCollider.Right
  id: Right
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: CircleIntCollider.Right
  fullName: CircleIntCollider.Right
  type: Property
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Right
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int Right { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Right As Integer
  overload: Global.CircleIntCollider.Right*
- uid: Global.CircleIntCollider.ContainsPoint(UnityEngine.Vector2)
  commentId: M:Global.CircleIntCollider.ContainsPoint(UnityEngine.Vector2)
  id: ContainsPoint(UnityEngine.Vector2)
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: ContainsPoint(Vector2)
  nameWithType: CircleIntCollider.ContainsPoint(Vector2)
  fullName: CircleIntCollider.ContainsPoint(UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ContainsPoint
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 28
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nReturns whether a point is contained inside of the circle\n"
  example: []
  syntax:
    content: public bool ContainsPoint(Vector2 worldPoint)
    parameters:
    - id: worldPoint
      type: UnityEngine.Vector2
      description: Point in world space
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function ContainsPoint(worldPoint As Vector2) As Boolean
  overload: Global.CircleIntCollider.ContainsPoint*
- uid: Global.CircleIntCollider.ContainsPoint(UnityEngine.Vector2,UnityEngine.Vector2Int)
  commentId: M:Global.CircleIntCollider.ContainsPoint(UnityEngine.Vector2,UnityEngine.Vector2Int)
  id: ContainsPoint(UnityEngine.Vector2,UnityEngine.Vector2Int)
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: ContainsPoint(Vector2, Vector2Int)
  nameWithType: CircleIntCollider.ContainsPoint(Vector2, Vector2Int)
  fullName: CircleIntCollider.ContainsPoint(UnityEngine.Vector2, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ContainsPoint
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 39
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nReturns whether a point is contained inside of the circle\n"
  example: []
  syntax:
    content: public bool ContainsPoint(Vector2 worldPoint, Vector2Int dPos)
    parameters:
    - id: worldPoint
      type: UnityEngine.Vector2
      description: Point in world space
    - id: dPos
      type: UnityEngine.Vector2Int
      description: Position offset of circle
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function ContainsPoint(worldPoint As Vector2, dPos As Vector2Int) As Boolean
  overload: Global.CircleIntCollider.ContainsPoint*
- uid: Global.CircleIntCollider.ApproximateOverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2)
  commentId: M:Global.CircleIntCollider.ApproximateOverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2)
  id: ApproximateOverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2)
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: ApproximateOverlapsBounds(BoundsInt, Vector2)
  nameWithType: CircleIntCollider.ApproximateOverlapsBounds(BoundsInt, Vector2)
  fullName: CircleIntCollider.ApproximateOverlapsBounds(UnityEngine.BoundsInt, UnityEngine.Vector2)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ApproximateOverlapsBounds
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 52
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nThis is an imperfect collision used to check whether a boundsInt overlaps the circle.\nIt checks whether the circle contains one of the corners of the bounds, or the bounds contains the center of the circle.\nNo edge detection happens for performance reasons.\n"
  example: []
  syntax:
    content: public bool ApproximateOverlapsBounds(BoundsInt other, Vector2 dPos)
    parameters:
    - id: other
      type: UnityEngine.BoundsInt
      description: ''
    - id: dPos
      type: UnityEngine.Vector2
      description: ''
    return:
      type: System.Boolean
      description: True if there is a collision, however false does not imply there is not collision
    content.vb: Public Function ApproximateOverlapsBounds(other As BoundsInt, dPos As Vector2) As Boolean
  overload: Global.CircleIntCollider.ApproximateOverlapsBounds*
- uid: Global.CircleIntCollider.ApproximateOverlapsTile(UnityEngine.Tilemaps.Tilemap,UnityEngine.Vector3Int)
  commentId: M:Global.CircleIntCollider.ApproximateOverlapsTile(UnityEngine.Tilemaps.Tilemap,UnityEngine.Vector3Int)
  id: ApproximateOverlapsTile(UnityEngine.Tilemaps.Tilemap,UnityEngine.Vector3Int)
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: ApproximateOverlapsTile(Tilemap, Vector3Int)
  nameWithType: CircleIntCollider.ApproximateOverlapsTile(Tilemap, Vector3Int)
  fullName: CircleIntCollider.ApproximateOverlapsTile(UnityEngine.Tilemaps.Tilemap, UnityEngine.Vector3Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ApproximateOverlapsTile
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 67
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nUses approximateOverlapsBounds to approximate whether this collider is overlapping a given tile\n"
  example: []
  syntax:
    content: public bool ApproximateOverlapsTile(Tilemap map, Vector3Int index)
    parameters:
    - id: map
      type: UnityEngine.Tilemaps.Tilemap
      description: Given tilemap
    - id: index
      type: UnityEngine.Vector3Int
      description: Location on tilemap
    return:
      type: System.Boolean
      description: True if there is a collision, however false does not imply there is not collision
    content.vb: Public Function ApproximateOverlapsTile(map As Tilemap, index As Vector3Int) As Boolean
  overload: Global.CircleIntCollider.ApproximateOverlapsTile*
- uid: Global.CircleIntCollider.OverlapsTile(UnityEngine.Tilemaps.Tilemap,UnityEngine.Vector3Int,UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  commentId: M:Global.CircleIntCollider.OverlapsTile(UnityEngine.Tilemaps.Tilemap,UnityEngine.Vector3Int,UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  id: OverlapsTile(UnityEngine.Tilemaps.Tilemap,UnityEngine.Vector3Int,UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: OverlapsTile(Tilemap, Vector3Int, Vector2Int, Vector2Int)
  nameWithType: CircleIntCollider.OverlapsTile(Tilemap, Vector3Int, Vector2Int, Vector2Int)
  fullName: CircleIntCollider.OverlapsTile(UnityEngine.Tilemaps.Tilemap, UnityEngine.Vector3Int, UnityEngine.Vector2Int, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OverlapsTile
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 80
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nUses approximateOverlapsBounds to approximate whether this collider is overlapping a given tile\n"
  example: []
  syntax:
    content: public bool OverlapsTile(Tilemap map, Vector3Int index, Vector2Int dPos0, Vector2Int dPos1)
    parameters:
    - id: map
      type: UnityEngine.Tilemaps.Tilemap
      description: Given tilemap
    - id: index
      type: UnityEngine.Vector3Int
      description: Location on tilemap
    - id: dPos0
      type: UnityEngine.Vector2Int
      description: delta position of circle
    - id: dPos1
      type: UnityEngine.Vector2Int
      description: delta position of tilemap
    return:
      type: System.Boolean
      description: True if there is a collision, however false does not imply there is not collision
    content.vb: Public Function OverlapsTile(map As Tilemap, index As Vector3Int, dPos0 As Vector2Int, dPos1 As Vector2Int) As Boolean
  overload: Global.CircleIntCollider.OverlapsTile*
- uid: Global.CircleIntCollider.ContainsPoint(UnityEngine.Vector2Int)
  commentId: M:Global.CircleIntCollider.ContainsPoint(UnityEngine.Vector2Int)
  id: ContainsPoint(UnityEngine.Vector2Int)
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: ContainsPoint(Vector2Int)
  nameWithType: CircleIntCollider.ContainsPoint(Vector2Int)
  fullName: CircleIntCollider.ContainsPoint(UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ContainsPoint
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 92
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override bool ContainsPoint(Vector2Int point)
    parameters:
    - id: point
      type: UnityEngine.Vector2Int
    return:
      type: System.Boolean
    content.vb: Public Overrides Function ContainsPoint(point As Vector2Int) As Boolean
  overridden: Global.IntCollider.ContainsPoint(UnityEngine.Vector2Int)
  overload: Global.CircleIntCollider.ContainsPoint*
- uid: Global.CircleIntCollider.DrawGizmos(UnityEngine.Color)
  commentId: M:Global.CircleIntCollider.DrawGizmos(UnityEngine.Color)
  id: DrawGizmos(UnityEngine.Color)
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: DrawGizmos(Color)
  nameWithType: CircleIntCollider.DrawGizmos(Color)
  fullName: CircleIntCollider.DrawGizmos(UnityEngine.Color)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DrawGizmos
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 96
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override void DrawGizmos(Color color)
    parameters:
    - id: color
      type: UnityEngine.Color
    content.vb: Public Overrides Sub DrawGizmos(color As Color)
  overridden: Global.IntCollider.DrawGizmos(UnityEngine.Color)
  overload: Global.CircleIntCollider.DrawGizmos*
- uid: Global.CircleIntCollider.OverlapsAABB(AABBIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.CircleIntCollider.OverlapsAABB(AABBIntCollider,UnityEngine.Vector2Int)
  id: OverlapsAABB(AABBIntCollider,UnityEngine.Vector2Int)
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: OverlapsAABB(AABBIntCollider, Vector2Int)
  nameWithType: CircleIntCollider.OverlapsAABB(AABBIntCollider, Vector2Int)
  fullName: CircleIntCollider.OverlapsAABB(AABBIntCollider, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OverlapsAABB
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 101
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override bool OverlapsAABB(AABBIntCollider other, Vector2Int dPos)
    parameters:
    - id: other
      type: Global.AABBIntCollider
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function OverlapsAABB(other As AABBIntCollider, dPos As Vector2Int) As Boolean
  overridden: Global.IntCollider.OverlapsAABB(AABBIntCollider,UnityEngine.Vector2Int)
  overload: Global.CircleIntCollider.OverlapsAABB*
- uid: Global.CircleIntCollider.OverlapsTilemap(TilemapIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.CircleIntCollider.OverlapsTilemap(TilemapIntCollider,UnityEngine.Vector2Int)
  id: OverlapsTilemap(TilemapIntCollider,UnityEngine.Vector2Int)
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: OverlapsTilemap(TilemapIntCollider, Vector2Int)
  nameWithType: CircleIntCollider.OverlapsTilemap(TilemapIntCollider, Vector2Int)
  fullName: CircleIntCollider.OverlapsTilemap(TilemapIntCollider, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OverlapsTilemap
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 106
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override bool OverlapsTilemap(TilemapIntCollider other, Vector2Int dPos)
    parameters:
    - id: other
      type: Global.TilemapIntCollider
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function OverlapsTilemap(other As TilemapIntCollider, dPos As Vector2Int) As Boolean
  overridden: Global.IntCollider.OverlapsTilemap(TilemapIntCollider,UnityEngine.Vector2Int)
  overload: Global.CircleIntCollider.OverlapsTilemap*
- uid: Global.CircleIntCollider.OverlapsEdge(EdgeIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.CircleIntCollider.OverlapsEdge(EdgeIntCollider,UnityEngine.Vector2Int)
  id: OverlapsEdge(EdgeIntCollider,UnityEngine.Vector2Int)
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: OverlapsEdge(EdgeIntCollider, Vector2Int)
  nameWithType: CircleIntCollider.OverlapsEdge(EdgeIntCollider, Vector2Int)
  fullName: CircleIntCollider.OverlapsEdge(EdgeIntCollider, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OverlapsEdge
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 111
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override bool OverlapsEdge(EdgeIntCollider other, Vector2Int dPos)
    parameters:
    - id: other
      type: Global.EdgeIntCollider
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function OverlapsEdge(other As EdgeIntCollider, dPos As Vector2Int) As Boolean
  overridden: Global.IntCollider.OverlapsEdge(EdgeIntCollider,UnityEngine.Vector2Int)
  overload: Global.CircleIntCollider.OverlapsEdge*
- uid: Global.CircleIntCollider.OverlapsCircle(CircleIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.CircleIntCollider.OverlapsCircle(CircleIntCollider,UnityEngine.Vector2Int)
  id: OverlapsCircle(CircleIntCollider,UnityEngine.Vector2Int)
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: OverlapsCircle(CircleIntCollider, Vector2Int)
  nameWithType: CircleIntCollider.OverlapsCircle(CircleIntCollider, Vector2Int)
  fullName: CircleIntCollider.OverlapsCircle(CircleIntCollider, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OverlapsCircle
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 116
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected override bool OverlapsCircle(CircleIntCollider collider, Vector2Int dPos)
    parameters:
    - id: collider
      type: Global.CircleIntCollider
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function OverlapsCircle(collider As CircleIntCollider, dPos As Vector2Int) As Boolean
  overridden: Global.IntCollider.OverlapsCircle(CircleIntCollider,UnityEngine.Vector2Int)
  overload: Global.CircleIntCollider.OverlapsCircle*
- uid: Global.CircleIntCollider.OverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2Int)
  commentId: M:Global.CircleIntCollider.OverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2Int)
  id: OverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2Int)
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: OverlapsBounds(BoundsInt, Vector2Int)
  nameWithType: CircleIntCollider.OverlapsBounds(BoundsInt, Vector2Int)
  fullName: CircleIntCollider.OverlapsBounds(UnityEngine.BoundsInt, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OverlapsBounds
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 121
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override bool OverlapsBounds(BoundsInt collider, Vector2Int dPos)
    parameters:
    - id: collider
      type: UnityEngine.BoundsInt
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: System.Boolean
    content.vb: Public Overrides Function OverlapsBounds(collider As BoundsInt, dPos As Vector2Int) As Boolean
  overridden: Global.IntCollider.OverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2Int)
  overload: Global.CircleIntCollider.OverlapsBounds*
- uid: Global.CircleIntCollider.GetRayIntersection(IntRay)
  commentId: M:Global.CircleIntCollider.GetRayIntersection(IntRay)
  id: GetRayIntersection(IntRay)
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: GetRayIntersection(IntRay)
  nameWithType: CircleIntCollider.GetRayIntersection(IntRay)
  fullName: CircleIntCollider.GetRayIntersection(IntRay)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetRayIntersection
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 154
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override Intersection GetRayIntersection(IntRay ray)
    parameters:
    - id: ray
      type: Global.IntRay
    return:
      type: Global.Intersection
    content.vb: Public Overrides Function GetRayIntersection(ray As IntRay) As Intersection
  overridden: Global.IntCollider.GetRayIntersection(IntRay)
  overload: Global.CircleIntCollider.GetRayIntersection*
- uid: Global.CircleIntCollider.GetRayIntersection(IntRay,UnityEngine.Vector2Int)
  commentId: M:Global.CircleIntCollider.GetRayIntersection(IntRay,UnityEngine.Vector2Int)
  id: GetRayIntersection(IntRay,UnityEngine.Vector2Int)
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: GetRayIntersection(IntRay, Vector2Int)
  nameWithType: CircleIntCollider.GetRayIntersection(IntRay, Vector2Int)
  fullName: CircleIntCollider.GetRayIntersection(IntRay, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetRayIntersection
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 159
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Intersection GetRayIntersection(IntRay ray, Vector2Int dPos)
    parameters:
    - id: ray
      type: Global.IntRay
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: Global.Intersection
    content.vb: Public Function GetRayIntersection(ray As IntRay, dPos As Vector2Int) As Intersection
  overload: Global.CircleIntCollider.GetRayIntersection*
- uid: Global.CircleIntCollider.GetBounds
  commentId: M:Global.CircleIntCollider.GetBounds
  id: GetBounds
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: GetBounds()
  nameWithType: CircleIntCollider.GetBounds()
  fullName: CircleIntCollider.GetBounds()
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetBounds
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 210
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override BoundsInt GetBounds()
    return:
      type: UnityEngine.BoundsInt
    content.vb: Public Overrides Function GetBounds() As BoundsInt
  overridden: Global.IntCollider.GetBounds
  overload: Global.CircleIntCollider.GetBounds*
- uid: Global.CircleIntCollider.GetRidingTangent(AABBIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.CircleIntCollider.GetRidingTangent(AABBIntCollider,UnityEngine.Vector2Int)
  id: GetRidingTangent(AABBIntCollider,UnityEngine.Vector2Int)
  parent: Global.CircleIntCollider
  langs:
  - csharp
  - vb
  name: GetRidingTangent(AABBIntCollider, Vector2Int)
  nameWithType: CircleIntCollider.GetRidingTangent(AABBIntCollider, Vector2Int)
  fullName: CircleIntCollider.GetRidingTangent(AABBIntCollider, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Physics/Colliders/CircleIntCollider.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetRidingTangent
    path: ../Assets/Framework/Physics/Colliders/CircleIntCollider.cs
    startLine: 215
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public override Vector2 GetRidingTangent(AABBIntCollider aabb, Vector2Int dPos)
    parameters:
    - id: aabb
      type: Global.AABBIntCollider
    - id: dPos
      type: UnityEngine.Vector2Int
    return:
      type: UnityEngine.Vector2
    content.vb: Public Overrides Function GetRidingTangent(aabb As AABBIntCollider, dPos As Vector2Int) As Vector2
  overridden: Global.IntCollider.GetRidingTangent(AABBIntCollider,UnityEngine.Vector2Int)
  overload: Global.CircleIntCollider.GetRidingTangent*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Global.IntCollider
  commentId: T:Global.IntCollider
  name: IntCollider
  nameWithType: IntCollider
  fullName: IntCollider
- uid: Global.IntCollider.DisableGizmos
  commentId: F:Global.IntCollider.DisableGizmos
  parent: Global.IntCollider
  name: DisableGizmos
  nameWithType: IntCollider.DisableGizmos
  fullName: IntCollider.DisableGizmos
- uid: Global.IntCollider.AlwaysDrawGizmos
  commentId: F:Global.IntCollider.AlwaysDrawGizmos
  parent: Global.IntCollider
  name: AlwaysDrawGizmos
  nameWithType: IntCollider.AlwaysDrawGizmos
  fullName: IntCollider.AlwaysDrawGizmos
- uid: Global.IntCollider.OneWayInteraction
  commentId: F:Global.IntCollider.OneWayInteraction
  parent: Global.IntCollider
  name: OneWayInteraction
  nameWithType: IntCollider.OneWayInteraction
  fullName: IntCollider.OneWayInteraction
- uid: Global.IntCollider.Position
  commentId: P:Global.IntCollider.Position
  parent: Global.IntCollider
  name: Position
  nameWithType: IntCollider.Position
  fullName: IntCollider.Position
- uid: Global.IntCollider.GetPosition
  commentId: M:Global.IntCollider.GetPosition
  parent: Global.IntCollider
  name: GetPosition()
  nameWithType: IntCollider.GetPosition()
  fullName: IntCollider.GetPosition()
  spec.csharp:
  - uid: Global.IntCollider.GetPosition
    name: GetPosition
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntCollider.GetPosition
    name: GetPosition
  - name: (
  - name: )
- uid: Global.IntCollider.SetPosition(UnityEngine.Vector2Int)
  commentId: M:Global.IntCollider.SetPosition(UnityEngine.Vector2Int)
  parent: Global.IntCollider
  isExternal: true
  name: SetPosition(Vector2Int)
  nameWithType: IntCollider.SetPosition(Vector2Int)
  fullName: IntCollider.SetPosition(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntCollider.SetPosition(UnityEngine.Vector2Int)
    name: SetPosition
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.SetPosition(UnityEngine.Vector2Int)
    name: SetPosition
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntCollider.IsCollidable
  commentId: F:Global.IntCollider.IsCollidable
  parent: Global.IntCollider
  name: IsCollidable
  nameWithType: IntCollider.IsCollidable
  fullName: IntCollider.IsCollidable
- uid: Global.IntCollider.Overlaps(IntCollider)
  commentId: M:Global.IntCollider.Overlaps(IntCollider)
  parent: Global.IntCollider
  name: Overlaps(IntCollider)
  nameWithType: IntCollider.Overlaps(IntCollider)
  fullName: IntCollider.Overlaps(IntCollider)
  spec.csharp:
  - uid: Global.IntCollider.Overlaps(IntCollider)
    name: Overlaps
  - name: (
  - uid: Global.IntCollider
    name: IntCollider
  - name: )
  spec.vb:
  - uid: Global.IntCollider.Overlaps(IntCollider)
    name: Overlaps
  - name: (
  - uid: Global.IntCollider
    name: IntCollider
  - name: )
- uid: Global.IntCollider.Overlaps(IntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.IntCollider.Overlaps(IntCollider,UnityEngine.Vector2Int)
  parent: Global.IntCollider
  isExternal: true
  name: Overlaps(IntCollider, Vector2Int)
  nameWithType: IntCollider.Overlaps(IntCollider, Vector2Int)
  fullName: IntCollider.Overlaps(IntCollider, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntCollider.Overlaps(IntCollider,UnityEngine.Vector2Int)
    name: Overlaps
  - name: (
  - uid: Global.IntCollider
    name: IntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.Overlaps(IntCollider,UnityEngine.Vector2Int)
    name: Overlaps
  - name: (
  - uid: Global.IntCollider
    name: IntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntCollider.OverlapsDummyCollider(DummyIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.IntCollider.OverlapsDummyCollider(DummyIntCollider,UnityEngine.Vector2Int)
  parent: Global.IntCollider
  isExternal: true
  name: OverlapsDummyCollider(DummyIntCollider, Vector2Int)
  nameWithType: IntCollider.OverlapsDummyCollider(DummyIntCollider, Vector2Int)
  fullName: IntCollider.OverlapsDummyCollider(DummyIntCollider, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntCollider.OverlapsDummyCollider(DummyIntCollider,UnityEngine.Vector2Int)
    name: OverlapsDummyCollider
  - name: (
  - uid: Global.DummyIntCollider
    name: DummyIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.OverlapsDummyCollider(DummyIntCollider,UnityEngine.Vector2Int)
    name: OverlapsDummyCollider
  - name: (
  - uid: Global.DummyIntCollider
    name: DummyIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntCollider.OverlapsBounds(UnityEngine.BoundsInt)
  commentId: M:Global.IntCollider.OverlapsBounds(UnityEngine.BoundsInt)
  parent: Global.IntCollider
  isExternal: true
  name: OverlapsBounds(BoundsInt)
  nameWithType: IntCollider.OverlapsBounds(BoundsInt)
  fullName: IntCollider.OverlapsBounds(UnityEngine.BoundsInt)
  spec.csharp:
  - uid: Global.IntCollider.OverlapsBounds(UnityEngine.BoundsInt)
    name: OverlapsBounds
  - name: (
  - uid: UnityEngine.BoundsInt
    name: BoundsInt
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.OverlapsBounds(UnityEngine.BoundsInt)
    name: OverlapsBounds
  - name: (
  - uid: UnityEngine.BoundsInt
    name: BoundsInt
    isExternal: true
  - name: )
- uid: Global.IntCollider.OverlapsComposite(CompositeIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.IntCollider.OverlapsComposite(CompositeIntCollider,UnityEngine.Vector2Int)
  parent: Global.IntCollider
  isExternal: true
  name: OverlapsComposite(CompositeIntCollider, Vector2Int)
  nameWithType: IntCollider.OverlapsComposite(CompositeIntCollider, Vector2Int)
  fullName: IntCollider.OverlapsComposite(CompositeIntCollider, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntCollider.OverlapsComposite(CompositeIntCollider,UnityEngine.Vector2Int)
    name: OverlapsComposite
  - name: (
  - uid: Global.CompositeIntCollider
    name: CompositeIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.OverlapsComposite(CompositeIntCollider,UnityEngine.Vector2Int)
    name: OverlapsComposite
  - name: (
  - uid: Global.CompositeIntCollider
    name: CompositeIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntCollider.Intersects(IntRay)
  commentId: M:Global.IntCollider.Intersects(IntRay)
  parent: Global.IntCollider
  name: Intersects(IntRay)
  nameWithType: IntCollider.Intersects(IntRay)
  fullName: IntCollider.Intersects(IntRay)
  spec.csharp:
  - uid: Global.IntCollider.Intersects(IntRay)
    name: Intersects
  - name: (
  - uid: Global.IntRay
    name: IntRay
  - name: )
  spec.vb:
  - uid: Global.IntCollider.Intersects(IntRay)
    name: Intersects
  - name: (
  - uid: Global.IntRay
    name: IntRay
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.CircleIntCollider.WorldCenter*
  commentId: Overload:Global.CircleIntCollider.WorldCenter
  name: WorldCenter
  nameWithType: CircleIntCollider.WorldCenter
  fullName: CircleIntCollider.WorldCenter
- uid: Global.CircleIntCollider.Top*
  commentId: Overload:Global.CircleIntCollider.Top
  name: Top
  nameWithType: CircleIntCollider.Top
  fullName: CircleIntCollider.Top
- uid: Global.CircleIntCollider.Bottom*
  commentId: Overload:Global.CircleIntCollider.Bottom
  name: Bottom
  nameWithType: CircleIntCollider.Bottom
  fullName: CircleIntCollider.Bottom
- uid: Global.CircleIntCollider.Left*
  commentId: Overload:Global.CircleIntCollider.Left
  name: Left
  nameWithType: CircleIntCollider.Left
  fullName: CircleIntCollider.Left
- uid: Global.CircleIntCollider.Right*
  commentId: Overload:Global.CircleIntCollider.Right
  name: Right
  nameWithType: CircleIntCollider.Right
  fullName: CircleIntCollider.Right
- uid: Global.CircleIntCollider.ContainsPoint*
  commentId: Overload:Global.CircleIntCollider.ContainsPoint
  name: ContainsPoint
  nameWithType: CircleIntCollider.ContainsPoint
  fullName: CircleIntCollider.ContainsPoint
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.CircleIntCollider.ApproximateOverlapsBounds*
  commentId: Overload:Global.CircleIntCollider.ApproximateOverlapsBounds
  name: ApproximateOverlapsBounds
  nameWithType: CircleIntCollider.ApproximateOverlapsBounds
  fullName: CircleIntCollider.ApproximateOverlapsBounds
- uid: UnityEngine.BoundsInt
  commentId: T:UnityEngine.BoundsInt
  parent: UnityEngine
  isExternal: true
  name: BoundsInt
  nameWithType: BoundsInt
  fullName: UnityEngine.BoundsInt
- uid: Global.CircleIntCollider.ApproximateOverlapsTile*
  commentId: Overload:Global.CircleIntCollider.ApproximateOverlapsTile
  name: ApproximateOverlapsTile
  nameWithType: CircleIntCollider.ApproximateOverlapsTile
  fullName: CircleIntCollider.ApproximateOverlapsTile
- uid: UnityEngine.Tilemaps.Tilemap
  commentId: T:UnityEngine.Tilemaps.Tilemap
  parent: UnityEngine.Tilemaps
  isExternal: true
  name: Tilemap
  nameWithType: Tilemap
  fullName: UnityEngine.Tilemaps.Tilemap
- uid: UnityEngine.Vector3Int
  commentId: T:UnityEngine.Vector3Int
  parent: UnityEngine
  isExternal: true
  name: Vector3Int
  nameWithType: Vector3Int
  fullName: UnityEngine.Vector3Int
- uid: UnityEngine.Tilemaps
  commentId: N:UnityEngine.Tilemaps
  isExternal: true
  name: UnityEngine.Tilemaps
  nameWithType: UnityEngine.Tilemaps
  fullName: UnityEngine.Tilemaps
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Tilemaps
    name: Tilemaps
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Tilemaps
    name: Tilemaps
    isExternal: true
- uid: Global.CircleIntCollider.OverlapsTile*
  commentId: Overload:Global.CircleIntCollider.OverlapsTile
  name: OverlapsTile
  nameWithType: CircleIntCollider.OverlapsTile
  fullName: CircleIntCollider.OverlapsTile
- uid: Global.IntCollider.ContainsPoint(UnityEngine.Vector2Int)
  commentId: M:Global.IntCollider.ContainsPoint(UnityEngine.Vector2Int)
  parent: Global.IntCollider
  isExternal: true
  name: ContainsPoint(Vector2Int)
  nameWithType: IntCollider.ContainsPoint(Vector2Int)
  fullName: IntCollider.ContainsPoint(UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntCollider.ContainsPoint(UnityEngine.Vector2Int)
    name: ContainsPoint
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.ContainsPoint(UnityEngine.Vector2Int)
    name: ContainsPoint
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.IntCollider.DrawGizmos(UnityEngine.Color)
  commentId: M:Global.IntCollider.DrawGizmos(UnityEngine.Color)
  parent: Global.IntCollider
  isExternal: true
  name: DrawGizmos(Color)
  nameWithType: IntCollider.DrawGizmos(Color)
  fullName: IntCollider.DrawGizmos(UnityEngine.Color)
  spec.csharp:
  - uid: Global.IntCollider.DrawGizmos(UnityEngine.Color)
    name: DrawGizmos
  - name: (
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.DrawGizmos(UnityEngine.Color)
    name: DrawGizmos
  - name: (
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
- uid: Global.CircleIntCollider.DrawGizmos*
  commentId: Overload:Global.CircleIntCollider.DrawGizmos
  name: DrawGizmos
  nameWithType: CircleIntCollider.DrawGizmos
  fullName: CircleIntCollider.DrawGizmos
- uid: UnityEngine.Color
  commentId: T:UnityEngine.Color
  parent: UnityEngine
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.IntCollider.OverlapsAABB(AABBIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.IntCollider.OverlapsAABB(AABBIntCollider,UnityEngine.Vector2Int)
  parent: Global.IntCollider
  isExternal: true
  name: OverlapsAABB(AABBIntCollider, Vector2Int)
  nameWithType: IntCollider.OverlapsAABB(AABBIntCollider, Vector2Int)
  fullName: IntCollider.OverlapsAABB(AABBIntCollider, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntCollider.OverlapsAABB(AABBIntCollider,UnityEngine.Vector2Int)
    name: OverlapsAABB
  - name: (
  - uid: Global.AABBIntCollider
    name: AABBIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.OverlapsAABB(AABBIntCollider,UnityEngine.Vector2Int)
    name: OverlapsAABB
  - name: (
  - uid: Global.AABBIntCollider
    name: AABBIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.CircleIntCollider.OverlapsAABB*
  commentId: Overload:Global.CircleIntCollider.OverlapsAABB
  name: OverlapsAABB
  nameWithType: CircleIntCollider.OverlapsAABB
  fullName: CircleIntCollider.OverlapsAABB
- uid: Global.AABBIntCollider
  commentId: T:Global.AABBIntCollider
  name: AABBIntCollider
  nameWithType: AABBIntCollider
  fullName: AABBIntCollider
- uid: Global.IntCollider.OverlapsTilemap(TilemapIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.IntCollider.OverlapsTilemap(TilemapIntCollider,UnityEngine.Vector2Int)
  parent: Global.IntCollider
  isExternal: true
  name: OverlapsTilemap(TilemapIntCollider, Vector2Int)
  nameWithType: IntCollider.OverlapsTilemap(TilemapIntCollider, Vector2Int)
  fullName: IntCollider.OverlapsTilemap(TilemapIntCollider, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntCollider.OverlapsTilemap(TilemapIntCollider,UnityEngine.Vector2Int)
    name: OverlapsTilemap
  - name: (
  - uid: Global.TilemapIntCollider
    name: TilemapIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.OverlapsTilemap(TilemapIntCollider,UnityEngine.Vector2Int)
    name: OverlapsTilemap
  - name: (
  - uid: Global.TilemapIntCollider
    name: TilemapIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.CircleIntCollider.OverlapsTilemap*
  commentId: Overload:Global.CircleIntCollider.OverlapsTilemap
  name: OverlapsTilemap
  nameWithType: CircleIntCollider.OverlapsTilemap
  fullName: CircleIntCollider.OverlapsTilemap
- uid: Global.TilemapIntCollider
  commentId: T:Global.TilemapIntCollider
  name: TilemapIntCollider
  nameWithType: TilemapIntCollider
  fullName: TilemapIntCollider
- uid: Global.IntCollider.OverlapsEdge(EdgeIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.IntCollider.OverlapsEdge(EdgeIntCollider,UnityEngine.Vector2Int)
  parent: Global.IntCollider
  isExternal: true
  name: OverlapsEdge(EdgeIntCollider, Vector2Int)
  nameWithType: IntCollider.OverlapsEdge(EdgeIntCollider, Vector2Int)
  fullName: IntCollider.OverlapsEdge(EdgeIntCollider, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntCollider.OverlapsEdge(EdgeIntCollider,UnityEngine.Vector2Int)
    name: OverlapsEdge
  - name: (
  - uid: Global.EdgeIntCollider
    name: EdgeIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.OverlapsEdge(EdgeIntCollider,UnityEngine.Vector2Int)
    name: OverlapsEdge
  - name: (
  - uid: Global.EdgeIntCollider
    name: EdgeIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.CircleIntCollider.OverlapsEdge*
  commentId: Overload:Global.CircleIntCollider.OverlapsEdge
  name: OverlapsEdge
  nameWithType: CircleIntCollider.OverlapsEdge
  fullName: CircleIntCollider.OverlapsEdge
- uid: Global.EdgeIntCollider
  commentId: T:Global.EdgeIntCollider
  name: EdgeIntCollider
  nameWithType: EdgeIntCollider
  fullName: EdgeIntCollider
- uid: Global.IntCollider.OverlapsCircle(CircleIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.IntCollider.OverlapsCircle(CircleIntCollider,UnityEngine.Vector2Int)
  parent: Global.IntCollider
  isExternal: true
  name: OverlapsCircle(CircleIntCollider, Vector2Int)
  nameWithType: IntCollider.OverlapsCircle(CircleIntCollider, Vector2Int)
  fullName: IntCollider.OverlapsCircle(CircleIntCollider, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntCollider.OverlapsCircle(CircleIntCollider,UnityEngine.Vector2Int)
    name: OverlapsCircle
  - name: (
  - uid: Global.CircleIntCollider
    name: CircleIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.OverlapsCircle(CircleIntCollider,UnityEngine.Vector2Int)
    name: OverlapsCircle
  - name: (
  - uid: Global.CircleIntCollider
    name: CircleIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.CircleIntCollider.OverlapsCircle*
  commentId: Overload:Global.CircleIntCollider.OverlapsCircle
  name: OverlapsCircle
  nameWithType: CircleIntCollider.OverlapsCircle
  fullName: CircleIntCollider.OverlapsCircle
- uid: Global.CircleIntCollider
  commentId: T:Global.CircleIntCollider
  name: CircleIntCollider
  nameWithType: CircleIntCollider
  fullName: CircleIntCollider
- uid: Global.IntCollider.OverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2Int)
  commentId: M:Global.IntCollider.OverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2Int)
  parent: Global.IntCollider
  isExternal: true
  name: OverlapsBounds(BoundsInt, Vector2Int)
  nameWithType: IntCollider.OverlapsBounds(BoundsInt, Vector2Int)
  fullName: IntCollider.OverlapsBounds(UnityEngine.BoundsInt, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntCollider.OverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2Int)
    name: OverlapsBounds
  - name: (
  - uid: UnityEngine.BoundsInt
    name: BoundsInt
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.OverlapsBounds(UnityEngine.BoundsInt,UnityEngine.Vector2Int)
    name: OverlapsBounds
  - name: (
  - uid: UnityEngine.BoundsInt
    name: BoundsInt
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.CircleIntCollider.OverlapsBounds*
  commentId: Overload:Global.CircleIntCollider.OverlapsBounds
  name: OverlapsBounds
  nameWithType: CircleIntCollider.OverlapsBounds
  fullName: CircleIntCollider.OverlapsBounds
- uid: Global.IntCollider.GetRayIntersection(IntRay)
  commentId: M:Global.IntCollider.GetRayIntersection(IntRay)
  parent: Global.IntCollider
  name: GetRayIntersection(IntRay)
  nameWithType: IntCollider.GetRayIntersection(IntRay)
  fullName: IntCollider.GetRayIntersection(IntRay)
  spec.csharp:
  - uid: Global.IntCollider.GetRayIntersection(IntRay)
    name: GetRayIntersection
  - name: (
  - uid: Global.IntRay
    name: IntRay
  - name: )
  spec.vb:
  - uid: Global.IntCollider.GetRayIntersection(IntRay)
    name: GetRayIntersection
  - name: (
  - uid: Global.IntRay
    name: IntRay
  - name: )
- uid: Global.CircleIntCollider.GetRayIntersection*
  commentId: Overload:Global.CircleIntCollider.GetRayIntersection
  name: GetRayIntersection
  nameWithType: CircleIntCollider.GetRayIntersection
  fullName: CircleIntCollider.GetRayIntersection
- uid: Global.IntRay
  commentId: T:Global.IntRay
  name: IntRay
  nameWithType: IntRay
  fullName: IntRay
- uid: Global.Intersection
  commentId: T:Global.Intersection
  name: Intersection
  nameWithType: Intersection
  fullName: Intersection
- uid: Global.IntCollider.GetBounds
  commentId: M:Global.IntCollider.GetBounds
  parent: Global.IntCollider
  name: GetBounds()
  nameWithType: IntCollider.GetBounds()
  fullName: IntCollider.GetBounds()
  spec.csharp:
  - uid: Global.IntCollider.GetBounds
    name: GetBounds
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IntCollider.GetBounds
    name: GetBounds
  - name: (
  - name: )
- uid: Global.CircleIntCollider.GetBounds*
  commentId: Overload:Global.CircleIntCollider.GetBounds
  name: GetBounds
  nameWithType: CircleIntCollider.GetBounds
  fullName: CircleIntCollider.GetBounds
- uid: Global.IntCollider.GetRidingTangent(AABBIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.IntCollider.GetRidingTangent(AABBIntCollider,UnityEngine.Vector2Int)
  parent: Global.IntCollider
  isExternal: true
  name: GetRidingTangent(AABBIntCollider, Vector2Int)
  nameWithType: IntCollider.GetRidingTangent(AABBIntCollider, Vector2Int)
  fullName: IntCollider.GetRidingTangent(AABBIntCollider, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.IntCollider.GetRidingTangent(AABBIntCollider,UnityEngine.Vector2Int)
    name: GetRidingTangent
  - name: (
  - uid: Global.AABBIntCollider
    name: AABBIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IntCollider.GetRidingTangent(AABBIntCollider,UnityEngine.Vector2Int)
    name: GetRidingTangent
  - name: (
  - uid: Global.AABBIntCollider
    name: AABBIntCollider
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.CircleIntCollider.GetRidingTangent*
  commentId: Overload:Global.CircleIntCollider.GetRidingTangent
  name: GetRidingTangent
  nameWithType: CircleIntCollider.GetRidingTangent
  fullName: CircleIntCollider.GetRidingTangent
