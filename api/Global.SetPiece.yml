### YamlMime:ManagedReference
items:
- uid: Global.SetPiece
  commentId: T:Global.SetPiece
  id: SetPiece
  parent: Global
  children:
  - Global.SetPiece.ArtTilemap
  - Global.SetPiece.Bottom
  - Global.SetPiece.BottomLeft
  - Global.SetPiece.BottomRight
  - Global.SetPiece.Bounds
  - Global.SetPiece.Center
  - Global.SetPiece.FunctionalTilemap
  - Global.SetPiece.GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
  - Global.SetPiece.GetSpawnProperties
  - Global.SetPiece.Height
  - Global.SetPiece.Left
  - Global.SetPiece.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  - Global.SetPiece.PasteOntoSection(Section,UnityEngine.Vector2Int)
  - Global.SetPiece.ResolveSpawnLocation
  - Global.SetPiece.Right
  - Global.SetPiece.ShowLabel
  - Global.SetPiece.SpawnProperties
  - Global.SetPiece.Top
  - Global.SetPiece.TopLeft
  - Global.SetPiece.TopRight
  - Global.SetPiece.Width
  langs:
  - csharp
  - vb
  name: SetPiece
  nameWithType: SetPiece
  fullName: SetPiece
  type: Class
  source:
    remote:
      path: Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SetPiece
    path: ../Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
    startLine: 6
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [SelectionBase]

      public class SetPiece : MonoBehaviour, ISpawnable
    content.vb: >-
      <SelectionBase>

      Public Class SetPiece Inherits MonoBehaviour Implements ISpawnable
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  implements:
  - Global.ISpawnable
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: UnityEngine.SelectionBaseAttribute
    ctor: UnityEngine.SelectionBaseAttribute.#ctor
    arguments: []
- uid: Global.SetPiece.SpawnProperties
  commentId: F:Global.SetPiece.SpawnProperties
  id: SpawnProperties
  parent: Global.SetPiece
  langs:
  - csharp
  - vb
  name: SpawnProperties
  nameWithType: SetPiece.SpawnProperties
  fullName: SetPiece.SpawnProperties
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SpawnProperties
    path: ../Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public EnemySpawnProperties SpawnProperties
    return:
      type: Global.EnemySpawnProperties
    content.vb: Public SpawnProperties As EnemySpawnProperties
- uid: Global.SetPiece.ShowLabel
  commentId: F:Global.SetPiece.ShowLabel
  id: ShowLabel
  parent: Global.SetPiece
  langs:
  - csharp
  - vb
  name: ShowLabel
  nameWithType: SetPiece.ShowLabel
  fullName: SetPiece.ShowLabel
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ShowLabel
    path: ../Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool ShowLabel
    return:
      type: System.Boolean
    content.vb: Public ShowLabel As Boolean
- uid: Global.SetPiece.FunctionalTilemap
  commentId: F:Global.SetPiece.FunctionalTilemap
  id: FunctionalTilemap
  parent: Global.SetPiece
  langs:
  - csharp
  - vb
  name: FunctionalTilemap
  nameWithType: SetPiece.FunctionalTilemap
  fullName: SetPiece.FunctionalTilemap
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: FunctionalTilemap
    path: ../Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Tilemap FunctionalTilemap
    return:
      type: UnityEngine.Tilemaps.Tilemap
    content.vb: Public FunctionalTilemap As Tilemap
- uid: Global.SetPiece.ArtTilemap
  commentId: F:Global.SetPiece.ArtTilemap
  id: ArtTilemap
  parent: Global.SetPiece
  langs:
  - csharp
  - vb
  name: ArtTilemap
  nameWithType: SetPiece.ArtTilemap
  fullName: SetPiece.ArtTilemap
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ArtTilemap
    path: ../Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
    startLine: 13
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Tilemap ArtTilemap
    return:
      type: UnityEngine.Tilemaps.Tilemap
    content.vb: Public ArtTilemap As Tilemap
- uid: Global.SetPiece.TopLeft
  commentId: P:Global.SetPiece.TopLeft
  id: TopLeft
  parent: Global.SetPiece
  langs:
  - csharp
  - vb
  name: TopLeft
  nameWithType: SetPiece.TopLeft
  fullName: SetPiece.TopLeft
  type: Property
  source:
    remote:
      path: Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TopLeft
    path: ../Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector3Int TopLeft { get; }
    parameters: []
    return:
      type: UnityEngine.Vector3Int
    content.vb: Public ReadOnly Property TopLeft As Vector3Int
  overload: Global.SetPiece.TopLeft*
- uid: Global.SetPiece.BottomLeft
  commentId: P:Global.SetPiece.BottomLeft
  id: BottomLeft
  parent: Global.SetPiece
  langs:
  - csharp
  - vb
  name: BottomLeft
  nameWithType: SetPiece.BottomLeft
  fullName: SetPiece.BottomLeft
  type: Property
  source:
    remote:
      path: Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BottomLeft
    path: ../Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector3Int BottomLeft { get; }
    parameters: []
    return:
      type: UnityEngine.Vector3Int
    content.vb: Public ReadOnly Property BottomLeft As Vector3Int
  overload: Global.SetPiece.BottomLeft*
- uid: Global.SetPiece.BottomRight
  commentId: P:Global.SetPiece.BottomRight
  id: BottomRight
  parent: Global.SetPiece
  langs:
  - csharp
  - vb
  name: BottomRight
  nameWithType: SetPiece.BottomRight
  fullName: SetPiece.BottomRight
  type: Property
  source:
    remote:
      path: Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BottomRight
    path: ../Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
    startLine: 17
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector3Int BottomRight { get; }
    parameters: []
    return:
      type: UnityEngine.Vector3Int
    content.vb: Public ReadOnly Property BottomRight As Vector3Int
  overload: Global.SetPiece.BottomRight*
- uid: Global.SetPiece.TopRight
  commentId: P:Global.SetPiece.TopRight
  id: TopRight
  parent: Global.SetPiece
  langs:
  - csharp
  - vb
  name: TopRight
  nameWithType: SetPiece.TopRight
  fullName: SetPiece.TopRight
  type: Property
  source:
    remote:
      path: Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TopRight
    path: ../Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector3Int TopRight { get; }
    parameters: []
    return:
      type: UnityEngine.Vector3Int
    content.vb: Public ReadOnly Property TopRight As Vector3Int
  overload: Global.SetPiece.TopRight*
- uid: Global.SetPiece.Bounds
  commentId: P:Global.SetPiece.Bounds
  id: Bounds
  parent: Global.SetPiece
  langs:
  - csharp
  - vb
  name: Bounds
  nameWithType: SetPiece.Bounds
  fullName: SetPiece.Bounds
  type: Property
  source:
    remote:
      path: Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Bounds
    path: ../Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public BoundsInt Bounds { get; }
    parameters: []
    return:
      type: UnityEngine.BoundsInt
    content.vb: Public ReadOnly Property Bounds As BoundsInt
  overload: Global.SetPiece.Bounds*
- uid: Global.SetPiece.Width
  commentId: P:Global.SetPiece.Width
  id: Width
  parent: Global.SetPiece
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: SetPiece.Width
  fullName: SetPiece.Width
  type: Property
  source:
    remote:
      path: Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Width
    path: ../Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
    startLine: 21
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int Width { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Width As Integer
  overload: Global.SetPiece.Width*
- uid: Global.SetPiece.Height
  commentId: P:Global.SetPiece.Height
  id: Height
  parent: Global.SetPiece
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: SetPiece.Height
  fullName: SetPiece.Height
  type: Property
  source:
    remote:
      path: Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Height
    path: ../Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int Height { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Height As Integer
  overload: Global.SetPiece.Height*
- uid: Global.SetPiece.Left
  commentId: P:Global.SetPiece.Left
  id: Left
  parent: Global.SetPiece
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: SetPiece.Left
  fullName: SetPiece.Left
  type: Property
  source:
    remote:
      path: Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Left
    path: ../Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int Left { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Left As Integer
  overload: Global.SetPiece.Left*
- uid: Global.SetPiece.Bottom
  commentId: P:Global.SetPiece.Bottom
  id: Bottom
  parent: Global.SetPiece
  langs:
  - csharp
  - vb
  name: Bottom
  nameWithType: SetPiece.Bottom
  fullName: SetPiece.Bottom
  type: Property
  source:
    remote:
      path: Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Bottom
    path: ../Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int Bottom { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Bottom As Integer
  overload: Global.SetPiece.Bottom*
- uid: Global.SetPiece.Right
  commentId: P:Global.SetPiece.Right
  id: Right
  parent: Global.SetPiece
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: SetPiece.Right
  fullName: SetPiece.Right
  type: Property
  source:
    remote:
      path: Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Right
    path: ../Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int Right { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Right As Integer
  overload: Global.SetPiece.Right*
- uid: Global.SetPiece.Top
  commentId: P:Global.SetPiece.Top
  id: Top
  parent: Global.SetPiece
  langs:
  - csharp
  - vb
  name: Top
  nameWithType: SetPiece.Top
  fullName: SetPiece.Top
  type: Property
  source:
    remote:
      path: Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Top
    path: ../Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
    startLine: 26
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int Top { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Top As Integer
  overload: Global.SetPiece.Top*
- uid: Global.SetPiece.Center
  commentId: P:Global.SetPiece.Center
  id: Center
  parent: Global.SetPiece
  langs:
  - csharp
  - vb
  name: Center
  nameWithType: SetPiece.Center
  fullName: SetPiece.Center
  type: Property
  source:
    remote:
      path: Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Center
    path: ../Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
    startLine: 28
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2 Center { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property Center As Vector2
  overload: Global.SetPiece.Center*
- uid: Global.SetPiece.PasteOntoSection(Section,UnityEngine.Vector2Int)
  commentId: M:Global.SetPiece.PasteOntoSection(Section,UnityEngine.Vector2Int)
  id: PasteOntoSection(Section,UnityEngine.Vector2Int)
  parent: Global.SetPiece
  langs:
  - csharp
  - vb
  name: PasteOntoSection(Section, Vector2Int)
  nameWithType: SetPiece.PasteOntoSection(Section, Vector2Int)
  fullName: SetPiece.PasteOntoSection(Section, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PasteOntoSection
    path: ../Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
    startLine: 52
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void PasteOntoSection(Section dest, Vector2Int world_paste_loc)
    parameters:
    - id: dest
      type: Global.Section
    - id: world_paste_loc
      type: UnityEngine.Vector2Int
    content.vb: Public Sub PasteOntoSection(dest As Section, world_paste_loc As Vector2Int)
  overload: Global.SetPiece.PasteOntoSection*
- uid: Global.SetPiece.GetSpawnProperties
  commentId: M:Global.SetPiece.GetSpawnProperties
  id: GetSpawnProperties
  parent: Global.SetPiece
  langs:
  - csharp
  - vb
  name: GetSpawnProperties()
  nameWithType: SetPiece.GetSpawnProperties()
  fullName: SetPiece.GetSpawnProperties()
  type: Method
  source:
    remote:
      path: Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetSpawnProperties
    path: ../Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
    startLine: 138
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public EnemySpawnProperties GetSpawnProperties()
    return:
      type: Global.EnemySpawnProperties
    content.vb: Public Function GetSpawnProperties() As EnemySpawnProperties
  overload: Global.SetPiece.GetSpawnProperties*
  implements:
  - Global.ISpawnable.GetSpawnProperties
- uid: Global.SetPiece.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  commentId: M:Global.SetPiece.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  id: OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  parent: Global.SetPiece
  langs:
  - csharp
  - vb
  name: OnLocalSpaceSpawnBoundsSet(Vector2Int, Vector2Int)
  nameWithType: SetPiece.OnLocalSpaceSpawnBoundsSet(Vector2Int, Vector2Int)
  fullName: SetPiece.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnLocalSpaceSpawnBoundsSet
    path: ../Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
    startLine: 143
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void OnLocalSpaceSpawnBoundsSet(Vector2Int MinLocalBounds, Vector2Int MaxLocalBounds)
    parameters:
    - id: MinLocalBounds
      type: UnityEngine.Vector2Int
    - id: MaxLocalBounds
      type: UnityEngine.Vector2Int
    content.vb: Public Sub OnLocalSpaceSpawnBoundsSet(MinLocalBounds As Vector2Int, MaxLocalBounds As Vector2Int)
  overload: Global.SetPiece.OnLocalSpaceSpawnBoundsSet*
  implements:
  - Global.ISpawnable.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
- uid: Global.SetPiece.GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
  commentId: M:Global.SetPiece.GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
  id: GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
  parent: Global.SetPiece
  langs:
  - csharp
  - vb
  name: GetSpawnLocationFromBounds(Vector3, Vector3)
  nameWithType: SetPiece.GetSpawnLocationFromBounds(Vector3, Vector3)
  fullName: SetPiece.GetSpawnLocationFromBounds(UnityEngine.Vector3, UnityEngine.Vector3)
  type: Method
  source:
    remote:
      path: Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetSpawnLocationFromBounds
    path: ../Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
    startLine: 148
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector3 GetSpawnLocationFromBounds(Vector3 MinWorldBounds, Vector3 MaxWorldBounds)
    parameters:
    - id: MinWorldBounds
      type: UnityEngine.Vector3
    - id: MaxWorldBounds
      type: UnityEngine.Vector3
    return:
      type: UnityEngine.Vector3
    content.vb: Public Function GetSpawnLocationFromBounds(MinWorldBounds As Vector3, MaxWorldBounds As Vector3) As Vector3
  overload: Global.SetPiece.GetSpawnLocationFromBounds*
  implements:
  - Global.ISpawnable.GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
- uid: Global.SetPiece.ResolveSpawnLocation
  commentId: M:Global.SetPiece.ResolveSpawnLocation
  id: ResolveSpawnLocation
  parent: Global.SetPiece
  langs:
  - csharp
  - vb
  name: ResolveSpawnLocation()
  nameWithType: SetPiece.ResolveSpawnLocation()
  fullName: SetPiece.ResolveSpawnLocation()
  type: Method
  source:
    remote:
      path: Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResolveSpawnLocation
    path: ../Assets/Framework/Procedural Generation/SetPieces/SetPiece.cs
    startLine: 153
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void ResolveSpawnLocation()
    content.vb: Public Sub ResolveSpawnLocation()
  overload: Global.SetPiece.ResolveSpawnLocation*
  implements:
  - Global.ISpawnable.ResolveSpawnLocation
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Global.ISpawnable
  commentId: T:Global.ISpawnable
  name: ISpawnable
  nameWithType: ISpawnable
  fullName: ISpawnable
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.EnemySpawnProperties
  commentId: T:Global.EnemySpawnProperties
  name: EnemySpawnProperties
  nameWithType: EnemySpawnProperties
  fullName: EnemySpawnProperties
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UnityEngine.Tilemaps.Tilemap
  commentId: T:UnityEngine.Tilemaps.Tilemap
  parent: UnityEngine.Tilemaps
  isExternal: true
  name: Tilemap
  nameWithType: Tilemap
  fullName: UnityEngine.Tilemaps.Tilemap
- uid: UnityEngine.Tilemaps
  commentId: N:UnityEngine.Tilemaps
  isExternal: true
  name: UnityEngine.Tilemaps
  nameWithType: UnityEngine.Tilemaps
  fullName: UnityEngine.Tilemaps
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Tilemaps
    name: Tilemaps
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Tilemaps
    name: Tilemaps
    isExternal: true
- uid: Global.SetPiece.TopLeft*
  commentId: Overload:Global.SetPiece.TopLeft
  name: TopLeft
  nameWithType: SetPiece.TopLeft
  fullName: SetPiece.TopLeft
- uid: UnityEngine.Vector3Int
  commentId: T:UnityEngine.Vector3Int
  parent: UnityEngine
  isExternal: true
  name: Vector3Int
  nameWithType: Vector3Int
  fullName: UnityEngine.Vector3Int
- uid: Global.SetPiece.BottomLeft*
  commentId: Overload:Global.SetPiece.BottomLeft
  name: BottomLeft
  nameWithType: SetPiece.BottomLeft
  fullName: SetPiece.BottomLeft
- uid: Global.SetPiece.BottomRight*
  commentId: Overload:Global.SetPiece.BottomRight
  name: BottomRight
  nameWithType: SetPiece.BottomRight
  fullName: SetPiece.BottomRight
- uid: Global.SetPiece.TopRight*
  commentId: Overload:Global.SetPiece.TopRight
  name: TopRight
  nameWithType: SetPiece.TopRight
  fullName: SetPiece.TopRight
- uid: Global.SetPiece.Bounds*
  commentId: Overload:Global.SetPiece.Bounds
  name: Bounds
  nameWithType: SetPiece.Bounds
  fullName: SetPiece.Bounds
- uid: UnityEngine.BoundsInt
  commentId: T:UnityEngine.BoundsInt
  parent: UnityEngine
  isExternal: true
  name: BoundsInt
  nameWithType: BoundsInt
  fullName: UnityEngine.BoundsInt
- uid: Global.SetPiece.Width*
  commentId: Overload:Global.SetPiece.Width
  name: Width
  nameWithType: SetPiece.Width
  fullName: SetPiece.Width
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.SetPiece.Height*
  commentId: Overload:Global.SetPiece.Height
  name: Height
  nameWithType: SetPiece.Height
  fullName: SetPiece.Height
- uid: Global.SetPiece.Left*
  commentId: Overload:Global.SetPiece.Left
  name: Left
  nameWithType: SetPiece.Left
  fullName: SetPiece.Left
- uid: Global.SetPiece.Bottom*
  commentId: Overload:Global.SetPiece.Bottom
  name: Bottom
  nameWithType: SetPiece.Bottom
  fullName: SetPiece.Bottom
- uid: Global.SetPiece.Right*
  commentId: Overload:Global.SetPiece.Right
  name: Right
  nameWithType: SetPiece.Right
  fullName: SetPiece.Right
- uid: Global.SetPiece.Top*
  commentId: Overload:Global.SetPiece.Top
  name: Top
  nameWithType: SetPiece.Top
  fullName: SetPiece.Top
- uid: Global.SetPiece.Center*
  commentId: Overload:Global.SetPiece.Center
  name: Center
  nameWithType: SetPiece.Center
  fullName: SetPiece.Center
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.SetPiece.PasteOntoSection*
  commentId: Overload:Global.SetPiece.PasteOntoSection
  name: PasteOntoSection
  nameWithType: SetPiece.PasteOntoSection
  fullName: SetPiece.PasteOntoSection
- uid: Global.Section
  commentId: T:Global.Section
  name: Section
  nameWithType: Section
  fullName: Section
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: Global.SetPiece.GetSpawnProperties*
  commentId: Overload:Global.SetPiece.GetSpawnProperties
  name: GetSpawnProperties
  nameWithType: SetPiece.GetSpawnProperties
  fullName: SetPiece.GetSpawnProperties
- uid: Global.ISpawnable.GetSpawnProperties
  commentId: M:Global.ISpawnable.GetSpawnProperties
  parent: Global.ISpawnable
  name: GetSpawnProperties()
  nameWithType: ISpawnable.GetSpawnProperties()
  fullName: ISpawnable.GetSpawnProperties()
  spec.csharp:
  - uid: Global.ISpawnable.GetSpawnProperties
    name: GetSpawnProperties
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ISpawnable.GetSpawnProperties
    name: GetSpawnProperties
  - name: (
  - name: )
- uid: Global.SetPiece.OnLocalSpaceSpawnBoundsSet*
  commentId: Overload:Global.SetPiece.OnLocalSpaceSpawnBoundsSet
  name: OnLocalSpaceSpawnBoundsSet
  nameWithType: SetPiece.OnLocalSpaceSpawnBoundsSet
  fullName: SetPiece.OnLocalSpaceSpawnBoundsSet
- uid: Global.ISpawnable.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  commentId: M:Global.ISpawnable.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  parent: Global.ISpawnable
  isExternal: true
  name: OnLocalSpaceSpawnBoundsSet(Vector2Int, Vector2Int)
  nameWithType: ISpawnable.OnLocalSpaceSpawnBoundsSet(Vector2Int, Vector2Int)
  fullName: ISpawnable.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int, UnityEngine.Vector2Int)
  spec.csharp:
  - uid: Global.ISpawnable.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
    name: OnLocalSpaceSpawnBoundsSet
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ISpawnable.OnLocalSpaceSpawnBoundsSet(UnityEngine.Vector2Int,UnityEngine.Vector2Int)
    name: OnLocalSpaceSpawnBoundsSet
  - name: (
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2Int
    name: Vector2Int
    isExternal: true
  - name: )
- uid: Global.SetPiece.GetSpawnLocationFromBounds*
  commentId: Overload:Global.SetPiece.GetSpawnLocationFromBounds
  name: GetSpawnLocationFromBounds
  nameWithType: SetPiece.GetSpawnLocationFromBounds
  fullName: SetPiece.GetSpawnLocationFromBounds
- uid: Global.ISpawnable.GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
  commentId: M:Global.ISpawnable.GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
  parent: Global.ISpawnable
  isExternal: true
  name: GetSpawnLocationFromBounds(Vector3, Vector3)
  nameWithType: ISpawnable.GetSpawnLocationFromBounds(Vector3, Vector3)
  fullName: ISpawnable.GetSpawnLocationFromBounds(UnityEngine.Vector3, UnityEngine.Vector3)
  spec.csharp:
  - uid: Global.ISpawnable.GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
    name: GetSpawnLocationFromBounds
  - name: (
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ISpawnable.GetSpawnLocationFromBounds(UnityEngine.Vector3,UnityEngine.Vector3)
    name: GetSpawnLocationFromBounds
  - name: (
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: )
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: Global.SetPiece.ResolveSpawnLocation*
  commentId: Overload:Global.SetPiece.ResolveSpawnLocation
  name: ResolveSpawnLocation
  nameWithType: SetPiece.ResolveSpawnLocation
  fullName: SetPiece.ResolveSpawnLocation
- uid: Global.ISpawnable.ResolveSpawnLocation
  commentId: M:Global.ISpawnable.ResolveSpawnLocation
  parent: Global.ISpawnable
  name: ResolveSpawnLocation()
  nameWithType: ISpawnable.ResolveSpawnLocation()
  fullName: ISpawnable.ResolveSpawnLocation()
  spec.csharp:
  - uid: Global.ISpawnable.ResolveSpawnLocation
    name: ResolveSpawnLocation
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ISpawnable.ResolveSpawnLocation
    name: ResolveSpawnLocation
  - name: (
  - name: )
