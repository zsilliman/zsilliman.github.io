### YamlMime:ManagedReference
items:
- uid: Global.ConditionalShowComplexAttribute.LogicalOperator
  commentId: T:Global.ConditionalShowComplexAttribute.LogicalOperator
  id: ConditionalShowComplexAttribute.LogicalOperator
  parent: Global
  children:
  - Global.ConditionalShowComplexAttribute.LogicalOperator.AND
  - Global.ConditionalShowComplexAttribute.LogicalOperator.OR
  langs:
  - csharp
  - vb
  name: ConditionalShowComplexAttribute.LogicalOperator
  nameWithType: ConditionalShowComplexAttribute.LogicalOperator
  fullName: ConditionalShowComplexAttribute.LogicalOperator
  type: Enum
  source:
    remote:
      path: Assets/Objects & Components/CustomEditor/ConditionalShowComplexAttribute.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LogicalOperator
    path: ../Assets/Objects & Components/CustomEditor/ConditionalShowComplexAttribute.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public enum ConditionalShowComplexAttribute.LogicalOperator
    content.vb: Public Enum ConditionalShowComplexAttribute.LogicalOperator
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.ConditionalShowComplexAttribute.LogicalOperator.AND
  commentId: F:Global.ConditionalShowComplexAttribute.LogicalOperator.AND
  id: AND
  parent: Global.ConditionalShowComplexAttribute.LogicalOperator
  langs:
  - csharp
  - vb
  name: AND
  nameWithType: ConditionalShowComplexAttribute.LogicalOperator.AND
  fullName: ConditionalShowComplexAttribute.LogicalOperator.AND
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/CustomEditor/ConditionalShowComplexAttribute.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AND
    path: ../Assets/Objects & Components/CustomEditor/ConditionalShowComplexAttribute.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: AND = 0
    return:
      type: Global.ConditionalShowComplexAttribute.LogicalOperator
- uid: Global.ConditionalShowComplexAttribute.LogicalOperator.OR
  commentId: F:Global.ConditionalShowComplexAttribute.LogicalOperator.OR
  id: OR
  parent: Global.ConditionalShowComplexAttribute.LogicalOperator
  langs:
  - csharp
  - vb
  name: OR
  nameWithType: ConditionalShowComplexAttribute.LogicalOperator.OR
  fullName: ConditionalShowComplexAttribute.LogicalOperator.OR
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/CustomEditor/ConditionalShowComplexAttribute.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OR
    path: ../Assets/Objects & Components/CustomEditor/ConditionalShowComplexAttribute.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: OR = 1
    return:
      type: Global.ConditionalShowComplexAttribute.LogicalOperator
references:
- uid: Global
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.ConditionalShowComplexAttribute.LogicalOperator
  commentId: T:Global.ConditionalShowComplexAttribute.LogicalOperator
  name: ConditionalShowComplexAttribute.LogicalOperator
  nameWithType: ConditionalShowComplexAttribute.LogicalOperator
  fullName: ConditionalShowComplexAttribute.LogicalOperator
  spec.csharp:
  - uid: Global.ConditionalShowComplexAttribute
    name: ConditionalShowComplexAttribute
  - name: .
  - uid: Global.ConditionalShowComplexAttribute.LogicalOperator
    name: LogicalOperator
  spec.vb:
  - uid: Global.ConditionalShowComplexAttribute
    name: ConditionalShowComplexAttribute
  - name: .
  - uid: Global.ConditionalShowComplexAttribute.LogicalOperator
    name: LogicalOperator
