### YamlMime:ManagedReference
items:
- uid: Global.ArmThread
  commentId: T:Global.ArmThread
  id: ArmThread
  parent: Global
  children:
  - Global.ArmThread.ArmAuraLength
  - Global.ArmThread.aura
  - Global.ArmThread.GetPositionAlongWeb(System.Single)
  - Global.ArmThread.Kill(System.Boolean)
  - Global.ArmThread.ResetObject
  langs:
  - csharp
  - vb
  name: ArmThread
  nameWithType: ArmThread
  fullName: ArmThread
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/ArmThread.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ArmThread
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/ArmThread.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [RequireComponent(typeof(AutoMergeAura))]

      [RequireComponent(typeof(AuraShapeController))]

      public class ArmThread : MonoBehaviour
    content.vb: >-
      <RequireComponent(GetType(AutoMergeAura))>

      <RequireComponent(GetType(AuraShapeController))>

      Public Class ArmThread Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: UnityEngine.RequireComponent
    ctor: UnityEngine.RequireComponent.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Global.AutoMergeAura
  - type: UnityEngine.RequireComponent
    ctor: UnityEngine.RequireComponent.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Global.AuraShapeController
- uid: Global.ArmThread.ArmAuraLength
  commentId: F:Global.ArmThread.ArmAuraLength
  id: ArmAuraLength
  parent: Global.ArmThread
  langs:
  - csharp
  - vb
  name: ArmAuraLength
  nameWithType: ArmThread.ArmAuraLength
  fullName: ArmThread.ArmAuraLength
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/ArmThread.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ArmAuraLength
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/ArmThread.cs
    startLine: 7
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float ArmAuraLength
    return:
      type: System.Single
    content.vb: Public ArmAuraLength As Single
- uid: Global.ArmThread.aura
  commentId: P:Global.ArmThread.aura
  id: aura
  parent: Global.ArmThread
  langs:
  - csharp
  - vb
  name: aura
  nameWithType: ArmThread.aura
  fullName: ArmThread.aura
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/ArmThread.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: aura
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/ArmThread.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public AutoMergeAura aura { get; }
    parameters: []
    return:
      type: Global.AutoMergeAura
    content.vb: Public Property aura As AutoMergeAura
  overload: Global.ArmThread.aura*
- uid: Global.ArmThread.GetPositionAlongWeb(System.Single)
  commentId: M:Global.ArmThread.GetPositionAlongWeb(System.Single)
  id: GetPositionAlongWeb(System.Single)
  parent: Global.ArmThread
  langs:
  - csharp
  - vb
  name: GetPositionAlongWeb(float)
  nameWithType: ArmThread.GetPositionAlongWeb(float)
  fullName: ArmThread.GetPositionAlongWeb(float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/ArmThread.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetPositionAlongWeb
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/ArmThread.cs
    startLine: 62
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nGiven some t between [0,1]\n"
  example: []
  syntax:
    content: public Vector2 GetPositionAlongWeb(float t)
    parameters:
    - id: t
      type: System.Single
      description: ''
    return:
      type: UnityEngine.Vector2
    content.vb: Public Function GetPositionAlongWeb(t As Single) As Vector2
  overload: Global.ArmThread.GetPositionAlongWeb*
  nameWithType.vb: ArmThread.GetPositionAlongWeb(Single)
  fullName.vb: ArmThread.GetPositionAlongWeb(Single)
  name.vb: GetPositionAlongWeb(Single)
- uid: Global.ArmThread.ResetObject
  commentId: M:Global.ArmThread.ResetObject
  id: ResetObject
  parent: Global.ArmThread
  langs:
  - csharp
  - vb
  name: ResetObject()
  nameWithType: ArmThread.ResetObject()
  fullName: ArmThread.ResetObject()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/ArmThread.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResetObject
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/ArmThread.cs
    startLine: 72
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void ResetObject()
    content.vb: Public Sub ResetObject()
  overload: Global.ArmThread.ResetObject*
- uid: Global.ArmThread.Kill(System.Boolean)
  commentId: M:Global.ArmThread.Kill(System.Boolean)
  id: Kill(System.Boolean)
  parent: Global.ArmThread
  langs:
  - csharp
  - vb
  name: Kill(bool)
  nameWithType: ArmThread.Kill(bool)
  fullName: ArmThread.Kill(bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/ArmThread.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Kill
    path: ../Assets/Objects & Components/Entities/Bosses/TheEternallyWebbed/Legs/Threads/ArmThread.cs
    startLine: 79
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Kill(bool isAnimated = true)
    parameters:
    - id: isAnimated
      type: System.Boolean
    content.vb: Public Sub Kill(isAnimated As Boolean = True)
  overload: Global.ArmThread.Kill*
  nameWithType.vb: ArmThread.Kill(Boolean)
  fullName.vb: ArmThread.Kill(Boolean)
  name.vb: Kill(Boolean)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.ArmThread.aura*
  commentId: Overload:Global.ArmThread.aura
  name: aura
  nameWithType: ArmThread.aura
  fullName: ArmThread.aura
- uid: Global.AutoMergeAura
  commentId: T:Global.AutoMergeAura
  name: AutoMergeAura
  nameWithType: AutoMergeAura
  fullName: AutoMergeAura
- uid: Global.ArmThread.GetPositionAlongWeb*
  commentId: Overload:Global.ArmThread.GetPositionAlongWeb
  name: GetPositionAlongWeb
  nameWithType: ArmThread.GetPositionAlongWeb
  fullName: ArmThread.GetPositionAlongWeb
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.ArmThread.ResetObject*
  commentId: Overload:Global.ArmThread.ResetObject
  name: ResetObject
  nameWithType: ArmThread.ResetObject
  fullName: ArmThread.ResetObject
- uid: Global.ArmThread.Kill*
  commentId: Overload:Global.ArmThread.Kill
  name: Kill
  nameWithType: ArmThread.Kill
  fullName: ArmThread.Kill
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
