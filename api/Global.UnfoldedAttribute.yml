### YamlMime:ManagedReference
items:
- uid: Global.UnfoldedAttribute
  commentId: T:Global.UnfoldedAttribute
  id: UnfoldedAttribute
  parent: Global
  children: []
  langs:
  - csharp
  - vb
  name: UnfoldedAttribute
  nameWithType: UnfoldedAttribute
  fullName: UnfoldedAttribute
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/CustomEditor/UnfoldedAttribute.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: UnfoldedAttribute
    path: ../Assets/Objects & Components/CustomEditor/UnfoldedAttribute.cs
    startLine: 5
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Class|AttributeTargets.Struct|AttributeTargets.Property|AttributeTargets.Field, Inherited = true)]

      [CanEditMultipleObjects]

      public class UnfoldedAttribute : PropertyAttribute
    content.vb: >-
      <AttributeUsage(AttributeTargets.ClassOrAttributeTargets.StructOrAttributeTargets.PropertyOrAttributeTargets.Field, Inherited:=True)>

      <CanEditMultipleObjects>

      Public Class UnfoldedAttribute Inherits PropertyAttribute
  inheritance:
  - System.Object
  - System.Attribute
  - UnityEngine.PropertyAttribute
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 396
    namedArguments:
    - name: Inherited
      type: System.Boolean
      value: true
  - type: UnityEditor.CanEditMultipleObjects
    ctor: UnityEditor.CanEditMultipleObjects.#ctor
    arguments: []
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Attribute
  commentId: T:System.Attribute
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute
- uid: UnityEngine.PropertyAttribute
  commentId: T:UnityEngine.PropertyAttribute
  parent: UnityEngine
  isExternal: true
  name: PropertyAttribute
  nameWithType: PropertyAttribute
  fullName: UnityEngine.PropertyAttribute
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
