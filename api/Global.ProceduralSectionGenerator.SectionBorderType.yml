### YamlMime:ManagedReference
items:
- uid: Global.ProceduralSectionGenerator.SectionBorderType
  commentId: T:Global.ProceduralSectionGenerator.SectionBorderType
  id: ProceduralSectionGenerator.SectionBorderType
  parent: Global
  children:
  - Global.ProceduralSectionGenerator.SectionBorderType.Cave
  - Global.ProceduralSectionGenerator.SectionBorderType.Grid
  - Global.ProceduralSectionGenerator.SectionBorderType.Hill
  - Global.ProceduralSectionGenerator.SectionBorderType.Ramp
  - Global.ProceduralSectionGenerator.SectionBorderType.Room
  - Global.ProceduralSectionGenerator.SectionBorderType.Tunnel
  langs:
  - csharp
  - vb
  name: ProceduralSectionGenerator.SectionBorderType
  nameWithType: ProceduralSectionGenerator.SectionBorderType
  fullName: ProceduralSectionGenerator.SectionBorderType
  type: Enum
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SectionBorderType
    path: ../Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
    startLine: 20
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public enum ProceduralSectionGenerator.SectionBorderType
    content.vb: Public Enum ProceduralSectionGenerator.SectionBorderType
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
- uid: Global.ProceduralSectionGenerator.SectionBorderType.Grid
  commentId: F:Global.ProceduralSectionGenerator.SectionBorderType.Grid
  id: Grid
  parent: Global.ProceduralSectionGenerator.SectionBorderType
  langs:
  - csharp
  - vb
  name: Grid
  nameWithType: ProceduralSectionGenerator.SectionBorderType.Grid
  fullName: ProceduralSectionGenerator.SectionBorderType.Grid
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Grid
    path: ../Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: Grid = 0
    return:
      type: Global.ProceduralSectionGenerator.SectionBorderType
- uid: Global.ProceduralSectionGenerator.SectionBorderType.Hill
  commentId: F:Global.ProceduralSectionGenerator.SectionBorderType.Hill
  id: Hill
  parent: Global.ProceduralSectionGenerator.SectionBorderType
  langs:
  - csharp
  - vb
  name: Hill
  nameWithType: ProceduralSectionGenerator.SectionBorderType.Hill
  fullName: ProceduralSectionGenerator.SectionBorderType.Hill
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Hill
    path: ../Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: Hill = 1
    return:
      type: Global.ProceduralSectionGenerator.SectionBorderType
- uid: Global.ProceduralSectionGenerator.SectionBorderType.Ramp
  commentId: F:Global.ProceduralSectionGenerator.SectionBorderType.Ramp
  id: Ramp
  parent: Global.ProceduralSectionGenerator.SectionBorderType
  langs:
  - csharp
  - vb
  name: Ramp
  nameWithType: ProceduralSectionGenerator.SectionBorderType.Ramp
  fullName: ProceduralSectionGenerator.SectionBorderType.Ramp
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Ramp
    path: ../Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: Ramp = 2
    return:
      type: Global.ProceduralSectionGenerator.SectionBorderType
- uid: Global.ProceduralSectionGenerator.SectionBorderType.Tunnel
  commentId: F:Global.ProceduralSectionGenerator.SectionBorderType.Tunnel
  id: Tunnel
  parent: Global.ProceduralSectionGenerator.SectionBorderType
  langs:
  - csharp
  - vb
  name: Tunnel
  nameWithType: ProceduralSectionGenerator.SectionBorderType.Tunnel
  fullName: ProceduralSectionGenerator.SectionBorderType.Tunnel
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Tunnel
    path: ../Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: Tunnel = 3
    return:
      type: Global.ProceduralSectionGenerator.SectionBorderType
- uid: Global.ProceduralSectionGenerator.SectionBorderType.Cave
  commentId: F:Global.ProceduralSectionGenerator.SectionBorderType.Cave
  id: Cave
  parent: Global.ProceduralSectionGenerator.SectionBorderType
  langs:
  - csharp
  - vb
  name: Cave
  nameWithType: ProceduralSectionGenerator.SectionBorderType.Cave
  fullName: ProceduralSectionGenerator.SectionBorderType.Cave
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Cave
    path: ../Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: Cave = 4
    return:
      type: Global.ProceduralSectionGenerator.SectionBorderType
- uid: Global.ProceduralSectionGenerator.SectionBorderType.Room
  commentId: F:Global.ProceduralSectionGenerator.SectionBorderType.Room
  id: Room
  parent: Global.ProceduralSectionGenerator.SectionBorderType
  langs:
  - csharp
  - vb
  name: Room
  nameWithType: ProceduralSectionGenerator.SectionBorderType.Room
  fullName: ProceduralSectionGenerator.SectionBorderType.Room
  type: Field
  source:
    remote:
      path: Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Room
    path: ../Assets/Framework/Procedural Generation/ProceduralSectionGenerator.cs
    startLine: 22
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: Room = 5
    return:
      type: Global.ProceduralSectionGenerator.SectionBorderType
references:
- uid: Global
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: Global.ProceduralSectionGenerator.SectionBorderType
  commentId: T:Global.ProceduralSectionGenerator.SectionBorderType
  name: ProceduralSectionGenerator.SectionBorderType
  nameWithType: ProceduralSectionGenerator.SectionBorderType
  fullName: ProceduralSectionGenerator.SectionBorderType
  spec.csharp:
  - uid: Global.ProceduralSectionGenerator
    name: ProceduralSectionGenerator
  - name: .
  - uid: Global.ProceduralSectionGenerator.SectionBorderType
    name: SectionBorderType
  spec.vb:
  - uid: Global.ProceduralSectionGenerator
    name: ProceduralSectionGenerator
  - name: .
  - uid: Global.ProceduralSectionGenerator.SectionBorderType
    name: SectionBorderType
