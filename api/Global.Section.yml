### YamlMime:ManagedReference
items:
- uid: Global.Section
  commentId: T:Global.Section
  id: Section
  parent: Global
  children:
  - Global.Section.actions
  - Global.Section.AppendDoorEndpoints(System.Collections.Generic.List{Section.DoorEndpoints},TilemapIntCollider,UnityEngine.Vector2Int,UnityEngine.Vector2Int,UnityEngine.Vector2Int,IntMath.Direction)
  - Global.Section.AutogenerateDoors
  - Global.Section.Awake
  - Global.Section.axis
  - Global.Section.Bottom
  - Global.Section.BottomLeft
  - Global.Section.BottomRight
  - Global.Section.Bounds
  - Global.Section.BuildDoor(TilemapIntCollider,UnityEngine.Vector2Int,UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  - Global.Section.BuildInteractableAndDoors(System.Collections.Generic.List{Section.DoorEndpoints})
  - Global.Section.CameraOrthographicSize
  - Global.Section.Center
  - Global.Section.ClipToAxis
  - Global.Section.CompletionGameStateTrigger
  - Global.Section.ComputeDoorEndpoints(System.Collections.Generic.List{Section.DoorEndpoints})
  - Global.Section.ContainsAABB(AABBIntCollider,UnityEngine.Vector2Int)
  - Global.Section.ContainsBoundsInt(UnityEngine.BoundsInt,UnityEngine.Vector2Int)
  - Global.Section.ContainsBoundsIntWithInset(UnityEngine.BoundsInt,UnityEngine.Vector2Int,System.Single)
  - Global.Section.ContainsPoint(UnityEngine.Vector3,System.Single)
  - Global.Section.ContainsPoint(UnityEngine.Vector3)
  - Global.Section.ContainsRect(UnityEngine.Rect)
  - Global.Section.Description
  - Global.Section.Dimensions
  - Global.Section.EnemyList
  - Global.Section.ExtrudeDoor(TilemapIntCollider,UnityEngine.Vector2Int,UnityEngine.Vector2Int,UnityEngine.Vector2Int,System.Int32)
  - Global.Section.ExtrudeDoorEndpoints(System.Collections.Generic.List{Section.DoorEndpoints},System.Int32)
  - Global.Section.GetDoorEndpoints
  - Global.Section.GetObjectSaveData
  - Global.Section.GetOutlineRays
  - Global.Section.GetRayIntersection(IntRay,System.Boolean)
  - Global.Section.GetTilemap
  - Global.Section.GlobalSectionGameStateResults
  - Global.Section.HasSectionCompletionCondition
  - Global.Section.Height
  - Global.Section.IsDoorEndpointListDirty
  - Global.Section.IsSectionCompleted
  - Global.Section.KillAutogeneratedDoor(Interactable)
  - Global.Section.Left
  - Global.Section.LoadObjectSaveData(SectionSaveData)
  - Global.Section.ObjectID
  - Global.Section.OnDrawGizmos
  - Global.Section.OnEnterSection(Section)
  - Global.Section.OnExitSection(Section)
  - Global.Section.OnPlayerDeath(Player,System.Boolean)
  - Global.Section.OnPostLoadSaveFile
  - Global.Section.OnSafeEnterSection
  - Global.Section.OnSectionCompleted
  - Global.Section.PortalLocation
  - Global.Section.RectAsTileIndices
  - Global.Section.ResetAllSections(SectionResetTrigger)
  - Global.Section.ResetSection(SectionResetTrigger)
  - Global.Section.Right
  - Global.Section.sectionCloseInteractable
  - Global.Section.sectionCompletionCondition
  - Global.Section.sectionOpenInteractable
  - Global.Section.ShowLabel
  - Global.Section.SpawnLocation
  - Global.Section.Start
  - Global.Section.TileSize
  - Global.Section.Top
  - Global.Section.TopLeft
  - Global.Section.TopRight
  - Global.Section.Width
  langs:
  - csharp
  - vb
  name: Section
  nameWithType: Section
  fullName: Section
  type: Class
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Section
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 40
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [RequireComponent(typeof(IntColliderState))]

      [RequireComponent(typeof(SectionState))]

      public class Section : MonoBehaviour, ISavableObject<SectionSaveData>
    content.vb: >-
      <RequireComponent(GetType(IntColliderState))>

      <RequireComponent(GetType(SectionState))>

      Public Class Section Inherits MonoBehaviour Implements ISavableObject(Of SectionSaveData)
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  derivedClasses:
  - Global.ProceduralSection
  implements:
  - Global.ISavableObject{SectionSaveData}
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: UnityEngine.RequireComponent
    ctor: UnityEngine.RequireComponent.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Global.IntColliderState
  - type: UnityEngine.RequireComponent
    ctor: UnityEngine.RequireComponent.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: Global.SectionState
- uid: Global.Section.ObjectID
  commentId: F:Global.Section.ObjectID
  id: ObjectID
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: ObjectID
  nameWithType: Section.ObjectID
  fullName: Section.ObjectID
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ObjectID
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 57
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("Section")]

      public string ObjectID
    return:
      type: System.String
    content.vb: >-
      <Header("Section")>

      Public ObjectID As String
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Section
- uid: Global.Section.Description
  commentId: F:Global.Section.Description
  id: Description
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Section.Description
  fullName: Section.Description
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Description
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 58
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public string Description
    return:
      type: System.String
    content.vb: Public Description As String
- uid: Global.Section.CameraOrthographicSize
  commentId: F:Global.Section.CameraOrthographicSize
  id: CameraOrthographicSize
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: CameraOrthographicSize
  nameWithType: Section.CameraOrthographicSize
  fullName: Section.CameraOrthographicSize
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CameraOrthographicSize
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 59
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float CameraOrthographicSize
    return:
      type: System.Single
    content.vb: Public CameraOrthographicSize As Single
- uid: Global.Section.TileSize
  commentId: F:Global.Section.TileSize
  id: TileSize
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: TileSize
  nameWithType: Section.TileSize
  fullName: Section.TileSize
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TileSize
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 62
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static int TileSize
    return:
      type: System.Int32
    content.vb: Public Shared TileSize As Integer
- uid: Global.Section.Dimensions
  commentId: F:Global.Section.Dimensions
  id: Dimensions
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: Dimensions
  nameWithType: Section.Dimensions
  fullName: Section.Dimensions
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Dimensions
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 63
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2Int Dimensions
    return:
      type: UnityEngine.Vector2Int
    content.vb: Public Dimensions As Vector2Int
- uid: Global.Section.ClipToAxis
  commentId: F:Global.Section.ClipToAxis
  id: ClipToAxis
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: ClipToAxis
  nameWithType: Section.ClipToAxis
  fullName: Section.ClipToAxis
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ClipToAxis
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 64
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool ClipToAxis
    return:
      type: System.Boolean
    content.vb: Public ClipToAxis As Boolean
- uid: Global.Section.axis
  commentId: F:Global.Section.axis
  id: axis
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: axis
  nameWithType: Section.axis
  fullName: Section.axis
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: axis
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 65
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public IntMath.Axis axis
    return:
      type: Global.IntMath.Axis
    content.vb: Public axis As IntMath.Axis
- uid: Global.Section.ShowLabel
  commentId: F:Global.Section.ShowLabel
  id: ShowLabel
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: ShowLabel
  nameWithType: Section.ShowLabel
  fullName: Section.ShowLabel
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ShowLabel
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 66
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool ShowLabel
    return:
      type: System.Boolean
    content.vb: Public ShowLabel As Boolean
- uid: Global.Section.SpawnLocation
  commentId: P:Global.Section.SpawnLocation
  id: SpawnLocation
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: SpawnLocation
  nameWithType: Section.SpawnLocation
  fullName: Section.SpawnLocation
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: SpawnLocation
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 69
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public PlayerSpawn SpawnLocation { get; set; }
    parameters: []
    return:
      type: Global.PlayerSpawn
    content.vb: Public Property SpawnLocation As PlayerSpawn
  overload: Global.Section.SpawnLocation*
- uid: Global.Section.PortalLocation
  commentId: P:Global.Section.PortalLocation
  id: PortalLocation
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: PortalLocation
  nameWithType: Section.PortalLocation
  fullName: Section.PortalLocation
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PortalLocation
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 80
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public PortalInteractionController PortalLocation { get; set; }
    parameters: []
    return:
      type: Global.PortalInteractionController
    content.vb: Public Property PortalLocation As PortalInteractionController
  overload: Global.Section.PortalLocation*
- uid: Global.Section.HasSectionCompletionCondition
  commentId: F:Global.Section.HasSectionCompletionCondition
  id: HasSectionCompletionCondition
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: HasSectionCompletionCondition
  nameWithType: Section.HasSectionCompletionCondition
  fullName: Section.HasSectionCompletionCondition
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: HasSectionCompletionCondition
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 94
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Header("GameState & Doors")]

      public bool HasSectionCompletionCondition
    return:
      type: System.Boolean
    content.vb: >-
      <Header("GameState & Doors")>

      Public HasSectionCompletionCondition As Boolean
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: GameState & Doors
- uid: Global.Section.sectionCompletionCondition
  commentId: F:Global.Section.sectionCompletionCondition
  id: sectionCompletionCondition
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: sectionCompletionCondition
  nameWithType: Section.sectionCompletionCondition
  fullName: Section.sectionCompletionCondition
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: sectionCompletionCondition
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 96
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("HasSectionCompletionCondition", 1)]

      public Section.SectionCompletionCondition sectionCompletionCondition
    return:
      type: Global.Section.SectionCompletionCondition
    content.vb: >-
      <ConditionalShow("HasSectionCompletionCondition", 1)>

      Public sectionCompletionCondition As Section.SectionCompletionCondition
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: HasSectionCompletionCondition
    - type: System.Int32
      value: 1
- uid: Global.Section.CompletionGameStateTrigger
  commentId: F:Global.Section.CompletionGameStateTrigger
  id: CompletionGameStateTrigger
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: CompletionGameStateTrigger
  nameWithType: Section.CompletionGameStateTrigger
  fullName: Section.CompletionGameStateTrigger
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CompletionGameStateTrigger
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 98
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShowComplex(new string[] { "HasSectionCompletionCondition", "sectionCompletionCondition" }, ConditionalShowComplexAttribute.LogicalOperator.AND, new int[] { 1, 2 })]

      public AscendState CompletionGameStateTrigger
    return:
      type: Global.AscendState
    content.vb: >-
      <ConditionalShowComplex(New String() { "HasSectionCompletionCondition", "sectionCompletionCondition" }, ConditionalShowComplexAttribute.LogicalOperator.AND, New Integer() { 1, 2 })>

      Public CompletionGameStateTrigger As AscendState
- uid: Global.Section.EnemyList
  commentId: F:Global.Section.EnemyList
  id: EnemyList
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: EnemyList
  nameWithType: Section.EnemyList
  fullName: Section.EnemyList
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: EnemyList
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 100
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShowComplex(new string[] { "HasSectionCompletionCondition", "sectionCompletionCondition" }, ConditionalShowComplexAttribute.LogicalOperator.AND, new int[] { 1, 3 })]

      public Section.EnemyListWrapper EnemyList
    return:
      type: Global.Section.EnemyListWrapper
    content.vb: >-
      <ConditionalShowComplex(New String() { "HasSectionCompletionCondition", "sectionCompletionCondition" }, ConditionalShowComplexAttribute.LogicalOperator.AND, New Integer() { 1, 3 })>

      Public EnemyList As Section.EnemyListWrapper
- uid: Global.Section.AutogenerateDoors
  commentId: F:Global.Section.AutogenerateDoors
  id: AutogenerateDoors
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: AutogenerateDoors
  nameWithType: Section.AutogenerateDoors
  fullName: Section.AutogenerateDoors
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AutogenerateDoors
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 102
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [ConditionalShow("HasSectionCompletionCondition", 1)]

      public bool AutogenerateDoors
    return:
      type: System.Boolean
    content.vb: >-
      <ConditionalShow("HasSectionCompletionCondition", 1)>

      Public AutogenerateDoors As Boolean
  attributes:
  - type: Global.ConditionalShowAttribute
    ctor: Global.ConditionalShowAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: HasSectionCompletionCondition
    - type: System.Int32
      value: 1
- uid: Global.Section.GlobalSectionGameStateResults
  commentId: F:Global.Section.GlobalSectionGameStateResults
  id: GlobalSectionGameStateResults
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: GlobalSectionGameStateResults
  nameWithType: Section.GlobalSectionGameStateResults
  fullName: Section.GlobalSectionGameStateResults
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GlobalSectionGameStateResults
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 105
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Only used if 'Has Section Completion Condition' is true")]

      public AscendState[] GlobalSectionGameStateResults
    return:
      type: Global.AscendState[]
    content.vb: >-
      <Tooltip("Only used if 'Has Section Completion Condition' is true")>

      Public GlobalSectionGameStateResults As AscendState()
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Only used if 'Has Section Completion Condition' is true
- uid: Global.Section.IsSectionCompleted
  commentId: P:Global.Section.IsSectionCompleted
  id: IsSectionCompleted
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: IsSectionCompleted
  nameWithType: Section.IsSectionCompleted
  fullName: Section.IsSectionCompleted
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsSectionCompleted
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 106
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsSectionCompleted { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsSectionCompleted As Boolean
  overload: Global.Section.IsSectionCompleted*
- uid: Global.Section.sectionOpenInteractable
  commentId: F:Global.Section.sectionOpenInteractable
  id: sectionOpenInteractable
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: sectionOpenInteractable
  nameWithType: Section.sectionOpenInteractable
  fullName: Section.sectionOpenInteractable
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: sectionOpenInteractable
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 107
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Interactable sectionOpenInteractable
    return:
      type: Global.Interactable
    content.vb: Protected sectionOpenInteractable As Interactable
- uid: Global.Section.sectionCloseInteractable
  commentId: F:Global.Section.sectionCloseInteractable
  id: sectionCloseInteractable
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: sectionCloseInteractable
  nameWithType: Section.sectionCloseInteractable
  fullName: Section.sectionCloseInteractable
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: sectionCloseInteractable
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 107
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected Interactable sectionCloseInteractable
    return:
      type: Global.Interactable
    content.vb: Protected sectionCloseInteractable As Interactable
- uid: Global.Section.IsDoorEndpointListDirty
  commentId: F:Global.Section.IsDoorEndpointListDirty
  id: IsDoorEndpointListDirty
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: IsDoorEndpointListDirty
  nameWithType: Section.IsDoorEndpointListDirty
  fullName: Section.IsDoorEndpointListDirty
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: IsDoorEndpointListDirty
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 108
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool IsDoorEndpointListDirty
    return:
      type: System.Boolean
    content.vb: Public IsDoorEndpointListDirty As Boolean
- uid: Global.Section.TopLeft
  commentId: P:Global.Section.TopLeft
  id: TopLeft
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: TopLeft
  nameWithType: Section.TopLeft
  fullName: Section.TopLeft
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TopLeft
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 111
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector3Int TopLeft { get; }
    parameters: []
    return:
      type: UnityEngine.Vector3Int
    content.vb: Public ReadOnly Property TopLeft As Vector3Int
  overload: Global.Section.TopLeft*
- uid: Global.Section.BottomLeft
  commentId: P:Global.Section.BottomLeft
  id: BottomLeft
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: BottomLeft
  nameWithType: Section.BottomLeft
  fullName: Section.BottomLeft
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BottomLeft
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 112
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector3Int BottomLeft { get; }
    parameters: []
    return:
      type: UnityEngine.Vector3Int
    content.vb: Public ReadOnly Property BottomLeft As Vector3Int
  overload: Global.Section.BottomLeft*
- uid: Global.Section.BottomRight
  commentId: P:Global.Section.BottomRight
  id: BottomRight
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: BottomRight
  nameWithType: Section.BottomRight
  fullName: Section.BottomRight
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BottomRight
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 113
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector3Int BottomRight { get; }
    parameters: []
    return:
      type: UnityEngine.Vector3Int
    content.vb: Public ReadOnly Property BottomRight As Vector3Int
  overload: Global.Section.BottomRight*
- uid: Global.Section.TopRight
  commentId: P:Global.Section.TopRight
  id: TopRight
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: TopRight
  nameWithType: Section.TopRight
  fullName: Section.TopRight
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: TopRight
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 114
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector3Int TopRight { get; }
    parameters: []
    return:
      type: UnityEngine.Vector3Int
    content.vb: Public ReadOnly Property TopRight As Vector3Int
  overload: Global.Section.TopRight*
- uid: Global.Section.Bounds
  commentId: P:Global.Section.Bounds
  id: Bounds
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: Bounds
  nameWithType: Section.Bounds
  fullName: Section.Bounds
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Bounds
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 115
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public BoundsInt Bounds { get; }
    parameters: []
    return:
      type: UnityEngine.BoundsInt
    content.vb: Public ReadOnly Property Bounds As BoundsInt
  overload: Global.Section.Bounds*
- uid: Global.Section.RectAsTileIndices
  commentId: P:Global.Section.RectAsTileIndices
  id: RectAsTileIndices
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: RectAsTileIndices
  nameWithType: Section.RectAsTileIndices
  fullName: Section.RectAsTileIndices
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: RectAsTileIndices
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 117
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public RectInt RectAsTileIndices { get; }
    parameters: []
    return:
      type: UnityEngine.RectInt
    content.vb: Public ReadOnly Property RectAsTileIndices As RectInt
  overload: Global.Section.RectAsTileIndices*
- uid: Global.Section.Width
  commentId: P:Global.Section.Width
  id: Width
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: Section.Width
  fullName: Section.Width
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Width
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 127
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int Width { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Width As Integer
  overload: Global.Section.Width*
- uid: Global.Section.Height
  commentId: P:Global.Section.Height
  id: Height
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: Section.Height
  fullName: Section.Height
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Height
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 128
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int Height { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Height As Integer
  overload: Global.Section.Height*
- uid: Global.Section.Left
  commentId: P:Global.Section.Left
  id: Left
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: Section.Left
  fullName: Section.Left
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Left
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 130
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int Left { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Left As Integer
  overload: Global.Section.Left*
- uid: Global.Section.Bottom
  commentId: P:Global.Section.Bottom
  id: Bottom
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: Bottom
  nameWithType: Section.Bottom
  fullName: Section.Bottom
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Bottom
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 131
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int Bottom { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Bottom As Integer
  overload: Global.Section.Bottom*
- uid: Global.Section.Right
  commentId: P:Global.Section.Right
  id: Right
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: Section.Right
  fullName: Section.Right
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Right
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 132
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int Right { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Right As Integer
  overload: Global.Section.Right*
- uid: Global.Section.Top
  commentId: P:Global.Section.Top
  id: Top
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: Top
  nameWithType: Section.Top
  fullName: Section.Top
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Top
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 133
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public int Top { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Top As Integer
  overload: Global.Section.Top*
- uid: Global.Section.Center
  commentId: P:Global.Section.Center
  id: Center
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: Center
  nameWithType: Section.Center
  fullName: Section.Center
  type: Property
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Center
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 135
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Vector2 Center { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property Center As Vector2
  overload: Global.Section.Center*
- uid: Global.Section.actions
  commentId: F:Global.Section.actions
  id: actions
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: actions
  nameWithType: Section.actions
  fullName: Section.actions
  type: Field
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: actions
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 137
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected TriggeredAction[] actions
    return:
      type: Global.TriggeredAction[]
    content.vb: Protected actions As TriggeredAction()
- uid: Global.Section.Start
  commentId: M:Global.Section.Start
  id: Start
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: Section.Start()
  fullName: Section.Start()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Start
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 140
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void Start()
    content.vb: Protected Overridable Sub Start()
  overload: Global.Section.Start*
- uid: Global.Section.Awake
  commentId: M:Global.Section.Awake
  id: Awake
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: Awake()
  nameWithType: Section.Awake()
  fullName: Section.Awake()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Awake
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 159
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected virtual void Awake()
    content.vb: Protected Overridable Sub Awake()
  overload: Global.Section.Awake*
- uid: Global.Section.OnDrawGizmos
  commentId: M:Global.Section.OnDrawGizmos
  id: OnDrawGizmos
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: OnDrawGizmos()
  nameWithType: Section.OnDrawGizmos()
  fullName: Section.OnDrawGizmos()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnDrawGizmos
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 167
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void OnDrawGizmos()
    content.vb: Protected Sub OnDrawGizmos()
  overload: Global.Section.OnDrawGizmos*
- uid: Global.Section.ContainsPoint(UnityEngine.Vector3)
  commentId: M:Global.Section.ContainsPoint(UnityEngine.Vector3)
  id: ContainsPoint(UnityEngine.Vector3)
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: ContainsPoint(Vector3)
  nameWithType: Section.ContainsPoint(Vector3)
  fullName: Section.ContainsPoint(UnityEngine.Vector3)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ContainsPoint
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 192
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool ContainsPoint(Vector3 point)
    parameters:
    - id: point
      type: UnityEngine.Vector3
    return:
      type: System.Boolean
    content.vb: Public Function ContainsPoint(point As Vector3) As Boolean
  overload: Global.Section.ContainsPoint*
- uid: Global.Section.ContainsPoint(UnityEngine.Vector3,System.Single)
  commentId: M:Global.Section.ContainsPoint(UnityEngine.Vector3,System.Single)
  id: ContainsPoint(UnityEngine.Vector3,System.Single)
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: ContainsPoint(Vector3, float)
  nameWithType: Section.ContainsPoint(Vector3, float)
  fullName: Section.ContainsPoint(UnityEngine.Vector3, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ContainsPoint
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 197
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool ContainsPoint(Vector3 point, float inset)
    parameters:
    - id: point
      type: UnityEngine.Vector3
    - id: inset
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function ContainsPoint(point As Vector3, inset As Single) As Boolean
  overload: Global.Section.ContainsPoint*
  nameWithType.vb: Section.ContainsPoint(Vector3, Single)
  fullName.vb: Section.ContainsPoint(UnityEngine.Vector3, Single)
  name.vb: ContainsPoint(Vector3, Single)
- uid: Global.Section.ContainsRect(UnityEngine.Rect)
  commentId: M:Global.Section.ContainsRect(UnityEngine.Rect)
  id: ContainsRect(UnityEngine.Rect)
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: ContainsRect(Rect)
  nameWithType: Section.ContainsRect(Rect)
  fullName: Section.ContainsRect(UnityEngine.Rect)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ContainsRect
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 202
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool ContainsRect(Rect rect)
    parameters:
    - id: rect
      type: UnityEngine.Rect
    return:
      type: System.Boolean
    content.vb: Public Function ContainsRect(rect As Rect) As Boolean
  overload: Global.Section.ContainsRect*
- uid: Global.Section.ContainsAABB(AABBIntCollider,UnityEngine.Vector2Int)
  commentId: M:Global.Section.ContainsAABB(AABBIntCollider,UnityEngine.Vector2Int)
  id: ContainsAABB(AABBIntCollider,UnityEngine.Vector2Int)
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: ContainsAABB(AABBIntCollider, Vector2Int)
  nameWithType: Section.ContainsAABB(AABBIntCollider, Vector2Int)
  fullName: Section.ContainsAABB(AABBIntCollider, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ContainsAABB
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 207
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool ContainsAABB(AABBIntCollider aabb, Vector2Int offset)
    parameters:
    - id: aabb
      type: Global.AABBIntCollider
    - id: offset
      type: UnityEngine.Vector2Int
    return:
      type: System.Boolean
    content.vb: Public Function ContainsAABB(aabb As AABBIntCollider, offset As Vector2Int) As Boolean
  overload: Global.Section.ContainsAABB*
- uid: Global.Section.ContainsBoundsInt(UnityEngine.BoundsInt,UnityEngine.Vector2Int)
  commentId: M:Global.Section.ContainsBoundsInt(UnityEngine.BoundsInt,UnityEngine.Vector2Int)
  id: ContainsBoundsInt(UnityEngine.BoundsInt,UnityEngine.Vector2Int)
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: ContainsBoundsInt(BoundsInt, Vector2Int)
  nameWithType: Section.ContainsBoundsInt(BoundsInt, Vector2Int)
  fullName: Section.ContainsBoundsInt(UnityEngine.BoundsInt, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ContainsBoundsInt
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 212
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool ContainsBoundsInt(BoundsInt bounds, Vector2Int offset)
    parameters:
    - id: bounds
      type: UnityEngine.BoundsInt
    - id: offset
      type: UnityEngine.Vector2Int
    return:
      type: System.Boolean
    content.vb: Public Function ContainsBoundsInt(bounds As BoundsInt, offset As Vector2Int) As Boolean
  overload: Global.Section.ContainsBoundsInt*
- uid: Global.Section.ContainsBoundsIntWithInset(UnityEngine.BoundsInt,UnityEngine.Vector2Int,System.Single)
  commentId: M:Global.Section.ContainsBoundsIntWithInset(UnityEngine.BoundsInt,UnityEngine.Vector2Int,System.Single)
  id: ContainsBoundsIntWithInset(UnityEngine.BoundsInt,UnityEngine.Vector2Int,System.Single)
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: ContainsBoundsIntWithInset(BoundsInt, Vector2Int, float)
  nameWithType: Section.ContainsBoundsIntWithInset(BoundsInt, Vector2Int, float)
  fullName: Section.ContainsBoundsIntWithInset(UnityEngine.BoundsInt, UnityEngine.Vector2Int, float)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ContainsBoundsIntWithInset
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 218
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool ContainsBoundsIntWithInset(BoundsInt bounds, Vector2Int offset, float InsetAmount)
    parameters:
    - id: bounds
      type: UnityEngine.BoundsInt
    - id: offset
      type: UnityEngine.Vector2Int
    - id: InsetAmount
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function ContainsBoundsIntWithInset(bounds As BoundsInt, offset As Vector2Int, InsetAmount As Single) As Boolean
  overload: Global.Section.ContainsBoundsIntWithInset*
  nameWithType.vb: Section.ContainsBoundsIntWithInset(BoundsInt, Vector2Int, Single)
  fullName.vb: Section.ContainsBoundsIntWithInset(UnityEngine.BoundsInt, UnityEngine.Vector2Int, Single)
  name.vb: ContainsBoundsIntWithInset(BoundsInt, Vector2Int, Single)
- uid: Global.Section.GetOutlineRays
  commentId: M:Global.Section.GetOutlineRays
  id: GetOutlineRays
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: GetOutlineRays()
  nameWithType: Section.GetOutlineRays()
  fullName: Section.GetOutlineRays()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetOutlineRays
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 224
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public List<IntRay> GetOutlineRays()
    return:
      type: System.Collections.Generic.List{IntRay}
    content.vb: Public Function GetOutlineRays() As List(Of IntRay)
  overload: Global.Section.GetOutlineRays*
- uid: Global.Section.GetRayIntersection(IntRay,System.Boolean)
  commentId: M:Global.Section.GetRayIntersection(IntRay,System.Boolean)
  id: GetRayIntersection(IntRay,System.Boolean)
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: GetRayIntersection(IntRay, bool)
  nameWithType: Section.GetRayIntersection(IntRay, bool)
  fullName: Section.GetRayIntersection(IntRay, bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetRayIntersection
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 258
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public Intersection GetRayIntersection(IntRay ray, bool intersectInterior = false)
    parameters:
    - id: ray
      type: Global.IntRay
    - id: intersectInterior
      type: System.Boolean
    return:
      type: Global.Intersection
    content.vb: Public Function GetRayIntersection(ray As IntRay, intersectInterior As Boolean = False) As Intersection
  overload: Global.Section.GetRayIntersection*
  nameWithType.vb: Section.GetRayIntersection(IntRay, Boolean)
  fullName.vb: Section.GetRayIntersection(IntRay, Boolean)
  name.vb: GetRayIntersection(IntRay, Boolean)
- uid: Global.Section.OnSafeEnterSection
  commentId: M:Global.Section.OnSafeEnterSection
  id: OnSafeEnterSection
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: OnSafeEnterSection()
  nameWithType: Section.OnSafeEnterSection()
  fullName: Section.OnSafeEnterSection()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnSafeEnterSection
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 291
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: "\nWhen the player is completely inside the section and some distance away from the boundary and is grounded\n"
  example: []
  syntax:
    content: public virtual void OnSafeEnterSection()
    content.vb: Public Overridable Sub OnSafeEnterSection()
  overload: Global.Section.OnSafeEnterSection*
- uid: Global.Section.OnEnterSection(Section)
  commentId: M:Global.Section.OnEnterSection(Section)
  id: OnEnterSection(Section)
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: OnEnterSection(Section)
  nameWithType: Section.OnEnterSection(Section)
  fullName: Section.OnEnterSection(Section)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnEnterSection
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 305
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void OnEnterSection(Section from)
    parameters:
    - id: from
      type: Global.Section
    content.vb: Public Overridable Sub OnEnterSection(from As Section)
  overload: Global.Section.OnEnterSection*
- uid: Global.Section.OnExitSection(Section)
  commentId: M:Global.Section.OnExitSection(Section)
  id: OnExitSection(Section)
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: OnExitSection(Section)
  nameWithType: Section.OnExitSection(Section)
  fullName: Section.OnExitSection(Section)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnExitSection
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 322
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public virtual void OnExitSection(Section to)
    parameters:
    - id: to
      type: Global.Section
    content.vb: Public Overridable Sub OnExitSection([to] As Section)
  overload: Global.Section.OnExitSection*
- uid: Global.Section.ResetAllSections(SectionResetTrigger)
  commentId: M:Global.Section.ResetAllSections(SectionResetTrigger)
  id: ResetAllSections(SectionResetTrigger)
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: ResetAllSections(SectionResetTrigger)
  nameWithType: Section.ResetAllSections(SectionResetTrigger)
  fullName: Section.ResetAllSections(SectionResetTrigger)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResetAllSections
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 343
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public static void ResetAllSections(SectionResetTrigger trigger)
    parameters:
    - id: trigger
      type: Global.SectionResetTrigger
    content.vb: Public Shared Sub ResetAllSections(trigger As SectionResetTrigger)
  overload: Global.Section.ResetAllSections*
- uid: Global.Section.ResetSection(SectionResetTrigger)
  commentId: M:Global.Section.ResetSection(SectionResetTrigger)
  id: ResetSection(SectionResetTrigger)
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: ResetSection(SectionResetTrigger)
  nameWithType: Section.ResetSection(SectionResetTrigger)
  fullName: Section.ResetSection(SectionResetTrigger)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ResetSection
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 352
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void ResetSection(SectionResetTrigger trigger)
    parameters:
    - id: trigger
      type: Global.SectionResetTrigger
    content.vb: Public Sub ResetSection(trigger As SectionResetTrigger)
  overload: Global.Section.ResetSection*
- uid: Global.Section.GetTilemap
  commentId: M:Global.Section.GetTilemap
  id: GetTilemap
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: GetTilemap()
  nameWithType: Section.GetTilemap()
  fullName: Section.GetTilemap()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetTilemap
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 391
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public TilemapIntCollider GetTilemap()
    return:
      type: Global.TilemapIntCollider
    content.vb: Public Function GetTilemap() As TilemapIntCollider
  overload: Global.Section.GetTilemap*
- uid: Global.Section.GetDoorEndpoints
  commentId: M:Global.Section.GetDoorEndpoints
  id: GetDoorEndpoints
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: GetDoorEndpoints()
  nameWithType: Section.GetDoorEndpoints()
  fullName: Section.GetDoorEndpoints()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetDoorEndpoints
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 396
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public List<Section.DoorEndpoints> GetDoorEndpoints()
    return:
      type: System.Collections.Generic.List{Section.DoorEndpoints}
    content.vb: Public Function GetDoorEndpoints() As List(Of Section.DoorEndpoints)
  overload: Global.Section.GetDoorEndpoints*
- uid: Global.Section.ComputeDoorEndpoints(System.Collections.Generic.List{Section.DoorEndpoints})
  commentId: M:Global.Section.ComputeDoorEndpoints(System.Collections.Generic.List{Section.DoorEndpoints})
  id: ComputeDoorEndpoints(System.Collections.Generic.List{Section.DoorEndpoints})
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: ComputeDoorEndpoints(List<DoorEndpoints>)
  nameWithType: Section.ComputeDoorEndpoints(List<Section.DoorEndpoints>)
  fullName: Section.ComputeDoorEndpoints(System.Collections.Generic.List<Section.DoorEndpoints>)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ComputeDoorEndpoints
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 406
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void ComputeDoorEndpoints(List<Section.DoorEndpoints> DoorEndpoints)
    parameters:
    - id: DoorEndpoints
      type: System.Collections.Generic.List{Section.DoorEndpoints}
    content.vb: Protected Sub ComputeDoorEndpoints(DoorEndpoints As List(Of Section.DoorEndpoints))
  overload: Global.Section.ComputeDoorEndpoints*
  nameWithType.vb: Section.ComputeDoorEndpoints(List(Of Section.DoorEndpoints))
  fullName.vb: Section.ComputeDoorEndpoints(System.Collections.Generic.List(Of Section.DoorEndpoints))
  name.vb: ComputeDoorEndpoints(List(Of DoorEndpoints))
- uid: Global.Section.ExtrudeDoorEndpoints(System.Collections.Generic.List{Section.DoorEndpoints},System.Int32)
  commentId: M:Global.Section.ExtrudeDoorEndpoints(System.Collections.Generic.List{Section.DoorEndpoints},System.Int32)
  id: ExtrudeDoorEndpoints(System.Collections.Generic.List{Section.DoorEndpoints},System.Int32)
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: ExtrudeDoorEndpoints(List<DoorEndpoints>, int)
  nameWithType: Section.ExtrudeDoorEndpoints(List<Section.DoorEndpoints>, int)
  fullName: Section.ExtrudeDoorEndpoints(System.Collections.Generic.List<Section.DoorEndpoints>, int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ExtrudeDoorEndpoints
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 486
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void ExtrudeDoorEndpoints(List<Section.DoorEndpoints> endpoints, int ExtrudeTileLength)
    parameters:
    - id: endpoints
      type: System.Collections.Generic.List{Section.DoorEndpoints}
    - id: ExtrudeTileLength
      type: System.Int32
    content.vb: Protected Sub ExtrudeDoorEndpoints(endpoints As List(Of Section.DoorEndpoints), ExtrudeTileLength As Integer)
  overload: Global.Section.ExtrudeDoorEndpoints*
  nameWithType.vb: Section.ExtrudeDoorEndpoints(List(Of Section.DoorEndpoints), Integer)
  fullName.vb: Section.ExtrudeDoorEndpoints(System.Collections.Generic.List(Of Section.DoorEndpoints), Integer)
  name.vb: ExtrudeDoorEndpoints(List(Of DoorEndpoints), Integer)
- uid: Global.Section.KillAutogeneratedDoor(Interactable)
  commentId: M:Global.Section.KillAutogeneratedDoor(Interactable)
  id: KillAutogeneratedDoor(Interactable)
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: KillAutogeneratedDoor(Interactable)
  nameWithType: Section.KillAutogeneratedDoor(Interactable)
  fullName: Section.KillAutogeneratedDoor(Interactable)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: KillAutogeneratedDoor
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 495
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void KillAutogeneratedDoor(Interactable interactable)
    parameters:
    - id: interactable
      type: Global.Interactable
    content.vb: Protected Sub KillAutogeneratedDoor(interactable As Interactable)
  overload: Global.Section.KillAutogeneratedDoor*
- uid: Global.Section.OnSectionCompleted
  commentId: M:Global.Section.OnSectionCompleted
  id: OnSectionCompleted
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: OnSectionCompleted()
  nameWithType: Section.OnSectionCompleted()
  fullName: Section.OnSectionCompleted()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnSectionCompleted
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 515
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void OnSectionCompleted()
    content.vb: Protected Sub OnSectionCompleted()
  overload: Global.Section.OnSectionCompleted*
- uid: Global.Section.OnPlayerDeath(Player,System.Boolean)
  commentId: M:Global.Section.OnPlayerDeath(Player,System.Boolean)
  id: OnPlayerDeath(Player,System.Boolean)
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: OnPlayerDeath(Player, bool)
  nameWithType: Section.OnPlayerDeath(Player, bool)
  fullName: Section.OnPlayerDeath(Player, bool)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnPlayerDeath
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 520
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void OnPlayerDeath(Player player, bool isMajorRespawn)
    parameters:
    - id: player
      type: Global.Player
    - id: isMajorRespawn
      type: System.Boolean
    content.vb: Protected Sub OnPlayerDeath(player As Player, isMajorRespawn As Boolean)
  overload: Global.Section.OnPlayerDeath*
  nameWithType.vb: Section.OnPlayerDeath(Player, Boolean)
  fullName.vb: Section.OnPlayerDeath(Player, Boolean)
  name.vb: OnPlayerDeath(Player, Boolean)
- uid: Global.Section.BuildInteractableAndDoors(System.Collections.Generic.List{Section.DoorEndpoints})
  commentId: M:Global.Section.BuildInteractableAndDoors(System.Collections.Generic.List{Section.DoorEndpoints})
  id: BuildInteractableAndDoors(System.Collections.Generic.List{Section.DoorEndpoints})
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: BuildInteractableAndDoors(List<DoorEndpoints>)
  nameWithType: Section.BuildInteractableAndDoors(List<Section.DoorEndpoints>)
  fullName: Section.BuildInteractableAndDoors(System.Collections.Generic.List<Section.DoorEndpoints>)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BuildInteractableAndDoors
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 532
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void BuildInteractableAndDoors(List<Section.DoorEndpoints> endpoints)
    parameters:
    - id: endpoints
      type: System.Collections.Generic.List{Section.DoorEndpoints}
    content.vb: Protected Sub BuildInteractableAndDoors(endpoints As List(Of Section.DoorEndpoints))
  overload: Global.Section.BuildInteractableAndDoors*
  nameWithType.vb: Section.BuildInteractableAndDoors(List(Of Section.DoorEndpoints))
  fullName.vb: Section.BuildInteractableAndDoors(System.Collections.Generic.List(Of Section.DoorEndpoints))
  name.vb: BuildInteractableAndDoors(List(Of DoorEndpoints))
- uid: Global.Section.AppendDoorEndpoints(System.Collections.Generic.List{Section.DoorEndpoints},TilemapIntCollider,UnityEngine.Vector2Int,UnityEngine.Vector2Int,UnityEngine.Vector2Int,IntMath.Direction)
  commentId: M:Global.Section.AppendDoorEndpoints(System.Collections.Generic.List{Section.DoorEndpoints},TilemapIntCollider,UnityEngine.Vector2Int,UnityEngine.Vector2Int,UnityEngine.Vector2Int,IntMath.Direction)
  id: AppendDoorEndpoints(System.Collections.Generic.List{Section.DoorEndpoints},TilemapIntCollider,UnityEngine.Vector2Int,UnityEngine.Vector2Int,UnityEngine.Vector2Int,IntMath.Direction)
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: AppendDoorEndpoints(List<DoorEndpoints>, TilemapIntCollider, Vector2Int, Vector2Int, Vector2Int, Direction)
  nameWithType: Section.AppendDoorEndpoints(List<Section.DoorEndpoints>, TilemapIntCollider, Vector2Int, Vector2Int, Vector2Int, IntMath.Direction)
  fullName: Section.AppendDoorEndpoints(System.Collections.Generic.List<Section.DoorEndpoints>, TilemapIntCollider, UnityEngine.Vector2Int, UnityEngine.Vector2Int, UnityEngine.Vector2Int, IntMath.Direction)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: AppendDoorEndpoints
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 629
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: protected void AppendDoorEndpoints(List<Section.DoorEndpoints> EndpointList, TilemapIntCollider tilemap, Vector2Int startIndex, Vector2Int endIndex, Vector2Int Normal, IntMath.Direction dir)
    parameters:
    - id: EndpointList
      type: System.Collections.Generic.List{Section.DoorEndpoints}
    - id: tilemap
      type: Global.TilemapIntCollider
    - id: startIndex
      type: UnityEngine.Vector2Int
    - id: endIndex
      type: UnityEngine.Vector2Int
    - id: Normal
      type: UnityEngine.Vector2Int
    - id: dir
      type: Global.IntMath.Direction
    content.vb: Protected Sub AppendDoorEndpoints(EndpointList As List(Of Section.DoorEndpoints), tilemap As TilemapIntCollider, startIndex As Vector2Int, endIndex As Vector2Int, Normal As Vector2Int, dir As IntMath.Direction)
  overload: Global.Section.AppendDoorEndpoints*
  nameWithType.vb: Section.AppendDoorEndpoints(List(Of Section.DoorEndpoints), TilemapIntCollider, Vector2Int, Vector2Int, Vector2Int, IntMath.Direction)
  fullName.vb: Section.AppendDoorEndpoints(System.Collections.Generic.List(Of Section.DoorEndpoints), TilemapIntCollider, UnityEngine.Vector2Int, UnityEngine.Vector2Int, UnityEngine.Vector2Int, IntMath.Direction)
  name.vb: AppendDoorEndpoints(List(Of DoorEndpoints), TilemapIntCollider, Vector2Int, Vector2Int, Vector2Int, Direction)
- uid: Global.Section.ExtrudeDoor(TilemapIntCollider,UnityEngine.Vector2Int,UnityEngine.Vector2Int,UnityEngine.Vector2Int,System.Int32)
  commentId: M:Global.Section.ExtrudeDoor(TilemapIntCollider,UnityEngine.Vector2Int,UnityEngine.Vector2Int,UnityEngine.Vector2Int,System.Int32)
  id: ExtrudeDoor(TilemapIntCollider,UnityEngine.Vector2Int,UnityEngine.Vector2Int,UnityEngine.Vector2Int,System.Int32)
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: ExtrudeDoor(TilemapIntCollider, Vector2Int, Vector2Int, Vector2Int, int)
  nameWithType: Section.ExtrudeDoor(TilemapIntCollider, Vector2Int, Vector2Int, Vector2Int, int)
  fullName: Section.ExtrudeDoor(TilemapIntCollider, UnityEngine.Vector2Int, UnityEngine.Vector2Int, UnityEngine.Vector2Int, int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: ExtrudeDoor
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 674
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void ExtrudeDoor(TilemapIntCollider tilemap, Vector2Int doorStartIndex, Vector2Int doorEndIndex, Vector2Int extrudeDirection, int extudeLen)
    parameters:
    - id: tilemap
      type: Global.TilemapIntCollider
    - id: doorStartIndex
      type: UnityEngine.Vector2Int
    - id: doorEndIndex
      type: UnityEngine.Vector2Int
    - id: extrudeDirection
      type: UnityEngine.Vector2Int
    - id: extudeLen
      type: System.Int32
    content.vb: Public Sub ExtrudeDoor(tilemap As TilemapIntCollider, doorStartIndex As Vector2Int, doorEndIndex As Vector2Int, extrudeDirection As Vector2Int, extudeLen As Integer)
  overload: Global.Section.ExtrudeDoor*
  nameWithType.vb: Section.ExtrudeDoor(TilemapIntCollider, Vector2Int, Vector2Int, Vector2Int, Integer)
  fullName.vb: Section.ExtrudeDoor(TilemapIntCollider, UnityEngine.Vector2Int, UnityEngine.Vector2Int, UnityEngine.Vector2Int, Integer)
  name.vb: ExtrudeDoor(TilemapIntCollider, Vector2Int, Vector2Int, Vector2Int, Integer)
- uid: Global.Section.BuildDoor(TilemapIntCollider,UnityEngine.Vector2Int,UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  commentId: M:Global.Section.BuildDoor(TilemapIntCollider,UnityEngine.Vector2Int,UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  id: BuildDoor(TilemapIntCollider,UnityEngine.Vector2Int,UnityEngine.Vector2Int,UnityEngine.Vector2Int)
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: BuildDoor(TilemapIntCollider, Vector2Int, Vector2Int, Vector2Int)
  nameWithType: Section.BuildDoor(TilemapIntCollider, Vector2Int, Vector2Int, Vector2Int)
  fullName: Section.BuildDoor(TilemapIntCollider, UnityEngine.Vector2Int, UnityEngine.Vector2Int, UnityEngine.Vector2Int)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: BuildDoor
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 697
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public LockableDoor BuildDoor(TilemapIntCollider tilemap, Vector2Int doorStartIndex, Vector2Int doorEndIndex, Vector2Int Normal)
    parameters:
    - id: tilemap
      type: Global.TilemapIntCollider
    - id: doorStartIndex
      type: UnityEngine.Vector2Int
    - id: doorEndIndex
      type: UnityEngine.Vector2Int
    - id: Normal
      type: UnityEngine.Vector2Int
    return:
      type: Global.LockableDoor
    content.vb: Public Function BuildDoor(tilemap As TilemapIntCollider, doorStartIndex As Vector2Int, doorEndIndex As Vector2Int, Normal As Vector2Int) As LockableDoor
  overload: Global.Section.BuildDoor*
- uid: Global.Section.LoadObjectSaveData(SectionSaveData)
  commentId: M:Global.Section.LoadObjectSaveData(SectionSaveData)
  id: LoadObjectSaveData(SectionSaveData)
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: LoadObjectSaveData(SectionSaveData)
  nameWithType: Section.LoadObjectSaveData(SectionSaveData)
  fullName: Section.LoadObjectSaveData(SectionSaveData)
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: LoadObjectSaveData
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 730
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public bool LoadObjectSaveData(SectionSaveData data)
    parameters:
    - id: data
      type: Global.SectionSaveData
    return:
      type: System.Boolean
    content.vb: Public Function LoadObjectSaveData(data As SectionSaveData) As Boolean
  overload: Global.Section.LoadObjectSaveData*
  implements:
  - Global.ISavableObject{SectionSaveData}.LoadObjectSaveData(SectionSaveData)
- uid: Global.Section.GetObjectSaveData
  commentId: M:Global.Section.GetObjectSaveData
  id: GetObjectSaveData
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: GetObjectSaveData()
  nameWithType: Section.GetObjectSaveData()
  fullName: Section.GetObjectSaveData()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: GetObjectSaveData
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 761
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public SectionSaveData GetObjectSaveData()
    return:
      type: Global.SectionSaveData
    content.vb: Public Function GetObjectSaveData() As SectionSaveData
  overload: Global.Section.GetObjectSaveData*
  implements:
  - Global.ISavableObject{SectionSaveData}.GetObjectSaveData
- uid: Global.Section.OnPostLoadSaveFile
  commentId: M:Global.Section.OnPostLoadSaveFile
  id: OnPostLoadSaveFile
  parent: Global.Section
  langs:
  - csharp
  - vb
  name: OnPostLoadSaveFile()
  nameWithType: Section.OnPostLoadSaveFile()
  fullName: Section.OnPostLoadSaveFile()
  type: Method
  source:
    remote:
      path: Assets/Objects & Components/World/Section/Section.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: OnPostLoadSaveFile
    path: ../Assets/Objects & Components/World/Section/Section.cs
    startLine: 817
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void OnPostLoadSaveFile()
    content.vb: Public Sub OnPostLoadSaveFile()
  overload: Global.Section.OnPostLoadSaveFile*
  implements:
  - Global.ISavableObject{SectionSaveData}.OnPostLoadSaveFile
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Global.ISavableObject{SectionSaveData}
  commentId: T:Global.ISavableObject{SectionSaveData}
  definition: Global.ISavableObject`1
  name: ISavableObject<SectionSaveData>
  nameWithType: ISavableObject<SectionSaveData>
  fullName: ISavableObject<SectionSaveData>
  nameWithType.vb: ISavableObject(Of SectionSaveData)
  fullName.vb: ISavableObject(Of SectionSaveData)
  name.vb: ISavableObject(Of SectionSaveData)
  spec.csharp:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: <
  - uid: Global.SectionSaveData
    name: SectionSaveData
  - name: '>'
  spec.vb:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: (
  - name: Of
  - name: " "
  - uid: Global.SectionSaveData
    name: SectionSaveData
  - name: )
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: Global.ISavableObject`1
  commentId: T:Global.ISavableObject`1
  name: ISavableObject<T>
  nameWithType: ISavableObject<T>
  fullName: ISavableObject<T>
  nameWithType.vb: ISavableObject(Of T)
  fullName.vb: ISavableObject(Of T)
  name.vb: ISavableObject(Of T)
  spec.csharp:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.ISavableObject`1
    name: ISavableObject
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UnityEngine.Vector2Int
  commentId: T:UnityEngine.Vector2Int
  parent: UnityEngine
  isExternal: true
  name: Vector2Int
  nameWithType: Vector2Int
  fullName: UnityEngine.Vector2Int
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.IntMath.Axis
  commentId: T:Global.IntMath.Axis
  name: IntMath.Axis
  nameWithType: IntMath.Axis
  fullName: IntMath.Axis
  spec.csharp:
  - uid: Global.IntMath
    name: IntMath
  - name: .
  - uid: Global.IntMath.Axis
    name: Axis
  spec.vb:
  - uid: Global.IntMath
    name: IntMath
  - name: .
  - uid: Global.IntMath.Axis
    name: Axis
- uid: Global.Section.SpawnLocation*
  commentId: Overload:Global.Section.SpawnLocation
  name: SpawnLocation
  nameWithType: Section.SpawnLocation
  fullName: Section.SpawnLocation
- uid: Global.PlayerSpawn
  commentId: T:Global.PlayerSpawn
  name: PlayerSpawn
  nameWithType: PlayerSpawn
  fullName: PlayerSpawn
- uid: Global.Section.PortalLocation*
  commentId: Overload:Global.Section.PortalLocation
  name: PortalLocation
  nameWithType: Section.PortalLocation
  fullName: Section.PortalLocation
- uid: Global.PortalInteractionController
  commentId: T:Global.PortalInteractionController
  name: PortalInteractionController
  nameWithType: PortalInteractionController
  fullName: PortalInteractionController
- uid: Global.Section.SectionCompletionCondition
  commentId: T:Global.Section.SectionCompletionCondition
  name: Section.SectionCompletionCondition
  nameWithType: Section.SectionCompletionCondition
  fullName: Section.SectionCompletionCondition
  spec.csharp:
  - uid: Global.Section
    name: Section
  - name: .
  - uid: Global.Section.SectionCompletionCondition
    name: SectionCompletionCondition
  spec.vb:
  - uid: Global.Section
    name: Section
  - name: .
  - uid: Global.Section.SectionCompletionCondition
    name: SectionCompletionCondition
- uid: Global.AscendState
  commentId: T:Global.AscendState
  name: AscendState
  nameWithType: AscendState
  fullName: AscendState
- uid: Global.Section.EnemyListWrapper
  commentId: T:Global.Section.EnemyListWrapper
  name: Section.EnemyListWrapper
  nameWithType: Section.EnemyListWrapper
  fullName: Section.EnemyListWrapper
  spec.csharp:
  - uid: Global.Section
    name: Section
  - name: .
  - uid: Global.Section.EnemyListWrapper
    name: EnemyListWrapper
  spec.vb:
  - uid: Global.Section
    name: Section
  - name: .
  - uid: Global.Section.EnemyListWrapper
    name: EnemyListWrapper
- uid: Global.AscendState[]
  isExternal: true
  name: AscendState[]
  nameWithType: AscendState[]
  fullName: AscendState[]
  nameWithType.vb: AscendState()
  fullName.vb: AscendState()
  name.vb: AscendState()
  spec.csharp:
  - uid: Global.AscendState
    name: AscendState
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.AscendState
    name: AscendState
  - name: (
  - name: )
- uid: Global.Section.IsSectionCompleted*
  commentId: Overload:Global.Section.IsSectionCompleted
  name: IsSectionCompleted
  nameWithType: Section.IsSectionCompleted
  fullName: Section.IsSectionCompleted
- uid: Global.Interactable
  commentId: T:Global.Interactable
  name: Interactable
  nameWithType: Interactable
  fullName: Interactable
- uid: Global.Section.TopLeft*
  commentId: Overload:Global.Section.TopLeft
  name: TopLeft
  nameWithType: Section.TopLeft
  fullName: Section.TopLeft
- uid: UnityEngine.Vector3Int
  commentId: T:UnityEngine.Vector3Int
  parent: UnityEngine
  isExternal: true
  name: Vector3Int
  nameWithType: Vector3Int
  fullName: UnityEngine.Vector3Int
- uid: Global.Section.BottomLeft*
  commentId: Overload:Global.Section.BottomLeft
  name: BottomLeft
  nameWithType: Section.BottomLeft
  fullName: Section.BottomLeft
- uid: Global.Section.BottomRight*
  commentId: Overload:Global.Section.BottomRight
  name: BottomRight
  nameWithType: Section.BottomRight
  fullName: Section.BottomRight
- uid: Global.Section.TopRight*
  commentId: Overload:Global.Section.TopRight
  name: TopRight
  nameWithType: Section.TopRight
  fullName: Section.TopRight
- uid: Global.Section.Bounds*
  commentId: Overload:Global.Section.Bounds
  name: Bounds
  nameWithType: Section.Bounds
  fullName: Section.Bounds
- uid: UnityEngine.BoundsInt
  commentId: T:UnityEngine.BoundsInt
  parent: UnityEngine
  isExternal: true
  name: BoundsInt
  nameWithType: BoundsInt
  fullName: UnityEngine.BoundsInt
- uid: Global.Section.RectAsTileIndices*
  commentId: Overload:Global.Section.RectAsTileIndices
  name: RectAsTileIndices
  nameWithType: Section.RectAsTileIndices
  fullName: Section.RectAsTileIndices
- uid: UnityEngine.RectInt
  commentId: T:UnityEngine.RectInt
  parent: UnityEngine
  isExternal: true
  name: RectInt
  nameWithType: RectInt
  fullName: UnityEngine.RectInt
- uid: Global.Section.Width*
  commentId: Overload:Global.Section.Width
  name: Width
  nameWithType: Section.Width
  fullName: Section.Width
- uid: Global.Section.Height*
  commentId: Overload:Global.Section.Height
  name: Height
  nameWithType: Section.Height
  fullName: Section.Height
- uid: Global.Section.Left*
  commentId: Overload:Global.Section.Left
  name: Left
  nameWithType: Section.Left
  fullName: Section.Left
- uid: Global.Section.Bottom*
  commentId: Overload:Global.Section.Bottom
  name: Bottom
  nameWithType: Section.Bottom
  fullName: Section.Bottom
- uid: Global.Section.Right*
  commentId: Overload:Global.Section.Right
  name: Right
  nameWithType: Section.Right
  fullName: Section.Right
- uid: Global.Section.Top*
  commentId: Overload:Global.Section.Top
  name: Top
  nameWithType: Section.Top
  fullName: Section.Top
- uid: Global.Section.Center*
  commentId: Overload:Global.Section.Center
  name: Center
  nameWithType: Section.Center
  fullName: Section.Center
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.TriggeredAction[]
  isExternal: true
  name: TriggeredAction[]
  nameWithType: TriggeredAction[]
  fullName: TriggeredAction[]
  nameWithType.vb: TriggeredAction()
  fullName.vb: TriggeredAction()
  name.vb: TriggeredAction()
  spec.csharp:
  - uid: Global.TriggeredAction
    name: TriggeredAction
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.TriggeredAction
    name: TriggeredAction
  - name: (
  - name: )
- uid: Global.Section.Start*
  commentId: Overload:Global.Section.Start
  name: Start
  nameWithType: Section.Start
  fullName: Section.Start
- uid: Global.Section.Awake*
  commentId: Overload:Global.Section.Awake
  name: Awake
  nameWithType: Section.Awake
  fullName: Section.Awake
- uid: Global.Section.OnDrawGizmos*
  commentId: Overload:Global.Section.OnDrawGizmos
  name: OnDrawGizmos
  nameWithType: Section.OnDrawGizmos
  fullName: Section.OnDrawGizmos
- uid: Global.Section.ContainsPoint*
  commentId: Overload:Global.Section.ContainsPoint
  name: ContainsPoint
  nameWithType: Section.ContainsPoint
  fullName: Section.ContainsPoint
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: Global.Section.ContainsRect*
  commentId: Overload:Global.Section.ContainsRect
  name: ContainsRect
  nameWithType: Section.ContainsRect
  fullName: Section.ContainsRect
- uid: UnityEngine.Rect
  commentId: T:UnityEngine.Rect
  parent: UnityEngine
  isExternal: true
  name: Rect
  nameWithType: Rect
  fullName: UnityEngine.Rect
- uid: Global.Section.ContainsAABB*
  commentId: Overload:Global.Section.ContainsAABB
  name: ContainsAABB
  nameWithType: Section.ContainsAABB
  fullName: Section.ContainsAABB
- uid: Global.AABBIntCollider
  commentId: T:Global.AABBIntCollider
  name: AABBIntCollider
  nameWithType: AABBIntCollider
  fullName: AABBIntCollider
- uid: Global.Section.ContainsBoundsInt*
  commentId: Overload:Global.Section.ContainsBoundsInt
  name: ContainsBoundsInt
  nameWithType: Section.ContainsBoundsInt
  fullName: Section.ContainsBoundsInt
- uid: Global.Section.ContainsBoundsIntWithInset*
  commentId: Overload:Global.Section.ContainsBoundsIntWithInset
  name: ContainsBoundsIntWithInset
  nameWithType: Section.ContainsBoundsIntWithInset
  fullName: Section.ContainsBoundsIntWithInset
- uid: Global.Section.GetOutlineRays*
  commentId: Overload:Global.Section.GetOutlineRays
  name: GetOutlineRays
  nameWithType: Section.GetOutlineRays
  fullName: Section.GetOutlineRays
- uid: System.Collections.Generic.List{IntRay}
  commentId: T:System.Collections.Generic.List{IntRay}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IntRay>
  nameWithType: List<IntRay>
  fullName: System.Collections.Generic.List<IntRay>
  nameWithType.vb: List(Of IntRay)
  fullName.vb: System.Collections.Generic.List(Of IntRay)
  name.vb: List(Of IntRay)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.IntRay
    name: IntRay
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IntRay
    name: IntRay
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: Global.Section.GetRayIntersection*
  commentId: Overload:Global.Section.GetRayIntersection
  name: GetRayIntersection
  nameWithType: Section.GetRayIntersection
  fullName: Section.GetRayIntersection
- uid: Global.IntRay
  commentId: T:Global.IntRay
  name: IntRay
  nameWithType: IntRay
  fullName: IntRay
- uid: Global.Intersection
  commentId: T:Global.Intersection
  name: Intersection
  nameWithType: Intersection
  fullName: Intersection
- uid: Global.Section.OnSafeEnterSection*
  commentId: Overload:Global.Section.OnSafeEnterSection
  name: OnSafeEnterSection
  nameWithType: Section.OnSafeEnterSection
  fullName: Section.OnSafeEnterSection
- uid: Global.Section.OnEnterSection*
  commentId: Overload:Global.Section.OnEnterSection
  name: OnEnterSection
  nameWithType: Section.OnEnterSection
  fullName: Section.OnEnterSection
- uid: Global.Section
  commentId: T:Global.Section
  name: Section
  nameWithType: Section
  fullName: Section
- uid: Global.Section.OnExitSection*
  commentId: Overload:Global.Section.OnExitSection
  name: OnExitSection
  nameWithType: Section.OnExitSection
  fullName: Section.OnExitSection
- uid: Global.Section.ResetAllSections*
  commentId: Overload:Global.Section.ResetAllSections
  name: ResetAllSections
  nameWithType: Section.ResetAllSections
  fullName: Section.ResetAllSections
- uid: Global.SectionResetTrigger
  commentId: T:Global.SectionResetTrigger
  name: SectionResetTrigger
  nameWithType: SectionResetTrigger
  fullName: SectionResetTrigger
- uid: Global.Section.ResetSection*
  commentId: Overload:Global.Section.ResetSection
  name: ResetSection
  nameWithType: Section.ResetSection
  fullName: Section.ResetSection
- uid: Global.Section.GetTilemap*
  commentId: Overload:Global.Section.GetTilemap
  name: GetTilemap
  nameWithType: Section.GetTilemap
  fullName: Section.GetTilemap
- uid: Global.TilemapIntCollider
  commentId: T:Global.TilemapIntCollider
  name: TilemapIntCollider
  nameWithType: TilemapIntCollider
  fullName: TilemapIntCollider
- uid: Global.Section.GetDoorEndpoints*
  commentId: Overload:Global.Section.GetDoorEndpoints
  name: GetDoorEndpoints
  nameWithType: Section.GetDoorEndpoints
  fullName: Section.GetDoorEndpoints
- uid: System.Collections.Generic.List{Section.DoorEndpoints}
  commentId: T:System.Collections.Generic.List{Section.DoorEndpoints}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Section.DoorEndpoints>
  nameWithType: List<Section.DoorEndpoints>
  fullName: System.Collections.Generic.List<Section.DoorEndpoints>
  nameWithType.vb: List(Of Section.DoorEndpoints)
  fullName.vb: System.Collections.Generic.List(Of Section.DoorEndpoints)
  name.vb: List(Of Section.DoorEndpoints)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.Section
    name: Section
  - name: .
  - uid: Global.Section.DoorEndpoints
    name: DoorEndpoints
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Section
    name: Section
  - name: .
  - uid: Global.Section.DoorEndpoints
    name: DoorEndpoints
  - name: )
- uid: Global.Section.ComputeDoorEndpoints*
  commentId: Overload:Global.Section.ComputeDoorEndpoints
  name: ComputeDoorEndpoints
  nameWithType: Section.ComputeDoorEndpoints
  fullName: Section.ComputeDoorEndpoints
- uid: Global.Section.ExtrudeDoorEndpoints*
  commentId: Overload:Global.Section.ExtrudeDoorEndpoints
  name: ExtrudeDoorEndpoints
  nameWithType: Section.ExtrudeDoorEndpoints
  fullName: Section.ExtrudeDoorEndpoints
- uid: Global.Section.KillAutogeneratedDoor*
  commentId: Overload:Global.Section.KillAutogeneratedDoor
  name: KillAutogeneratedDoor
  nameWithType: Section.KillAutogeneratedDoor
  fullName: Section.KillAutogeneratedDoor
- uid: Global.Section.OnSectionCompleted*
  commentId: Overload:Global.Section.OnSectionCompleted
  name: OnSectionCompleted
  nameWithType: Section.OnSectionCompleted
  fullName: Section.OnSectionCompleted
- uid: Global.Section.OnPlayerDeath*
  commentId: Overload:Global.Section.OnPlayerDeath
  name: OnPlayerDeath
  nameWithType: Section.OnPlayerDeath
  fullName: Section.OnPlayerDeath
- uid: Global.Player
  commentId: T:Global.Player
  name: Player
  nameWithType: Player
  fullName: Player
- uid: Global.Section.BuildInteractableAndDoors*
  commentId: Overload:Global.Section.BuildInteractableAndDoors
  name: BuildInteractableAndDoors
  nameWithType: Section.BuildInteractableAndDoors
  fullName: Section.BuildInteractableAndDoors
- uid: Global.Section.AppendDoorEndpoints*
  commentId: Overload:Global.Section.AppendDoorEndpoints
  name: AppendDoorEndpoints
  nameWithType: Section.AppendDoorEndpoints
  fullName: Section.AppendDoorEndpoints
- uid: Global.IntMath.Direction
  commentId: T:Global.IntMath.Direction
  name: IntMath.Direction
  nameWithType: IntMath.Direction
  fullName: IntMath.Direction
  spec.csharp:
  - uid: Global.IntMath
    name: IntMath
  - name: .
  - uid: Global.IntMath.Direction
    name: Direction
  spec.vb:
  - uid: Global.IntMath
    name: IntMath
  - name: .
  - uid: Global.IntMath.Direction
    name: Direction
- uid: Global.Section.ExtrudeDoor*
  commentId: Overload:Global.Section.ExtrudeDoor
  name: ExtrudeDoor
  nameWithType: Section.ExtrudeDoor
  fullName: Section.ExtrudeDoor
- uid: Global.Section.BuildDoor*
  commentId: Overload:Global.Section.BuildDoor
  name: BuildDoor
  nameWithType: Section.BuildDoor
  fullName: Section.BuildDoor
- uid: Global.LockableDoor
  commentId: T:Global.LockableDoor
  name: LockableDoor
  nameWithType: LockableDoor
  fullName: LockableDoor
- uid: Global.Section.LoadObjectSaveData*
  commentId: Overload:Global.Section.LoadObjectSaveData
  name: LoadObjectSaveData
  nameWithType: Section.LoadObjectSaveData
  fullName: Section.LoadObjectSaveData
- uid: Global.ISavableObject{SectionSaveData}.LoadObjectSaveData(SectionSaveData)
  commentId: M:Global.ISavableObject{SectionSaveData}.LoadObjectSaveData(SectionSaveData)
  parent: Global.ISavableObject{SectionSaveData}
  definition: Global.ISavableObject`1.LoadObjectSaveData(`0)
  name: LoadObjectSaveData(SectionSaveData)
  nameWithType: ISavableObject<SectionSaveData>.LoadObjectSaveData(SectionSaveData)
  fullName: ISavableObject<SectionSaveData>.LoadObjectSaveData(SectionSaveData)
  nameWithType.vb: ISavableObject(Of SectionSaveData).LoadObjectSaveData(SectionSaveData)
  fullName.vb: ISavableObject(Of SectionSaveData).LoadObjectSaveData(SectionSaveData)
  spec.csharp:
  - uid: Global.ISavableObject{SectionSaveData}.LoadObjectSaveData(SectionSaveData)
    name: LoadObjectSaveData
  - name: (
  - uid: Global.SectionSaveData
    name: SectionSaveData
  - name: )
  spec.vb:
  - uid: Global.ISavableObject{SectionSaveData}.LoadObjectSaveData(SectionSaveData)
    name: LoadObjectSaveData
  - name: (
  - uid: Global.SectionSaveData
    name: SectionSaveData
  - name: )
- uid: Global.SectionSaveData
  commentId: T:Global.SectionSaveData
  name: SectionSaveData
  nameWithType: SectionSaveData
  fullName: SectionSaveData
- uid: Global.ISavableObject`1.LoadObjectSaveData(`0)
  commentId: M:Global.ISavableObject`1.LoadObjectSaveData(`0)
  name: LoadObjectSaveData(T)
  nameWithType: ISavableObject<T>.LoadObjectSaveData(T)
  fullName: ISavableObject<T>.LoadObjectSaveData(T)
  nameWithType.vb: ISavableObject(Of T).LoadObjectSaveData(T)
  fullName.vb: ISavableObject(Of T).LoadObjectSaveData(T)
  spec.csharp:
  - uid: Global.ISavableObject`1.LoadObjectSaveData(`0)
    name: LoadObjectSaveData
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Global.ISavableObject`1.LoadObjectSaveData(`0)
    name: LoadObjectSaveData
  - name: (
  - name: T
  - name: )
- uid: Global.Section.GetObjectSaveData*
  commentId: Overload:Global.Section.GetObjectSaveData
  name: GetObjectSaveData
  nameWithType: Section.GetObjectSaveData
  fullName: Section.GetObjectSaveData
- uid: Global.ISavableObject{SectionSaveData}.GetObjectSaveData
  commentId: M:Global.ISavableObject{SectionSaveData}.GetObjectSaveData
  parent: Global.ISavableObject{SectionSaveData}
  definition: Global.ISavableObject`1.GetObjectSaveData
  name: GetObjectSaveData()
  nameWithType: ISavableObject<SectionSaveData>.GetObjectSaveData()
  fullName: ISavableObject<SectionSaveData>.GetObjectSaveData()
  nameWithType.vb: ISavableObject(Of SectionSaveData).GetObjectSaveData()
  fullName.vb: ISavableObject(Of SectionSaveData).GetObjectSaveData()
  spec.csharp:
  - uid: Global.ISavableObject{SectionSaveData}.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ISavableObject{SectionSaveData}.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
- uid: Global.ISavableObject`1.GetObjectSaveData
  commentId: M:Global.ISavableObject`1.GetObjectSaveData
  name: GetObjectSaveData()
  nameWithType: ISavableObject<T>.GetObjectSaveData()
  fullName: ISavableObject<T>.GetObjectSaveData()
  nameWithType.vb: ISavableObject(Of T).GetObjectSaveData()
  fullName.vb: ISavableObject(Of T).GetObjectSaveData()
  spec.csharp:
  - uid: Global.ISavableObject`1.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ISavableObject`1.GetObjectSaveData
    name: GetObjectSaveData
  - name: (
  - name: )
- uid: Global.Section.OnPostLoadSaveFile*
  commentId: Overload:Global.Section.OnPostLoadSaveFile
  name: OnPostLoadSaveFile
  nameWithType: Section.OnPostLoadSaveFile
  fullName: Section.OnPostLoadSaveFile
- uid: Global.ISavableObject{SectionSaveData}.OnPostLoadSaveFile
  commentId: M:Global.ISavableObject{SectionSaveData}.OnPostLoadSaveFile
  parent: Global.ISavableObject{SectionSaveData}
  definition: Global.ISavableObject`1.OnPostLoadSaveFile
  name: OnPostLoadSaveFile()
  nameWithType: ISavableObject<SectionSaveData>.OnPostLoadSaveFile()
  fullName: ISavableObject<SectionSaveData>.OnPostLoadSaveFile()
  nameWithType.vb: ISavableObject(Of SectionSaveData).OnPostLoadSaveFile()
  fullName.vb: ISavableObject(Of SectionSaveData).OnPostLoadSaveFile()
  spec.csharp:
  - uid: Global.ISavableObject{SectionSaveData}.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ISavableObject{SectionSaveData}.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
- uid: Global.ISavableObject`1.OnPostLoadSaveFile
  commentId: M:Global.ISavableObject`1.OnPostLoadSaveFile
  name: OnPostLoadSaveFile()
  nameWithType: ISavableObject<T>.OnPostLoadSaveFile()
  fullName: ISavableObject<T>.OnPostLoadSaveFile()
  nameWithType.vb: ISavableObject(Of T).OnPostLoadSaveFile()
  fullName.vb: ISavableObject(Of T).OnPostLoadSaveFile()
  spec.csharp:
  - uid: Global.ISavableObject`1.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ISavableObject`1.OnPostLoadSaveFile
    name: OnPostLoadSaveFile
  - name: (
  - name: )
