### YamlMime:ManagedReference
items:
- uid: Global.PIDController
  commentId: T:Global.PIDController
  id: PIDController
  parent: Global
  children:
  - Global.PIDController.#ctor(System.Single,System.Single,System.Single)
  - Global.PIDController.Correction
  - Global.PIDController.CorrectionArrivalEpsilon
  - Global.PIDController.DerivativeArrivalEpsilon
  - Global.PIDController.dFactor
  - Global.PIDController.iFactor
  - Global.PIDController.MaxCorrectionSpeed
  - Global.PIDController.pFactor
  - Global.PIDController.Update(System.Single,System.Single,System.Single)
  - Global.PIDController.Value
  langs:
  - csharp
  - vb
  name: PIDController
  nameWithType: PIDController
  fullName: PIDController
  type: Class
  source:
    remote:
      path: Assets/Framework/Util/Math/Movement/PIDController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: PIDController
    path: ../Assets/Framework/Util/Math/Movement/PIDController.cs
    startLine: 4
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class PIDController
    content.vb: >-
      <Serializable>

      Public Class PIDController
  inheritance:
  - System.Object
  extensionMethods:
  - System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.PIDController.pFactor
  commentId: F:Global.PIDController.pFactor
  id: pFactor
  parent: Global.PIDController
  langs:
  - csharp
  - vb
  name: pFactor
  nameWithType: PIDController.pFactor
  fullName: PIDController.pFactor
  type: Field
  source:
    remote:
      path: Assets/Framework/Util/Math/Movement/PIDController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: pFactor
    path: ../Assets/Framework/Util/Math/Movement/PIDController.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Proportional value")]

      public float pFactor
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("Proportional value")>

      Public pFactor As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Proportional value
- uid: Global.PIDController.iFactor
  commentId: F:Global.PIDController.iFactor
  id: iFactor
  parent: Global.PIDController
  langs:
  - csharp
  - vb
  name: iFactor
  nameWithType: PIDController.iFactor
  fullName: PIDController.iFactor
  type: Field
  source:
    remote:
      path: Assets/Framework/Util/Math/Movement/PIDController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: iFactor
    path: ../Assets/Framework/Util/Math/Movement/PIDController.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Integral value")]

      public float iFactor
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("Integral value")>

      Public iFactor As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Integral value
- uid: Global.PIDController.dFactor
  commentId: F:Global.PIDController.dFactor
  id: dFactor
  parent: Global.PIDController
  langs:
  - csharp
  - vb
  name: dFactor
  nameWithType: PIDController.dFactor
  fullName: PIDController.dFactor
  type: Field
  source:
    remote:
      path: Assets/Framework/Util/Math/Movement/PIDController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: dFactor
    path: ../Assets/Framework/Util/Math/Movement/PIDController.cs
    startLine: 12
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Derivative value")]

      public float dFactor
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("Derivative value")>

      Public dFactor As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Derivative value
- uid: Global.PIDController.MaxCorrectionSpeed
  commentId: F:Global.PIDController.MaxCorrectionSpeed
  id: MaxCorrectionSpeed
  parent: Global.PIDController
  langs:
  - csharp
  - vb
  name: MaxCorrectionSpeed
  nameWithType: PIDController.MaxCorrectionSpeed
  fullName: PIDController.MaxCorrectionSpeed
  type: Field
  source:
    remote:
      path: Assets/Framework/Util/Math/Movement/PIDController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: MaxCorrectionSpeed
    path: ../Assets/Framework/Util/Math/Movement/PIDController.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("Max speed allowed for value")]

      public float MaxCorrectionSpeed
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("Max speed allowed for value")>

      Public MaxCorrectionSpeed As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Max speed allowed for value
- uid: Global.PIDController.CorrectionArrivalEpsilon
  commentId: F:Global.PIDController.CorrectionArrivalEpsilon
  id: CorrectionArrivalEpsilon
  parent: Global.PIDController
  langs:
  - csharp
  - vb
  name: CorrectionArrivalEpsilon
  nameWithType: PIDController.CorrectionArrivalEpsilon
  fullName: PIDController.CorrectionArrivalEpsilon
  type: Field
  source:
    remote:
      path: Assets/Framework/Util/Math/Movement/PIDController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: CorrectionArrivalEpsilon
    path: ../Assets/Framework/Util/Math/Movement/PIDController.cs
    startLine: 16
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("When to trigger the 'Arrived' callback")]

      public float CorrectionArrivalEpsilon
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("When to trigger the 'Arrived' callback")>

      Public CorrectionArrivalEpsilon As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: When to trigger the 'Arrived' callback
- uid: Global.PIDController.DerivativeArrivalEpsilon
  commentId: F:Global.PIDController.DerivativeArrivalEpsilon
  id: DerivativeArrivalEpsilon
  parent: Global.PIDController
  langs:
  - csharp
  - vb
  name: DerivativeArrivalEpsilon
  nameWithType: PIDController.DerivativeArrivalEpsilon
  fullName: PIDController.DerivativeArrivalEpsilon
  type: Field
  source:
    remote:
      path: Assets/Framework/Util/Math/Movement/PIDController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: DerivativeArrivalEpsilon
    path: ../Assets/Framework/Util/Math/Movement/PIDController.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: >-
      [Tooltip("When to trigger the 'Arrived' callback")]

      public float DerivativeArrivalEpsilon
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("When to trigger the 'Arrived' callback")>

      Public DerivativeArrivalEpsilon As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: When to trigger the 'Arrived' callback
- uid: Global.PIDController.Correction
  commentId: P:Global.PIDController.Correction
  id: Correction
  parent: Global.PIDController
  langs:
  - csharp
  - vb
  name: Correction
  nameWithType: PIDController.Correction
  fullName: PIDController.Correction
  type: Property
  source:
    remote:
      path: Assets/Framework/Util/Math/Movement/PIDController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Correction
    path: ../Assets/Framework/Util/Math/Movement/PIDController.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float Correction { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Correction As Single
  overload: Global.PIDController.Correction*
- uid: Global.PIDController.Value
  commentId: P:Global.PIDController.Value
  id: Value
  parent: Global.PIDController
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: PIDController.Value
  fullName: PIDController.Value
  type: Property
  source:
    remote:
      path: Assets/Framework/Util/Math/Movement/PIDController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Value
    path: ../Assets/Framework/Util/Math/Movement/PIDController.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public float Value { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Value As Single
  overload: Global.PIDController.Value*
- uid: Global.PIDController.#ctor(System.Single,System.Single,System.Single)
  commentId: M:Global.PIDController.#ctor(System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single)'
  parent: Global.PIDController
  langs:
  - csharp
  - vb
  name: PIDController(float, float, float)
  nameWithType: PIDController.PIDController(float, float, float)
  fullName: PIDController.PIDController(float, float, float)
  type: Constructor
  source:
    remote:
      path: Assets/Framework/Util/Math/Movement/PIDController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: .ctor
    path: ../Assets/Framework/Util/Math/Movement/PIDController.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public PIDController(float pFactor, float iFactor, float dFactor)
    parameters:
    - id: pFactor
      type: System.Single
    - id: iFactor
      type: System.Single
    - id: dFactor
      type: System.Single
    content.vb: Public Sub New(pFactor As Single, iFactor As Single, dFactor As Single)
  overload: Global.PIDController.#ctor*
  nameWithType.vb: PIDController.New(Single, Single, Single)
  fullName.vb: PIDController.New(Single, Single, Single)
  name.vb: New(Single, Single, Single)
- uid: Global.PIDController.Update(System.Single,System.Single,System.Single)
  commentId: M:Global.PIDController.Update(System.Single,System.Single,System.Single)
  id: Update(System.Single,System.Single,System.Single)
  parent: Global.PIDController
  langs:
  - csharp
  - vb
  name: Update(float, float, float)
  nameWithType: PIDController.Update(float, float, float)
  fullName: PIDController.Update(float, float, float)
  type: Method
  source:
    remote:
      path: Assets/Framework/Util/Math/Movement/PIDController.cs
      branch: master
      repo: https://github.com/zsilliman/Ascend.git
    id: Update
    path: ../Assets/Framework/Util/Math/Movement/PIDController.cs
    startLine: 37
  assemblies:
  - Assembly-CSharp
  namespace: Global
  syntax:
    content: public void Update(float setpoint, float actual, float deltaTime)
    parameters:
    - id: setpoint
      type: System.Single
    - id: actual
      type: System.Single
    - id: deltaTime
      type: System.Single
    content.vb: Public Sub Update(setpoint As Single, actual As Single, deltaTime As Single)
  overload: Global.PIDController.Update*
  nameWithType.vb: PIDController.Update(Single, Single, Single)
  fullName.vb: PIDController.Update(Single, Single, Single)
  name.vb: Update(Single, Single, Single)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Global.ReflectionExtensions.ToStringWithQuotes
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  parent: Global.ReflectionExtensions
  definition: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  commentId: M:Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
  isExternal: true
  name: ToStringWithQuotes(object)
  nameWithType: ReflectionExtensions.ToStringWithQuotes(object)
  fullName: ReflectionExtensions.ToStringWithQuotes(object)
  nameWithType.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  fullName.vb: ReflectionExtensions.ToStringWithQuotes(Object)
  name.vb: ToStringWithQuotes(Object)
  spec.csharp:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.ReflectionExtensions.ToStringWithQuotes(System.Object)
    name: ToStringWithQuotes
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: Global.ReflectionExtensions
  commentId: T:Global.ReflectionExtensions
  name: ReflectionExtensions
  nameWithType: ReflectionExtensions
  fullName: ReflectionExtensions
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.PIDController.Correction*
  commentId: Overload:Global.PIDController.Correction
  name: Correction
  nameWithType: PIDController.Correction
  fullName: PIDController.Correction
- uid: Global.PIDController.Value*
  commentId: Overload:Global.PIDController.Value
  name: Value
  nameWithType: PIDController.Value
  fullName: PIDController.Value
- uid: Global.PIDController.#ctor*
  commentId: Overload:Global.PIDController.#ctor
  name: PIDController
  nameWithType: PIDController.PIDController
  fullName: PIDController.PIDController
  nameWithType.vb: PIDController.New
  fullName.vb: PIDController.New
  name.vb: New
- uid: Global.PIDController.Update*
  commentId: Overload:Global.PIDController.Update
  name: Update
  nameWithType: PIDController.Update
  fullName: PIDController.Update
